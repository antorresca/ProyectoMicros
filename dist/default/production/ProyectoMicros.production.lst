

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Thu Jun 08 17:22:57 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og9 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1
    36                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    37                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1
    45                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    46                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    47                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    48                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    49                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    50   000000                     
    51                           ; Generated 09/02/2023 GMT
    52                           ; 
    53                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    54                           ; All rights reserved.
    55                           ; 
    56                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    57                           ; 
    58                           ; Redistribution and use in source and binary forms, with or without modification, are
    59                           ; permitted provided that the following conditions are met:
    60                           ; 
    61                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    62                           ;        conditions and the following disclaimer.
    63                           ; 
    64                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    65                           ;        of conditions and the following disclaimer in the documentation and/or other
    66                           ;        materials provided with the distribution. Publication is not required when
    67                           ;        this file is used in an embedded application.
    68                           ; 
    69                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    70                           ;        software without specific prior written permission.
    71                           ; 
    72                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    73                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    74                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    75                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    76                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    77                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    78                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    79                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    80                           ; 
    81                           ; 
    82                           ; Code-generator required, PIC18F4550 Definitions
    83                           ; 
    84                           ; SFR Addresses
    85   000000                     
    86                           	psect	idataCOMRAM
    87   0017BE                     __pidataCOMRAM:
    88                           	callstack 0
    89                           
    90                           ;initializer for Password@F3203
    91   0017BE  30                 	db	48
    92   0017BF  31                 	db	49
    93   0017C0  32                 	db	50
    94   0017C1  33                 	db	51
    95                           
    96                           ;initializer for _a
    97   0017C2  007D               	dw	125
    98                           
    99                           ;initializer for _Cont
   100   0017C4  06                 	db	6
   101                           
   102                           ;initializer for _interfaz
   103   0017C5  08                 	db	8
   104                           
   105                           ;initializer for _cara
   106   0017C6  00                 	db	0
   107   0017C7  0A                 	db	10
   108   0017C8  0A                 	db	10
   109   0017C9  0A                 	db	10
   110   0017CA  00                 	db	0
   111   0017CB  1F                 	db	31
   112   0017CC  0E                 	db	14
   113   0017CD  00                 	db	0
   114   000000                     _TMR1	set	4046
   115   000000                     _PORTB	set	3969
   116   000000                     _RCREG	set	4014
   117   000000                     _TXREG	set	4013
   118   000000                     _T1CON	set	4045
   119   000000                     _SPBRG	set	4015
   120   000000                     _TMR2	set	4044
   121   000000                     _TRISB	set	3987
   122   000000                     _RB7	set	31759
   123   000000                     _RB6	set	31758
   124   000000                     _RB5	set	31757
   125   000000                     _RB4	set	31756
   126   000000                     _GO	set	32273
   127   000000                     _TRMT	set	32097
   128   000000                     _GIE	set	32663
   129   000000                     _TMR1ON	set	32360
   130   000000                     _PEIE	set	32662
   131   000000                     _TRISC1	set	31905
   132   000000                     _TRISA5	set	31893
   133   000000                     _TRISC7	set	31911
   134   000000                     _TRISC6	set	31910
   135   000000                     _TMR2ON	set	32338
   136   000000                     _TRISC2	set	31906
   137   000000                     _TMR0ON	set	32431
   138   000000                     _TMR0IE	set	32661
   139   000000                     _TMR0IF	set	32658
   140   000000                     _RBIE	set	32659
   141   000000                     _TRISE1	set	31921
   142   000000                     _TRISE2	set	31922
   143   000000                     _LATE2	set	31850
   144   000000                     _LATD	set	3980
   145   000000                     _USBEN	set	31595
   146   000000                     _UTRDIS	set	31611
   147   000000                     _TRISA	set	3986
   148   000000                     _TRISC	set	3988
   149   000000                     _LATE1	set	31849
   150   000000                     _RCSTA	set	4011
   151   000000                     _TXSTA	set	4012
   152   000000                     _CCP1CON	set	4029
   153   000000                     _CCPR1L	set	4030
   154   000000                     _ADCON2	set	4032
   155   000000                     _ADCON1	set	4033
   156   000000                     _ADCON0	set	4034
   157   000000                     _TRISD	set	3989
   158   000000                     _OSCCON	set	4051
   159   000000                     _TMR1IE	set	31976
   160   000000                     _TMR1IF	set	31984
   161   000000                     _TRISE0	set	31920
   162   000000                     _T0CON	set	4053
   163   000000                     _RBPU	set	32655
   164   000000                     _ADRES	set	4035
   165   000000                     _T2CON	set	4042
   166   000000                     _PR2	set	4043
   167   000000                     _RBIF	set	32656
   168   000000                     _TMR0	set	4054
   169   000000                     _CCPR2	set	4027
   170   000000                     _CCP2CON	set	4026
   171   000000                     _RA5	set	31749
   172   000000                     _RC2	set	31762
   173   000000                     _RE0	set	31776
   174   000000                     _LATB	set	3978
   175                           
   176                           	psect	smallconst
   177   000800                     __psmallconst:
   178                           	callstack 0
   179   000800  00                 	db	0
   180   000801                     STR_4:
   181   000801  20                 	db	32
   182   000802  20                 	db	32
   183   000803  20                 	db	32
   184   000804  20                 	db	32
   185   000805  20                 	db	32
   186   000806  20                 	db	32
   187   000807  20                 	db	32
   188   000808  20                 	db	32
   189   000809  20                 	db	32
   190   00080A  20                 	db	32
   191   00080B  20                 	db	32
   192   00080C  20                 	db	32
   193   00080D  20                 	db	32
   194   00080E  20                 	db	32
   195   00080F  20                 	db	32
   196   000810  20                 	db	32
   197   000811  20                 	db	32
   198   000812  20                 	db	32
   199   000813  20                 	db	32
   200   000814  20                 	db	32
   201   000815  20                 	db	32
   202   000816  20                 	db	32
   203   000817  00                 	db	0
   204   000818                     STR_1:
   205   000818  42                 	db	66	;'B'
   206   000819  69                 	db	105	;'i'
   207   00081A  65                 	db	101	;'e'
   208   00081B  6E                 	db	110	;'n'
   209   00081C  76                 	db	118	;'v'
   210   00081D  65                 	db	101	;'e'
   211   00081E  6E                 	db	110	;'n'
   212   00081F  69                 	db	105	;'i'
   213   000820  64                 	db	100	;'d'
   214   000821  6F                 	db	111	;'o'
   215   000822  00                 	db	0
   216   000823                     STR_5:
   217   000823  49                 	db	73	;'I'
   218   000824  6E                 	db	110	;'n'
   219   000825  63                 	db	99	;'c'
   220   000826  6F                 	db	111	;'o'
   221   000827  72                 	db	114	;'r'
   222   000828  72                 	db	114	;'r'
   223   000829  65                 	db	101	;'e'
   224   00082A  63                 	db	99	;'c'
   225   00082B  74                 	db	116	;'t'
   226   00082C  6F                 	db	111	;'o'
   227   00082D  00                 	db	0
   228   00082E                     STR_3:
   229   00082E  50                 	db	80	;'P'
   230   00082F  61                 	db	97	;'a'
   231   000830  73                 	db	115	;'s'
   232   000831  73                 	db	115	;'s'
   233   000832  77                 	db	119	;'w'
   234   000833  6F                 	db	111	;'o'
   235   000834  72                 	db	114	;'r'
   236   000835  64                 	db	100	;'d'
   237   000836  3A                 	db	58	;':'
   238   000837  00                 	db	0
   239   000838                     STR_9:
   240   000838  53                 	db	83	;'S'
   241   000839  54                 	db	84	;'T'
   242   00083A  4F                 	db	79	;'O'
   243   00083B  50                 	db	80	;'P'
   244   00083C  45                 	db	69	;'E'
   245   00083D  44                 	db	68	;'D'
   246   00083E  00                 	db	0
   247   00083F                     STR_7:
   248   00083F  54                 	db	84	;'T'
   249   000840  65                 	db	101	;'e'
   250   000841  6D                 	db	109	;'m'
   251   000842  70                 	db	112	;'p'
   252   000843  3A                 	db	58	;':'
   253   000844  00                 	db	0
   254   000845                     STR_8:
   255   000845  44                 	db	68	;'D'
   256   000846  75                 	db	117	;'u'
   257   000847  74                 	db	116	;'t'
   258   000848  79                 	db	121	;'y'
   259   000849  3A                 	db	58	;':'
   260   00084A  00                 	db	0
   261   00084B  00                 	db	0	; dummy byte at the end
   262   000000                     
   263                           ; #config settings
   264                           
   265                           	psect	cinit
   266   001628                     __pcinit:
   267                           	callstack 0
   268   001628                     start_initialization:
   269                           	callstack 0
   270   001628                     __initialization:
   271                           	callstack 0
   272                           
   273                           ; Initialize objects allocated to COMRAM (16 bytes)
   274                           ; load TBLPTR registers with __pidataCOMRAM
   275   001628  0EBE               	movlw	low __pidataCOMRAM
   276   00162A  6EF6               	movwf	tblptrl,c
   277   00162C  0E17               	movlw	high __pidataCOMRAM
   278   00162E  6EF7               	movwf	tblptrh,c
   279   001630  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   280   001632  6EF8               	movwf	tblptru,c
   281   001634  EE00  F032         	lfsr	0,__pdataCOMRAM
   282   001638  EE10 F010          	lfsr	1,16
   283   00163C                     copy_data0:
   284   00163C  0009               	tblrd		*+
   285   00163E  CFF5 FFEE          	movff	tablat,postinc0
   286   001642  50E5               	movf	postdec1,w,c
   287   001644  50E1               	movf	fsr1l,w,c
   288   001646  E1FA               	bnz	copy_data0
   289                           
   290                           ; Clear objects allocated to COMRAM (12 bytes)
   291   001648  EE00  F042         	lfsr	0,__pbssCOMRAM
   292   00164C  0E0C               	movlw	12
   293   00164E                     clear_0:
   294   00164E  6AEE               	clrf	postinc0,c
   295   001650  06E8               	decf	wreg,f,c
   296   001652  E1FD               	bnz	clear_0
   297   001654                     end_of_initialization:
   298                           	callstack 0
   299   001654                     __end_of__initialization:
   300                           	callstack 0
   301   001654  904E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   302   001656  924E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   303   001658  0E00               	movlw	low (__Lmediumconst shr (0+16))
   304   00165A  6EF8               	movwf	tblptru,c
   305   00165C  0100               	movlb	0
   306   00165E  EFA5  F005         	goto	_main	;jump to C main() function
   307                           
   308                           	psect	bssCOMRAM
   309   000042                     __pbssCOMRAM:
   310                           	callstack 0
   311   000042                     _teclaRecibidaIf:
   312                           	callstack 0
   313   000042                     	ds	2
   314   000044                     _teclaIf:
   315                           	callstack 0
   316   000044                     	ds	2
   317   000046                     _c:
   318                           	callstack 0
   319   000046                     	ds	2
   320   000048                     _Tecla:
   321                           	callstack 0
   322   000048                     	ds	1
   323   000049                     _Temp:
   324                           	callstack 0
   325   000049                     	ds	1
   326   00004A                     _ing:
   327                           	callstack 0
   328   00004A                     	ds	4
   329                           
   330                           	psect	dataCOMRAM
   331   000032                     __pdataCOMRAM:
   332                           	callstack 0
   333   000032                     Password@F3203:
   334                           	callstack 0
   335   000032                     	ds	4
   336   000036                     _a:
   337                           	callstack 0
   338   000036                     	ds	2
   339   000038                     _Cont:
   340                           	callstack 0
   341   000038                     	ds	1
   342   000039                     _interfaz:
   343                           	callstack 0
   344   000039                     	ds	1
   345   00003A                     _cara:
   346                           	callstack 0
   347   00003A                     	ds	8
   348                           
   349                           	psect	cstackCOMRAM
   350   000001                     __pcstackCOMRAM:
   351                           	callstack 0
   352   000001                     ??i2_RetardoLCD:
   353   000001                     
   354                           ; 2 bytes @ 0x0
   355   000001                     	ds	1
   356   000002                     i2RetardoLCD@a:
   357                           	callstack 0
   358                           
   359                           ; 1 bytes @ 0x1
   360   000002                     	ds	1
   361   000003                     ??i2_EnviaDato:
   362                           
   363                           ; 1 bytes @ 0x2
   364   000003                     	ds	1
   365   000004                     i2EnviaDato@a:
   366                           	callstack 0
   367                           
   368                           ; 1 bytes @ 0x3
   369   000004                     	ds	1
   370   000005                     i2EscribeLCD_c@a:
   371                           	callstack 0
   372                           
   373                           ; 1 bytes @ 0x4
   374   000005                     	ds	1
   375   000006                     i2MensajeLCD_Word@a:
   376                           	callstack 0
   377                           
   378                           ; 1 bytes @ 0x5
   379   000006                     	ds	1
   380   000007                     ??i2_MensajeLCD_Word:
   381                           
   382                           ; 1 bytes @ 0x6
   383   000007                     	ds	1
   384   000008                     i2MensajeLCD_Word@i:
   385                           	callstack 0
   386                           
   387                           ; 2 bytes @ 0x7
   388   000008                     	ds	2
   389   00000A                     ??_ISR:
   390                           
   391                           ; 1 bytes @ 0x9
   392   00000A                     	ds	6
   393   000010                     ??_RetardoLCD:
   394   000010                     ??_Movimiento:
   395   000010                     ??_ComandoLCD:
   396   000010                     ?___wmul:
   397                           	callstack 0
   398   000010                     ?___awdiv:
   399                           	callstack 0
   400   000010                     ?___lwdiv:
   401                           	callstack 0
   402   000010                     ?___lwmod:
   403                           	callstack 0
   404   000010                     LeerBit@res:
   405                           	callstack 0
   406   000010                     Transmitir@BufferT:
   407                           	callstack 0
   408   000010                     ConvertirUnidades@canal:
   409                           	callstack 0
   410   000010                     Velocidad@val:
   411                           	callstack 0
   412   000010                     ___wmul@multiplier:
   413                           	callstack 0
   414   000010                     ___awdiv@dividend:
   415                           	callstack 0
   416   000010                     ___lwdiv@dividend:
   417                           	callstack 0
   418   000010                     ___lwmod@dividend:
   419                           	callstack 0
   420                           
   421                           ; 2 bytes @ 0xF
   422   000010                     	ds	1
   423   000011                     ??_LeerByte:
   424   000011                     ComandoLCD@data:
   425                           	callstack 0
   426   000011                     RetardoLCD@a:
   427                           	callstack 0
   428                           
   429                           ; 1 bytes @ 0x10
   430   000011                     	ds	1
   431   000012                     ??_EnviaDato:
   432   000012                     LeerByte@res:
   433                           	callstack 0
   434   000012                     ___wmul@multiplicand:
   435                           	callstack 0
   436   000012                     ___awdiv@divisor:
   437                           	callstack 0
   438   000012                     ___lwdiv@divisor:
   439                           	callstack 0
   440   000012                     ___lwmod@divisor:
   441                           	callstack 0
   442                           
   443                           ; 2 bytes @ 0x11
   444   000012                     	ds	1
   445   000013                     EnviaDato@a:
   446                           	callstack 0
   447   000013                     LeerByte@i:
   448                           	callstack 0
   449                           
   450                           ; 1 bytes @ 0x12
   451   000013                     	ds	1
   452   000014                     ??_LeerHT11:
   453   000014                     EscribeLCD_c@a:
   454                           	callstack 0
   455   000014                     DireccionaLCD@a:
   456                           	callstack 0
   457   000014                     ___awdiv@counter:
   458                           	callstack 0
   459   000014                     ___lwmod@counter:
   460                           	callstack 0
   461   000014                     ___wmul@product:
   462                           	callstack 0
   463   000014                     ___lwdiv@quotient:
   464                           	callstack 0
   465                           
   466                           ; 2 bytes @ 0x13
   467   000014                     	ds	1
   468   000015                     ?_Password:
   469                           	callstack 0
   470   000015                     NuevoCaracter@c:
   471                           	callstack 0
   472   000015                     MensajeLCD_Word@a:
   473                           	callstack 0
   474   000015                     Password@pass:
   475                           	callstack 0
   476   000015                     ___awdiv@sign:
   477                           	callstack 0
   478                           
   479                           ; 1 bytes @ 0x14
   480   000015                     	ds	1
   481   000016                     ??_MensajeLCD_Word:
   482   000016                     NuevoCaracter@addr:
   483                           	callstack 0
   484   000016                     ___lwdiv@counter:
   485                           	callstack 0
   486   000016                     ___awdiv@quotient:
   487                           	callstack 0
   488                           
   489                           ; 2 bytes @ 0x15
   490   000016                     	ds	1
   491   000017                     NuevoCaracter@i:
   492                           	callstack 0
   493   000017                     MensajeLCD_Word@i:
   494                           	callstack 0
   495                           
   496                           ; 2 bytes @ 0x16
   497   000017                     	ds	1
   498   000018                     ?___awmod:
   499                           	callstack 0
   500   000018                     ___awmod@dividend:
   501                           	callstack 0
   502                           
   503                           ; 2 bytes @ 0x17
   504   000018                     	ds	1
   505   000019                     Password@secret:
   506                           	callstack 0
   507                           
   508                           ; 4 bytes @ 0x18
   509   000019                     	ds	1
   510   00001A                     ___awmod@divisor:
   511                           	callstack 0
   512                           
   513                           ; 2 bytes @ 0x19
   514   00001A                     	ds	2
   515   00001C                     ___awmod@counter:
   516                           	callstack 0
   517                           
   518                           ; 1 bytes @ 0x1B
   519   00001C                     	ds	1
   520   00001D                     ___awmod@sign:
   521                           	callstack 0
   522   00001D                     Password@access:
   523                           	callstack 0
   524                           
   525                           ; 2 bytes @ 0x1C
   526   00001D                     	ds	1
   527   00001E                     TransmitirDatos@Ent1:
   528                           	callstack 0
   529                           
   530                           ; 2 bytes @ 0x1D
   531   00001E                     	ds	1
   532   00001F                     Password@i:
   533                           	callstack 0
   534                           
   535                           ; 2 bytes @ 0x1E
   536   00001F                     	ds	1
   537   000020                     TransmitirDatos@Ent2:
   538                           	callstack 0
   539                           
   540                           ; 2 bytes @ 0x1F
   541   000020                     	ds	2
   542   000022                     _TransmitirDatos$226:
   543                           	callstack 0
   544                           
   545                           ; 2 bytes @ 0x21
   546   000022                     	ds	2
   547   000024                     _TransmitirDatos$227:
   548                           	callstack 0
   549                           
   550                           ; 2 bytes @ 0x23
   551   000024                     	ds	2
   552   000026                     _TransmitirDatos$229:
   553                           	callstack 0
   554                           
   555                           ; 2 bytes @ 0x25
   556   000026                     	ds	2
   557   000028                     _TransmitirDatos$230:
   558                           	callstack 0
   559                           
   560                           ; 2 bytes @ 0x27
   561   000028                     	ds	2
   562   00002A                     _TransmitirDatos$869:
   563                           	callstack 0
   564                           
   565                           ; 2 bytes @ 0x29
   566   00002A                     	ds	2
   567   00002C                     TransmitirDatos@TempC:
   568                           	callstack 0
   569                           
   570                           ; 2 bytes @ 0x2B
   571   00002C                     	ds	2
   572   00002E                     ??_main:
   573                           
   574                           ; 1 bytes @ 0x2D
   575   00002E                     	ds	2
   576   000030                     main@i:
   577                           	callstack 0
   578                           
   579                           ; 2 bytes @ 0x2F
   580   000030                     	ds	2
   581                           
   582 ;;
   583 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   584 ;;
   585 ;; *************** function _main *****************
   586 ;; Defined at:
   587 ;;		line 59 in file "Proyecto.c"
   588 ;; Parameters:    Size  Location     Type
   589 ;;		None
   590 ;; Auto vars:     Size  Location     Type
   591 ;;  i               2   47[COMRAM] int 
   592 ;; Return value:  Size  Location     Type
   593 ;;                  1    wreg      void 
   594 ;; Registers used:
   595 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   596 ;; Tracked objects:
   597 ;;		On entry : 0/0
   598 ;;		On exit  : 0/0
   599 ;;		Unchanged: 0/0
   600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   601 ;;      Params:         0       0       0       0       0       0       0       0       0
   602 ;;      Locals:         2       0       0       0       0       0       0       0       0
   603 ;;      Temps:          2       0       0       0       0       0       0       0       0
   604 ;;      Totals:         4       0       0       0       0       0       0       0       0
   605 ;;Total ram usage:        4 bytes
   606 ;; Hardware stack levels required when called: 10
   607 ;; This function calls:
   608 ;;		_BorraLCD
   609 ;;		_ConvertirUnidades
   610 ;;		_DireccionaLCD
   611 ;;		_EscribeLCD_c
   612 ;;		_InicializaLCD
   613 ;;		_LeerHT11
   614 ;;		_MensajeLCD_Word
   615 ;;		_Movimiento
   616 ;;		_NuevoCaracter
   617 ;;		_Password
   618 ;;		_TransmitirDatos
   619 ;;		_Velocidad
   620 ;; This function is called by:
   621 ;;		Startup code after reset
   622 ;; This function uses a non-reentrant model
   623 ;;
   624                           
   625                           	psect	text0
   626   000B4A                     __ptext0:
   627                           	callstack 0
   628   000B4A                     _main:
   629                           	callstack 21
   630                           
   631                           ;Proyecto.c: 61: TRISC = 0;
   632                           
   633                           ;incstack = 0
   634   000B4A  0E00               	movlw	0
   635   000B4C  6E94               	movwf	148,c	;volatile
   636                           
   637                           ;Proyecto.c: 62: OSCCON = 0b11110110;
   638   000B4E  0EF6               	movlw	246
   639   000B50  6ED3               	movwf	211,c	;volatile
   640                           
   641                           ;Proyecto.c: 64: TRISD = 0;
   642   000B52  0E00               	movlw	0
   643   000B54  6E95               	movwf	149,c	;volatile
   644                           
   645                           ;Proyecto.c: 65: TRISE0 = 1;
   646   000B56  8096               	bsf	3990,0,c	;volatile
   647                           
   648                           ;Proyecto.c: 66: TRISE2 = 0;
   649   000B58  9496               	bcf	3990,2,c	;volatile
   650                           
   651                           ;Proyecto.c: 67: TRISE1 = 0;
   652   000B5A  9296               	bcf	3990,1,c	;volatile
   653                           
   654                           ;Proyecto.c: 68: InicializaLCD();
   655   000B5C  ECAE  F008         	call	_InicializaLCD	;wreg free
   656                           
   657                           ;Proyecto.c: 69: BorraLCD();
   658   000B60  ECC1  F00B         	call	_BorraLCD	;wreg free
   659                           
   660                           ;Proyecto.c: 72: TRISA = 0b00100001;
   661   000B64  0E21               	movlw	33
   662   000B66  6E92               	movwf	146,c	;volatile
   663                           
   664                           ;Proyecto.c: 73: ADCON0 = 0b00000001;
   665   000B68  0E01               	movlw	1
   666   000B6A  6EC2               	movwf	194,c	;volatile
   667                           
   668                           ;Proyecto.c: 74: ADCON1 = 0b00001100;
   669   000B6C  0E0C               	movlw	12
   670   000B6E  6EC1               	movwf	193,c	;volatile
   671                           
   672                           ;Proyecto.c: 75: ADCON2 = 0b00001000;
   673   000B70  0E08               	movlw	8
   674   000B72  6EC0               	movwf	192,c	;volatile
   675                           
   676                           ;Proyecto.c: 78: TRISB=0b11110000;
   677   000B74  0EF0               	movlw	240
   678   000B76  6E93               	movwf	147,c	;volatile
   679                           
   680                           ;Proyecto.c: 79: RBPU=0;
   681   000B78  9EF1               	bcf	4081,7,c	;volatile
   682                           
   683                           ;Proyecto.c: 80: RBIF=0;
   684   000B7A  90F2               	bcf	4082,0,c	;volatile
   685                           
   686                           ;Proyecto.c: 81: RBIE=1;
   687   000B7C  86F2               	bsf	4082,3,c	;volatile
   688                           
   689                           ;Proyecto.c: 84: T0CON=0b00000011;
   690   000B7E  0E03               	movlw	3
   691   000B80  6ED5               	movwf	213,c	;volatile
   692                           
   693                           ;Proyecto.c: 85: TMR0IF=0;
   694   000B82  94F2               	bcf	4082,2,c	;volatile
   695                           
   696                           ;Proyecto.c: 86: TMR0=64286;
   697   000B84  0EFB               	movlw	251
   698   000B86  6ED7               	movwf	215,c	;volatile
   699   000B88  0E1E               	movlw	30
   700   000B8A  6ED6               	movwf	214,c	;volatile
   701                           
   702                           ;Proyecto.c: 87: TMR0IE=1;
   703   000B8C  8AF2               	bsf	4082,5,c	;volatile
   704                           
   705                           ;Proyecto.c: 88: TMR0ON=1;
   706   000B8E  8ED5               	bsf	4053,7,c	;volatile
   707                           
   708                           ;Proyecto.c: 91: TRISC2 = 0;
   709   000B90  9494               	bcf	3988,2,c	;volatile
   710                           
   711                           ;Proyecto.c: 92: PR2 = 125;
   712   000B92  0E7D               	movlw	125
   713   000B94  6ECB               	movwf	203,c	;volatile
   714                           
   715                           ;Proyecto.c: 93: CCPR1L = 0;
   716   000B96  0E00               	movlw	0
   717   000B98  6EBE               	movwf	190,c	;volatile
   718                           
   719                           ;Proyecto.c: 94: T2CON = 0b00000010;
   720   000B9A  0E02               	movlw	2
   721   000B9C  6ECA               	movwf	202,c	;volatile
   722                           
   723                           ;Proyecto.c: 95: CCP1CON = 0b00001100;
   724   000B9E  0E0C               	movlw	12
   725   000BA0  6EBD               	movwf	189,c	;volatile
   726                           
   727                           ;Proyecto.c: 96: TMR2 = 0;
   728   000BA2  0E00               	movlw	0
   729   000BA4  6ECC               	movwf	204,c	;volatile
   730                           
   731                           ;Proyecto.c: 97: TMR2ON = 1;
   732   000BA6  84CA               	bsf	4042,2,c	;volatile
   733                           
   734                           ;Proyecto.c: 100: TRISC6 = 1;
   735   000BA8  8C94               	bsf	3988,6,c	;volatile
   736                           
   737                           ;Proyecto.c: 101: TRISC7 = 1;
   738   000BAA  8E94               	bsf	3988,7,c	;volatile
   739                           
   740                           ;Proyecto.c: 102: TXSTA = 0b00100000;
   741   000BAC  0E20               	movlw	32
   742   000BAE  6EAC               	movwf	172,c	;volatile
   743                           
   744                           ;Proyecto.c: 103: RCSTA = 0b10010000;
   745   000BB0  0E90               	movlw	144
   746   000BB2  6EAB               	movwf	171,c	;volatile
   747                           
   748                           ;Proyecto.c: 104: SPBRG = 12;
   749   000BB4  0E0C               	movlw	12
   750   000BB6  6EAF               	movwf	175,c	;volatile
   751                           
   752                           ;Proyecto.c: 107: TRISA5= 1;
   753   000BB8  8A92               	bsf	3986,5,c	;volatile
   754                           
   755                           ;Proyecto.c: 108: UTRDIS = 1;
   756   000BBA  866F               	bsf	3951,3,c	;volatile
   757                           
   758                           ;Proyecto.c: 109: USBEN = 0;
   759   000BBC  966D               	bcf	3949,3,c	;volatile
   760                           
   761                           ;Proyecto.c: 111: TRISC1=0;
   762   000BBE  9294               	bcf	3988,1,c	;volatile
   763                           
   764                           ;Proyecto.c: 112: TMR1=60536;
   765   000BC0  0EEC               	movlw	236
   766   000BC2  6ECF               	movwf	207,c	;volatile
   767   000BC4  0E78               	movlw	120
   768   000BC6  6ECE               	movwf	206,c	;volatile
   769                           
   770                           ;Proyecto.c: 113: T1CON=0b10110000;
   771   000BC8  0EB0               	movlw	176
   772   000BCA  6ECD               	movwf	205,c	;volatile
   773                           
   774                           ;Proyecto.c: 114: CCPR2=60536+125;
   775   000BCC  0EEC               	movlw	236
   776   000BCE  6EBC               	movwf	188,c	;volatile
   777   000BD0  0EF5               	movlw	245
   778   000BD2  6EBB               	movwf	187,c	;volatile
   779                           
   780                           ;Proyecto.c: 115: CCP2CON=0b00001001;
   781   000BD4  0E09               	movlw	9
   782   000BD6  6EBA               	movwf	186,c	;volatile
   783                           
   784                           ;Proyecto.c: 116: TMR1IF=0;
   785   000BD8  909E               	bcf	3998,0,c	;volatile
   786                           
   787                           ;Proyecto.c: 117: TMR1IE=1;
   788   000BDA  809D               	bsf	3997,0,c	;volatile
   789                           
   790                           ;Proyecto.c: 118: PEIE=1;
   791   000BDC  8CF2               	bsf	4082,6,c	;volatile
   792                           
   793                           ;Proyecto.c: 119: TMR1ON=1;
   794   000BDE  80CD               	bsf	4045,0,c	;volatile
   795                           
   796                           ;Proyecto.c: 120: GIE=1;
   797   000BE0  8EF2               	bsf	4082,7,c	;volatile
   798                           
   799                           ;Proyecto.c: 122: _delay((unsigned long)((1000)*(8000000/4000.0)));
   800   000BE2  0E0B               	movlw	11
   801   000BE4  6E2F               	movwf	(??_main+1)^0,c
   802   000BE6  0E26               	movlw	38
   803   000BE8  6E2E               	movwf	??_main^0,c
   804   000BEA  0E5E               	movlw	94
   805   000BEC                     u2167:
   806   000BEC  2EE8               	decfsz	wreg,f,c
   807   000BEE  D7FE               	bra	u2167
   808   000BF0  2E2E               	decfsz	??_main^0,f,c
   809   000BF2  D7FC               	bra	u2167
   810   000BF4  2E2F               	decfsz	(??_main+1)^0,f,c
   811   000BF6  D7FA               	bra	u2167
   812                           
   813                           ;Proyecto.c: 123: BorraLCD();
   814   000BF8  ECC1  F00B         	call	_BorraLCD	;wreg free
   815                           
   816                           ;Proyecto.c: 124: NuevoCaracter(0,cara);
   817   000BFC  0E3A               	movlw	low _cara
   818   000BFE  6E15               	movwf	NuevoCaracter@c^0,c
   819   000C00  0E00               	movlw	0
   820   000C02  ECF6  F00A         	call	_NuevoCaracter
   821                           
   822                           ;Proyecto.c: 125: DireccionaLCD(0x82);
   823   000C06  0E82               	movlw	130
   824   000C08  ECA0  F00B         	call	_DireccionaLCD
   825                           
   826                           ;Proyecto.c: 126: EscribeLCD_c(0);
   827   000C0C  0E00               	movlw	0
   828   000C0E  ECAB  F00B         	call	_EscribeLCD_c
   829                           
   830                           ;Proyecto.c: 127: MensajeLCD_Word("Bienvenido");
   831   000C12  0E18               	movlw	low STR_1
   832   000C14  6E15               	movwf	MensajeLCD_Word@a^0,c
   833   000C16  EC41  F00A         	call	_MensajeLCD_Word	;wreg free
   834                           
   835                           ;Proyecto.c: 128: EscribeLCD_c(0);
   836   000C1A  0E00               	movlw	0
   837   000C1C  ECAB  F00B         	call	_EscribeLCD_c
   838                           
   839                           ;Proyecto.c: 129: DireccionaLCD(0xC7);
   840   000C20  0EC7               	movlw	199
   841   000C22  ECA0  F00B         	call	_DireccionaLCD
   842                           
   843                           ;Proyecto.c: 130: _delay((unsigned long)((1500)*(8000000/4000.0)));
   844   000C26  0E10               	movlw	16
   845   000C28  6E2F               	movwf	(??_main+1)^0,c
   846   000C2A  0E39               	movlw	57
   847   000C2C  6E2E               	movwf	??_main^0,c
   848   000C2E  0E0E               	movlw	14
   849   000C30                     u2177:
   850   000C30  2EE8               	decfsz	wreg,f,c
   851   000C32  D7FE               	bra	u2177
   852   000C34  2E2E               	decfsz	??_main^0,f,c
   853   000C36  D7FC               	bra	u2177
   854   000C38  2E2F               	decfsz	(??_main+1)^0,f,c
   855   000C3A  D7FA               	bra	u2177
   856                           
   857                           ;Proyecto.c: 131: DireccionaLCD(0x80);
   858   000C3C  0E80               	movlw	128
   859   000C3E  ECA0  F00B         	call	_DireccionaLCD
   860                           
   861                           ;Proyecto.c: 132: MensajeLCD_Word("                ");
   862   000C42  0E07               	movlw	low (STR_4+6)
   863   000C44  6E15               	movwf	MensajeLCD_Word@a^0,c
   864   000C46  EC41  F00A         	call	_MensajeLCD_Word	;wreg free
   865                           
   866                           ;Proyecto.c: 133: DireccionaLCD(0x80);
   867   000C4A  0E80               	movlw	128
   868   000C4C  ECA0  F00B         	call	_DireccionaLCD
   869                           
   870                           ;Proyecto.c: 134: MensajeLCD_Word("Password:");
   871   000C50  0E2E               	movlw	low STR_3
   872   000C52  6E15               	movwf	MensajeLCD_Word@a^0,c
   873   000C54  EC41  F00A         	call	_MensajeLCD_Word	;wreg free
   874                           
   875                           ;Proyecto.c: 136: while (!Password(ing)) {
   876   000C58  D05B               	goto	l2970
   877   000C5A                     l2932:
   878                           
   879                           ;Proyecto.c: 137: teclaIf = 1;
   880   000C5A  0E00               	movlw	0
   881   000C5C  6E45               	movwf	(_teclaIf+1)^0,c
   882   000C5E  0E01               	movlw	1
   883   000C60  6E44               	movwf	_teclaIf^0,c
   884                           
   885                           ;Proyecto.c: 138: for (int i = 0; i <4; i++) {
   886   000C62  0E00               	movlw	0
   887   000C64  6E31               	movwf	(main@i+1)^0,c
   888   000C66  0E00               	movlw	0
   889   000C68  6E30               	movwf	main@i^0,c
   890   000C6A                     l2938:
   891   000C6A  5042               	movf	_teclaRecibidaIf^0,w,c
   892   000C6C  1043               	iorwf	(_teclaRecibidaIf+1)^0,w,c
   893   000C6E  B4D8               	btfsc	status,2,c
   894   000C70  D7FC               	goto	l2938
   895                           
   896                           ;Proyecto.c: 140: teclaRecibidaIf=0;
   897   000C72  0E00               	movlw	0
   898   000C74  6E43               	movwf	(_teclaRecibidaIf+1)^0,c
   899   000C76  0E00               	movlw	0
   900   000C78  6E42               	movwf	_teclaRecibidaIf^0,c
   901                           
   902                           ;Proyecto.c: 141: ing[i] = Tecla;
   903   000C7A  5030               	movf	main@i^0,w,c
   904   000C7C  0F4A               	addlw	low _ing
   905   000C7E  6ED9               	movwf	fsr2l,c
   906   000C80  6ADA               	clrf	fsr2h,c
   907   000C82  C048  FFDF         	movff	_Tecla,indf2
   908   000C86  4A30               	infsnz	main@i^0,f,c
   909   000C88  2A31               	incf	(main@i+1)^0,f,c
   910   000C8A  BE31               	btfsc	(main@i+1)^0,7,c
   911   000C8C  D7EE               	goto	l2938
   912   000C8E  5031               	movf	(main@i+1)^0,w,c
   913   000C90  E104               	bnz	u2130
   914   000C92  0E04               	movlw	4
   915   000C94  5C30               	subwf	main@i^0,w,c
   916   000C96  A0D8               	btfss	status,0,c
   917   000C98  D7E8               	goto	l2938
   918   000C9A                     u2130:
   919                           
   920                           ;Proyecto.c: 143: };Proyecto.c: 144: teclaIf = 0;
   921   000C9A  0E00               	movlw	0
   922   000C9C  6E45               	movwf	(_teclaIf+1)^0,c
   923   000C9E  0E00               	movlw	0
   924   000CA0  6E44               	movwf	_teclaIf^0,c
   925                           
   926                           ;Proyecto.c: 145: if (Password(ing)) {
   927   000CA2  0E4A               	movlw	low _ing
   928   000CA4  6E15               	movwf	Password@pass^0,c
   929   000CA6  EC3E  F009         	call	_Password	;wreg free
   930   000CAA  5015               	movf	?_Password^0,w,c
   931   000CAC  1016               	iorwf	(?_Password+1)^0,w,c
   932   000CAE  B4D8               	btfsc	status,2,c
   933   000CB0  D016               	goto	l2960
   934                           
   935                           ;Proyecto.c: 146: MensajeLCD_Word("                      ");
   936   000CB2  0E01               	movlw	low STR_4
   937   000CB4  6E15               	movwf	MensajeLCD_Word@a^0,c
   938   000CB6  EC41  F00A         	call	_MensajeLCD_Word	;wreg free
   939                           
   940                           ;Proyecto.c: 147: DireccionaLCD(0xC1);
   941   000CBA  0EC1               	movlw	193
   942   000CBC  ECA0  F00B         	call	_DireccionaLCD
   943                           
   944                           ;Proyecto.c: 148: EscribeLCD_c(0);
   945   000CC0  0E00               	movlw	0
   946   000CC2  ECAB  F00B         	call	_EscribeLCD_c
   947                           
   948                           ;Proyecto.c: 149: _delay((unsigned long)((1000)*(8000000/4000.0)));
   949   000CC6  0E0B               	movlw	11
   950   000CC8  6E2F               	movwf	(??_main+1)^0,c
   951   000CCA  0E26               	movlw	38
   952   000CCC  6E2E               	movwf	??_main^0,c
   953   000CCE  0E5E               	movlw	94
   954   000CD0                     u2187:
   955   000CD0  2EE8               	decfsz	wreg,f,c
   956   000CD2  D7FE               	bra	u2187
   957   000CD4  2E2E               	decfsz	??_main^0,f,c
   958   000CD6  D7FC               	bra	u2187
   959   000CD8  2E2F               	decfsz	(??_main+1)^0,f,c
   960   000CDA  D7FA               	bra	u2187
   961                           
   962                           ;Proyecto.c: 150: } else {
   963   000CDC  D019               	goto	l2970
   964   000CDE                     l2960:
   965                           
   966                           ;Proyecto.c: 152: DireccionaLCD(0xC1);
   967   000CDE  0EC1               	movlw	193
   968   000CE0  ECA0  F00B         	call	_DireccionaLCD
   969                           
   970                           ;Proyecto.c: 153: MensajeLCD_Word("Incorrecto");
   971   000CE4  0E23               	movlw	low STR_5
   972   000CE6  6E15               	movwf	MensajeLCD_Word@a^0,c
   973   000CE8  EC41  F00A         	call	_MensajeLCD_Word	;wreg free
   974                           
   975                           ;Proyecto.c: 154: _delay((unsigned long)((1000)*(8000000/4000.0)));
   976   000CEC  0E0B               	movlw	11
   977   000CEE  6E2F               	movwf	(??_main+1)^0,c
   978   000CF0  0E26               	movlw	38
   979   000CF2  6E2E               	movwf	??_main^0,c
   980   000CF4  0E5E               	movlw	94
   981   000CF6                     u2197:
   982   000CF6  2EE8               	decfsz	wreg,f,c
   983   000CF8  D7FE               	bra	u2197
   984   000CFA  2E2E               	decfsz	??_main^0,f,c
   985   000CFC  D7FC               	bra	u2197
   986   000CFE  2E2F               	decfsz	(??_main+1)^0,f,c
   987   000D00  D7FA               	bra	u2197
   988                           
   989                           ;Proyecto.c: 155: DireccionaLCD(0xC1);
   990   000D02  0EC1               	movlw	193
   991   000D04  ECA0  F00B         	call	_DireccionaLCD
   992                           
   993                           ;Proyecto.c: 156: MensajeLCD_Word("                      ");
   994   000D08  0E01               	movlw	low STR_4
   995   000D0A  6E15               	movwf	MensajeLCD_Word@a^0,c
   996   000D0C  EC41  F00A         	call	_MensajeLCD_Word	;wreg free
   997   000D10                     l2970:
   998   000D10  0E4A               	movlw	low _ing
   999   000D12  6E15               	movwf	Password@pass^0,c
  1000   000D14  EC3E  F009         	call	_Password	;wreg free
  1001   000D18  5015               	movf	?_Password^0,w,c
  1002   000D1A  1016               	iorwf	(?_Password+1)^0,w,c
  1003   000D1C  B4D8               	btfsc	status,2,c
  1004   000D1E  D79D               	goto	l2932
  1005                           
  1006                           ;Proyecto.c: 157: };Proyecto.c: 158: };Proyecto.c: 159: BorraLCD();
  1007   000D20  ECC1  F00B         	call	_BorraLCD	;wreg free
  1008                           
  1009                           ;Proyecto.c: 164: _delay((unsigned long)((500)*(8000000/4000.0)));
  1010   000D24  0E06               	movlw	6
  1011   000D26  6E2F               	movwf	(??_main+1)^0,c
  1012   000D28  0E13               	movlw	19
  1013   000D2A  6E2E               	movwf	??_main^0,c
  1014   000D2C  0EAE               	movlw	174
  1015   000D2E                     u2207:
  1016   000D2E  2EE8               	decfsz	wreg,f,c
  1017   000D30  D7FE               	bra	u2207
  1018   000D32  2E2E               	decfsz	??_main^0,f,c
  1019   000D34  D7FC               	bra	u2207
  1020   000D36  2E2F               	decfsz	(??_main+1)^0,f,c
  1021   000D38  D7FA               	bra	u2207
  1022   000D3A                     l2976:
  1023                           
  1024                           ;Proyecto.c: 168: _delay((unsigned long)((500)*(8000000/4000.0)));
  1025   000D3A  0E06               	movlw	6
  1026   000D3C  6E2F               	movwf	(??_main+1)^0,c
  1027   000D3E  0E13               	movlw	19
  1028   000D40  6E2E               	movwf	??_main^0,c
  1029   000D42  0EAE               	movlw	174
  1030   000D44                     u2217:
  1031   000D44  2EE8               	decfsz	wreg,f,c
  1032   000D46  D7FE               	bra	u2217
  1033   000D48  2E2E               	decfsz	??_main^0,f,c
  1034   000D4A  D7FC               	bra	u2217
  1035   000D4C  2E2F               	decfsz	(??_main+1)^0,f,c
  1036   000D4E  D7FA               	bra	u2217
  1037                           
  1038                           ;Proyecto.c: 169: LeerHT11();
  1039   000D50  EC31  F00B         	call	_LeerHT11	;wreg free
  1040                           
  1041                           ;Proyecto.c: 170: TransmitirDatos(0, 0);
  1042   000D54  0E00               	movlw	0
  1043   000D56  6E1F               	movwf	(TransmitirDatos@Ent1+1)^0,c
  1044   000D58  0E00               	movlw	0
  1045   000D5A  6E1E               	movwf	TransmitirDatos@Ent1^0,c
  1046   000D5C  0E00               	movlw	0
  1047   000D5E  6E21               	movwf	(TransmitirDatos@Ent2+1)^0,c
  1048   000D60  0E00               	movlw	0
  1049   000D62  6E20               	movwf	TransmitirDatos@Ent2^0,c
  1050   000D64  EC26  F004         	call	_TransmitirDatos	;wreg free
  1051                           
  1052                           ;Proyecto.c: 171: Velocidad(Temp);
  1053   000D68  C049  F010         	movff	_Temp,Velocidad@val
  1054   000D6C  6A11               	clrf	(Velocidad@val+1)^0,c
  1055   000D6E  EC64  F007         	call	_Velocidad	;wreg free
  1056                           
  1057                           ;Proyecto.c: 172: ConvertirUnidades(0);
  1058   000D72  0E00               	movlw	0
  1059   000D74  ECCB  F00B         	call	_ConvertirUnidades
  1060                           
  1061                           ;Proyecto.c: 173: Movimiento();
  1062   000D78  ECDE  F007         	call	_Movimiento	;wreg free
  1063   000D7C  D7DE               	goto	l2976
  1064   000D7E                     __end_of_main:
  1065                           	callstack 0
  1066                           
  1067 ;; *************** function _Velocidad *****************
  1068 ;; Defined at:
  1069 ;;		line 189 in file "Proyecto.c"
  1070 ;; Parameters:    Size  Location     Type
  1071 ;;  val             2   15[COMRAM] unsigned int 
  1072 ;; Auto vars:     Size  Location     Type
  1073 ;;		None
  1074 ;; Return value:  Size  Location     Type
  1075 ;;                  1    wreg      void 
  1076 ;; Registers used:
  1077 ;;		wreg, status,2, status,0
  1078 ;; Tracked objects:
  1079 ;;		On entry : 0/0
  1080 ;;		On exit  : 0/0
  1081 ;;		Unchanged: 0/0
  1082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1083 ;;      Params:         2       0       0       0       0       0       0       0       0
  1084 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1085 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1086 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1087 ;;Total ram usage:        2 bytes
  1088 ;; Hardware stack levels used: 1
  1089 ;; Hardware stack levels required when called: 5
  1090 ;; This function calls:
  1091 ;;		Nothing
  1092 ;; This function is called by:
  1093 ;;		_main
  1094 ;; This function uses a non-reentrant model
  1095 ;;
  1096                           
  1097                           	psect	text1
  1098   000EC8                     __ptext1:
  1099                           	callstack 0
  1100   000EC8                     _Velocidad:
  1101                           	callstack 25
  1102                           
  1103                           ;Proyecto.c: 190: if (val <= 22) {
  1104                           
  1105                           ;incstack = 0
  1106   000EC8  5011               	movf	(Velocidad@val+1)^0,w,c
  1107   000ECA  E108               	bnz	l2538
  1108   000ECC  0E17               	movlw	23
  1109   000ECE  5C10               	subwf	Velocidad@val^0,w,c
  1110   000ED0  B0D8               	btfsc	status,0,c
  1111   000ED2  D004               	goto	l2538
  1112                           
  1113                           ;Proyecto.c: 191: CCP1CON = 0;
  1114   000ED4  0E00               	movlw	0
  1115   000ED6  6EBD               	movwf	189,c	;volatile
  1116                           
  1117                           ;Proyecto.c: 192: RC2 = 0;
  1118   000ED8  9482               	bcf	3970,2,c	;volatile
  1119                           
  1120                           ;Proyecto.c: 193: } else if (val > 22 && val < 25) {
  1121   000EDA  0012               	return	
  1122   000EDC                     l2538:
  1123   000EDC  5011               	movf	(Velocidad@val+1)^0,w,c
  1124   000EDE  E104               	bnz	u1570
  1125   000EE0  0E17               	movlw	23
  1126   000EE2  5C10               	subwf	Velocidad@val^0,w,c
  1127   000EE4  A0D8               	btfss	status,0,c
  1128   000EE6  D00B               	goto	l2544
  1129   000EE8                     u1570:
  1130   000EE8  5011               	movf	(Velocidad@val+1)^0,w,c
  1131   000EEA  E109               	bnz	l2544
  1132   000EEC  0E19               	movlw	25
  1133   000EEE  5C10               	subwf	Velocidad@val^0,w,c
  1134   000EF0  B0D8               	btfsc	status,0,c
  1135   000EF2  D005               	goto	l2544
  1136                           
  1137                           ;Proyecto.c: 194: CCP1CON = 0b00001100;
  1138   000EF4  0E0C               	movlw	12
  1139   000EF6  6EBD               	movwf	189,c	;volatile
  1140                           
  1141                           ;Proyecto.c: 195: CCPR1L = 19;
  1142   000EF8  0E13               	movlw	19
  1143   000EFA  6EBE               	movwf	190,c	;volatile
  1144                           
  1145                           ;Proyecto.c: 196: } else if (val >= 25 && val < 28) {
  1146   000EFC  0012               	return	
  1147   000EFE                     l2544:
  1148   000EFE  5011               	movf	(Velocidad@val+1)^0,w,c
  1149   000F00  E104               	bnz	u1590
  1150   000F02  0E19               	movlw	25
  1151   000F04  5C10               	subwf	Velocidad@val^0,w,c
  1152   000F06  A0D8               	btfss	status,0,c
  1153   000F08  D00B               	goto	l2550
  1154   000F0A                     u1590:
  1155   000F0A  5011               	movf	(Velocidad@val+1)^0,w,c
  1156   000F0C  E109               	bnz	l2550
  1157   000F0E  0E1C               	movlw	28
  1158   000F10  5C10               	subwf	Velocidad@val^0,w,c
  1159   000F12  B0D8               	btfsc	status,0,c
  1160   000F14  D005               	goto	l2550
  1161                           
  1162                           ;Proyecto.c: 197: CCP1CON = 0b00001100;
  1163   000F16  0E0C               	movlw	12
  1164   000F18  6EBD               	movwf	189,c	;volatile
  1165                           
  1166                           ;Proyecto.c: 198: CCPR1L = 38;
  1167   000F1A  0E26               	movlw	38
  1168   000F1C  6EBE               	movwf	190,c	;volatile
  1169                           
  1170                           ;Proyecto.c: 199: } else if (val >= 28 && val < 31) {
  1171   000F1E  0012               	return	
  1172   000F20                     l2550:
  1173   000F20  5011               	movf	(Velocidad@val+1)^0,w,c
  1174   000F22  E104               	bnz	u1610
  1175   000F24  0E1C               	movlw	28
  1176   000F26  5C10               	subwf	Velocidad@val^0,w,c
  1177   000F28  A0D8               	btfss	status,0,c
  1178   000F2A  D00B               	goto	l2556
  1179   000F2C                     u1610:
  1180   000F2C  5011               	movf	(Velocidad@val+1)^0,w,c
  1181   000F2E  E109               	bnz	l2556
  1182   000F30  0E1F               	movlw	31
  1183   000F32  5C10               	subwf	Velocidad@val^0,w,c
  1184   000F34  B0D8               	btfsc	status,0,c
  1185   000F36  D005               	goto	l2556
  1186                           
  1187                           ;Proyecto.c: 200: CCP1CON = 0b00001100;
  1188   000F38  0E0C               	movlw	12
  1189   000F3A  6EBD               	movwf	189,c	;volatile
  1190                           
  1191                           ;Proyecto.c: 201: CCPR1L = 57;
  1192   000F3C  0E39               	movlw	57
  1193   000F3E  6EBE               	movwf	190,c	;volatile
  1194                           
  1195                           ;Proyecto.c: 202: } else if (val >= 31 && val < 34) {
  1196   000F40  0012               	return	
  1197   000F42                     l2556:
  1198   000F42  5011               	movf	(Velocidad@val+1)^0,w,c
  1199   000F44  E104               	bnz	u1630
  1200   000F46  0E1F               	movlw	31
  1201   000F48  5C10               	subwf	Velocidad@val^0,w,c
  1202   000F4A  A0D8               	btfss	status,0,c
  1203   000F4C  D00B               	goto	l2562
  1204   000F4E                     u1630:
  1205   000F4E  5011               	movf	(Velocidad@val+1)^0,w,c
  1206   000F50  E109               	bnz	l2562
  1207   000F52  0E22               	movlw	34
  1208   000F54  5C10               	subwf	Velocidad@val^0,w,c
  1209   000F56  B0D8               	btfsc	status,0,c
  1210   000F58  D005               	goto	l2562
  1211                           
  1212                           ;Proyecto.c: 203: CCP1CON = 0b00001100;
  1213   000F5A  0E0C               	movlw	12
  1214   000F5C  6EBD               	movwf	189,c	;volatile
  1215                           
  1216                           ;Proyecto.c: 204: CCPR1L = 76;
  1217   000F5E  0E4C               	movlw	76
  1218   000F60  6EBE               	movwf	190,c	;volatile
  1219                           
  1220                           ;Proyecto.c: 205: } else if (val >= 34 && val < 37) {
  1221   000F62  0012               	return	
  1222   000F64                     l2562:
  1223   000F64  5011               	movf	(Velocidad@val+1)^0,w,c
  1224   000F66  E104               	bnz	u1650
  1225   000F68  0E22               	movlw	34
  1226   000F6A  5C10               	subwf	Velocidad@val^0,w,c
  1227   000F6C  A0D8               	btfss	status,0,c
  1228   000F6E  D00B               	goto	l2568
  1229   000F70                     u1650:
  1230   000F70  5011               	movf	(Velocidad@val+1)^0,w,c
  1231   000F72  E109               	bnz	l2568
  1232   000F74  0E25               	movlw	37
  1233   000F76  5C10               	subwf	Velocidad@val^0,w,c
  1234   000F78  B0D8               	btfsc	status,0,c
  1235   000F7A  D005               	goto	l2568
  1236                           
  1237                           ;Proyecto.c: 206: CCP1CON = 0b00001100;
  1238   000F7C  0E0C               	movlw	12
  1239   000F7E  6EBD               	movwf	189,c	;volatile
  1240                           
  1241                           ;Proyecto.c: 207: CCPR1L = 95;
  1242   000F80  0E5F               	movlw	95
  1243   000F82  6EBE               	movwf	190,c	;volatile
  1244                           
  1245                           ;Proyecto.c: 208: } else if (val >= 37 && val < 40) {
  1246   000F84  0012               	return	
  1247   000F86                     l2568:
  1248   000F86  5011               	movf	(Velocidad@val+1)^0,w,c
  1249   000F88  E104               	bnz	u1670
  1250   000F8A  0E25               	movlw	37
  1251   000F8C  5C10               	subwf	Velocidad@val^0,w,c
  1252   000F8E  A0D8               	btfss	status,0,c
  1253   000F90  D00B               	goto	l2574
  1254   000F92                     u1670:
  1255   000F92  5011               	movf	(Velocidad@val+1)^0,w,c
  1256   000F94  E109               	bnz	l2574
  1257   000F96  0E28               	movlw	40
  1258   000F98  5C10               	subwf	Velocidad@val^0,w,c
  1259   000F9A  B0D8               	btfsc	status,0,c
  1260   000F9C  D005               	goto	l2574
  1261                           
  1262                           ;Proyecto.c: 209: CCP1CON = 0b00001100;
  1263   000F9E  0E0C               	movlw	12
  1264   000FA0  6EBD               	movwf	189,c	;volatile
  1265                           
  1266                           ;Proyecto.c: 210: CCPR1L = 113;
  1267   000FA2  0E71               	movlw	113
  1268   000FA4  6EBE               	movwf	190,c	;volatile
  1269                           
  1270                           ;Proyecto.c: 211: } else if (val >= 40) {
  1271   000FA6  0012               	return	
  1272   000FA8                     l2574:
  1273   000FA8  5011               	movf	(Velocidad@val+1)^0,w,c
  1274   000FAA  E104               	bnz	u1690
  1275   000FAC  0E28               	movlw	40
  1276   000FAE  5C10               	subwf	Velocidad@val^0,w,c
  1277   000FB0  A0D8               	btfss	status,0,c
  1278   000FB2  0012               	return	
  1279   000FB4                     u1690:
  1280                           
  1281                           ;Proyecto.c: 212: CCP1CON = 0;
  1282   000FB4  0E00               	movlw	0
  1283   000FB6  6EBD               	movwf	189,c	;volatile
  1284                           
  1285                           ;Proyecto.c: 213: RC2 = 1;
  1286   000FB8  8482               	bsf	3970,2,c	;volatile
  1287   000FBA  0012               	return	
  1288   000FBC                     __end_of_Velocidad:
  1289                           	callstack 0
  1290                           
  1291 ;; *************** function _TransmitirDatos *****************
  1292 ;; Defined at:
  1293 ;;		line 343 in file "Proyecto.c"
  1294 ;; Parameters:    Size  Location     Type
  1295 ;;  Ent1            2   29[COMRAM] unsigned int 
  1296 ;;  Ent2            2   31[COMRAM] unsigned int 
  1297 ;; Auto vars:     Size  Location     Type
  1298 ;;  TempC           2   43[COMRAM] unsigned int 
  1299 ;;  Simb            2    0        unsigned int 
  1300 ;;  n               2    0        unsigned int 
  1301 ;; Return value:  Size  Location     Type
  1302 ;;                  1    wreg      void 
  1303 ;; Registers used:
  1304 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1305 ;; Tracked objects:
  1306 ;;		On entry : 0/0
  1307 ;;		On exit  : 0/0
  1308 ;;		Unchanged: 0/0
  1309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1310 ;;      Params:         4       0       0       0       0       0       0       0       0
  1311 ;;      Locals:        12       0       0       0       0       0       0       0       0
  1312 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1313 ;;      Totals:        16       0       0       0       0       0       0       0       0
  1314 ;;Total ram usage:       16 bytes
  1315 ;; Hardware stack levels used: 1
  1316 ;; Hardware stack levels required when called: 9
  1317 ;; This function calls:
  1318 ;;		_BorraLCD
  1319 ;;		_DireccionaLCD
  1320 ;;		_EscribeLCD_c
  1321 ;;		_MensajeLCD_Word
  1322 ;;		_Transmitir
  1323 ;;		___awdiv
  1324 ;;		___awmod
  1325 ;;		___lwdiv
  1326 ;;		___lwmod
  1327 ;;		___wmul
  1328 ;; This function is called by:
  1329 ;;		_main
  1330 ;; This function uses a non-reentrant model
  1331 ;;
  1332                           
  1333                           	psect	text2
  1334   00084C                     __ptext2:
  1335                           	callstack 0
  1336   00084C                     _TransmitirDatos:
  1337                           	callstack 21
  1338                           
  1339                           ;incstack = 0
  1340   00084C  C01E  F010         	movff	TransmitirDatos@Ent1,___wmul@multiplier
  1341   000850  C01F  F011         	movff	TransmitirDatos@Ent1+1,___wmul@multiplier+1
  1342   000854  0E00               	movlw	0
  1343   000856  6E13               	movwf	(___wmul@multiplicand+1)^0,c
  1344   000858  0E0A               	movlw	10
  1345   00085A  6E12               	movwf	___wmul@multiplicand^0,c
  1346   00085C  EC7C  F00B         	call	___wmul	;wreg free
  1347                           
  1348                           ;Proyecto.c: 346: BorraLCD();
  1349   000860  ECC1  F00B         	call	_BorraLCD	;wreg free
  1350                           
  1351                           ;Proyecto.c: 347: TempC = Temp;
  1352   000864  C049  F02C         	movff	_Temp,TransmitirDatos@TempC
  1353   000868  6A2D               	clrf	(TransmitirDatos@TempC+1)^0,c
  1354                           
  1355                           ;Proyecto.c: 349: Transmitir('T');
  1356   00086A  0E54               	movlw	84
  1357   00086C  ECF5  F00B         	call	_Transmitir
  1358                           
  1359                           ;Proyecto.c: 350: Transmitir('e');
  1360   000870  0E65               	movlw	101
  1361   000872  ECF5  F00B         	call	_Transmitir
  1362                           
  1363                           ;Proyecto.c: 351: Transmitir('m');
  1364   000876  0E6D               	movlw	109
  1365   000878  ECF5  F00B         	call	_Transmitir
  1366                           
  1367                           ;Proyecto.c: 352: Transmitir('p');
  1368   00087C  0E70               	movlw	112
  1369   00087E  ECF5  F00B         	call	_Transmitir
  1370                           
  1371                           ;Proyecto.c: 353: Transmitir(':');
  1372   000882  0E3A               	movlw	58
  1373   000884  ECF5  F00B         	call	_Transmitir
  1374                           
  1375                           ;Proyecto.c: 354: Transmitir(' ');
  1376   000888  0E20               	movlw	32
  1377   00088A  ECF5  F00B         	call	_Transmitir
  1378                           
  1379                           ;Proyecto.c: 356: MensajeLCD_Word("Temp:");
  1380   00088E  0E3F               	movlw	low STR_7
  1381   000890  6E15               	movwf	MensajeLCD_Word@a^0,c
  1382   000892  EC41  F00A         	call	_MensajeLCD_Word	;wreg free
  1383                           
  1384                           ;Proyecto.c: 357: if (TempC / 100 > 0) {
  1385   000896  C02C  F010         	movff	TransmitirDatos@TempC,___lwdiv@dividend
  1386   00089A  C02D  F011         	movff	TransmitirDatos@TempC+1,___lwdiv@dividend+1
  1387   00089E  0E00               	movlw	0
  1388   0008A0  6E13               	movwf	(___lwdiv@divisor+1)^0,c
  1389   0008A2  0E64               	movlw	100
  1390   0008A4  6E12               	movwf	___lwdiv@divisor^0,c
  1391   0008A6  EC18  F00A         	call	___lwdiv	;wreg free
  1392   0008AA  5010               	movf	?___lwdiv^0,w,c
  1393   0008AC  1011               	iorwf	(?___lwdiv+1)^0,w,c
  1394   0008AE  B4D8               	btfsc	status,2,c
  1395   0008B0  D02A               	goto	l349
  1396                           
  1397                           ;Proyecto.c: 358: Transmitir(TempC / 100 + 48);
  1398   0008B2  C02C  F010         	movff	TransmitirDatos@TempC,___lwdiv@dividend
  1399   0008B6  C02D  F011         	movff	TransmitirDatos@TempC+1,___lwdiv@dividend+1
  1400   0008BA  0E00               	movlw	0
  1401   0008BC  6E13               	movwf	(___lwdiv@divisor+1)^0,c
  1402   0008BE  0E64               	movlw	100
  1403   0008C0  6E12               	movwf	___lwdiv@divisor^0,c
  1404   0008C2  EC18  F00A         	call	___lwdiv	;wreg free
  1405   0008C6  5010               	movf	?___lwdiv^0,w,c
  1406   0008C8  0F30               	addlw	48
  1407   0008CA  ECF5  F00B         	call	_Transmitir
  1408                           
  1409                           ;Proyecto.c: 359: EscribeLCD_c(TempC / 100 + 48);
  1410   0008CE  C02C  F010         	movff	TransmitirDatos@TempC,___lwdiv@dividend
  1411   0008D2  C02D  F011         	movff	TransmitirDatos@TempC+1,___lwdiv@dividend+1
  1412   0008D6  0E00               	movlw	0
  1413   0008D8  6E13               	movwf	(___lwdiv@divisor+1)^0,c
  1414   0008DA  0E64               	movlw	100
  1415   0008DC  6E12               	movwf	___lwdiv@divisor^0,c
  1416   0008DE  EC18  F00A         	call	___lwdiv	;wreg free
  1417   0008E2  5010               	movf	?___lwdiv^0,w,c
  1418   0008E4  0F30               	addlw	48
  1419   0008E6  ECAB  F00B         	call	_EscribeLCD_c
  1420                           
  1421                           ;Proyecto.c: 360: TempC = TempC % 100;
  1422   0008EA  C02C  F010         	movff	TransmitirDatos@TempC,___lwmod@dividend
  1423   0008EE  C02D  F011         	movff	TransmitirDatos@TempC+1,___lwmod@dividend+1
  1424   0008F2  0E00               	movlw	0
  1425   0008F4  6E13               	movwf	(___lwmod@divisor+1)^0,c
  1426   0008F6  0E64               	movlw	100
  1427   0008F8  6E12               	movwf	___lwmod@divisor^0,c
  1428   0008FA  ECD5  F00A         	call	___lwmod	;wreg free
  1429   0008FE  C010  F02C         	movff	?___lwmod,TransmitirDatos@TempC
  1430   000902  C011  F02D         	movff	?___lwmod+1,TransmitirDatos@TempC+1
  1431   000906                     l349:
  1432                           
  1433                           ;Proyecto.c: 361: };Proyecto.c: 362: Transmitir(TempC / 10 + 48);
  1434   000906  C02C  F010         	movff	TransmitirDatos@TempC,___lwdiv@dividend
  1435   00090A  C02D  F011         	movff	TransmitirDatos@TempC+1,___lwdiv@dividend+1
  1436   00090E  0E00               	movlw	0
  1437   000910  6E13               	movwf	(___lwdiv@divisor+1)^0,c
  1438   000912  0E0A               	movlw	10
  1439   000914  6E12               	movwf	___lwdiv@divisor^0,c
  1440   000916  EC18  F00A         	call	___lwdiv	;wreg free
  1441   00091A  5010               	movf	?___lwdiv^0,w,c
  1442   00091C  0F30               	addlw	48
  1443   00091E  ECF5  F00B         	call	_Transmitir
  1444                           
  1445                           ;Proyecto.c: 363: Transmitir(TempC % 10 + 48);
  1446   000922  C02C  F010         	movff	TransmitirDatos@TempC,___lwmod@dividend
  1447   000926  C02D  F011         	movff	TransmitirDatos@TempC+1,___lwmod@dividend+1
  1448   00092A  0E00               	movlw	0
  1449   00092C  6E13               	movwf	(___lwmod@divisor+1)^0,c
  1450   00092E  0E0A               	movlw	10
  1451   000930  6E12               	movwf	___lwmod@divisor^0,c
  1452   000932  ECD5  F00A         	call	___lwmod	;wreg free
  1453   000936  5010               	movf	?___lwmod^0,w,c
  1454   000938  0F30               	addlw	48
  1455   00093A  ECF5  F00B         	call	_Transmitir
  1456                           
  1457                           ;Proyecto.c: 364: Transmitir(167);
  1458   00093E  0EA7               	movlw	167
  1459   000940  ECF5  F00B         	call	_Transmitir
  1460                           
  1461                           ;Proyecto.c: 365: Transmitir(Simb);
  1462   000944  0E43               	movlw	67
  1463   000946  ECF5  F00B         	call	_Transmitir
  1464                           
  1465                           ;Proyecto.c: 366: Transmitir(' ');
  1466   00094A  0E20               	movlw	32
  1467   00094C  ECF5  F00B         	call	_Transmitir
  1468                           
  1469                           ;Proyecto.c: 367: Transmitir('\n');
  1470   000950  0E0A               	movlw	10
  1471   000952  ECF5  F00B         	call	_Transmitir
  1472                           
  1473                           ;Proyecto.c: 368: Transmitir('D');
  1474   000956  0E44               	movlw	68
  1475   000958  ECF5  F00B         	call	_Transmitir
  1476                           
  1477                           ;Proyecto.c: 369: Transmitir('u');
  1478   00095C  0E75               	movlw	117
  1479   00095E  ECF5  F00B         	call	_Transmitir
  1480                           
  1481                           ;Proyecto.c: 370: Transmitir('t');
  1482   000962  0E74               	movlw	116
  1483   000964  ECF5  F00B         	call	_Transmitir
  1484                           
  1485                           ;Proyecto.c: 371: Transmitir('y');
  1486   000968  0E79               	movlw	121
  1487   00096A  ECF5  F00B         	call	_Transmitir
  1488                           
  1489                           ;Proyecto.c: 372: Transmitir(':');
  1490   00096E  0E3A               	movlw	58
  1491   000970  ECF5  F00B         	call	_Transmitir
  1492                           
  1493                           ;Proyecto.c: 373: Transmitir(' ');
  1494   000974  0E20               	movlw	32
  1495   000976  ECF5  F00B         	call	_Transmitir
  1496                           
  1497                           ;Proyecto.c: 374: if(CCP1CON==0&& RC2==1) Transmitir(1 + 48);
  1498   00097A  50BD               	movf	189,w,c	;volatile
  1499   00097C  B4D8               	btfsc	status,2,c
  1500   00097E  A482               	btfss	3970,2,c	;volatile
  1501   000980  D003               	goto	l2470
  1502   000982  0E31               	movlw	49
  1503   000984  ECF5  F00B         	call	_Transmitir
  1504   000988                     l2470:
  1505                           
  1506                           ;Proyecto.c: 375: Transmitir((CCP1CON!=0)? ((CCPR1L*100/126) / 10 + 48):0+48);
  1507   000988  50BD               	movf	189,w,c	;volatile
  1508   00098A  A4D8               	btfss	status,2,c
  1509   00098C  D005               	goto	l2474
  1510   00098E  0E00               	movlw	0
  1511   000990  6E23               	movwf	(_TransmitirDatos$226+1)^0,c
  1512   000992  0E30               	movlw	48
  1513   000994  6E22               	movwf	_TransmitirDatos$226^0,c
  1514   000996  D020               	goto	l2478
  1515   000998                     l2474:
  1516   000998  0E00               	movlw	0
  1517   00099A  6E13               	movwf	(___awdiv@divisor+1)^0,c
  1518   00099C  0E7E               	movlw	126
  1519   00099E  6E12               	movwf	___awdiv@divisor^0,c
  1520   0009A0  50BE               	movf	190,w,c	;volatile
  1521   0009A2  0D64               	mullw	100
  1522   0009A4  CFF3 F010          	movff	prodl,___awdiv@dividend
  1523   0009A8  CFF4 F011          	movff	prodh,___awdiv@dividend+1
  1524   0009AC  ECFC  F008         	call	___awdiv	;wreg free
  1525   0009B0  C010  F02A         	movff	?___awdiv,_TransmitirDatos$869
  1526   0009B4  C011  F02B         	movff	?___awdiv+1,_TransmitirDatos$869+1
  1527   0009B8  C02A  F010         	movff	_TransmitirDatos$869,___awdiv@dividend
  1528   0009BC  C02B  F011         	movff	_TransmitirDatos$869+1,___awdiv@dividend+1
  1529   0009C0  0E00               	movlw	0
  1530   0009C2  6E13               	movwf	(___awdiv@divisor+1)^0,c
  1531   0009C4  0E0A               	movlw	10
  1532   0009C6  6E12               	movwf	___awdiv@divisor^0,c
  1533   0009C8  ECFC  F008         	call	___awdiv	;wreg free
  1534   0009CC  0E30               	movlw	48
  1535   0009CE  2410               	addwf	?___awdiv^0,w,c
  1536   0009D0  6E22               	movwf	_TransmitirDatos$226^0,c
  1537   0009D2  0E00               	movlw	0
  1538   0009D4  2011               	addwfc	(?___awdiv+1)^0,w,c
  1539   0009D6  6E23               	movwf	(_TransmitirDatos$226+1)^0,c
  1540   0009D8                     l2478:
  1541   0009D8  5022               	movf	_TransmitirDatos$226^0,w,c
  1542   0009DA  ECF5  F00B         	call	_Transmitir
  1543                           
  1544                           ;Proyecto.c: 376: Transmitir((CCP1CON!=0)? ((CCPR1L*100/126) % 10 + 48):0+48);
  1545   0009DE  50BD               	movf	189,w,c	;volatile
  1546   0009E0  A4D8               	btfss	status,2,c
  1547   0009E2  D005               	goto	l2484
  1548   0009E4  0E00               	movlw	0
  1549   0009E6  6E25               	movwf	(_TransmitirDatos$227+1)^0,c
  1550   0009E8  0E30               	movlw	48
  1551   0009EA  6E24               	movwf	_TransmitirDatos$227^0,c
  1552   0009EC  D01C               	goto	l2486
  1553   0009EE                     l2484:
  1554   0009EE  0E00               	movlw	0
  1555   0009F0  6E13               	movwf	(___awdiv@divisor+1)^0,c
  1556   0009F2  0E7E               	movlw	126
  1557   0009F4  6E12               	movwf	___awdiv@divisor^0,c
  1558   0009F6  50BE               	movf	190,w,c	;volatile
  1559   0009F8  0D64               	mullw	100
  1560   0009FA  CFF3 F010          	movff	prodl,___awdiv@dividend
  1561   0009FE  CFF4 F011          	movff	prodh,___awdiv@dividend+1
  1562   000A02  ECFC  F008         	call	___awdiv	;wreg free
  1563   000A06  C010  F018         	movff	?___awdiv,___awmod@dividend
  1564   000A0A  C011  F019         	movff	?___awdiv+1,___awmod@dividend+1
  1565   000A0E  0E00               	movlw	0
  1566   000A10  6E1B               	movwf	(___awmod@divisor+1)^0,c
  1567   000A12  0E0A               	movlw	10
  1568   000A14  6E1A               	movwf	___awmod@divisor^0,c
  1569   000A16  EC7A  F009         	call	___awmod	;wreg free
  1570   000A1A  0E30               	movlw	48
  1571   000A1C  2418               	addwf	?___awmod^0,w,c
  1572   000A1E  6E24               	movwf	_TransmitirDatos$227^0,c
  1573   000A20  0E00               	movlw	0
  1574   000A22  2019               	addwfc	(?___awmod+1)^0,w,c
  1575   000A24  6E25               	movwf	(_TransmitirDatos$227+1)^0,c
  1576   000A26                     l2486:
  1577   000A26  5024               	movf	_TransmitirDatos$227^0,w,c
  1578   000A28  ECF5  F00B         	call	_Transmitir
  1579                           
  1580                           ;Proyecto.c: 377: Transmitir(' ');
  1581   000A2C  0E20               	movlw	32
  1582   000A2E  ECF5  F00B         	call	_Transmitir
  1583                           
  1584                           ;Proyecto.c: 378: Transmitir('%');
  1585   000A32  0E25               	movlw	37
  1586   000A34  ECF5  F00B         	call	_Transmitir
  1587                           
  1588                           ;Proyecto.c: 379: Transmitir('\n');
  1589   000A38  0E0A               	movlw	10
  1590   000A3A  ECF5  F00B         	call	_Transmitir
  1591                           
  1592                           ;Proyecto.c: 380: Transmitir(' ');
  1593   000A3E  0E20               	movlw	32
  1594   000A40  ECF5  F00B         	call	_Transmitir
  1595                           
  1596                           ;Proyecto.c: 382: EscribeLCD_c(TempC / 10 + 48);
  1597   000A44  C02C  F010         	movff	TransmitirDatos@TempC,___lwdiv@dividend
  1598   000A48  C02D  F011         	movff	TransmitirDatos@TempC+1,___lwdiv@dividend+1
  1599   000A4C  0E00               	movlw	0
  1600   000A4E  6E13               	movwf	(___lwdiv@divisor+1)^0,c
  1601   000A50  0E0A               	movlw	10
  1602   000A52  6E12               	movwf	___lwdiv@divisor^0,c
  1603   000A54  EC18  F00A         	call	___lwdiv	;wreg free
  1604   000A58  5010               	movf	?___lwdiv^0,w,c
  1605   000A5A  0F30               	addlw	48
  1606   000A5C  ECAB  F00B         	call	_EscribeLCD_c
  1607                           
  1608                           ;Proyecto.c: 383: EscribeLCD_c(TempC % 10 + 48);
  1609   000A60  C02C  F010         	movff	TransmitirDatos@TempC,___lwmod@dividend
  1610   000A64  C02D  F011         	movff	TransmitirDatos@TempC+1,___lwmod@dividend+1
  1611   000A68  0E00               	movlw	0
  1612   000A6A  6E13               	movwf	(___lwmod@divisor+1)^0,c
  1613   000A6C  0E0A               	movlw	10
  1614   000A6E  6E12               	movwf	___lwmod@divisor^0,c
  1615   000A70  ECD5  F00A         	call	___lwmod	;wreg free
  1616   000A74  5010               	movf	?___lwmod^0,w,c
  1617   000A76  0F30               	addlw	48
  1618   000A78  ECAB  F00B         	call	_EscribeLCD_c
  1619                           
  1620                           ;Proyecto.c: 384: EscribeLCD_c(Simb);
  1621   000A7C  0E43               	movlw	67
  1622   000A7E  ECAB  F00B         	call	_EscribeLCD_c
  1623                           
  1624                           ;Proyecto.c: 385: DireccionaLCD(192);
  1625   000A82  0EC0               	movlw	192
  1626   000A84  ECA0  F00B         	call	_DireccionaLCD
  1627                           
  1628                           ;Proyecto.c: 386: MensajeLCD_Word("Duty:");
  1629   000A88  0E45               	movlw	low STR_8
  1630   000A8A  6E15               	movwf	MensajeLCD_Word@a^0,c
  1631   000A8C  EC41  F00A         	call	_MensajeLCD_Word	;wreg free
  1632                           
  1633                           ;Proyecto.c: 387: if(CCP1CON==0 && RC2==1) EscribeLCD_c(1 + 48);
  1634   000A90  50BD               	movf	189,w,c	;volatile
  1635   000A92  B4D8               	btfsc	status,2,c
  1636   000A94  A482               	btfss	3970,2,c	;volatile
  1637   000A96  D003               	goto	l2512
  1638   000A98  0E31               	movlw	49
  1639   000A9A  ECAB  F00B         	call	_EscribeLCD_c
  1640   000A9E                     l2512:
  1641                           
  1642                           ;Proyecto.c: 388: EscribeLCD_c((CCP1CON!=0)? ((CCPR1L*100/126) / 10 + 48):0+48);
  1643   000A9E  50BD               	movf	189,w,c	;volatile
  1644   000AA0  A4D8               	btfss	status,2,c
  1645   000AA2  D005               	goto	l2516
  1646   000AA4  0E00               	movlw	0
  1647   000AA6  6E27               	movwf	(_TransmitirDatos$229+1)^0,c
  1648   000AA8  0E30               	movlw	48
  1649   000AAA  6E26               	movwf	_TransmitirDatos$229^0,c
  1650   000AAC  D020               	goto	l2520
  1651   000AAE                     l2516:
  1652   000AAE  0E00               	movlw	0
  1653   000AB0  6E13               	movwf	(___awdiv@divisor+1)^0,c
  1654   000AB2  0E7E               	movlw	126
  1655   000AB4  6E12               	movwf	___awdiv@divisor^0,c
  1656   000AB6  50BE               	movf	190,w,c	;volatile
  1657   000AB8  0D64               	mullw	100
  1658   000ABA  CFF3 F010          	movff	prodl,___awdiv@dividend
  1659   000ABE  CFF4 F011          	movff	prodh,___awdiv@dividend+1
  1660   000AC2  ECFC  F008         	call	___awdiv	;wreg free
  1661   000AC6  C010  F02A         	movff	?___awdiv,_TransmitirDatos$869
  1662   000ACA  C011  F02B         	movff	?___awdiv+1,_TransmitirDatos$869+1
  1663   000ACE  C02A  F010         	movff	_TransmitirDatos$869,___awdiv@dividend
  1664   000AD2  C02B  F011         	movff	_TransmitirDatos$869+1,___awdiv@dividend+1
  1665   000AD6  0E00               	movlw	0
  1666   000AD8  6E13               	movwf	(___awdiv@divisor+1)^0,c
  1667   000ADA  0E0A               	movlw	10
  1668   000ADC  6E12               	movwf	___awdiv@divisor^0,c
  1669   000ADE  ECFC  F008         	call	___awdiv	;wreg free
  1670   000AE2  0E30               	movlw	48
  1671   000AE4  2410               	addwf	?___awdiv^0,w,c
  1672   000AE6  6E26               	movwf	_TransmitirDatos$229^0,c
  1673   000AE8  0E00               	movlw	0
  1674   000AEA  2011               	addwfc	(?___awdiv+1)^0,w,c
  1675   000AEC  6E27               	movwf	(_TransmitirDatos$229+1)^0,c
  1676   000AEE                     l2520:
  1677   000AEE  5026               	movf	_TransmitirDatos$229^0,w,c
  1678   000AF0  ECAB  F00B         	call	_EscribeLCD_c
  1679                           
  1680                           ;Proyecto.c: 389: EscribeLCD_c((CCP1CON!=0)? ((CCPR1L*100/126) % 10 + 48):0+48);
  1681   000AF4  50BD               	movf	189,w,c	;volatile
  1682   000AF6  A4D8               	btfss	status,2,c
  1683   000AF8  D005               	goto	l2526
  1684   000AFA  0E00               	movlw	0
  1685   000AFC  6E29               	movwf	(_TransmitirDatos$230+1)^0,c
  1686   000AFE  0E30               	movlw	48
  1687   000B00  6E28               	movwf	_TransmitirDatos$230^0,c
  1688   000B02  D01C               	goto	l2528
  1689   000B04                     l2526:
  1690   000B04  0E00               	movlw	0
  1691   000B06  6E13               	movwf	(___awdiv@divisor+1)^0,c
  1692   000B08  0E7E               	movlw	126
  1693   000B0A  6E12               	movwf	___awdiv@divisor^0,c
  1694   000B0C  50BE               	movf	190,w,c	;volatile
  1695   000B0E  0D64               	mullw	100
  1696   000B10  CFF3 F010          	movff	prodl,___awdiv@dividend
  1697   000B14  CFF4 F011          	movff	prodh,___awdiv@dividend+1
  1698   000B18  ECFC  F008         	call	___awdiv	;wreg free
  1699   000B1C  C010  F018         	movff	?___awdiv,___awmod@dividend
  1700   000B20  C011  F019         	movff	?___awdiv+1,___awmod@dividend+1
  1701   000B24  0E00               	movlw	0
  1702   000B26  6E1B               	movwf	(___awmod@divisor+1)^0,c
  1703   000B28  0E0A               	movlw	10
  1704   000B2A  6E1A               	movwf	___awmod@divisor^0,c
  1705   000B2C  EC7A  F009         	call	___awmod	;wreg free
  1706   000B30  0E30               	movlw	48
  1707   000B32  2418               	addwf	?___awmod^0,w,c
  1708   000B34  6E28               	movwf	_TransmitirDatos$230^0,c
  1709   000B36  0E00               	movlw	0
  1710   000B38  2019               	addwfc	(?___awmod+1)^0,w,c
  1711   000B3A  6E29               	movwf	(_TransmitirDatos$230+1)^0,c
  1712   000B3C                     l2528:
  1713   000B3C  5028               	movf	_TransmitirDatos$230^0,w,c
  1714   000B3E  ECAB  F00B         	call	_EscribeLCD_c
  1715                           
  1716                           ;Proyecto.c: 390: EscribeLCD_c('%');
  1717   000B42  0E25               	movlw	37
  1718   000B44  ECAB  F00B         	call	_EscribeLCD_c
  1719   000B48  0012               	return		;funcret
  1720   000B4A                     __end_of_TransmitirDatos:
  1721                           	callstack 0
  1722                           
  1723 ;; *************** function ___wmul *****************
  1724 ;; Defined at:
  1725 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\Umul16.c"
  1726 ;; Parameters:    Size  Location     Type
  1727 ;;  multiplier      2   15[COMRAM] unsigned int 
  1728 ;;  multiplicand    2   17[COMRAM] unsigned int 
  1729 ;; Auto vars:     Size  Location     Type
  1730 ;;  product         2   19[COMRAM] unsigned int 
  1731 ;; Return value:  Size  Location     Type
  1732 ;;                  2   15[COMRAM] unsigned int 
  1733 ;; Registers used:
  1734 ;;		wreg, status,2, status,0, prodl, prodh
  1735 ;; Tracked objects:
  1736 ;;		On entry : 0/0
  1737 ;;		On exit  : 0/0
  1738 ;;		Unchanged: 0/0
  1739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1740 ;;      Params:         4       0       0       0       0       0       0       0       0
  1741 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1742 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1743 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1744 ;;Total ram usage:        6 bytes
  1745 ;; Hardware stack levels used: 1
  1746 ;; Hardware stack levels required when called: 5
  1747 ;; This function calls:
  1748 ;;		Nothing
  1749 ;; This function is called by:
  1750 ;;		_TransmitirDatos
  1751 ;; This function uses a non-reentrant model
  1752 ;;
  1753                           
  1754                           	psect	text3
  1755   0016F8                     __ptext3:
  1756                           	callstack 0
  1757   0016F8                     ___wmul:
  1758                           	callstack 24
  1759                           
  1760                           ;incstack = 0
  1761   0016F8  5010               	movf	___wmul@multiplier^0,w,c
  1762   0016FA  0212               	mulwf	___wmul@multiplicand^0,c
  1763   0016FC  CFF3 F014          	movff	prodl,___wmul@product
  1764   001700  CFF4 F015          	movff	prodh,___wmul@product+1
  1765   001704  5010               	movf	___wmul@multiplier^0,w,c
  1766   001706  0213               	mulwf	(___wmul@multiplicand+1)^0,c
  1767   001708  50F3               	movf	243,w,c
  1768   00170A  2615               	addwf	(___wmul@product+1)^0,f,c
  1769   00170C  5011               	movf	(___wmul@multiplier+1)^0,w,c
  1770   00170E  0212               	mulwf	___wmul@multiplicand^0,c
  1771   001710  50F3               	movf	243,w,c
  1772   001712  2615               	addwf	(___wmul@product+1)^0,f,c
  1773   001714  C014  F010         	movff	___wmul@product,?___wmul
  1774   001718  C015  F011         	movff	___wmul@product+1,?___wmul+1
  1775   00171C  0012               	return		;funcret
  1776   00171E                     __end_of___wmul:
  1777                           	callstack 0
  1778                           
  1779 ;; *************** function ___lwmod *****************
  1780 ;; Defined at:
  1781 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\lwmod.c"
  1782 ;; Parameters:    Size  Location     Type
  1783 ;;  dividend        2   15[COMRAM] unsigned int 
  1784 ;;  divisor         2   17[COMRAM] unsigned int 
  1785 ;; Auto vars:     Size  Location     Type
  1786 ;;  counter         1   19[COMRAM] unsigned char 
  1787 ;; Return value:  Size  Location     Type
  1788 ;;                  2   15[COMRAM] unsigned int 
  1789 ;; Registers used:
  1790 ;;		wreg, status,2, status,0
  1791 ;; Tracked objects:
  1792 ;;		On entry : 0/0
  1793 ;;		On exit  : 0/0
  1794 ;;		Unchanged: 0/0
  1795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1796 ;;      Params:         4       0       0       0       0       0       0       0       0
  1797 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1798 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1799 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1800 ;;Total ram usage:        5 bytes
  1801 ;; Hardware stack levels used: 1
  1802 ;; Hardware stack levels required when called: 5
  1803 ;; This function calls:
  1804 ;;		Nothing
  1805 ;; This function is called by:
  1806 ;;		_TransmitirDatos
  1807 ;; This function uses a non-reentrant model
  1808 ;;
  1809                           
  1810                           	psect	text4
  1811   0015AA                     __ptext4:
  1812                           	callstack 0
  1813   0015AA                     ___lwmod:
  1814                           	callstack 24
  1815                           
  1816                           ;incstack = 0
  1817   0015AA  5012               	movf	___lwmod@divisor^0,w,c
  1818   0015AC  1013               	iorwf	(___lwmod@divisor+1)^0,w,c
  1819   0015AE  B4D8               	btfsc	status,2,c
  1820   0015B0  D018               	goto	l904
  1821   0015B2  0E01               	movlw	1
  1822   0015B4  6E14               	movwf	___lwmod@counter^0,c
  1823   0015B6  D004               	goto	l2292
  1824   0015B8                     l2290:
  1825   0015B8  90D8               	bcf	status,0,c
  1826   0015BA  3612               	rlcf	___lwmod@divisor^0,f,c
  1827   0015BC  3613               	rlcf	(___lwmod@divisor+1)^0,f,c
  1828   0015BE  2A14               	incf	___lwmod@counter^0,f,c
  1829   0015C0                     l2292:
  1830   0015C0  AE13               	btfss	(___lwmod@divisor+1)^0,7,c
  1831   0015C2  D7FA               	goto	l2290
  1832   0015C4                     u1340:
  1833   0015C4  5012               	movf	___lwmod@divisor^0,w,c
  1834   0015C6  5C10               	subwf	___lwmod@dividend^0,w,c
  1835   0015C8  5013               	movf	(___lwmod@divisor+1)^0,w,c
  1836   0015CA  5811               	subwfb	(___lwmod@dividend+1)^0,w,c
  1837   0015CC  A0D8               	btfss	status,0,c
  1838   0015CE  D004               	goto	l2298
  1839   0015D0  5012               	movf	___lwmod@divisor^0,w,c
  1840   0015D2  5E10               	subwf	___lwmod@dividend^0,f,c
  1841   0015D4  5013               	movf	(___lwmod@divisor+1)^0,w,c
  1842   0015D6  5A11               	subwfb	(___lwmod@dividend+1)^0,f,c
  1843   0015D8                     l2298:
  1844   0015D8  90D8               	bcf	status,0,c
  1845   0015DA  3213               	rrcf	(___lwmod@divisor+1)^0,f,c
  1846   0015DC  3212               	rrcf	___lwmod@divisor^0,f,c
  1847   0015DE  2E14               	decfsz	___lwmod@counter^0,f,c
  1848   0015E0  D7F1               	goto	u1340
  1849   0015E2                     l904:
  1850   0015E2  C010  F010         	movff	___lwmod@dividend,?___lwmod
  1851   0015E6  C011  F011         	movff	___lwmod@dividend+1,?___lwmod+1
  1852   0015EA  0012               	return		;funcret
  1853   0015EC                     __end_of___lwmod:
  1854                           	callstack 0
  1855                           
  1856 ;; *************** function ___lwdiv *****************
  1857 ;; Defined at:
  1858 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\lwdiv.c"
  1859 ;; Parameters:    Size  Location     Type
  1860 ;;  dividend        2   15[COMRAM] unsigned int 
  1861 ;;  divisor         2   17[COMRAM] unsigned int 
  1862 ;; Auto vars:     Size  Location     Type
  1863 ;;  quotient        2   19[COMRAM] unsigned int 
  1864 ;;  counter         1   21[COMRAM] unsigned char 
  1865 ;; Return value:  Size  Location     Type
  1866 ;;                  2   15[COMRAM] unsigned int 
  1867 ;; Registers used:
  1868 ;;		wreg, status,2, status,0
  1869 ;; Tracked objects:
  1870 ;;		On entry : 0/0
  1871 ;;		On exit  : 0/0
  1872 ;;		Unchanged: 0/0
  1873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1874 ;;      Params:         4       0       0       0       0       0       0       0       0
  1875 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1876 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1877 ;;      Totals:         7       0       0       0       0       0       0       0       0
  1878 ;;Total ram usage:        7 bytes
  1879 ;; Hardware stack levels used: 1
  1880 ;; Hardware stack levels required when called: 5
  1881 ;; This function calls:
  1882 ;;		Nothing
  1883 ;; This function is called by:
  1884 ;;		_TransmitirDatos
  1885 ;; This function uses a non-reentrant model
  1886 ;;
  1887                           
  1888                           	psect	text5
  1889   001430                     __ptext5:
  1890                           	callstack 0
  1891   001430                     ___lwdiv:
  1892                           	callstack 24
  1893                           
  1894                           ;incstack = 0
  1895   001430  0E00               	movlw	0
  1896   001432  6E15               	movwf	(___lwdiv@quotient+1)^0,c
  1897   001434  0E00               	movlw	0
  1898   001436  6E14               	movwf	___lwdiv@quotient^0,c
  1899   001438  5012               	movf	___lwdiv@divisor^0,w,c
  1900   00143A  1013               	iorwf	(___lwdiv@divisor+1)^0,w,c
  1901   00143C  B4D8               	btfsc	status,2,c
  1902   00143E  D01C               	goto	l894
  1903   001440  0E01               	movlw	1
  1904   001442  6E16               	movwf	___lwdiv@counter^0,c
  1905   001444  D004               	goto	l2272
  1906   001446                     l2270:
  1907   001446  90D8               	bcf	status,0,c
  1908   001448  3612               	rlcf	___lwdiv@divisor^0,f,c
  1909   00144A  3613               	rlcf	(___lwdiv@divisor+1)^0,f,c
  1910   00144C  2A16               	incf	___lwdiv@counter^0,f,c
  1911   00144E                     l2272:
  1912   00144E  AE13               	btfss	(___lwdiv@divisor+1)^0,7,c
  1913   001450  D7FA               	goto	l2270
  1914   001452                     u1310:
  1915   001452  90D8               	bcf	status,0,c
  1916   001454  3614               	rlcf	___lwdiv@quotient^0,f,c
  1917   001456  3615               	rlcf	(___lwdiv@quotient+1)^0,f,c
  1918   001458  5012               	movf	___lwdiv@divisor^0,w,c
  1919   00145A  5C10               	subwf	___lwdiv@dividend^0,w,c
  1920   00145C  5013               	movf	(___lwdiv@divisor+1)^0,w,c
  1921   00145E  5811               	subwfb	(___lwdiv@dividend+1)^0,w,c
  1922   001460  A0D8               	btfss	status,0,c
  1923   001462  D005               	goto	l2282
  1924   001464  5012               	movf	___lwdiv@divisor^0,w,c
  1925   001466  5E10               	subwf	___lwdiv@dividend^0,f,c
  1926   001468  5013               	movf	(___lwdiv@divisor+1)^0,w,c
  1927   00146A  5A11               	subwfb	(___lwdiv@dividend+1)^0,f,c
  1928   00146C  8014               	bsf	___lwdiv@quotient^0,0,c
  1929   00146E                     l2282:
  1930   00146E  90D8               	bcf	status,0,c
  1931   001470  3213               	rrcf	(___lwdiv@divisor+1)^0,f,c
  1932   001472  3212               	rrcf	___lwdiv@divisor^0,f,c
  1933   001474  2E16               	decfsz	___lwdiv@counter^0,f,c
  1934   001476  D7ED               	goto	u1310
  1935   001478                     l894:
  1936   001478  C014  F010         	movff	___lwdiv@quotient,?___lwdiv
  1937   00147C  C015  F011         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1938   001480  0012               	return		;funcret
  1939   001482                     __end_of___lwdiv:
  1940                           	callstack 0
  1941                           
  1942 ;; *************** function ___awmod *****************
  1943 ;; Defined at:
  1944 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\awmod.c"
  1945 ;; Parameters:    Size  Location     Type
  1946 ;;  dividend        2   23[COMRAM] int 
  1947 ;;  divisor         2   25[COMRAM] int 
  1948 ;; Auto vars:     Size  Location     Type
  1949 ;;  sign            1   28[COMRAM] unsigned char 
  1950 ;;  counter         1   27[COMRAM] unsigned char 
  1951 ;; Return value:  Size  Location     Type
  1952 ;;                  2   23[COMRAM] int 
  1953 ;; Registers used:
  1954 ;;		wreg, status,2, status,0
  1955 ;; Tracked objects:
  1956 ;;		On entry : 0/0
  1957 ;;		On exit  : 0/0
  1958 ;;		Unchanged: 0/0
  1959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1960 ;;      Params:         4       0       0       0       0       0       0       0       0
  1961 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1962 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1963 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1964 ;;Total ram usage:        6 bytes
  1965 ;; Hardware stack levels used: 1
  1966 ;; Hardware stack levels required when called: 5
  1967 ;; This function calls:
  1968 ;;		Nothing
  1969 ;; This function is called by:
  1970 ;;		_TransmitirDatos
  1971 ;; This function uses a non-reentrant model
  1972 ;;
  1973                           
  1974                           	psect	text6
  1975   0012F4                     __ptext6:
  1976                           	callstack 0
  1977   0012F4                     ___awmod:
  1978                           	callstack 24
  1979                           
  1980                           ;incstack = 0
  1981   0012F4  0E00               	movlw	0
  1982   0012F6  6E1D               	movwf	___awmod@sign^0,c
  1983   0012F8  AE19               	btfss	(___awmod@dividend+1)^0,7,c
  1984   0012FA  D006               	goto	l2236
  1985   0012FC  6C18               	negf	___awmod@dividend^0,c
  1986   0012FE  1E19               	comf	(___awmod@dividend+1)^0,f,c
  1987   001300  B0D8               	btfsc	status,0,c
  1988   001302  2A19               	incf	(___awmod@dividend+1)^0,f,c
  1989   001304  0E01               	movlw	1
  1990   001306  6E1D               	movwf	___awmod@sign^0,c
  1991   001308                     l2236:
  1992   001308  AE1B               	btfss	(___awmod@divisor+1)^0,7,c
  1993   00130A  D004               	goto	l2240
  1994   00130C  6C1A               	negf	___awmod@divisor^0,c
  1995   00130E  1E1B               	comf	(___awmod@divisor+1)^0,f,c
  1996   001310  B0D8               	btfsc	status,0,c
  1997   001312  2A1B               	incf	(___awmod@divisor+1)^0,f,c
  1998   001314                     l2240:
  1999   001314  501A               	movf	___awmod@divisor^0,w,c
  2000   001316  101B               	iorwf	(___awmod@divisor+1)^0,w,c
  2001   001318  B4D8               	btfsc	status,2,c
  2002   00131A  D018               	goto	l2256
  2003   00131C  0E01               	movlw	1
  2004   00131E  6E1C               	movwf	___awmod@counter^0,c
  2005   001320  D004               	goto	l2246
  2006   001322                     l2244:
  2007   001322  90D8               	bcf	status,0,c
  2008   001324  361A               	rlcf	___awmod@divisor^0,f,c
  2009   001326  361B               	rlcf	(___awmod@divisor+1)^0,f,c
  2010   001328  2A1C               	incf	___awmod@counter^0,f,c
  2011   00132A                     l2246:
  2012   00132A  AE1B               	btfss	(___awmod@divisor+1)^0,7,c
  2013   00132C  D7FA               	goto	l2244
  2014   00132E                     u1270:
  2015   00132E  501A               	movf	___awmod@divisor^0,w,c
  2016   001330  5C18               	subwf	___awmod@dividend^0,w,c
  2017   001332  501B               	movf	(___awmod@divisor+1)^0,w,c
  2018   001334  5819               	subwfb	(___awmod@dividend+1)^0,w,c
  2019   001336  A0D8               	btfss	status,0,c
  2020   001338  D004               	goto	l2252
  2021   00133A  501A               	movf	___awmod@divisor^0,w,c
  2022   00133C  5E18               	subwf	___awmod@dividend^0,f,c
  2023   00133E  501B               	movf	(___awmod@divisor+1)^0,w,c
  2024   001340  5A19               	subwfb	(___awmod@dividend+1)^0,f,c
  2025   001342                     l2252:
  2026   001342  90D8               	bcf	status,0,c
  2027   001344  321B               	rrcf	(___awmod@divisor+1)^0,f,c
  2028   001346  321A               	rrcf	___awmod@divisor^0,f,c
  2029   001348  2E1C               	decfsz	___awmod@counter^0,f,c
  2030   00134A  D7F1               	goto	u1270
  2031   00134C                     l2256:
  2032   00134C  501D               	movf	___awmod@sign^0,w,c
  2033   00134E  B4D8               	btfsc	status,2,c
  2034   001350  D004               	goto	l2260
  2035   001352  6C18               	negf	___awmod@dividend^0,c
  2036   001354  1E19               	comf	(___awmod@dividend+1)^0,f,c
  2037   001356  B0D8               	btfsc	status,0,c
  2038   001358  2A19               	incf	(___awmod@dividend+1)^0,f,c
  2039   00135A                     l2260:
  2040   00135A  C018  F018         	movff	___awmod@dividend,?___awmod
  2041   00135E  C019  F019         	movff	___awmod@dividend+1,?___awmod+1
  2042   001362  0012               	return		;funcret
  2043   001364                     __end_of___awmod:
  2044                           	callstack 0
  2045                           
  2046 ;; *************** function ___awdiv *****************
  2047 ;; Defined at:
  2048 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\awdiv.c"
  2049 ;; Parameters:    Size  Location     Type
  2050 ;;  dividend        2   15[COMRAM] int 
  2051 ;;  divisor         2   17[COMRAM] int 
  2052 ;; Auto vars:     Size  Location     Type
  2053 ;;  quotient        2   21[COMRAM] int 
  2054 ;;  sign            1   20[COMRAM] unsigned char 
  2055 ;;  counter         1   19[COMRAM] unsigned char 
  2056 ;; Return value:  Size  Location     Type
  2057 ;;                  2   15[COMRAM] int 
  2058 ;; Registers used:
  2059 ;;		wreg, status,2, status,0
  2060 ;; Tracked objects:
  2061 ;;		On entry : 0/0
  2062 ;;		On exit  : 0/0
  2063 ;;		Unchanged: 0/0
  2064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2065 ;;      Params:         4       0       0       0       0       0       0       0       0
  2066 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2067 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2068 ;;      Totals:         8       0       0       0       0       0       0       0       0
  2069 ;;Total ram usage:        8 bytes
  2070 ;; Hardware stack levels used: 1
  2071 ;; Hardware stack levels required when called: 5
  2072 ;; This function calls:
  2073 ;;		Nothing
  2074 ;; This function is called by:
  2075 ;;		_TransmitirDatos
  2076 ;; This function uses a non-reentrant model
  2077 ;;
  2078                           
  2079                           	psect	text7
  2080   0011F8                     __ptext7:
  2081                           	callstack 0
  2082   0011F8                     ___awdiv:
  2083                           	callstack 24
  2084                           
  2085                           ;incstack = 0
  2086   0011F8  0E00               	movlw	0
  2087   0011FA  6E15               	movwf	___awdiv@sign^0,c
  2088   0011FC  AE13               	btfss	(___awdiv@divisor+1)^0,7,c
  2089   0011FE  D006               	goto	l2192
  2090   001200  6C12               	negf	___awdiv@divisor^0,c
  2091   001202  1E13               	comf	(___awdiv@divisor+1)^0,f,c
  2092   001204  B0D8               	btfsc	status,0,c
  2093   001206  2A13               	incf	(___awdiv@divisor+1)^0,f,c
  2094   001208  0E01               	movlw	1
  2095   00120A  6E15               	movwf	___awdiv@sign^0,c
  2096   00120C                     l2192:
  2097   00120C  AE11               	btfss	(___awdiv@dividend+1)^0,7,c
  2098   00120E  D006               	goto	l2198
  2099   001210  6C10               	negf	___awdiv@dividend^0,c
  2100   001212  1E11               	comf	(___awdiv@dividend+1)^0,f,c
  2101   001214  B0D8               	btfsc	status,0,c
  2102   001216  2A11               	incf	(___awdiv@dividend+1)^0,f,c
  2103   001218  0E01               	movlw	1
  2104   00121A  1A15               	xorwf	___awdiv@sign^0,f,c
  2105   00121C                     l2198:
  2106   00121C  0E00               	movlw	0
  2107   00121E  6E17               	movwf	(___awdiv@quotient+1)^0,c
  2108   001220  0E00               	movlw	0
  2109   001222  6E16               	movwf	___awdiv@quotient^0,c
  2110   001224  5012               	movf	___awdiv@divisor^0,w,c
  2111   001226  1013               	iorwf	(___awdiv@divisor+1)^0,w,c
  2112   001228  B4D8               	btfsc	status,2,c
  2113   00122A  D01C               	goto	l2220
  2114   00122C  0E01               	movlw	1
  2115   00122E  6E14               	movwf	___awdiv@counter^0,c
  2116   001230  D004               	goto	l2206
  2117   001232                     l2204:
  2118   001232  90D8               	bcf	status,0,c
  2119   001234  3612               	rlcf	___awdiv@divisor^0,f,c
  2120   001236  3613               	rlcf	(___awdiv@divisor+1)^0,f,c
  2121   001238  2A14               	incf	___awdiv@counter^0,f,c
  2122   00123A                     l2206:
  2123   00123A  AE13               	btfss	(___awdiv@divisor+1)^0,7,c
  2124   00123C  D7FA               	goto	l2204
  2125   00123E                     u1210:
  2126   00123E  90D8               	bcf	status,0,c
  2127   001240  3616               	rlcf	___awdiv@quotient^0,f,c
  2128   001242  3617               	rlcf	(___awdiv@quotient+1)^0,f,c
  2129   001244  5012               	movf	___awdiv@divisor^0,w,c
  2130   001246  5C10               	subwf	___awdiv@dividend^0,w,c
  2131   001248  5013               	movf	(___awdiv@divisor+1)^0,w,c
  2132   00124A  5811               	subwfb	(___awdiv@dividend+1)^0,w,c
  2133   00124C  A0D8               	btfss	status,0,c
  2134   00124E  D005               	goto	l2216
  2135   001250  5012               	movf	___awdiv@divisor^0,w,c
  2136   001252  5E10               	subwf	___awdiv@dividend^0,f,c
  2137   001254  5013               	movf	(___awdiv@divisor+1)^0,w,c
  2138   001256  5A11               	subwfb	(___awdiv@dividend+1)^0,f,c
  2139   001258  8016               	bsf	___awdiv@quotient^0,0,c
  2140   00125A                     l2216:
  2141   00125A  90D8               	bcf	status,0,c
  2142   00125C  3213               	rrcf	(___awdiv@divisor+1)^0,f,c
  2143   00125E  3212               	rrcf	___awdiv@divisor^0,f,c
  2144   001260  2E14               	decfsz	___awdiv@counter^0,f,c
  2145   001262  D7ED               	goto	u1210
  2146   001264                     l2220:
  2147   001264  5015               	movf	___awdiv@sign^0,w,c
  2148   001266  B4D8               	btfsc	status,2,c
  2149   001268  D004               	goto	l2224
  2150   00126A  6C16               	negf	___awdiv@quotient^0,c
  2151   00126C  1E17               	comf	(___awdiv@quotient+1)^0,f,c
  2152   00126E  B0D8               	btfsc	status,0,c
  2153   001270  2A17               	incf	(___awdiv@quotient+1)^0,f,c
  2154   001272                     l2224:
  2155   001272  C016  F010         	movff	___awdiv@quotient,?___awdiv
  2156   001276  C017  F011         	movff	___awdiv@quotient+1,?___awdiv+1
  2157   00127A  0012               	return		;funcret
  2158   00127C                     __end_of___awdiv:
  2159                           	callstack 0
  2160                           
  2161 ;; *************** function _Transmitir *****************
  2162 ;; Defined at:
  2163 ;;		line 326 in file "Proyecto.c"
  2164 ;; Parameters:    Size  Location     Type
  2165 ;;  BufferT         1    wreg     unsigned char 
  2166 ;; Auto vars:     Size  Location     Type
  2167 ;;  BufferT         1   15[COMRAM] unsigned char 
  2168 ;; Return value:  Size  Location     Type
  2169 ;;                  1    wreg      void 
  2170 ;; Registers used:
  2171 ;;		wreg
  2172 ;; Tracked objects:
  2173 ;;		On entry : 0/0
  2174 ;;		On exit  : 0/0
  2175 ;;		Unchanged: 0/0
  2176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2177 ;;      Params:         0       0       0       0       0       0       0       0       0
  2178 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2179 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2180 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2181 ;;Total ram usage:        1 bytes
  2182 ;; Hardware stack levels used: 1
  2183 ;; Hardware stack levels required when called: 5
  2184 ;; This function calls:
  2185 ;;		Nothing
  2186 ;; This function is called by:
  2187 ;;		_TransmitirDatos
  2188 ;; This function uses a non-reentrant model
  2189 ;;
  2190                           
  2191                           	psect	text8
  2192   0017EA                     __ptext8:
  2193                           	callstack 0
  2194   0017EA                     _Transmitir:
  2195                           	callstack 24
  2196                           
  2197                           ;incstack = 0
  2198                           ;Transmitir@BufferT stored from wreg
  2199   0017EA  6E10               	movwf	Transmitir@BufferT^0,c
  2200   0017EC                     
  2201                           ;Proyecto.c: 327: while (TRMT == 0);
  2202   0017EC  A2AC               	btfss	4012,1,c	;volatile
  2203   0017EE  D7FE               	goto	l2174
  2204                           
  2205                           ;Proyecto.c: 328: TXREG = BufferT;
  2206   0017F0  C010  FFAD         	movff	Transmitir@BufferT,4013	;volatile
  2207   0017F4  0012               	return		;funcret
  2208   0017F6                     __end_of_Transmitir:
  2209                           	callstack 0
  2210                           
  2211 ;; *************** function _MensajeLCD_Word *****************
  2212 ;; Defined at:
  2213 ;;		line 247 in file "LibLCDXC8.h"
  2214 ;; Parameters:    Size  Location     Type
  2215 ;;  a               1   20[COMRAM] PTR unsigned char 
  2216 ;;		 -> STR_9(7), STR_8(6), STR_7(6), STR_6(23), 
  2217 ;;		 -> STR_5(11), STR_4(23), STR_3(10), STR_2(17), 
  2218 ;;		 -> STR_1(11), 
  2219 ;; Auto vars:     Size  Location     Type
  2220 ;;  i               2   22[COMRAM] int 
  2221 ;; Return value:  Size  Location     Type
  2222 ;;                  1    wreg      void 
  2223 ;; Registers used:
  2224 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2225 ;; Tracked objects:
  2226 ;;		On entry : 0/0
  2227 ;;		On exit  : 0/0
  2228 ;;		Unchanged: 0/0
  2229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2230 ;;      Params:         1       0       0       0       0       0       0       0       0
  2231 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2232 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2233 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2234 ;;Total ram usage:        4 bytes
  2235 ;; Hardware stack levels used: 1
  2236 ;; Hardware stack levels required when called: 8
  2237 ;; This function calls:
  2238 ;;		_EscribeLCD_c
  2239 ;; This function is called by:
  2240 ;;		_main
  2241 ;;		_TransmitirDatos
  2242 ;; This function uses a non-reentrant model
  2243 ;;
  2244                           
  2245                           	psect	text9
  2246   001482                     __ptext9:
  2247                           	callstack 0
  2248   001482                     _MensajeLCD_Word:
  2249                           	callstack 21
  2250                           
  2251                           ;LibLCDXC8.h: 251: for(int i = 0; i<16; i++){
  2252                           
  2253                           ;incstack = 0
  2254   001482  0E00               	movlw	0
  2255   001484  6E18               	movwf	(MensajeLCD_Word@i+1)^0,c
  2256   001486  0E00               	movlw	0
  2257   001488  6E17               	movwf	MensajeLCD_Word@i^0,c
  2258   00148A                     l2142:
  2259                           
  2260                           ;LibLCDXC8.h: 252: if(a[i] == (0)){
  2261   00148A  5015               	movf	MensajeLCD_Word@a^0,w,c
  2262   00148C  2417               	addwf	MensajeLCD_Word@i^0,w,c
  2263   00148E  6E16               	movwf	??_MensajeLCD_Word^0,c
  2264   001490  C016  FFF6         	movff	??_MensajeLCD_Word,tblptrl
  2265   001494                     	if	1	;There is more than 1 active tblptr byte
  2266   001494  0E08               	movlw	high __smallconst
  2267   001496  6EF7               	movwf	tblptrh,c
  2268   001498                     	endif
  2269   001498                     	if	0	;tblptru may be non-zero
  2270   001498                     	endif
  2271   001498                     	if	0	;tblptru may be non-zero
  2272   001498                     	endif
  2273   001498  0008               	tblrd		*
  2274   00149A  50F5               	movf	tablat,w,c
  2275   00149C  0900               	iorlw	0
  2276   00149E  B4D8               	btfsc	status,2,c
  2277   0014A0  0012               	return	
  2278                           
  2279                           ;LibLCDXC8.h: 254: };LibLCDXC8.h: 255: EscribeLCD_c(a[i]);
  2280   0014A2  5015               	movf	MensajeLCD_Word@a^0,w,c
  2281   0014A4  2417               	addwf	MensajeLCD_Word@i^0,w,c
  2282   0014A6  6E16               	movwf	??_MensajeLCD_Word^0,c
  2283   0014A8  C016  FFF6         	movff	??_MensajeLCD_Word,tblptrl
  2284   0014AC                     	if	1	;There is more than 1 active tblptr byte
  2285   0014AC  0E08               	movlw	high __smallconst
  2286   0014AE  6EF7               	movwf	tblptrh,c
  2287   0014B0                     	endif
  2288   0014B0                     	if	0	;tblptru may be non-zero
  2289   0014B0                     	endif
  2290   0014B0                     	if	0	;tblptru may be non-zero
  2291   0014B0                     	endif
  2292   0014B0  0008               	tblrd		*
  2293   0014B2  50F5               	movf	tablat,w,c
  2294   0014B4  ECAB  F00B         	call	_EscribeLCD_c
  2295   0014B8  4A17               	infsnz	MensajeLCD_Word@i^0,f,c
  2296   0014BA  2A18               	incf	(MensajeLCD_Word@i+1)^0,f,c
  2297   0014BC  BE18               	btfsc	(MensajeLCD_Word@i+1)^0,7,c
  2298   0014BE  D7E5               	goto	l2142
  2299   0014C0  5018               	movf	(MensajeLCD_Word@i+1)^0,w,c
  2300   0014C2  E105               	bnz	u1150
  2301   0014C4  0E10               	movlw	16
  2302   0014C6  5C17               	subwf	MensajeLCD_Word@i^0,w,c
  2303   0014C8  B0D8               	btfsc	status,0,c
  2304   0014CA  0012               	return	
  2305   0014CC  D7DE               	goto	l2142
  2306   0014CE                     u1150:
  2307   0014CE  0012               	return		;funcret
  2308   0014D0                     __end_of_MensajeLCD_Word:
  2309                           	callstack 0
  2310                           
  2311 ;; *************** function _Password *****************
  2312 ;; Defined at:
  2313 ;;		line 217 in file "Proyecto.c"
  2314 ;; Parameters:    Size  Location     Type
  2315 ;;  pass            1   20[COMRAM] PTR unsigned char 
  2316 ;;		 -> ing(4), 
  2317 ;; Auto vars:     Size  Location     Type
  2318 ;;  i               2   30[COMRAM] int 
  2319 ;;  secret          4   24[COMRAM] unsigned char [4]
  2320 ;;  access          2   28[COMRAM] unsigned int 
  2321 ;; Return value:  Size  Location     Type
  2322 ;;                  2   20[COMRAM] int 
  2323 ;; Registers used:
  2324 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2325 ;; Tracked objects:
  2326 ;;		On entry : 0/0
  2327 ;;		On exit  : 0/0
  2328 ;;		Unchanged: 0/0
  2329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2330 ;;      Params:         2       0       0       0       0       0       0       0       0
  2331 ;;      Locals:         8       0       0       0       0       0       0       0       0
  2332 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2333 ;;      Totals:        12       0       0       0       0       0       0       0       0
  2334 ;;Total ram usage:       12 bytes
  2335 ;; Hardware stack levels used: 1
  2336 ;; Hardware stack levels required when called: 8
  2337 ;; This function calls:
  2338 ;;		_DireccionaLCD
  2339 ;;		_EscribeLCD_c
  2340 ;; This function is called by:
  2341 ;;		_main
  2342 ;; This function uses a non-reentrant model
  2343 ;;
  2344                           
  2345                           	psect	text10
  2346   00127C                     __ptext10:
  2347                           	callstack 0
  2348   00127C                     _Password:
  2349                           	callstack 22
  2350                           
  2351                           ;Proyecto.c: 218: unsigned char secret[] = {'0','1','2','3'};
  2352                           
  2353                           ;incstack = 0
  2354   00127C  C032  F019         	movff	Password@F3203,Password@secret
  2355   001280  C033  F01A         	movff	Password@F3203+1,Password@secret+1
  2356   001284  C034  F01B         	movff	Password@F3203+2,Password@secret+2
  2357   001288  C035  F01C         	movff	Password@F3203+3,Password@secret+3
  2358                           
  2359                           ;Proyecto.c: 219: unsigned int access = 0;
  2360   00128C  0E00               	movlw	0
  2361   00128E  6E1E               	movwf	(Password@access+1)^0,c
  2362   001290  0E00               	movlw	0
  2363   001292  6E1D               	movwf	Password@access^0,c
  2364                           
  2365                           ;Proyecto.c: 220: DireccionaLCD(0xC1);
  2366   001294  0EC1               	movlw	193
  2367   001296  ECA0  F00B         	call	_DireccionaLCD
  2368                           
  2369                           ;Proyecto.c: 221: for(int i=0; i<4; i++){
  2370   00129A  0E00               	movlw	0
  2371   00129C  6E20               	movwf	(Password@i+1)^0,c
  2372   00129E  0E00               	movlw	0
  2373   0012A0  6E1F               	movwf	Password@i^0,c
  2374   0012A2                     l2390:
  2375                           
  2376                           ;Proyecto.c: 223: EscribeLCD_c('*');
  2377   0012A2  0E2A               	movlw	42
  2378   0012A4  ECAB  F00B         	call	_EscribeLCD_c
  2379                           
  2380                           ;Proyecto.c: 224: if(pass[i] == secret[i]){
  2381   0012A8  501F               	movf	Password@i^0,w,c
  2382   0012AA  0F19               	addlw	low Password@secret
  2383   0012AC  6ED9               	movwf	fsr2l,c
  2384   0012AE  6ADA               	clrf	fsr2h,c
  2385   0012B0  5015               	movf	Password@pass^0,w,c
  2386   0012B2  241F               	addwf	Password@i^0,w,c
  2387   0012B4  6EE1               	movwf	fsr1l,c
  2388   0012B6  6AE2               	clrf	fsr1h,c
  2389   0012B8  50DE               	movf	postinc2,w,c
  2390   0012BA  18E6               	xorwf	postinc1,w,c
  2391   0012BC  A4D8               	btfss	status,2,c
  2392   0012BE  D002               	goto	l281
  2393                           
  2394                           ;Proyecto.c: 225: access++;
  2395   0012C0  4A1D               	infsnz	Password@access^0,f,c
  2396   0012C2  2A1E               	incf	(Password@access+1)^0,f,c
  2397   0012C4                     l281:
  2398   0012C4  4A1F               	infsnz	Password@i^0,f,c
  2399   0012C6  2A20               	incf	(Password@i+1)^0,f,c
  2400   0012C8  BE20               	btfsc	(Password@i+1)^0,7,c
  2401   0012CA  D7EB               	goto	l2390
  2402   0012CC  5020               	movf	(Password@i+1)^0,w,c
  2403   0012CE  E104               	bnz	u1420
  2404   0012D0  0E04               	movlw	4
  2405   0012D2  5C1F               	subwf	Password@i^0,w,c
  2406   0012D4  A0D8               	btfss	status,0,c
  2407   0012D6  D7E5               	goto	l2390
  2408   0012D8                     u1420:
  2409                           
  2410                           ;Proyecto.c: 226: };Proyecto.c: 227: };Proyecto.c: 228: DireccionaLCD(0xC1);
  2411   0012D8  0EC1               	movlw	193
  2412   0012DA  ECA0  F00B         	call	_DireccionaLCD
  2413                           
  2414                           ;Proyecto.c: 229: return (access==4)? 1:0;
  2415   0012DE  0E04               	movlw	4
  2416   0012E0  181D               	xorwf	Password@access^0,w,c
  2417   0012E2  101E               	iorwf	(Password@access+1)^0,w,c
  2418   0012E4  A4D8               	btfss	status,2,c
  2419   0012E6  D002               	goto	u1430
  2420   0012E8  0E01               	movlw	1
  2421   0012EA  D001               	goto	u1440
  2422   0012EC                     u1430:
  2423   0012EC  0E00               	movlw	0
  2424   0012EE                     u1440:
  2425   0012EE  6E15               	movwf	?_Password^0,c
  2426   0012F0  6A16               	clrf	(?_Password+1)^0,c
  2427   0012F2  0012               	return		;funcret
  2428   0012F4                     __end_of_Password:
  2429                           	callstack 0
  2430                           
  2431 ;; *************** function _DireccionaLCD *****************
  2432 ;; Defined at:
  2433 ;;		line 259 in file "LibLCDXC8.h"
  2434 ;; Parameters:    Size  Location     Type
  2435 ;;  a               1    wreg     unsigned char 
  2436 ;; Auto vars:     Size  Location     Type
  2437 ;;  a               1   19[COMRAM] unsigned char 
  2438 ;; Return value:  Size  Location     Type
  2439 ;;                  1    wreg      void 
  2440 ;; Registers used:
  2441 ;;		wreg, status,2, status,0, cstack
  2442 ;; Tracked objects:
  2443 ;;		On entry : 0/0
  2444 ;;		On exit  : 0/0
  2445 ;;		Unchanged: 0/0
  2446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2447 ;;      Params:         0       0       0       0       0       0       0       0       0
  2448 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2449 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2450 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2451 ;;Total ram usage:        1 bytes
  2452 ;; Hardware stack levels used: 1
  2453 ;; Hardware stack levels required when called: 7
  2454 ;; This function calls:
  2455 ;;		_EnviaDato
  2456 ;;		_HabilitaLCD
  2457 ;;		_RetardoLCD
  2458 ;; This function is called by:
  2459 ;;		_main
  2460 ;;		_Password
  2461 ;;		_TransmitirDatos
  2462 ;; This function uses a non-reentrant model
  2463 ;;
  2464                           
  2465                           	psect	text11
  2466   001740                     __ptext11:
  2467                           	callstack 0
  2468   001740                     _DireccionaLCD:
  2469                           	callstack 22
  2470                           
  2471                           ;incstack = 0
  2472                           ;DireccionaLCD@a stored from wreg
  2473   001740  6E14               	movwf	DireccionaLCD@a^0,c
  2474                           
  2475                           ;LibLCDXC8.h: 262: LATE1=0;
  2476   001742  928D               	bcf	3981,1,c	;volatile
  2477                           
  2478                           ;LibLCDXC8.h: 263: EnviaDato(a);
  2479   001744  5014               	movf	DireccionaLCD@a^0,w,c
  2480   001746  EC8F  F00A         	call	_EnviaDato
  2481                           
  2482                           ;LibLCDXC8.h: 264: HabilitaLCD();
  2483   00174A  ECE7  F00B         	call	_HabilitaLCD	;wreg free
  2484                           
  2485                           ;LibLCDXC8.h: 265: RetardoLCD(4);
  2486   00174E  0E04               	movlw	4
  2487   001750  ECB2  F009         	call	_RetardoLCD
  2488   001754  0012               	return		;funcret
  2489   001756                     __end_of_DireccionaLCD:
  2490                           	callstack 0
  2491                           
  2492 ;; *************** function _NuevoCaracter *****************
  2493 ;; Defined at:
  2494 ;;		line 140 in file "LibLCDXC8.h"
  2495 ;; Parameters:    Size  Location     Type
  2496 ;;  addr            1    wreg     unsigned char 
  2497 ;;  c               1   20[COMRAM] PTR unsigned char 
  2498 ;;		 -> cara(8), 
  2499 ;; Auto vars:     Size  Location     Type
  2500 ;;  addr            1   21[COMRAM] unsigned char 
  2501 ;;  i               2   22[COMRAM] int 
  2502 ;; Return value:  Size  Location     Type
  2503 ;;                  1    wreg      void 
  2504 ;; Registers used:
  2505 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2506 ;; Tracked objects:
  2507 ;;		On entry : 0/0
  2508 ;;		On exit  : 0/0
  2509 ;;		Unchanged: 0/0
  2510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2511 ;;      Params:         1       0       0       0       0       0       0       0       0
  2512 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2513 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2514 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2515 ;;Total ram usage:        4 bytes
  2516 ;; Hardware stack levels used: 1
  2517 ;; Hardware stack levels required when called: 8
  2518 ;; This function calls:
  2519 ;;		_ComandoLCD
  2520 ;;		_EscribeLCD_c
  2521 ;; This function is called by:
  2522 ;;		_main
  2523 ;; This function uses a non-reentrant model
  2524 ;;
  2525                           
  2526                           	psect	text12
  2527   0015EC                     __ptext12:
  2528                           	callstack 0
  2529   0015EC                     _NuevoCaracter:
  2530                           	callstack 22
  2531                           
  2532                           ;incstack = 0
  2533                           ;NuevoCaracter@addr stored from wreg
  2534   0015EC  6E16               	movwf	NuevoCaracter@addr^0,c
  2535                           
  2536                           ;LibLCDXC8.h: 141: int i;;LibLCDXC8.h: 142: ComandoLCD(0x40 + (addr * 8));
  2537   0015EE  5016               	movf	NuevoCaracter@addr^0,w,c
  2538   0015F0  0D08               	mullw	8
  2539   0015F2  50F3               	movf	243,w,c
  2540   0015F4  0F40               	addlw	64
  2541   0015F6  EC65  F00B         	call	_ComandoLCD
  2542                           
  2543                           ;LibLCDXC8.h: 143: for (i = 0; i < 8; i++) {
  2544   0015FA  0E00               	movlw	0
  2545   0015FC  6E18               	movwf	(NuevoCaracter@i+1)^0,c
  2546   0015FE  0E00               	movlw	0
  2547   001600  6E17               	movwf	NuevoCaracter@i^0,c
  2548   001602                     l2850:
  2549                           
  2550                           ;LibLCDXC8.h: 144: EscribeLCD_c(c[i]);
  2551   001602  5015               	movf	NuevoCaracter@c^0,w,c
  2552   001604  2417               	addwf	NuevoCaracter@i^0,w,c
  2553   001606  6ED9               	movwf	fsr2l,c
  2554   001608  6ADA               	clrf	fsr2h,c
  2555   00160A  50DF               	movf	indf2,w,c
  2556   00160C  ECAB  F00B         	call	_EscribeLCD_c
  2557   001610  4A17               	infsnz	NuevoCaracter@i^0,f,c
  2558   001612  2A18               	incf	(NuevoCaracter@i+1)^0,f,c
  2559   001614  BE18               	btfsc	(NuevoCaracter@i+1)^0,7,c
  2560   001616  D7F5               	goto	l2850
  2561   001618  5018               	movf	(NuevoCaracter@i+1)^0,w,c
  2562   00161A  E105               	bnz	u2110
  2563   00161C  0E08               	movlw	8
  2564   00161E  5C17               	subwf	NuevoCaracter@i^0,w,c
  2565   001620  B0D8               	btfsc	status,0,c
  2566   001622  0012               	return	
  2567   001624  D7EE               	goto	l2850
  2568   001626                     u2110:
  2569   001626  0012               	return		;funcret
  2570   001628                     __end_of_NuevoCaracter:
  2571                           	callstack 0
  2572                           
  2573 ;; *************** function _EscribeLCD_c *****************
  2574 ;; Defined at:
  2575 ;;		line 148 in file "LibLCDXC8.h"
  2576 ;; Parameters:    Size  Location     Type
  2577 ;;  a               1    wreg     unsigned char 
  2578 ;; Auto vars:     Size  Location     Type
  2579 ;;  a               1   19[COMRAM] unsigned char 
  2580 ;; Return value:  Size  Location     Type
  2581 ;;                  1    wreg      void 
  2582 ;; Registers used:
  2583 ;;		wreg, status,2, status,0, cstack
  2584 ;; Tracked objects:
  2585 ;;		On entry : 0/0
  2586 ;;		On exit  : 0/0
  2587 ;;		Unchanged: 0/0
  2588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2589 ;;      Params:         0       0       0       0       0       0       0       0       0
  2590 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2591 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2592 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2593 ;;Total ram usage:        1 bytes
  2594 ;; Hardware stack levels used: 1
  2595 ;; Hardware stack levels required when called: 7
  2596 ;; This function calls:
  2597 ;;		_EnviaDato
  2598 ;;		_HabilitaLCD
  2599 ;;		_RetardoLCD
  2600 ;; This function is called by:
  2601 ;;		_NuevoCaracter
  2602 ;;		_MensajeLCD_Word
  2603 ;;		_main
  2604 ;;		_Password
  2605 ;;		_TransmitirDatos
  2606 ;; This function uses a non-reentrant model
  2607 ;;
  2608                           
  2609                           	psect	text13
  2610   001756                     __ptext13:
  2611                           	callstack 0
  2612   001756                     _EscribeLCD_c:
  2613                           	callstack 21
  2614                           
  2615                           ;incstack = 0
  2616                           ;EscribeLCD_c@a stored from wreg
  2617   001756  6E14               	movwf	EscribeLCD_c@a^0,c
  2618                           
  2619                           ;LibLCDXC8.h: 152: LATE1=1;
  2620   001758  828D               	bsf	3981,1,c	;volatile
  2621                           
  2622                           ;LibLCDXC8.h: 153: EnviaDato(a);
  2623   00175A  5014               	movf	EscribeLCD_c@a^0,w,c
  2624   00175C  EC8F  F00A         	call	_EnviaDato
  2625                           
  2626                           ;LibLCDXC8.h: 154: HabilitaLCD();
  2627   001760  ECE7  F00B         	call	_HabilitaLCD	;wreg free
  2628                           
  2629                           ;LibLCDXC8.h: 155: RetardoLCD(4);
  2630   001764  0E04               	movlw	4
  2631   001766  ECB2  F009         	call	_RetardoLCD
  2632   00176A  0012               	return		;funcret
  2633   00176C                     __end_of_EscribeLCD_c:
  2634                           	callstack 0
  2635                           
  2636 ;; *************** function _ComandoLCD *****************
  2637 ;; Defined at:
  2638 ;;		line 129 in file "LibLCDXC8.h"
  2639 ;; Parameters:    Size  Location     Type
  2640 ;;  data            1    wreg     unsigned char 
  2641 ;; Auto vars:     Size  Location     Type
  2642 ;;  data            1   16[COMRAM] unsigned char 
  2643 ;; Return value:  Size  Location     Type
  2644 ;;                  1    wreg      void 
  2645 ;; Registers used:
  2646 ;;		wreg, status,2, cstack
  2647 ;; Tracked objects:
  2648 ;;		On entry : 0/0
  2649 ;;		On exit  : 0/0
  2650 ;;		Unchanged: 0/0
  2651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2652 ;;      Params:         0       0       0       0       0       0       0       0       0
  2653 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2654 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2655 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2656 ;;Total ram usage:        2 bytes
  2657 ;; Hardware stack levels used: 1
  2658 ;; Hardware stack levels required when called: 5
  2659 ;; This function calls:
  2660 ;;		Nothing
  2661 ;; This function is called by:
  2662 ;;		_NuevoCaracter
  2663 ;; This function uses a non-reentrant model
  2664 ;;
  2665                           
  2666                           	psect	text14
  2667   0016CA                     __ptext14:
  2668                           	callstack 0
  2669   0016CA                     _ComandoLCD:
  2670                           	callstack 24
  2671                           
  2672                           ;incstack = 0
  2673                           ;ComandoLCD@data stored from wreg
  2674   0016CA  6E11               	movwf	ComandoLCD@data^0,c
  2675                           
  2676                           ;LibLCDXC8.h: 131: LATE1 = 0;
  2677   0016CC  928D               	bcf	3981,1,c	;volatile
  2678                           
  2679                           ;LibLCDXC8.h: 132: LATD = data;
  2680   0016CE  C011  FF8C         	movff	ComandoLCD@data,3980	;volatile
  2681                           
  2682                           ;LibLCDXC8.h: 133: LATE2 = 1;
  2683   0016D2  848D               	bsf	3981,2,c	;volatile
  2684                           
  2685                           ;LibLCDXC8.h: 134: _delay((unsigned long)((5)*(8000000/4000000.0)));
  2686   0016D4  0E03               	movlw	3
  2687   0016D6                     u2227:
  2688   0016D6  2EE8               	decfsz	wreg,f,c
  2689   0016D8  D7FE               	bra	u2227
  2690   0016DA  F000               	nop	
  2691                           
  2692                           ;LibLCDXC8.h: 135: LATE2 = 0;
  2693   0016DC  948D               	bcf	3981,2,c	;volatile
  2694                           
  2695                           ;LibLCDXC8.h: 136: _delay((unsigned long)((5)*(8000000/4000000.0)));
  2696   0016DE  0E03               	movlw	3
  2697   0016E0                     u2237:
  2698   0016E0  2EE8               	decfsz	wreg,f,c
  2699   0016E2  D7FE               	bra	u2237
  2700   0016E4  F000               	nop	
  2701                           
  2702                           ;LibLCDXC8.h: 137: _delay((unsigned long)((2)*(8000000/4000.0)));
  2703   0016E6  0E06               	movlw	6
  2704   0016E8  6E10               	movwf	??_ComandoLCD^0,c
  2705   0016EA  0E30               	movlw	48
  2706   0016EC                     u2247:
  2707   0016EC  2EE8               	decfsz	wreg,f,c
  2708   0016EE  D7FE               	bra	u2247
  2709   0016F0  2E10               	decfsz	??_ComandoLCD^0,f,c
  2710   0016F2  D7FC               	bra	u2247
  2711   0016F4  D000               	nop2	
  2712   0016F6  0012               	return		;funcret
  2713   0016F8                     __end_of_ComandoLCD:
  2714                           	callstack 0
  2715                           
  2716 ;; *************** function _Movimiento *****************
  2717 ;; Defined at:
  2718 ;;		line 177 in file "Proyecto.c"
  2719 ;; Parameters:    Size  Location     Type
  2720 ;;		None
  2721 ;; Auto vars:     Size  Location     Type
  2722 ;;		None
  2723 ;; Return value:  Size  Location     Type
  2724 ;;                  1    wreg      void 
  2725 ;; Registers used:
  2726 ;;		wreg, status,2, status,0
  2727 ;; Tracked objects:
  2728 ;;		On entry : 0/0
  2729 ;;		On exit  : 0/0
  2730 ;;		Unchanged: 0/0
  2731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2732 ;;      Params:         0       0       0       0       0       0       0       0       0
  2733 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2734 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2735 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2736 ;;Total ram usage:        1 bytes
  2737 ;; Hardware stack levels used: 1
  2738 ;; Hardware stack levels required when called: 5
  2739 ;; This function calls:
  2740 ;;		Nothing
  2741 ;; This function is called by:
  2742 ;;		_main
  2743 ;; This function uses a non-reentrant model
  2744 ;;
  2745                           
  2746                           	psect	text15
  2747   000FBC                     __ptext15:
  2748                           	callstack 0
  2749   000FBC                     _Movimiento:
  2750                           	callstack 25
  2751                           
  2752                           ;Proyecto.c: 178: if(ADRES>0 & ADRES<=255){
  2753                           
  2754                           ;incstack = 0
  2755   000FBC  0E00               	movlw	0
  2756   000FBE  5CC3               	subwf	195,w,c	;volatile
  2757   000FC0  0E01               	movlw	1
  2758   000FC2  58C4               	subwfb	196,w,c	;volatile
  2759   000FC4  B0D8               	btfsc	status,0,c
  2760   000FC6  D002               	goto	u1710
  2761   000FC8  0E01               	movlw	1
  2762   000FCA  D001               	goto	u1712
  2763   000FCC                     u1710:
  2764   000FCC  0E00               	movlw	0
  2765   000FCE                     u1712:
  2766   000FCE  6E10               	movwf	??_Movimiento^0,c
  2767   000FD0  50C3               	movf	195,w,c	;volatile
  2768   000FD2  10C4               	iorwf	196,w,c	;volatile
  2769   000FD4  B4D8               	btfsc	status,2,c
  2770   000FD6  D002               	goto	u1720
  2771   000FD8  0E01               	movlw	1
  2772   000FDA  D001               	goto	u1722
  2773   000FDC                     u1720:
  2774   000FDC  0E00               	movlw	0
  2775   000FDE                     u1722:
  2776   000FDE  1410               	andwf	??_Movimiento^0,w,c
  2777   000FE0  A0E8               	btfss	wreg,0,c
  2778   000FE2  D005               	goto	l2588
  2779                           
  2780                           ;Proyecto.c: 179: a = 125;
  2781   000FE4  0E00               	movlw	0
  2782   000FE6  6E37               	movwf	(_a+1)^0,c
  2783   000FE8  0E7D               	movlw	125
  2784   000FEA  6E36               	movwf	_a^0,c
  2785                           
  2786                           ;Proyecto.c: 180: }else if(ADRES>255 & ADRES<=511){
  2787   000FEC  0012               	return	
  2788   000FEE                     l2588:
  2789   000FEE  0E00               	movlw	0
  2790   000FF0  5CC3               	subwf	195,w,c	;volatile
  2791   000FF2  0E02               	movlw	2
  2792   000FF4  58C4               	subwfb	196,w,c	;volatile
  2793   000FF6  B0D8               	btfsc	status,0,c
  2794   000FF8  D002               	goto	u1740
  2795   000FFA  0E01               	movlw	1
  2796   000FFC  D001               	goto	u1742
  2797   000FFE                     u1740:
  2798   000FFE  0E00               	movlw	0
  2799   001000                     u1742:
  2800   001000  6E10               	movwf	??_Movimiento^0,c
  2801   001002  0E00               	movlw	0
  2802   001004  5CC3               	subwf	195,w,c	;volatile
  2803   001006  0E01               	movlw	1
  2804   001008  58C4               	subwfb	196,w,c	;volatile
  2805   00100A  A0D8               	btfss	status,0,c
  2806   00100C  D002               	goto	u1750
  2807   00100E  0E01               	movlw	1
  2808   001010  D001               	goto	u1752
  2809   001012                     u1750:
  2810   001012  0E00               	movlw	0
  2811   001014                     u1752:
  2812   001014  1410               	andwf	??_Movimiento^0,w,c
  2813   001016  A0E8               	btfss	wreg,0,c
  2814   001018  D005               	goto	l2592
  2815                           
  2816                           ;Proyecto.c: 181: a = 292;
  2817   00101A  0E01               	movlw	1
  2818   00101C  6E37               	movwf	(_a+1)^0,c
  2819   00101E  0E24               	movlw	36
  2820   001020  6E36               	movwf	_a^0,c
  2821                           
  2822                           ;Proyecto.c: 182: }else if(ADRES>511 & ADRES<=767){
  2823   001022  0012               	return	
  2824   001024                     l2592:
  2825   001024  0E00               	movlw	0
  2826   001026  5CC3               	subwf	195,w,c	;volatile
  2827   001028  0E03               	movlw	3
  2828   00102A  58C4               	subwfb	196,w,c	;volatile
  2829   00102C  B0D8               	btfsc	status,0,c
  2830   00102E  D002               	goto	u1770
  2831   001030  0E01               	movlw	1
  2832   001032  D001               	goto	u1772
  2833   001034                     u1770:
  2834   001034  0E00               	movlw	0
  2835   001036                     u1772:
  2836   001036  6E10               	movwf	??_Movimiento^0,c
  2837   001038  0E00               	movlw	0
  2838   00103A  5CC3               	subwf	195,w,c	;volatile
  2839   00103C  0E02               	movlw	2
  2840   00103E  58C4               	subwfb	196,w,c	;volatile
  2841   001040  A0D8               	btfss	status,0,c
  2842   001042  D002               	goto	u1780
  2843   001044  0E01               	movlw	1
  2844   001046  D001               	goto	u1782
  2845   001048                     u1780:
  2846   001048  0E00               	movlw	0
  2847   00104A                     u1782:
  2848   00104A  1410               	andwf	??_Movimiento^0,w,c
  2849   00104C  A0E8               	btfss	wreg,0,c
  2850   00104E  D005               	goto	l2596
  2851                           
  2852                           ;Proyecto.c: 183: a = 458;
  2853   001050  0E01               	movlw	1
  2854   001052  6E37               	movwf	(_a+1)^0,c
  2855   001054  0ECA               	movlw	202
  2856   001056  6E36               	movwf	_a^0,c
  2857                           
  2858                           ;Proyecto.c: 184: }else if(ADRES>767 & ADRES<=1024){
  2859   001058  0012               	return	
  2860   00105A                     l2596:
  2861   00105A  04C3               	decf	195,w,c	;volatile
  2862   00105C  0E04               	movlw	4
  2863   00105E  58C4               	subwfb	196,w,c	;volatile
  2864   001060  B0D8               	btfsc	status,0,c
  2865   001062  D002               	goto	u1800
  2866   001064  0E01               	movlw	1
  2867   001066  D001               	goto	u1802
  2868   001068                     u1800:
  2869   001068  0E00               	movlw	0
  2870   00106A                     u1802:
  2871   00106A  6E10               	movwf	??_Movimiento^0,c
  2872   00106C  0E00               	movlw	0
  2873   00106E  5CC3               	subwf	195,w,c	;volatile
  2874   001070  0E03               	movlw	3
  2875   001072  58C4               	subwfb	196,w,c	;volatile
  2876   001074  A0D8               	btfss	status,0,c
  2877   001076  D002               	goto	u1810
  2878   001078  0E01               	movlw	1
  2879   00107A  D001               	goto	u1812
  2880   00107C                     u1810:
  2881   00107C  0E00               	movlw	0
  2882   00107E                     u1812:
  2883   00107E  1410               	andwf	??_Movimiento^0,w,c
  2884   001080  A0E8               	btfss	wreg,0,c
  2885   001082  0012               	return	
  2886                           
  2887                           ;Proyecto.c: 185: a = 625;
  2888   001084  0E02               	movlw	2
  2889   001086  6E37               	movwf	(_a+1)^0,c
  2890   001088  0E71               	movlw	113
  2891   00108A  6E36               	movwf	_a^0,c
  2892   00108C  0012               	return	
  2893   00108E                     __end_of_Movimiento:
  2894                           	callstack 0
  2895                           
  2896 ;; *************** function _LeerHT11 *****************
  2897 ;; Defined at:
  2898 ;;		line 233 in file "Proyecto.c"
  2899 ;; Parameters:    Size  Location     Type
  2900 ;;		None
  2901 ;; Auto vars:     Size  Location     Type
  2902 ;;		None
  2903 ;; Return value:  Size  Location     Type
  2904 ;;                  1    wreg      void 
  2905 ;; Registers used:
  2906 ;;		wreg, status,2, status,0, cstack
  2907 ;; Tracked objects:
  2908 ;;		On entry : 0/0
  2909 ;;		On exit  : 0/0
  2910 ;;		Unchanged: 0/0
  2911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2912 ;;      Params:         0       0       0       0       0       0       0       0       0
  2913 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2914 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2915 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2916 ;;Total ram usage:        1 bytes
  2917 ;; Hardware stack levels used: 1
  2918 ;; Hardware stack levels required when called: 7
  2919 ;; This function calls:
  2920 ;;		_LeerByte
  2921 ;; This function is called by:
  2922 ;;		_main
  2923 ;; This function uses a non-reentrant model
  2924 ;;
  2925                           
  2926                           	psect	text16
  2927   001662                     __ptext16:
  2928                           	callstack 0
  2929   001662                     _LeerHT11:
  2930                           	callstack 23
  2931                           
  2932                           ;Proyecto.c: 235: TRISA5 = 0;
  2933                           
  2934                           ;incstack = 0
  2935   001662  9A92               	bcf	3986,5,c	;volatile
  2936                           
  2937                           ;Proyecto.c: 236: _delay((unsigned long)((18)*(8000000/4000.0)));
  2938   001664  0E2F               	movlw	47
  2939   001666  6E14               	movwf	??_LeerHT11^0,c
  2940   001668  0EC0               	movlw	192
  2941   00166A                     u2257:
  2942   00166A  2EE8               	decfsz	wreg,f,c
  2943   00166C  D7FE               	bra	u2257
  2944   00166E  2E14               	decfsz	??_LeerHT11^0,f,c
  2945   001670  D7FC               	bra	u2257
  2946                           
  2947                           ;Proyecto.c: 237: TRISA5 = 1;
  2948   001672  8A92               	bsf	3986,5,c	;volatile
  2949   001674                     l285:
  2950   001674  BA80               	btfsc	3968,5,c	;volatile
  2951   001676  D7FE               	goto	l285
  2952                           
  2953                           ;Proyecto.c: 240: _delay((unsigned long)((120)*(8000000/4000000.0)));
  2954   001678  0E50               	movlw	80
  2955   00167A                     u2267:
  2956   00167A  2EE8               	decfsz	wreg,f,c
  2957   00167C  D7FE               	bra	u2267
  2958   00167E                     l288:
  2959   00167E  BA80               	btfsc	3968,5,c	;volatile
  2960   001680  D7FE               	goto	l288
  2961                           
  2962                           ;Proyecto.c: 243: LeerByte();
  2963   001682  EC8F  F00B         	call	_LeerByte	;wreg free
  2964                           
  2965                           ;Proyecto.c: 244: LeerByte();
  2966   001686  EC8F  F00B         	call	_LeerByte	;wreg free
  2967                           
  2968                           ;Proyecto.c: 245: Temp = LeerByte();
  2969   00168A  EC8F  F00B         	call	_LeerByte	;wreg free
  2970   00168E  6E49               	movwf	_Temp^0,c
  2971                           
  2972                           ;Proyecto.c: 246: LeerByte();
  2973   001690  EC8F  F00B         	call	_LeerByte	;wreg free
  2974                           
  2975                           ;Proyecto.c: 247: LeerByte();
  2976   001694  EC8F  F00B         	call	_LeerByte	;wreg free
  2977   001698  0012               	return		;funcret
  2978   00169A                     __end_of_LeerHT11:
  2979                           	callstack 0
  2980                           
  2981 ;; *************** function _LeerByte *****************
  2982 ;; Defined at:
  2983 ;;		line 250 in file "Proyecto.c"
  2984 ;; Parameters:    Size  Location     Type
  2985 ;;		None
  2986 ;; Auto vars:     Size  Location     Type
  2987 ;;  i               1   18[COMRAM] unsigned char 
  2988 ;;  res             1   17[COMRAM] unsigned char 
  2989 ;; Return value:  Size  Location     Type
  2990 ;;                  1    wreg      unsigned char 
  2991 ;; Registers used:
  2992 ;;		wreg, status,2, status,0, cstack
  2993 ;; Tracked objects:
  2994 ;;		On entry : 0/0
  2995 ;;		On exit  : 0/0
  2996 ;;		Unchanged: 0/0
  2997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2998 ;;      Params:         0       0       0       0       0       0       0       0       0
  2999 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3000 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3001 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3002 ;;Total ram usage:        3 bytes
  3003 ;; Hardware stack levels used: 1
  3004 ;; Hardware stack levels required when called: 6
  3005 ;; This function calls:
  3006 ;;		_LeerBit
  3007 ;; This function is called by:
  3008 ;;		_LeerHT11
  3009 ;; This function uses a non-reentrant model
  3010 ;;
  3011                           
  3012                           	psect	text17
  3013   00171E                     __ptext17:
  3014                           	callstack 0
  3015   00171E                     _LeerByte:
  3016                           	callstack 23
  3017                           
  3018                           ;Proyecto.c: 251: unsigned char res = 0, i;
  3019                           
  3020                           ;incstack = 0
  3021   00171E  0E00               	movlw	0
  3022   001720  6E12               	movwf	LeerByte@res^0,c
  3023                           
  3024                           ;Proyecto.c: 252: for (i = 8; i > 0; i--) {
  3025   001722  0E08               	movlw	8
  3026   001724  6E13               	movwf	LeerByte@i^0,c
  3027   001726                     l2164:
  3028                           
  3029                           ;Proyecto.c: 253: res = (res << 1) | LeerBit();
  3030   001726  EC4D  F00B         	call	_LeerBit	;wreg free
  3031   00172A  6E11               	movwf	??_LeerByte^0,c
  3032   00172C  5012               	movf	LeerByte@res^0,w,c
  3033   00172E  2412               	addwf	LeerByte@res^0,w,c
  3034   001730  1011               	iorwf	??_LeerByte^0,w,c
  3035   001732  6E12               	movwf	LeerByte@res^0,c
  3036   001734  0613               	decf	LeerByte@i^0,f,c
  3037   001736  5013               	movf	LeerByte@i^0,w,c
  3038   001738  A4D8               	btfss	status,2,c
  3039   00173A  D7F5               	goto	l2164
  3040                           
  3041                           ;Proyecto.c: 254: };Proyecto.c: 255: return res;
  3042   00173C  5012               	movf	LeerByte@res^0,w,c
  3043   00173E  0012               	return		;funcret
  3044   001740                     __end_of_LeerByte:
  3045                           	callstack 0
  3046                           
  3047 ;; *************** function _LeerBit *****************
  3048 ;; Defined at:
  3049 ;;		line 258 in file "Proyecto.c"
  3050 ;; Parameters:    Size  Location     Type
  3051 ;;		None
  3052 ;; Auto vars:     Size  Location     Type
  3053 ;;  res             1   15[COMRAM] unsigned char 
  3054 ;; Return value:  Size  Location     Type
  3055 ;;                  1    wreg      unsigned char 
  3056 ;; Registers used:
  3057 ;;		wreg, status,2
  3058 ;; Tracked objects:
  3059 ;;		On entry : 0/0
  3060 ;;		On exit  : 0/0
  3061 ;;		Unchanged: 0/0
  3062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3063 ;;      Params:         0       0       0       0       0       0       0       0       0
  3064 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3065 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3066 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3067 ;;Total ram usage:        1 bytes
  3068 ;; Hardware stack levels used: 1
  3069 ;; Hardware stack levels required when called: 5
  3070 ;; This function calls:
  3071 ;;		Nothing
  3072 ;; This function is called by:
  3073 ;;		_LeerByte
  3074 ;; This function uses a non-reentrant model
  3075 ;;
  3076                           
  3077                           	psect	text18
  3078   00169A                     __ptext18:
  3079                           	callstack 0
  3080   00169A                     _LeerBit:
  3081                           	callstack 23
  3082                           
  3083                           ;Proyecto.c: 259: unsigned char res = 0;
  3084                           
  3085                           ;incstack = 0
  3086   00169A  0E00               	movlw	0
  3087   00169C  6E10               	movwf	LeerBit@res^0,c
  3088   00169E                     l299:
  3089   00169E  AA80               	btfss	3968,5,c	;volatile
  3090   0016A0  D7FE               	goto	l299
  3091                           
  3092                           ;Proyecto.c: 261: _delay((unsigned long)((13)*(8000000/4000000.0)));
  3093   0016A2  0E08               	movlw	8
  3094   0016A4                     u2277:
  3095   0016A4  2EE8               	decfsz	wreg,f,c
  3096   0016A6  D7FE               	bra	u2277
  3097   0016A8  D000               	nop2	
  3098                           
  3099                           ;Proyecto.c: 262: if (RA5 == 1) res = 0;
  3100   0016AA  AA80               	btfss	3968,5,c	;volatile
  3101   0016AC  D002               	goto	l2090
  3102   0016AE  0E00               	movlw	0
  3103   0016B0  6E10               	movwf	LeerBit@res^0,c
  3104   0016B2                     l2090:
  3105                           
  3106                           ;Proyecto.c: 263: _delay((unsigned long)((22)*(8000000/4000000.0)));
  3107   0016B2  0E0E               	movlw	14
  3108   0016B4                     u2287:
  3109   0016B4  2EE8               	decfsz	wreg,f,c
  3110   0016B6  D7FE               	bra	u2287
  3111   0016B8  D000               	nop2	
  3112                           
  3113                           ;Proyecto.c: 264: if (RA5 == 1) {
  3114   0016BA  AA80               	btfss	3968,5,c	;volatile
  3115   0016BC  D004               	goto	u1110
  3116                           
  3117                           ;Proyecto.c: 265: res = 1;
  3118   0016BE  0E01               	movlw	1
  3119   0016C0  6E10               	movwf	LeerBit@res^0,c
  3120   0016C2                     l304:
  3121   0016C2  BA80               	btfsc	3968,5,c	;volatile
  3122   0016C4  D7FE               	goto	l304
  3123   0016C6                     u1110:
  3124                           
  3125                           ;Proyecto.c: 267: };Proyecto.c: 268: return res;
  3126   0016C6  5010               	movf	LeerBit@res^0,w,c
  3127   0016C8  0012               	return		;funcret
  3128   0016CA                     __end_of_LeerBit:
  3129                           	callstack 0
  3130                           
  3131 ;; *************** function _InicializaLCD *****************
  3132 ;; Defined at:
  3133 ;;		line 74 in file "LibLCDXC8.h"
  3134 ;; Parameters:    Size  Location     Type
  3135 ;;		None
  3136 ;; Auto vars:     Size  Location     Type
  3137 ;;		None
  3138 ;; Return value:  Size  Location     Type
  3139 ;;                  1    wreg      void 
  3140 ;; Registers used:
  3141 ;;		wreg, status,2, status,0, cstack
  3142 ;; Tracked objects:
  3143 ;;		On entry : 0/0
  3144 ;;		On exit  : 0/0
  3145 ;;		Unchanged: 0/0
  3146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3147 ;;      Params:         0       0       0       0       0       0       0       0       0
  3148 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3149 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3150 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3151 ;;Total ram usage:        0 bytes
  3152 ;; Hardware stack levels used: 1
  3153 ;; Hardware stack levels required when called: 8
  3154 ;; This function calls:
  3155 ;;		_BorraLCD
  3156 ;;		_EnviaDato
  3157 ;;		_HabilitaLCD
  3158 ;;		_RetardoLCD
  3159 ;; This function is called by:
  3160 ;;		_main
  3161 ;; This function uses a non-reentrant model
  3162 ;;
  3163                           
  3164                           	psect	text19
  3165   00115C                     __ptext19:
  3166                           	callstack 0
  3167   00115C                     _InicializaLCD:
  3168                           	callstack 22
  3169                           
  3170                           ;LibLCDXC8.h: 76: LATE1=0;
  3171                           
  3172                           ;incstack = 0
  3173   00115C  928D               	bcf	3981,1,c	;volatile
  3174                           
  3175                           ;LibLCDXC8.h: 77: if(interfaz==4)
  3176   00115E  0E04               	movlw	4
  3177   001160  1839               	xorwf	_interfaz^0,w,c
  3178   001162  A4D8               	btfss	status,2,c
  3179   001164  D004               	goto	l2316
  3180                           
  3181                           ;LibLCDXC8.h: 78: LATD=(LATD & 0b00001111) | 0x30;
  3182   001166  508C               	movf	140,w,c	;volatile
  3183   001168  0B0F               	andlw	15
  3184   00116A  0930               	iorlw	48
  3185   00116C  D001               	goto	L1
  3186   00116E                     l2316:
  3187                           
  3188                           ;LibLCDXC8.h: 79: else;LibLCDXC8.h: 80: LATD=0x3F;
  3189   00116E  0E3F               	movlw	63
  3190   001170                     L1:
  3191   001170  6E8C               	movwf	140,c	;volatile
  3192                           
  3193                           ;LibLCDXC8.h: 81: HabilitaLCD();
  3194   001172  ECE7  F00B         	call	_HabilitaLCD	;wreg free
  3195                           
  3196                           ;LibLCDXC8.h: 82: RetardoLCD(1);
  3197   001176  0E01               	movlw	1
  3198   001178  ECB2  F009         	call	_RetardoLCD
  3199                           
  3200                           ;LibLCDXC8.h: 83: if(interfaz==4)
  3201   00117C  0E04               	movlw	4
  3202   00117E  1839               	xorwf	_interfaz^0,w,c
  3203   001180  A4D8               	btfss	status,2,c
  3204   001182  D004               	goto	l2326
  3205                           
  3206                           ;LibLCDXC8.h: 84: LATD=(LATD & 0b00001111) | 0x30;
  3207   001184  508C               	movf	140,w,c	;volatile
  3208   001186  0B0F               	andlw	15
  3209   001188  0930               	iorlw	48
  3210   00118A  D001               	goto	L2
  3211   00118C                     l2326:
  3212                           
  3213                           ;LibLCDXC8.h: 85: else;LibLCDXC8.h: 86: LATD=0x3F;
  3214   00118C  0E3F               	movlw	63
  3215   00118E                     L2:
  3216   00118E  6E8C               	movwf	140,c	;volatile
  3217                           
  3218                           ;LibLCDXC8.h: 87: HabilitaLCD();
  3219   001190  ECE7  F00B         	call	_HabilitaLCD	;wreg free
  3220                           
  3221                           ;LibLCDXC8.h: 88: RetardoLCD(3);
  3222   001194  0E03               	movlw	3
  3223   001196  ECB2  F009         	call	_RetardoLCD
  3224                           
  3225                           ;LibLCDXC8.h: 89: if(interfaz==4)
  3226   00119A  0E04               	movlw	4
  3227   00119C  1839               	xorwf	_interfaz^0,w,c
  3228   00119E  A4D8               	btfss	status,2,c
  3229   0011A0  D004               	goto	l2336
  3230                           
  3231                           ;LibLCDXC8.h: 90: LATD=(LATD & 0b00001111) | 0x30;
  3232   0011A2  508C               	movf	140,w,c	;volatile
  3233   0011A4  0B0F               	andlw	15
  3234   0011A6  0930               	iorlw	48
  3235   0011A8  D001               	goto	L3
  3236   0011AA                     l2336:
  3237                           
  3238                           ;LibLCDXC8.h: 91: else;LibLCDXC8.h: 92: LATD=0x3F;
  3239   0011AA  0E3F               	movlw	63
  3240   0011AC                     L3:
  3241   0011AC  6E8C               	movwf	140,c	;volatile
  3242                           
  3243                           ;LibLCDXC8.h: 93: HabilitaLCD();
  3244   0011AE  ECE7  F00B         	call	_HabilitaLCD	;wreg free
  3245                           
  3246                           ;LibLCDXC8.h: 94: RetardoLCD(4);
  3247   0011B2  0E04               	movlw	4
  3248   0011B4  ECB2  F009         	call	_RetardoLCD
  3249                           
  3250                           ;LibLCDXC8.h: 95: if(interfaz==4){
  3251   0011B8  0E04               	movlw	4
  3252   0011BA  1839               	xorwf	_interfaz^0,w,c
  3253   0011BC  A4D8               	btfss	status,2,c
  3254   0011BE  D011               	goto	l2356
  3255                           
  3256                           ;LibLCDXC8.h: 96: LATD=(LATD & 0b00001111) | 0x20;
  3257   0011C0  508C               	movf	140,w,c	;volatile
  3258   0011C2  0B0F               	andlw	15
  3259   0011C4  0920               	iorlw	32
  3260   0011C6  6E8C               	movwf	140,c	;volatile
  3261                           
  3262                           ;LibLCDXC8.h: 97: HabilitaLCD();
  3263   0011C8  ECE7  F00B         	call	_HabilitaLCD	;wreg free
  3264                           
  3265                           ;LibLCDXC8.h: 98: RetardoLCD(4);
  3266   0011CC  0E04               	movlw	4
  3267   0011CE  ECB2  F009         	call	_RetardoLCD
  3268                           
  3269                           ;LibLCDXC8.h: 99: EnviaDato(0x2F);
  3270   0011D2  0E2F               	movlw	47
  3271   0011D4  EC8F  F00A         	call	_EnviaDato
  3272                           
  3273                           ;LibLCDXC8.h: 100: HabilitaLCD();
  3274   0011D8  ECE7  F00B         	call	_HabilitaLCD	;wreg free
  3275                           
  3276                           ;LibLCDXC8.h: 101: RetardoLCD(4);
  3277   0011DC  0E04               	movlw	4
  3278   0011DE  ECB2  F009         	call	_RetardoLCD
  3279   0011E2                     l2356:
  3280                           
  3281                           ;LibLCDXC8.h: 102: };LibLCDXC8.h: 103: BorraLCD();
  3282   0011E2  ECC1  F00B         	call	_BorraLCD	;wreg free
  3283                           
  3284                           ;LibLCDXC8.h: 104: EnviaDato(0xF);
  3285   0011E6  0E0F               	movlw	15
  3286   0011E8  EC8F  F00A         	call	_EnviaDato
  3287                           
  3288                           ;LibLCDXC8.h: 105: HabilitaLCD();
  3289   0011EC  ECE7  F00B         	call	_HabilitaLCD	;wreg free
  3290                           
  3291                           ;LibLCDXC8.h: 106: RetardoLCD(4);
  3292   0011F0  0E04               	movlw	4
  3293   0011F2  ECB2  F009         	call	_RetardoLCD
  3294   0011F6  0012               	return		;funcret
  3295   0011F8                     __end_of_InicializaLCD:
  3296                           	callstack 0
  3297                           
  3298 ;; *************** function _BorraLCD *****************
  3299 ;; Defined at:
  3300 ;;		line 115 in file "LibLCDXC8.h"
  3301 ;; Parameters:    Size  Location     Type
  3302 ;;		None
  3303 ;; Auto vars:     Size  Location     Type
  3304 ;;		None
  3305 ;; Return value:  Size  Location     Type
  3306 ;;                  1    wreg      void 
  3307 ;; Registers used:
  3308 ;;		wreg, status,2, status,0, cstack
  3309 ;; Tracked objects:
  3310 ;;		On entry : 0/0
  3311 ;;		On exit  : 0/0
  3312 ;;		Unchanged: 0/0
  3313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3314 ;;      Params:         0       0       0       0       0       0       0       0       0
  3315 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3316 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3317 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3318 ;;Total ram usage:        0 bytes
  3319 ;; Hardware stack levels used: 1
  3320 ;; Hardware stack levels required when called: 7
  3321 ;; This function calls:
  3322 ;;		_EnviaDato
  3323 ;;		_HabilitaLCD
  3324 ;;		_RetardoLCD
  3325 ;; This function is called by:
  3326 ;;		_InicializaLCD
  3327 ;;		_main
  3328 ;;		_TransmitirDatos
  3329 ;; This function uses a non-reentrant model
  3330 ;;
  3331                           
  3332                           	psect	text20
  3333   001782                     __ptext20:
  3334                           	callstack 0
  3335   001782                     _BorraLCD:
  3336                           	callstack 22
  3337                           
  3338                           ;LibLCDXC8.h: 117: LATE1=0;
  3339                           
  3340                           ;incstack = 0
  3341   001782  928D               	bcf	3981,1,c	;volatile
  3342                           
  3343                           ;LibLCDXC8.h: 118: EnviaDato(0x01);
  3344   001784  0E01               	movlw	1
  3345   001786  EC8F  F00A         	call	_EnviaDato
  3346                           
  3347                           ;LibLCDXC8.h: 119: HabilitaLCD();
  3348   00178A  ECE7  F00B         	call	_HabilitaLCD	;wreg free
  3349                           
  3350                           ;LibLCDXC8.h: 120: RetardoLCD(2);
  3351   00178E  0E02               	movlw	2
  3352   001790  ECB2  F009         	call	_RetardoLCD
  3353   001794  0012               	return		;funcret
  3354   001796                     __end_of_BorraLCD:
  3355                           	callstack 0
  3356                           
  3357 ;; *************** function _EnviaDato *****************
  3358 ;; Defined at:
  3359 ;;		line 62 in file "LibLCDXC8.h"
  3360 ;; Parameters:    Size  Location     Type
  3361 ;;  a               1    wreg     unsigned char 
  3362 ;; Auto vars:     Size  Location     Type
  3363 ;;  a               1   18[COMRAM] unsigned char 
  3364 ;; Return value:  Size  Location     Type
  3365 ;;                  1    wreg      void 
  3366 ;; Registers used:
  3367 ;;		wreg, status,2, status,0, cstack
  3368 ;; Tracked objects:
  3369 ;;		On entry : 0/0
  3370 ;;		On exit  : 0/0
  3371 ;;		Unchanged: 0/0
  3372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3373 ;;      Params:         0       0       0       0       0       0       0       0       0
  3374 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3375 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3376 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3377 ;;Total ram usage:        2 bytes
  3378 ;; Hardware stack levels used: 1
  3379 ;; Hardware stack levels required when called: 6
  3380 ;; This function calls:
  3381 ;;		_HabilitaLCD
  3382 ;;		_RetardoLCD
  3383 ;; This function is called by:
  3384 ;;		_InicializaLCD
  3385 ;;		_BorraLCD
  3386 ;;		_EscribeLCD_c
  3387 ;;		_DireccionaLCD
  3388 ;; This function uses a non-reentrant model
  3389 ;;
  3390                           
  3391                           	psect	text21
  3392   00151E                     __ptext21:
  3393                           	callstack 0
  3394   00151E                     _EnviaDato:
  3395                           	callstack 21
  3396                           
  3397                           ;incstack = 0
  3398                           ;EnviaDato@a stored from wreg
  3399   00151E  6E13               	movwf	EnviaDato@a^0,c
  3400                           
  3401                           ;LibLCDXC8.h: 63: if(interfaz==4){
  3402   001520  0E04               	movlw	4
  3403   001522  1839               	xorwf	_interfaz^0,w,c
  3404   001524  A4D8               	btfss	status,2,c
  3405   001526  D017               	goto	l2050
  3406                           
  3407                           ;LibLCDXC8.h: 64: LATD=(LATD & 0b00001111) | (a & 0b11110000);
  3408   001528  C013  F012         	movff	EnviaDato@a,??_EnviaDato
  3409   00152C  0EF0               	movlw	240
  3410   00152E  1612               	andwf	??_EnviaDato^0,f,c
  3411   001530  508C               	movf	140,w,c	;volatile
  3412   001532  0B0F               	andlw	15
  3413   001534  1012               	iorwf	??_EnviaDato^0,w,c
  3414   001536  6E8C               	movwf	140,c	;volatile
  3415                           
  3416                           ;LibLCDXC8.h: 65: HabilitaLCD();
  3417   001538  ECE7  F00B         	call	_HabilitaLCD	;wreg free
  3418                           
  3419                           ;LibLCDXC8.h: 66: RetardoLCD(1);
  3420   00153C  0E01               	movlw	1
  3421   00153E  ECB2  F009         	call	_RetardoLCD
  3422                           
  3423                           ;LibLCDXC8.h: 67: LATD=(LATD & 0b00001111) | (a<<4);
  3424   001542  C013  F012         	movff	EnviaDato@a,??_EnviaDato
  3425   001546  3A12               	swapf	??_EnviaDato^0,f,c
  3426   001548  0EF0               	movlw	240
  3427   00154A  1612               	andwf	??_EnviaDato^0,f,c
  3428   00154C  508C               	movf	140,w,c	;volatile
  3429   00154E  0B0F               	andlw	15
  3430   001550  1012               	iorwf	??_EnviaDato^0,w,c
  3431   001552  6E8C               	movwf	140,c	;volatile
  3432                           
  3433                           ;LibLCDXC8.h: 70: }else if(interfaz==8){
  3434   001554  0012               	return	
  3435   001556                     l2050:
  3436   001556  0E08               	movlw	8
  3437   001558  1839               	xorwf	_interfaz^0,w,c
  3438   00155A  A4D8               	btfss	status,2,c
  3439   00155C  0012               	return	
  3440                           
  3441                           ;LibLCDXC8.h: 71: LATD=a;
  3442   00155E  C013  FF8C         	movff	EnviaDato@a,3980	;volatile
  3443   001562  0012               	return		;funcret
  3444   001564                     __end_of_EnviaDato:
  3445                           	callstack 0
  3446                           
  3447 ;; *************** function _RetardoLCD *****************
  3448 ;; Defined at:
  3449 ;;		line 295 in file "LibLCDXC8.h"
  3450 ;; Parameters:    Size  Location     Type
  3451 ;;  a               1    wreg     unsigned char 
  3452 ;; Auto vars:     Size  Location     Type
  3453 ;;  a               1   16[COMRAM] unsigned char 
  3454 ;; Return value:  Size  Location     Type
  3455 ;;                  1    wreg      void 
  3456 ;; Registers used:
  3457 ;;		wreg, status,2, status,0
  3458 ;; Tracked objects:
  3459 ;;		On entry : 0/0
  3460 ;;		On exit  : 0/0
  3461 ;;		Unchanged: 0/0
  3462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3463 ;;      Params:         0       0       0       0       0       0       0       0       0
  3464 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3465 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3466 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3467 ;;Total ram usage:        2 bytes
  3468 ;; Hardware stack levels used: 1
  3469 ;; Hardware stack levels required when called: 5
  3470 ;; This function calls:
  3471 ;;		Nothing
  3472 ;; This function is called by:
  3473 ;;		_EnviaDato
  3474 ;;		_InicializaLCD
  3475 ;;		_BorraLCD
  3476 ;;		_EscribeLCD_c
  3477 ;;		_DireccionaLCD
  3478 ;; This function uses a non-reentrant model
  3479 ;;
  3480                           
  3481                           	psect	text22
  3482   001364                     __ptext22:
  3483                           	callstack 0
  3484   001364                     _RetardoLCD:
  3485                           	callstack 22
  3486                           
  3487                           ;incstack = 0
  3488                           ;RetardoLCD@a stored from wreg
  3489   001364  6E11               	movwf	RetardoLCD@a^0,c
  3490                           
  3491                           ;LibLCDXC8.h: 296: switch(a){
  3492   001366  D023               	goto	l2038
  3493   001368                     l2028:
  3494   001368  0E27               	movlw	39
  3495   00136A  6E10               	movwf	??_RetardoLCD^0,c
  3496   00136C  0EF5               	movlw	245
  3497   00136E                     u2297:
  3498   00136E  2EE8               	decfsz	wreg,f,c
  3499   001370  D7FE               	bra	u2297
  3500   001372  2E10               	decfsz	??_RetardoLCD^0,f,c
  3501   001374  D7FC               	bra	u2297
  3502   001376  F000               	nop	
  3503                           
  3504                           ;LibLCDXC8.h: 299: break;
  3505   001378  0012               	return	
  3506   00137A                     l2030:
  3507   00137A  0E03               	movlw	3
  3508   00137C  6E10               	movwf	??_RetardoLCD^0,c
  3509   00137E  0E98               	movlw	152
  3510   001380                     u2307:
  3511   001380  2EE8               	decfsz	wreg,f,c
  3512   001382  D7FE               	bra	u2307
  3513   001384  2E10               	decfsz	??_RetardoLCD^0,f,c
  3514   001386  D7FC               	bra	u2307
  3515                           
  3516                           ;LibLCDXC8.h: 301: _delay((unsigned long)((640)*(8000000/4000000.0)));
  3517   001388  0EB6               	movlw	182
  3518   00138A                     u2317:
  3519   00138A  D000               	nop2	
  3520   00138C  D000               	nop2	
  3521   00138E  2EE8               	decfsz	wreg,f,c
  3522   001390  D7FC               	bra	u2317
  3523   001392  D000               	nop2	
  3524   001394  D000               	nop2	
  3525   001396  D000               	nop2	
  3526                           
  3527                           ;LibLCDXC8.h: 303: break;
  3528   001398  0012               	return	
  3529   00139A                     l2032:
  3530   00139A  0E42               	movlw	66
  3531   00139C                     u2327:
  3532   00139C  2EE8               	decfsz	wreg,f,c
  3533   00139E  D7FE               	bra	u2327
  3534   0013A0  D000               	nop2	
  3535                           
  3536                           ;LibLCDXC8.h: 306: break;
  3537   0013A2  0012               	return	
  3538   0013A4                     l2034:
  3539   0013A4  0E1A               	movlw	26
  3540   0013A6                     u2337:
  3541   0013A6  2EE8               	decfsz	wreg,f,c
  3542   0013A8  D7FE               	bra	u2337
  3543   0013AA  D000               	nop2	
  3544                           
  3545                           ;LibLCDXC8.h: 309: break;
  3546   0013AC  0012               	return	
  3547   0013AE                     l2038:
  3548   0013AE  5011               	movf	RetardoLCD@a^0,w,c
  3549                           
  3550                           ; Switch size 1, requested type "simple"
  3551                           ; Number of cases is 4, Range of values is 1 to 4
  3552                           ; switch strategies available:
  3553                           ; Name         Instructions Cycles
  3554                           ; simple_byte           13     7 (average)
  3555                           ;	Chosen strategy is simple_byte
  3556   0013B0  0A01               	xorlw	1	; case 1
  3557   0013B2  B4D8               	btfsc	status,2,c
  3558   0013B4  D7D9               	goto	l2028
  3559   0013B6  0A03               	xorlw	3	; case 2
  3560   0013B8  B4D8               	btfsc	status,2,c
  3561   0013BA  D7DF               	goto	l2030
  3562   0013BC  0A01               	xorlw	1	; case 3
  3563   0013BE  B4D8               	btfsc	status,2,c
  3564   0013C0  D7EC               	goto	l2032
  3565   0013C2  0A07               	xorlw	7	; case 4
  3566   0013C4  A4D8               	btfss	status,2,c
  3567   0013C6  0012               	return	
  3568   0013C8  D7ED               	goto	l2034
  3569   0013CA                     __end_of_RetardoLCD:
  3570                           	callstack 0
  3571                           
  3572 ;; *************** function _HabilitaLCD *****************
  3573 ;; Defined at:
  3574 ;;		line 108 in file "LibLCDXC8.h"
  3575 ;; Parameters:    Size  Location     Type
  3576 ;;		None
  3577 ;; Auto vars:     Size  Location     Type
  3578 ;;		None
  3579 ;; Return value:  Size  Location     Type
  3580 ;;                  1    wreg      void 
  3581 ;; Registers used:
  3582 ;;		wreg
  3583 ;; Tracked objects:
  3584 ;;		On entry : 0/0
  3585 ;;		On exit  : 0/0
  3586 ;;		Unchanged: 0/0
  3587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3588 ;;      Params:         0       0       0       0       0       0       0       0       0
  3589 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3590 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3591 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3592 ;;Total ram usage:        0 bytes
  3593 ;; Hardware stack levels used: 1
  3594 ;; Hardware stack levels required when called: 5
  3595 ;; This function calls:
  3596 ;;		Nothing
  3597 ;; This function is called by:
  3598 ;;		_EnviaDato
  3599 ;;		_InicializaLCD
  3600 ;;		_BorraLCD
  3601 ;;		_EscribeLCD_c
  3602 ;;		_DireccionaLCD
  3603 ;; This function uses a non-reentrant model
  3604 ;;
  3605                           
  3606                           	psect	text23
  3607   0017CE                     __ptext23:
  3608                           	callstack 0
  3609   0017CE                     _HabilitaLCD:
  3610                           	callstack 22
  3611                           
  3612                           ;LibLCDXC8.h: 110: LATE2=1;
  3613                           
  3614                           ;incstack = 0
  3615   0017CE  848D               	bsf	3981,2,c	;volatile
  3616                           
  3617                           ;LibLCDXC8.h: 111: _delay((unsigned long)((40)*(8000000/4000000.0)));
  3618   0017D0  0E1A               	movlw	26
  3619   0017D2                     u2347:
  3620   0017D2  2EE8               	decfsz	wreg,f,c
  3621   0017D4  D7FE               	bra	u2347
  3622   0017D6  D000               	nop2	
  3623                           
  3624                           ;LibLCDXC8.h: 113: LATE2=0;
  3625   0017D8  948D               	bcf	3981,2,c	;volatile
  3626   0017DA  0012               	return		;funcret
  3627   0017DC                     __end_of_HabilitaLCD:
  3628                           	callstack 0
  3629                           
  3630 ;; *************** function _ConvertirUnidades *****************
  3631 ;; Defined at:
  3632 ;;		line 331 in file "Proyecto.c"
  3633 ;; Parameters:    Size  Location     Type
  3634 ;;  canal           1    wreg     unsigned char 
  3635 ;; Auto vars:     Size  Location     Type
  3636 ;;  canal           1   15[COMRAM] unsigned char 
  3637 ;; Return value:  Size  Location     Type
  3638 ;;                  2  114[None  ] unsigned int 
  3639 ;; Registers used:
  3640 ;;		wreg, status,2, status,0
  3641 ;; Tracked objects:
  3642 ;;		On entry : 0/0
  3643 ;;		On exit  : 0/0
  3644 ;;		Unchanged: 0/0
  3645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3646 ;;      Params:         0       0       0       0       0       0       0       0       0
  3647 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3648 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3649 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3650 ;;Total ram usage:        1 bytes
  3651 ;; Hardware stack levels used: 1
  3652 ;; Hardware stack levels required when called: 5
  3653 ;; This function calls:
  3654 ;;		Nothing
  3655 ;; This function is called by:
  3656 ;;		_main
  3657 ;; This function uses a non-reentrant model
  3658 ;;
  3659                           
  3660                           	psect	text24
  3661   001796                     __ptext24:
  3662                           	callstack 0
  3663   001796                     _ConvertirUnidades:
  3664                           	callstack 25
  3665                           
  3666                           ;incstack = 0
  3667                           ;ConvertirUnidades@canal stored from wreg
  3668   001796  6E10               	movwf	ConvertirUnidades@canal^0,c
  3669                           
  3670                           ;Proyecto.c: 332: ADCON0 = 0b00000001 | (canal << 2);
  3671   001798  4410               	rlncf	ConvertirUnidades@canal^0,w,c
  3672   00179A  46E8               	rlncf	wreg,f,c
  3673   00179C  0BFC               	andlw	252
  3674   00179E  0901               	iorlw	1
  3675   0017A0  6EC2               	movwf	194,c	;volatile
  3676                           
  3677                           ;Proyecto.c: 333: GO = 1;
  3678   0017A2  82C2               	bsf	4034,1,c	;volatile
  3679   0017A4                     l337:
  3680   0017A4  A2C2               	btfss	4034,1,c	;volatile
  3681   0017A6  0012               	return	
  3682   0017A8  D7FD               	goto	l337
  3683   0017AA                     __end_of_ConvertirUnidades:
  3684                           	callstack 0
  3685                           
  3686 ;; *************** function _ISR *****************
  3687 ;; Defined at:
  3688 ;;		line 393 in file "Proyecto.c"
  3689 ;; Parameters:    Size  Location     Type
  3690 ;;		None
  3691 ;; Auto vars:     Size  Location     Type
  3692 ;;		None
  3693 ;; Return value:  Size  Location     Type
  3694 ;;                  1    wreg      void 
  3695 ;; Registers used:
  3696 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3697 ;; Tracked objects:
  3698 ;;		On entry : 0/0
  3699 ;;		On exit  : 0/0
  3700 ;;		Unchanged: 0/0
  3701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3702 ;;      Params:         0       0       0       0       0       0       0       0       0
  3703 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3704 ;;      Temps:          6       0       0       0       0       0       0       0       0
  3705 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3706 ;;Total ram usage:        6 bytes
  3707 ;; Hardware stack levels used: 1
  3708 ;; Hardware stack levels required when called: 4
  3709 ;; This function calls:
  3710 ;;		_LeerTeclado
  3711 ;;		i2_BorraLCD
  3712 ;;		i2_EscribeLCD_c
  3713 ;;		i2_MensajeLCD_Word
  3714 ;; This function is called by:
  3715 ;;		Interrupt level 2
  3716 ;; This function uses a non-reentrant model
  3717 ;;
  3718                           
  3719                           	psect	intcode
  3720   000008                     __pintcode:
  3721                           	callstack 0
  3722   000008                     _ISR:
  3723                           	callstack 21
  3724                           
  3725                           ;incstack = 0
  3726   000008  824E               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  3727   00000A  EDBF  F006         	call	int_func,f	;refresh shadow registers
  3728                           
  3729                           	psect	intcode_body
  3730   000D7E                     __pintcode_body:
  3731                           	callstack 21
  3732   000D7E                     int_func:
  3733                           	callstack 21
  3734   000D7E  0006               	pop		; remove dummy address from shadow register refresh
  3735   000D80  CFF6 F00C          	movff	tblptrl,??_ISR+2
  3736   000D84  CFF7 F00D          	movff	tblptrh,??_ISR+3
  3737   000D88  CFF8 F00E          	movff	tblptru,??_ISR+4
  3738   000D8C  CFF5 F00F          	movff	tablat,??_ISR+5
  3739                           
  3740                           ;Proyecto.c: 394: if(TMR0IF == 1){
  3741   000D90  A4F2               	btfss	4082,2,c	;volatile
  3742   000D92  D01E               	goto	i2l373
  3743                           
  3744                           ;Proyecto.c: 395: TMR0IF = 0;
  3745   000D94  94F2               	bcf	4082,2,c	;volatile
  3746                           
  3747                           ;Proyecto.c: 396: TMR0 = 64286;
  3748   000D96  0EFB               	movlw	251
  3749   000D98  6ED7               	movwf	215,c	;volatile
  3750   000D9A  0E1E               	movlw	30
  3751   000D9C  6ED6               	movwf	214,c	;volatile
  3752                           
  3753                           ;Proyecto.c: 397: if(RE0 == 1){
  3754   000D9E  A084               	btfss	3972,0,c	;volatile
  3755   000DA0  D017               	goto	i2l373
  3756                           
  3757                           ;Proyecto.c: 398: CCP1CON = 0;
  3758   000DA2  0E00               	movlw	0
  3759   000DA4  6EBD               	movwf	189,c	;volatile
  3760                           
  3761                           ;Proyecto.c: 399: RC2 = 0;
  3762   000DA6  9482               	bcf	3970,2,c	;volatile
  3763                           
  3764                           ;Proyecto.c: 400: _delay((unsigned long)((200)*(8000000/4000.0)));
  3765   000DA8  0E03               	movlw	3
  3766   000DAA  6E0B               	movwf	(??_ISR+1)^0,c
  3767   000DAC  0E08               	movlw	8
  3768   000DAE  6E0A               	movwf	??_ISR^0,c
  3769   000DB0  0E77               	movlw	119
  3770   000DB2                     i2u235_47:
  3771   000DB2  2EE8               	decfsz	wreg,f,c
  3772   000DB4  D7FE               	bra	i2u235_47
  3773   000DB6  2E0A               	decfsz	??_ISR^0,f,c
  3774   000DB8  D7FC               	bra	i2u235_47
  3775   000DBA  2E0B               	decfsz	(??_ISR+1)^0,f,c
  3776   000DBC  D7FA               	bra	i2u235_47
  3777   000DBE  F000               	nop	
  3778                           
  3779                           ;Proyecto.c: 401: BorraLCD();
  3780   000DC0  ECD5  F00B         	call	i2_BorraLCD	;wreg free
  3781                           
  3782                           ;Proyecto.c: 402: MensajeLCD_Word("STOPED");
  3783   000DC4  0E38               	movlw	low STR_9
  3784   000DC6  6E06               	movwf	i2MensajeLCD_Word@a^0,c
  3785   000DC8  EC68  F00A         	call	i2_MensajeLCD_Word	;wreg free
  3786   000DCC  0003               	sleep		;# 
  3787   000DCE                     i2l375:
  3788   000DCE  D7FF               	goto	i2l375
  3789   000DD0                     i2l373:
  3790                           
  3791                           ;Proyecto.c: 405: };Proyecto.c: 406: };Proyecto.c: 407: if(RBIF==1){
  3792   000DD0  A0F2               	btfss	4082,0,c	;volatile
  3793   000DD2  D061               	goto	i2l2832
  3794                           
  3795                           ;Proyecto.c: 409: if(PORTB!=0b11110000 && teclaIf == 1){
  3796   000DD4  0EF0               	movlw	240
  3797   000DD6  1881               	xorwf	129,w,c	;volatile
  3798   000DD8  B4D8               	btfsc	status,2,c
  3799   000DDA  D055               	goto	i2l2828
  3800   000DDC  0444               	decf	_teclaIf^0,w,c
  3801   000DDE  1045               	iorwf	(_teclaIf+1)^0,w,c
  3802   000DE0  A4D8               	btfss	status,2,c
  3803   000DE2  D051               	goto	i2l2828
  3804                           
  3805                           ;Proyecto.c: 410: Tecla=0;
  3806   000DE4  0E00               	movlw	0
  3807   000DE6  6E48               	movwf	_Tecla^0,c
  3808                           
  3809                           ;Proyecto.c: 411: LATB=0b11111110;
  3810   000DE8  0EFE               	movlw	254
  3811   000DEA  6E8A               	movwf	138,c	;volatile
  3812                           
  3813                           ;Proyecto.c: 412: if(RB4==0) Tecla=16;
  3814   000DEC  B881               	btfsc	3969,4,c	;volatile
  3815   000DEE  D002               	goto	i2l380
  3816   000DF0  0E10               	movlw	16
  3817   000DF2  D041               	goto	L18
  3818   000DF4                     i2l380:
  3819                           
  3820                           ;Proyecto.c: 413: else if(RB5==0) Tecla=12;
  3821   000DF4  BA81               	btfsc	3969,5,c	;volatile
  3822   000DF6  D002               	goto	i2l382
  3823   000DF8  0E0C               	movlw	12
  3824   000DFA  D03D               	goto	L18
  3825   000DFC                     i2l382:
  3826                           
  3827                           ;Proyecto.c: 414: else if(RB6==0) Tecla=8;
  3828   000DFC  BC81               	btfsc	3969,6,c	;volatile
  3829   000DFE  D002               	goto	i2l384
  3830   000E00  0E08               	movlw	8
  3831   000E02  D039               	goto	L18
  3832   000E04                     i2l384:
  3833                           
  3834                           ;Proyecto.c: 415: else if(RB7==0) Tecla=4;
  3835   000E04  BE81               	btfsc	3969,7,c	;volatile
  3836   000E06  D002               	goto	i2l2788
  3837   000E08  0E04               	movlw	4
  3838   000E0A  D035               	goto	L18
  3839   000E0C                     i2l2788:
  3840                           
  3841                           ;Proyecto.c: 416: else{;Proyecto.c: 417: LATB=0b11111101;
  3842   000E0C  0EFD               	movlw	253
  3843   000E0E  6E8A               	movwf	138,c	;volatile
  3844                           
  3845                           ;Proyecto.c: 418: if(RB4==0) Tecla=15;
  3846   000E10  B881               	btfsc	3969,4,c	;volatile
  3847   000E12  D002               	goto	i2l388
  3848   000E14  0E0F               	movlw	15
  3849   000E16  D02F               	goto	L18
  3850   000E18                     i2l388:
  3851                           
  3852                           ;Proyecto.c: 419: else if(RB5==0) Tecla=11;
  3853   000E18  BA81               	btfsc	3969,5,c	;volatile
  3854   000E1A  D002               	goto	i2l390
  3855   000E1C  0E0B               	movlw	11
  3856   000E1E  D02B               	goto	L18
  3857   000E20                     i2l390:
  3858                           
  3859                           ;Proyecto.c: 420: else if(RB6==0) Tecla=7;
  3860   000E20  BC81               	btfsc	3969,6,c	;volatile
  3861   000E22  D002               	goto	i2l392
  3862   000E24  0E07               	movlw	7
  3863   000E26  D027               	goto	L18
  3864   000E28                     i2l392:
  3865                           
  3866                           ;Proyecto.c: 421: else if(RB7==0) Tecla=3;
  3867   000E28  BE81               	btfsc	3969,7,c	;volatile
  3868   000E2A  D002               	goto	i2l2800
  3869   000E2C  0E03               	movlw	3
  3870   000E2E  D023               	goto	L18
  3871   000E30                     i2l2800:
  3872                           
  3873                           ;Proyecto.c: 422: else{;Proyecto.c: 423: LATB=0b11111011;
  3874   000E30  0EFB               	movlw	251
  3875   000E32  6E8A               	movwf	138,c	;volatile
  3876                           
  3877                           ;Proyecto.c: 424: if(RB4==0) Tecla=14;
  3878   000E34  B881               	btfsc	3969,4,c	;volatile
  3879   000E36  D002               	goto	i2l396
  3880   000E38  0E0E               	movlw	14
  3881   000E3A  D01D               	goto	L18
  3882   000E3C                     i2l396:
  3883                           
  3884                           ;Proyecto.c: 425: else if(RB5==0) Tecla=10;
  3885   000E3C  BA81               	btfsc	3969,5,c	;volatile
  3886   000E3E  D002               	goto	i2l398
  3887   000E40  0E0A               	movlw	10
  3888   000E42  D019               	goto	L18
  3889   000E44                     i2l398:
  3890                           
  3891                           ;Proyecto.c: 426: else if(RB6==0) Tecla=6;
  3892   000E44  BC81               	btfsc	3969,6,c	;volatile
  3893   000E46  D002               	goto	i2l400
  3894   000E48  0E06               	movlw	6
  3895   000E4A  D015               	goto	L18
  3896   000E4C                     i2l400:
  3897                           
  3898                           ;Proyecto.c: 427: else if(RB7==0) Tecla=2;
  3899   000E4C  BE81               	btfsc	3969,7,c	;volatile
  3900   000E4E  D002               	goto	i2l2812
  3901   000E50  0E02               	movlw	2
  3902   000E52  D011               	goto	L18
  3903   000E54                     i2l2812:
  3904                           
  3905                           ;Proyecto.c: 428: else{;Proyecto.c: 429: LATB=0b11110111;
  3906   000E54  0EF7               	movlw	247
  3907   000E56  6E8A               	movwf	138,c	;volatile
  3908                           
  3909                           ;Proyecto.c: 430: if(RB4==0) Tecla=13;
  3910   000E58  B881               	btfsc	3969,4,c	;volatile
  3911   000E5A  D002               	goto	i2l404
  3912   000E5C  0E0D               	movlw	13
  3913   000E5E  D00B               	goto	L18
  3914   000E60                     i2l404:
  3915                           
  3916                           ;Proyecto.c: 431: else if(RB5==0) Tecla=9;
  3917   000E60  BA81               	btfsc	3969,5,c	;volatile
  3918   000E62  D002               	goto	i2l406
  3919   000E64  0E09               	movlw	9
  3920   000E66  D007               	goto	L18
  3921   000E68                     i2l406:
  3922                           
  3923                           ;Proyecto.c: 432: else if(RB6==0) Tecla=5;
  3924   000E68  BC81               	btfsc	3969,6,c	;volatile
  3925   000E6A  D002               	goto	i2l408
  3926   000E6C  0E05               	movlw	5
  3927   000E6E  D003               	goto	L18
  3928   000E70                     i2l408:
  3929                           
  3930                           ;Proyecto.c: 433: else if(RB7==0) Tecla=1;
  3931   000E70  BE81               	btfsc	3969,7,c	;volatile
  3932   000E72  D002               	goto	i2l405
  3933   000E74  0E01               	movlw	1
  3934   000E76                     L18:
  3935   000E76  6E48               	movwf	_Tecla^0,c
  3936   000E78                     i2l405:
  3937                           
  3938                           ;Proyecto.c: 434: };Proyecto.c: 435: };Proyecto.c: 436: };Proyecto.c: 437: LATB=0b111100
      +                          00;
  3939   000E78  0EF0               	movlw	240
  3940   000E7A  6E8A               	movwf	138,c	;volatile
  3941                           
  3942                           ;Proyecto.c: 439: LeerTeclado();
  3943   000E7C  EC47  F008         	call	_LeerTeclado	;wreg free
  3944                           
  3945                           ;Proyecto.c: 440: EscribeLCD_c(Tecla);
  3946   000E80  5048               	movf	_Tecla^0,w,c
  3947   000E82  ECB6  F00B         	call	i2_EscribeLCD_c
  3948   000E86                     i2l2828:
  3949                           
  3950                           ;Proyecto.c: 441: };Proyecto.c: 442: RBIF=0;
  3951   000E86  90F2               	bcf	4082,0,c	;volatile
  3952                           
  3953                           ;Proyecto.c: 443: _delay((unsigned long)((50)*(8000000/4000.0)));
  3954   000E88  0E82               	movlw	130
  3955   000E8A  6E0A               	movwf	??_ISR^0,c
  3956   000E8C  0EDE               	movlw	222
  3957   000E8E                     i2u236_47:
  3958   000E8E  2EE8               	decfsz	wreg,f,c
  3959   000E90  D7FE               	bra	i2u236_47
  3960   000E92  2E0A               	decfsz	??_ISR^0,f,c
  3961   000E94  D7FC               	bra	i2u236_47
  3962   000E96                     i2l2832:
  3963                           
  3964                           ;Proyecto.c: 445: };Proyecto.c: 446: if(TMR1IF==1){
  3965   000E96  A09E               	btfss	3998,0,c	;volatile
  3966   000E98  D00D               	goto	i2l412
  3967                           
  3968                           ;Proyecto.c: 447: TMR1IF=0;
  3969   000E9A  909E               	bcf	3998,0,c	;volatile
  3970                           
  3971                           ;Proyecto.c: 448: TMR1=60536;
  3972   000E9C  0EEC               	movlw	236
  3973   000E9E  6ECF               	movwf	207,c	;volatile
  3974   000EA0  0E78               	movlw	120
  3975   000EA2  6ECE               	movwf	206,c	;volatile
  3976                           
  3977                           ;Proyecto.c: 449: CCPR2=60536+a;
  3978   000EA4  0E78               	movlw	120
  3979   000EA6  2436               	addwf	_a^0,w,c
  3980   000EA8  6EBB               	movwf	187,c	;volatile
  3981   000EAA  0EEC               	movlw	236
  3982   000EAC  2037               	addwfc	(_a+1)^0,w,c
  3983   000EAE  6EBC               	movwf	188,c	;volatile
  3984                           
  3985                           ;Proyecto.c: 450: CCP2CON=0b00001001;
  3986   000EB0  0E09               	movlw	9
  3987   000EB2  6EBA               	movwf	186,c	;volatile
  3988   000EB4                     i2l412:
  3989   000EB4  C00F  FFF5         	movff	??_ISR+5,tablat
  3990   000EB8  C00E  FFF8         	movff	??_ISR+4,tblptru
  3991   000EBC  C00D  FFF7         	movff	??_ISR+3,tblptrh
  3992   000EC0  C00C  FFF6         	movff	??_ISR+2,tblptrl
  3993   000EC4  924E               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  3994   000EC6  0011               	retfie		f
  3995   000EC8                     __end_of_ISR:
  3996                           	callstack 0
  3997                           
  3998 ;; *************** function i2_MensajeLCD_Word *****************
  3999 ;; Defined at:
  4000 ;;		line 247 in file "LibLCDXC8.h"
  4001 ;; Parameters:    Size  Location     Type
  4002 ;;  a               1    5[COMRAM] PTR unsigned char 
  4003 ;;		 -> STR_9(7), STR_8(6), STR_7(6), STR_6(23), 
  4004 ;;		 -> STR_5(11), STR_4(23), STR_3(10), STR_2(17), 
  4005 ;;		 -> STR_1(11), 
  4006 ;; Auto vars:     Size  Location     Type
  4007 ;;  i               2    7[COMRAM] int 
  4008 ;; Return value:  Size  Location     Type
  4009 ;;                  1    wreg      void 
  4010 ;; Registers used:
  4011 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4012 ;; Tracked objects:
  4013 ;;		On entry : 0/0
  4014 ;;		On exit  : 0/0
  4015 ;;		Unchanged: 0/0
  4016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4017 ;;      Params:         1       0       0       0       0       0       0       0       0
  4018 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4019 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4020 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4021 ;;Total ram usage:        4 bytes
  4022 ;; Hardware stack levels used: 1
  4023 ;; Hardware stack levels required when called: 3
  4024 ;; This function calls:
  4025 ;;		i2_EscribeLCD_c
  4026 ;; This function is called by:
  4027 ;;		_ISR
  4028 ;; This function uses a non-reentrant model
  4029 ;;
  4030                           
  4031                           	psect	text26
  4032   0014D0                     __ptext26:
  4033                           	callstack 0
  4034   0014D0                     i2_MensajeLCD_Word:
  4035                           	callstack 21
  4036                           
  4037                           ;LibLCDXC8.h: 251: for(int i = 0; i<16; i++){
  4038                           
  4039                           ;incstack = 0
  4040   0014D0  0E00               	movlw	0
  4041   0014D2  6E09               	movwf	(i2MensajeLCD_Word@i+1)^0,c
  4042   0014D4  0E00               	movlw	0
  4043   0014D6  6E08               	movwf	i2MensajeLCD_Word@i^0,c
  4044   0014D8                     i2l2614:
  4045                           
  4046                           ;LibLCDXC8.h: 252: if(a[i] == (0)){
  4047   0014D8  5006               	movf	i2MensajeLCD_Word@a^0,w,c
  4048   0014DA  2408               	addwf	i2MensajeLCD_Word@i^0,w,c
  4049   0014DC  6E07               	movwf	??i2_MensajeLCD_Word^0,c
  4050   0014DE  C007  FFF6         	movff	??i2_MensajeLCD_Word,tblptrl
  4051   0014E2                     	if	1	;There is more than 1 active tblptr byte
  4052   0014E2  0E08               	movlw	high __smallconst
  4053   0014E4  6EF7               	movwf	tblptrh,c
  4054   0014E6                     	endif
  4055   0014E6                     	if	0	;tblptru may be non-zero
  4056   0014E6                     	endif
  4057   0014E6                     	if	0	;tblptru may be non-zero
  4058   0014E6                     	endif
  4059   0014E6  0008               	tblrd		*
  4060   0014E8  50F5               	movf	tablat,w,c
  4061   0014EA  0900               	iorlw	0
  4062   0014EC  B4D8               	btfsc	status,2,c
  4063   0014EE  0012               	return	
  4064                           
  4065                           ;LibLCDXC8.h: 254: };LibLCDXC8.h: 255: EscribeLCD_c(a[i]);
  4066   0014F0  5006               	movf	i2MensajeLCD_Word@a^0,w,c
  4067   0014F2  2408               	addwf	i2MensajeLCD_Word@i^0,w,c
  4068   0014F4  6E07               	movwf	??i2_MensajeLCD_Word^0,c
  4069   0014F6  C007  FFF6         	movff	??i2_MensajeLCD_Word,tblptrl
  4070   0014FA                     	if	1	;There is more than 1 active tblptr byte
  4071   0014FA  0E08               	movlw	high __smallconst
  4072   0014FC  6EF7               	movwf	tblptrh,c
  4073   0014FE                     	endif
  4074   0014FE                     	if	0	;tblptru may be non-zero
  4075   0014FE                     	endif
  4076   0014FE                     	if	0	;tblptru may be non-zero
  4077   0014FE                     	endif
  4078   0014FE  0008               	tblrd		*
  4079   001500  50F5               	movf	tablat,w,c
  4080   001502  ECB6  F00B         	call	i2_EscribeLCD_c
  4081   001506  4A08               	infsnz	i2MensajeLCD_Word@i^0,f,c
  4082   001508  2A09               	incf	(i2MensajeLCD_Word@i+1)^0,f,c
  4083   00150A  BE09               	btfsc	(i2MensajeLCD_Word@i+1)^0,7,c
  4084   00150C  D7E5               	goto	i2l2614
  4085   00150E  5009               	movf	(i2MensajeLCD_Word@i+1)^0,w,c
  4086   001510  E105               	bnz	i2u184_40
  4087   001512  0E10               	movlw	16
  4088   001514  5C08               	subwf	i2MensajeLCD_Word@i^0,w,c
  4089   001516  B0D8               	btfsc	status,0,c
  4090   001518  0012               	return	
  4091   00151A  D7DE               	goto	i2l2614
  4092   00151C                     i2u184_40:
  4093   00151C  0012               	return		;funcret
  4094   00151E                     __end_ofi2_MensajeLCD_Word:
  4095                           	callstack 0
  4096                           
  4097 ;; *************** function i2_EscribeLCD_c *****************
  4098 ;; Defined at:
  4099 ;;		line 148 in file "LibLCDXC8.h"
  4100 ;; Parameters:    Size  Location     Type
  4101 ;;  a               1    wreg     unsigned char 
  4102 ;; Auto vars:     Size  Location     Type
  4103 ;;  a               1    4[COMRAM] unsigned char 
  4104 ;; Return value:  Size  Location     Type
  4105 ;;                  1    wreg      void 
  4106 ;; Registers used:
  4107 ;;		wreg, status,2, status,0, cstack
  4108 ;; Tracked objects:
  4109 ;;		On entry : 0/0
  4110 ;;		On exit  : 0/0
  4111 ;;		Unchanged: 0/0
  4112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4113 ;;      Params:         0       0       0       0       0       0       0       0       0
  4114 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4115 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4116 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4117 ;;Total ram usage:        1 bytes
  4118 ;; Hardware stack levels used: 1
  4119 ;; Hardware stack levels required when called: 2
  4120 ;; This function calls:
  4121 ;;		i2_EnviaDato
  4122 ;;		i2_HabilitaLCD
  4123 ;;		i2_RetardoLCD
  4124 ;; This function is called by:
  4125 ;;		_ISR
  4126 ;;		i2_MensajeLCD_Word
  4127 ;; This function uses a non-reentrant model
  4128 ;;
  4129                           
  4130                           	psect	text27
  4131   00176C                     __ptext27:
  4132                           	callstack 0
  4133   00176C                     i2_EscribeLCD_c:
  4134                           	callstack 21
  4135                           
  4136                           ;incstack = 0
  4137                           ;i2EscribeLCD_c@a stored from wreg
  4138   00176C  6E05               	movwf	i2EscribeLCD_c@a^0,c
  4139                           
  4140                           ;LibLCDXC8.h: 152: LATE1=1;
  4141   00176E  828D               	bsf	3981,1,c	;volatile
  4142                           
  4143                           ;LibLCDXC8.h: 153: EnviaDato(a);
  4144   001770  5005               	movf	i2EscribeLCD_c@a^0,w,c
  4145   001772  ECB2  F00A         	call	i2_EnviaDato
  4146                           
  4147                           ;LibLCDXC8.h: 154: HabilitaLCD();
  4148   001776  ECEE  F00B         	call	i2_HabilitaLCD	;wreg free
  4149                           
  4150                           ;LibLCDXC8.h: 155: RetardoLCD(4);
  4151   00177A  0E04               	movlw	4
  4152   00177C  ECE5  F009         	call	i2_RetardoLCD
  4153   001780  0012               	return		;funcret
  4154   001782                     __end_ofi2_EscribeLCD_c:
  4155                           	callstack 0
  4156                           
  4157 ;; *************** function i2_BorraLCD *****************
  4158 ;; Defined at:
  4159 ;;		line 115 in file "LibLCDXC8.h"
  4160 ;; Parameters:    Size  Location     Type
  4161 ;;		None
  4162 ;; Auto vars:     Size  Location     Type
  4163 ;;		None
  4164 ;; Return value:  Size  Location     Type
  4165 ;;                  1    wreg      void 
  4166 ;; Registers used:
  4167 ;;		wreg, status,2, status,0, cstack
  4168 ;; Tracked objects:
  4169 ;;		On entry : 0/0
  4170 ;;		On exit  : 0/0
  4171 ;;		Unchanged: 0/0
  4172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4173 ;;      Params:         0       0       0       0       0       0       0       0       0
  4174 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4175 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4176 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4177 ;;Total ram usage:        0 bytes
  4178 ;; Hardware stack levels used: 1
  4179 ;; Hardware stack levels required when called: 2
  4180 ;; This function calls:
  4181 ;;		i2_EnviaDato
  4182 ;;		i2_HabilitaLCD
  4183 ;;		i2_RetardoLCD
  4184 ;; This function is called by:
  4185 ;;		_ISR
  4186 ;; This function uses a non-reentrant model
  4187 ;;
  4188                           
  4189                           	psect	text28
  4190   0017AA                     __ptext28:
  4191                           	callstack 0
  4192   0017AA                     i2_BorraLCD:
  4193                           	callstack 22
  4194                           
  4195                           ;LibLCDXC8.h: 117: LATE1=0;
  4196                           
  4197                           ;incstack = 0
  4198   0017AA  928D               	bcf	3981,1,c	;volatile
  4199                           
  4200                           ;LibLCDXC8.h: 118: EnviaDato(0x01);
  4201   0017AC  0E01               	movlw	1
  4202   0017AE  ECB2  F00A         	call	i2_EnviaDato
  4203                           
  4204                           ;LibLCDXC8.h: 119: HabilitaLCD();
  4205   0017B2  ECEE  F00B         	call	i2_HabilitaLCD	;wreg free
  4206                           
  4207                           ;LibLCDXC8.h: 120: RetardoLCD(2);
  4208   0017B6  0E02               	movlw	2
  4209   0017B8  ECE5  F009         	call	i2_RetardoLCD
  4210   0017BC  0012               	return		;funcret
  4211   0017BE                     __end_ofi2_BorraLCD:
  4212                           	callstack 0
  4213                           
  4214 ;; *************** function i2_EnviaDato *****************
  4215 ;; Defined at:
  4216 ;;		line 62 in file "LibLCDXC8.h"
  4217 ;; Parameters:    Size  Location     Type
  4218 ;;  a               1    wreg     unsigned char 
  4219 ;; Auto vars:     Size  Location     Type
  4220 ;;  a               1    3[COMRAM] unsigned char 
  4221 ;; Return value:  Size  Location     Type
  4222 ;;                  1    wreg      void 
  4223 ;; Registers used:
  4224 ;;		wreg, status,2, status,0, cstack
  4225 ;; Tracked objects:
  4226 ;;		On entry : 0/0
  4227 ;;		On exit  : 0/0
  4228 ;;		Unchanged: 0/0
  4229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4230 ;;      Params:         0       0       0       0       0       0       0       0       0
  4231 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4232 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4233 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4234 ;;Total ram usage:        2 bytes
  4235 ;; Hardware stack levels used: 1
  4236 ;; Hardware stack levels required when called: 1
  4237 ;; This function calls:
  4238 ;;		i2_HabilitaLCD
  4239 ;;		i2_RetardoLCD
  4240 ;; This function is called by:
  4241 ;;		i2_BorraLCD
  4242 ;;		i2_EscribeLCD_c
  4243 ;; This function uses a non-reentrant model
  4244 ;;
  4245                           
  4246                           	psect	text29
  4247   001564                     __ptext29:
  4248                           	callstack 0
  4249   001564                     i2_EnviaDato:
  4250                           	callstack 21
  4251                           
  4252                           ;incstack = 0
  4253                           ;i2EnviaDato@a stored from wreg
  4254   001564  6E04               	movwf	i2EnviaDato@a^0,c
  4255                           
  4256                           ;LibLCDXC8.h: 63: if(interfaz==4){
  4257   001566  0E04               	movlw	4
  4258   001568  1839               	xorwf	_interfaz^0,w,c
  4259   00156A  A4D8               	btfss	status,2,c
  4260   00156C  D017               	goto	i2l2110
  4261                           
  4262                           ;LibLCDXC8.h: 64: LATD=(LATD & 0b00001111) | (a & 0b11110000);
  4263   00156E  C004  F003         	movff	i2EnviaDato@a,??i2_EnviaDato
  4264   001572  0EF0               	movlw	240
  4265   001574  1603               	andwf	??i2_EnviaDato^0,f,c
  4266   001576  508C               	movf	140,w,c	;volatile
  4267   001578  0B0F               	andlw	15
  4268   00157A  1003               	iorwf	??i2_EnviaDato^0,w,c
  4269   00157C  6E8C               	movwf	140,c	;volatile
  4270                           
  4271                           ;LibLCDXC8.h: 65: HabilitaLCD();
  4272   00157E  ECEE  F00B         	call	i2_HabilitaLCD	;wreg free
  4273                           
  4274                           ;LibLCDXC8.h: 66: RetardoLCD(1);
  4275   001582  0E01               	movlw	1
  4276   001584  ECE5  F009         	call	i2_RetardoLCD
  4277                           
  4278                           ;LibLCDXC8.h: 67: LATD=(LATD & 0b00001111) | (a<<4);
  4279   001588  C004  F003         	movff	i2EnviaDato@a,??i2_EnviaDato
  4280   00158C  3A03               	swapf	??i2_EnviaDato^0,f,c
  4281   00158E  0EF0               	movlw	240
  4282   001590  1603               	andwf	??i2_EnviaDato^0,f,c
  4283   001592  508C               	movf	140,w,c	;volatile
  4284   001594  0B0F               	andlw	15
  4285   001596  1003               	iorwf	??i2_EnviaDato^0,w,c
  4286   001598  6E8C               	movwf	140,c	;volatile
  4287                           
  4288                           ;LibLCDXC8.h: 70: }else if(interfaz==8){
  4289   00159A  0012               	return	
  4290   00159C                     i2l2110:
  4291   00159C  0E08               	movlw	8
  4292   00159E  1839               	xorwf	_interfaz^0,w,c
  4293   0015A0  A4D8               	btfss	status,2,c
  4294   0015A2  0012               	return	
  4295                           
  4296                           ;LibLCDXC8.h: 71: LATD=a;
  4297   0015A4  C004  FF8C         	movff	i2EnviaDato@a,3980	;volatile
  4298   0015A8  0012               	return		;funcret
  4299   0015AA                     __end_ofi2_EnviaDato:
  4300                           	callstack 0
  4301                           
  4302 ;; *************** function i2_RetardoLCD *****************
  4303 ;; Defined at:
  4304 ;;		line 295 in file "LibLCDXC8.h"
  4305 ;; Parameters:    Size  Location     Type
  4306 ;;  a               1    wreg     unsigned char 
  4307 ;; Auto vars:     Size  Location     Type
  4308 ;;  a               1    1[COMRAM] unsigned char 
  4309 ;; Return value:  Size  Location     Type
  4310 ;;                  1    wreg      void 
  4311 ;; Registers used:
  4312 ;;		wreg, status,2, status,0
  4313 ;; Tracked objects:
  4314 ;;		On entry : 0/0
  4315 ;;		On exit  : 0/0
  4316 ;;		Unchanged: 0/0
  4317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4318 ;;      Params:         0       0       0       0       0       0       0       0       0
  4319 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4320 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4321 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4322 ;;Total ram usage:        2 bytes
  4323 ;; Hardware stack levels used: 1
  4324 ;; This function calls:
  4325 ;;		Nothing
  4326 ;; This function is called by:
  4327 ;;		i2_EnviaDato
  4328 ;;		i2_BorraLCD
  4329 ;;		i2_EscribeLCD_c
  4330 ;; This function uses a non-reentrant model
  4331 ;;
  4332                           
  4333                           	psect	text30
  4334   0013CA                     __ptext30:
  4335                           	callstack 0
  4336   0013CA                     i2_RetardoLCD:
  4337                           	callstack 22
  4338                           
  4339                           ;incstack = 0
  4340                           ;i2RetardoLCD@a stored from wreg
  4341   0013CA  6E02               	movwf	i2RetardoLCD@a^0,c
  4342                           
  4343                           ;LibLCDXC8.h: 296: switch(a){
  4344   0013CC  D023               	goto	i2l2072
  4345   0013CE                     i2l2062:
  4346   0013CE  0E27               	movlw	39
  4347   0013D0  6E01               	movwf	??i2_RetardoLCD^0,c
  4348   0013D2  0EF5               	movlw	245
  4349   0013D4                     i2u237_47:
  4350   0013D4  2EE8               	decfsz	wreg,f,c
  4351   0013D6  D7FE               	bra	i2u237_47
  4352   0013D8  2E01               	decfsz	??i2_RetardoLCD^0,f,c
  4353   0013DA  D7FC               	bra	i2u237_47
  4354   0013DC  F000               	nop	
  4355                           
  4356                           ;LibLCDXC8.h: 299: break;
  4357   0013DE  0012               	return	
  4358   0013E0                     i2l2064:
  4359   0013E0  0E03               	movlw	3
  4360   0013E2  6E01               	movwf	??i2_RetardoLCD^0,c
  4361   0013E4  0E98               	movlw	152
  4362   0013E6                     i2u238_47:
  4363   0013E6  2EE8               	decfsz	wreg,f,c
  4364   0013E8  D7FE               	bra	i2u238_47
  4365   0013EA  2E01               	decfsz	??i2_RetardoLCD^0,f,c
  4366   0013EC  D7FC               	bra	i2u238_47
  4367                           
  4368                           ;LibLCDXC8.h: 301: _delay((unsigned long)((640)*(8000000/4000000.0)));
  4369   0013EE  0EB6               	movlw	182
  4370   0013F0                     i2u239_47:
  4371   0013F0  D000               	nop2	
  4372   0013F2  D000               	nop2	
  4373   0013F4  2EE8               	decfsz	wreg,f,c
  4374   0013F6  D7FC               	bra	i2u239_47
  4375   0013F8  D000               	nop2	
  4376   0013FA  D000               	nop2	
  4377   0013FC  D000               	nop2	
  4378                           
  4379                           ;LibLCDXC8.h: 303: break;
  4380   0013FE  0012               	return	
  4381   001400                     i2l2066:
  4382   001400  0E42               	movlw	66
  4383   001402                     i2u240_47:
  4384   001402  2EE8               	decfsz	wreg,f,c
  4385   001404  D7FE               	bra	i2u240_47
  4386   001406  D000               	nop2	
  4387                           
  4388                           ;LibLCDXC8.h: 306: break;
  4389   001408  0012               	return	
  4390   00140A                     i2l2068:
  4391   00140A  0E1A               	movlw	26
  4392   00140C                     i2u241_47:
  4393   00140C  2EE8               	decfsz	wreg,f,c
  4394   00140E  D7FE               	bra	i2u241_47
  4395   001410  D000               	nop2	
  4396                           
  4397                           ;LibLCDXC8.h: 309: break;
  4398   001412  0012               	return	
  4399   001414                     i2l2072:
  4400   001414  5002               	movf	i2RetardoLCD@a^0,w,c
  4401                           
  4402                           ; Switch size 1, requested type "simple"
  4403                           ; Number of cases is 4, Range of values is 1 to 4
  4404                           ; switch strategies available:
  4405                           ; Name         Instructions Cycles
  4406                           ; simple_byte           13     7 (average)
  4407                           ;	Chosen strategy is simple_byte
  4408   001416  0A01               	xorlw	1	; case 1
  4409   001418  B4D8               	btfsc	status,2,c
  4410   00141A  D7D9               	goto	i2l2062
  4411   00141C  0A03               	xorlw	3	; case 2
  4412   00141E  B4D8               	btfsc	status,2,c
  4413   001420  D7DF               	goto	i2l2064
  4414   001422  0A01               	xorlw	1	; case 3
  4415   001424  B4D8               	btfsc	status,2,c
  4416   001426  D7EC               	goto	i2l2066
  4417   001428  0A07               	xorlw	7	; case 4
  4418   00142A  A4D8               	btfss	status,2,c
  4419   00142C  0012               	return	
  4420   00142E  D7ED               	goto	i2l2068
  4421   001430                     __end_ofi2_RetardoLCD:
  4422                           	callstack 0
  4423                           
  4424 ;; *************** function i2_HabilitaLCD *****************
  4425 ;; Defined at:
  4426 ;;		line 108 in file "LibLCDXC8.h"
  4427 ;; Parameters:    Size  Location     Type
  4428 ;;		None
  4429 ;; Auto vars:     Size  Location     Type
  4430 ;;		None
  4431 ;; Return value:  Size  Location     Type
  4432 ;;                  1    wreg      void 
  4433 ;; Registers used:
  4434 ;;		wreg
  4435 ;; Tracked objects:
  4436 ;;		On entry : 0/0
  4437 ;;		On exit  : 0/0
  4438 ;;		Unchanged: 0/0
  4439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4440 ;;      Params:         0       0       0       0       0       0       0       0       0
  4441 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4442 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4443 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4444 ;;Total ram usage:        0 bytes
  4445 ;; Hardware stack levels used: 1
  4446 ;; This function calls:
  4447 ;;		Nothing
  4448 ;; This function is called by:
  4449 ;;		i2_EnviaDato
  4450 ;;		i2_BorraLCD
  4451 ;;		i2_EscribeLCD_c
  4452 ;; This function uses a non-reentrant model
  4453 ;;
  4454                           
  4455                           	psect	text31
  4456   0017DC                     __ptext31:
  4457                           	callstack 0
  4458   0017DC                     i2_HabilitaLCD:
  4459                           	callstack 22
  4460                           
  4461                           ;LibLCDXC8.h: 110: LATE2=1;
  4462                           
  4463                           ;incstack = 0
  4464   0017DC  848D               	bsf	3981,2,c	;volatile
  4465                           
  4466                           ;LibLCDXC8.h: 111: _delay((unsigned long)((40)*(8000000/4000000.0)));
  4467   0017DE  0E1A               	movlw	26
  4468   0017E0                     i2u242_47:
  4469   0017E0  2EE8               	decfsz	wreg,f,c
  4470   0017E2  D7FE               	bra	i2u242_47
  4471   0017E4  D000               	nop2	
  4472                           
  4473                           ;LibLCDXC8.h: 113: LATE2=0;
  4474   0017E6  948D               	bcf	3981,2,c	;volatile
  4475   0017E8  0012               	return		;funcret
  4476   0017EA                     __end_ofi2_HabilitaLCD:
  4477                           	callstack 0
  4478                           
  4479 ;; *************** function _LeerTeclado *****************
  4480 ;; Defined at:
  4481 ;;		line 271 in file "Proyecto.c"
  4482 ;; Parameters:    Size  Location     Type
  4483 ;;		None
  4484 ;; Auto vars:     Size  Location     Type
  4485 ;;		None
  4486 ;; Return value:  Size  Location     Type
  4487 ;;                  1    wreg      unsigned char 
  4488 ;; Registers used:
  4489 ;;		wreg, status,2, status,0
  4490 ;; Tracked objects:
  4491 ;;		On entry : 0/0
  4492 ;;		On exit  : 0/0
  4493 ;;		Unchanged: 0/0
  4494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4495 ;;      Params:         0       0       0       0       0       0       0       0       0
  4496 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4497 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4498 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4499 ;;Total ram usage:        0 bytes
  4500 ;; Hardware stack levels used: 1
  4501 ;; This function calls:
  4502 ;;		Nothing
  4503 ;; This function is called by:
  4504 ;;		_ISR
  4505 ;; This function uses a non-reentrant model
  4506 ;;
  4507                           
  4508                           	psect	text32
  4509   00108E                     __ptext32:
  4510                           	callstack 0
  4511   00108E                     _LeerTeclado:
  4512                           	callstack 24
  4513                           
  4514                           ;Proyecto.c: 272: teclaRecibidaIf=1;
  4515                           
  4516                           ;incstack = 0
  4517   00108E  0E00               	movlw	0
  4518   001090  6E43               	movwf	(_teclaRecibidaIf+1)^0,c
  4519   001092  0E01               	movlw	1
  4520   001094  6E42               	movwf	_teclaRecibidaIf^0,c
  4521                           
  4522                           ;Proyecto.c: 273: switch (Tecla){
  4523   001096  D030               	goto	i2l1776
  4524   001098                     i2l1742:
  4525                           
  4526                           ;Proyecto.c: 275: Tecla='1';
  4527   001098  0E31               	movlw	49
  4528   00109A  6E48               	movwf	_Tecla^0,c
  4529                           
  4530                           ;Proyecto.c: 276: break;
  4531   00109C  0012               	return	
  4532   00109E                     i2l1744:
  4533                           
  4534                           ;Proyecto.c: 278: Tecla='2';
  4535   00109E  0E32               	movlw	50
  4536   0010A0  6E48               	movwf	_Tecla^0,c
  4537                           
  4538                           ;Proyecto.c: 279: break;
  4539   0010A2  0012               	return	
  4540   0010A4                     i2l1746:
  4541                           
  4542                           ;Proyecto.c: 281: Tecla='3';
  4543   0010A4  0E33               	movlw	51
  4544   0010A6  6E48               	movwf	_Tecla^0,c
  4545                           
  4546                           ;Proyecto.c: 282: break;
  4547   0010A8  0012               	return	
  4548   0010AA                     i2l1748:
  4549                           
  4550                           ;Proyecto.c: 284: Tecla='+';
  4551   0010AA  0E2B               	movlw	43
  4552   0010AC  6E48               	movwf	_Tecla^0,c
  4553                           
  4554                           ;Proyecto.c: 285: break;
  4555   0010AE  0012               	return	
  4556   0010B0                     i2l1750:
  4557                           
  4558                           ;Proyecto.c: 287: Tecla='4';
  4559   0010B0  0E34               	movlw	52
  4560   0010B2  6E48               	movwf	_Tecla^0,c
  4561                           
  4562                           ;Proyecto.c: 288: break;
  4563   0010B4  0012               	return	
  4564   0010B6                     i2l1752:
  4565                           
  4566                           ;Proyecto.c: 290: Tecla ='5';
  4567   0010B6  0E35               	movlw	53
  4568   0010B8  6E48               	movwf	_Tecla^0,c
  4569                           
  4570                           ;Proyecto.c: 291: break;
  4571   0010BA  0012               	return	
  4572   0010BC                     i2l1754:
  4573                           
  4574                           ;Proyecto.c: 293: Tecla='6';
  4575   0010BC  0E36               	movlw	54
  4576   0010BE  6E48               	movwf	_Tecla^0,c
  4577                           
  4578                           ;Proyecto.c: 294: break;
  4579   0010C0  0012               	return	
  4580   0010C2                     i2l1756:
  4581                           
  4582                           ;Proyecto.c: 296: Tecla='-';
  4583   0010C2  0E2D               	movlw	45
  4584   0010C4  6E48               	movwf	_Tecla^0,c
  4585                           
  4586                           ;Proyecto.c: 297: break;
  4587   0010C6  0012               	return	
  4588   0010C8                     i2l1758:
  4589                           
  4590                           ;Proyecto.c: 299: Tecla='7';
  4591   0010C8  0E37               	movlw	55
  4592   0010CA  6E48               	movwf	_Tecla^0,c
  4593                           
  4594                           ;Proyecto.c: 300: break;
  4595   0010CC  0012               	return	
  4596   0010CE                     i2l1760:
  4597                           
  4598                           ;Proyecto.c: 302: Tecla='8';
  4599   0010CE  0E38               	movlw	56
  4600   0010D0  6E48               	movwf	_Tecla^0,c
  4601                           
  4602                           ;Proyecto.c: 303: break;
  4603   0010D2  0012               	return	
  4604   0010D4                     i2l1762:
  4605                           
  4606                           ;Proyecto.c: 305: Tecla='9';
  4607   0010D4  0E39               	movlw	57
  4608   0010D6  6E48               	movwf	_Tecla^0,c
  4609                           
  4610                           ;Proyecto.c: 306: break;
  4611   0010D8  0012               	return	
  4612   0010DA                     i2l1764:
  4613                           
  4614                           ;Proyecto.c: 308: Tecla='X';
  4615   0010DA  0E58               	movlw	88
  4616   0010DC  6E48               	movwf	_Tecla^0,c
  4617                           
  4618                           ;Proyecto.c: 309: break;
  4619   0010DE  0012               	return	
  4620   0010E0                     i2l1766:
  4621                           
  4622                           ;Proyecto.c: 311: Tecla='B';
  4623   0010E0  0E42               	movlw	66
  4624   0010E2  6E48               	movwf	_Tecla^0,c
  4625                           
  4626                           ;Proyecto.c: 312: break;
  4627   0010E4  0012               	return	
  4628   0010E6                     i2l1768:
  4629                           
  4630                           ;Proyecto.c: 314: Tecla='0';
  4631   0010E6  0E30               	movlw	48
  4632   0010E8  6E48               	movwf	_Tecla^0,c
  4633                           
  4634                           ;Proyecto.c: 315: break;
  4635   0010EA  0012               	return	
  4636   0010EC                     i2l1770:
  4637                           
  4638                           ;Proyecto.c: 317: Tecla='=';
  4639   0010EC  0E3D               	movlw	61
  4640   0010EE  6E48               	movwf	_Tecla^0,c
  4641                           
  4642                           ;Proyecto.c: 318: break;
  4643   0010F0  0012               	return	
  4644   0010F2                     i2l1772:
  4645                           
  4646                           ;Proyecto.c: 320: Tecla='/';
  4647   0010F2  0E2F               	movlw	47
  4648   0010F4  6E48               	movwf	_Tecla^0,c
  4649                           
  4650                           ;Proyecto.c: 321: break;
  4651   0010F6  0012               	return	
  4652   0010F8                     i2l1776:
  4653   0010F8  5048               	movf	_Tecla^0,w,c
  4654                           
  4655                           ; Switch size 1, requested type "simple"
  4656                           ; Number of cases is 16, Range of values is 1 to 16
  4657                           ; switch strategies available:
  4658                           ; Name         Instructions Cycles
  4659                           ; simple_byte           49    25 (average)
  4660                           ;	Chosen strategy is simple_byte
  4661   0010FA  0A01               	xorlw	1	; case 1
  4662   0010FC  B4D8               	btfsc	status,2,c
  4663   0010FE  D7CC               	goto	i2l1742
  4664   001100  0A03               	xorlw	3	; case 2
  4665   001102  B4D8               	btfsc	status,2,c
  4666   001104  D7CC               	goto	i2l1744
  4667   001106  0A01               	xorlw	1	; case 3
  4668   001108  B4D8               	btfsc	status,2,c
  4669   00110A  D7CC               	goto	i2l1746
  4670   00110C  0A07               	xorlw	7	; case 4
  4671   00110E  B4D8               	btfsc	status,2,c
  4672   001110  D7CC               	goto	i2l1748
  4673   001112  0A01               	xorlw	1	; case 5
  4674   001114  B4D8               	btfsc	status,2,c
  4675   001116  D7CC               	goto	i2l1750
  4676   001118  0A03               	xorlw	3	; case 6
  4677   00111A  B4D8               	btfsc	status,2,c
  4678   00111C  D7CC               	goto	i2l1752
  4679   00111E  0A01               	xorlw	1	; case 7
  4680   001120  B4D8               	btfsc	status,2,c
  4681   001122  D7CC               	goto	i2l1754
  4682   001124  0A0F               	xorlw	15	; case 8
  4683   001126  B4D8               	btfsc	status,2,c
  4684   001128  D7CC               	goto	i2l1756
  4685   00112A  0A01               	xorlw	1	; case 9
  4686   00112C  B4D8               	btfsc	status,2,c
  4687   00112E  D7CC               	goto	i2l1758
  4688   001130  0A03               	xorlw	3	; case 10
  4689   001132  B4D8               	btfsc	status,2,c
  4690   001134  D7CC               	goto	i2l1760
  4691   001136  0A01               	xorlw	1	; case 11
  4692   001138  B4D8               	btfsc	status,2,c
  4693   00113A  D7CC               	goto	i2l1762
  4694   00113C  0A07               	xorlw	7	; case 12
  4695   00113E  B4D8               	btfsc	status,2,c
  4696   001140  D7CC               	goto	i2l1764
  4697   001142  0A01               	xorlw	1	; case 13
  4698   001144  B4D8               	btfsc	status,2,c
  4699   001146  D7CC               	goto	i2l1766
  4700   001148  0A03               	xorlw	3	; case 14
  4701   00114A  B4D8               	btfsc	status,2,c
  4702   00114C  D7CC               	goto	i2l1768
  4703   00114E  0A01               	xorlw	1	; case 15
  4704   001150  B4D8               	btfsc	status,2,c
  4705   001152  D7CC               	goto	i2l1770
  4706   001154  0A1F               	xorlw	31	; case 16
  4707   001156  A4D8               	btfss	status,2,c
  4708   001158  0012               	return	
  4709   00115A  D7CB               	goto	i2l1772
  4710   00115C                     __end_of_LeerTeclado:
  4711                           	callstack 0
  4712                           
  4713                           	psect	rparam
  4714   000000                     
  4715                           	psect	temp
  4716   00004E                     btemp:
  4717                           	callstack 0
  4718   00004E                     	ds	1
  4719   000000                     int$flags	set	btemp
  4720   000000                     wtemp8	set	btemp+1
  4721   000000                     ttemp5	set	btemp+1
  4722   000000                     ttemp6	set	btemp+4
  4723   000000                     ttemp7	set	btemp+8
  4724                           
  4725                           	psect	idloc
  4726                           
  4727                           ;Config register IDLOC0 @ 0x200000
  4728                           ;	unspecified, using default values
  4729   200000                     	org	2097152
  4730   200000  FF                 	db	255
  4731                           
  4732                           ;Config register IDLOC1 @ 0x200001
  4733                           ;	unspecified, using default values
  4734   200001                     	org	2097153
  4735   200001  FF                 	db	255
  4736                           
  4737                           ;Config register IDLOC2 @ 0x200002
  4738                           ;	unspecified, using default values
  4739   200002                     	org	2097154
  4740   200002  FF                 	db	255
  4741                           
  4742                           ;Config register IDLOC3 @ 0x200003
  4743                           ;	unspecified, using default values
  4744   200003                     	org	2097155
  4745   200003  FF                 	db	255
  4746                           
  4747                           ;Config register IDLOC4 @ 0x200004
  4748                           ;	unspecified, using default values
  4749   200004                     	org	2097156
  4750   200004  FF                 	db	255
  4751                           
  4752                           ;Config register IDLOC5 @ 0x200005
  4753                           ;	unspecified, using default values
  4754   200005                     	org	2097157
  4755   200005  FF                 	db	255
  4756                           
  4757                           ;Config register IDLOC6 @ 0x200006
  4758                           ;	unspecified, using default values
  4759   200006                     	org	2097158
  4760   200006  FF                 	db	255
  4761                           
  4762                           ;Config register IDLOC7 @ 0x200007
  4763                           ;	unspecified, using default values
  4764   200007                     	org	2097159
  4765   200007  FF                 	db	255
  4766                           
  4767                           	psect	config
  4768                           
  4769                           ;Config register CONFIG1L @ 0x300000
  4770                           ;	unspecified, using default values
  4771                           ;	PLL Prescaler Selection bits
  4772                           ;	PLLDIV = 0x0, unprogrammed default
  4773                           ;	System Clock Postscaler Selection bits
  4774                           ;	CPUDIV = 0x0, unprogrammed default
  4775                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  4776                           ;	USBDIV = 0x0, unprogrammed default
  4777   300000                     	org	3145728
  4778   300000  00                 	db	0
  4779                           
  4780                           ;Config register CONFIG1H @ 0x300001
  4781                           ;	Oscillator Selection bits
  4782                           ;	FOSC = INTOSC_EC, Internal oscillator, CLKO function on RA6, EC used by USB (INTCKO)
  4783                           ;	Fail-Safe Clock Monitor Enable bit
  4784                           ;	FCMEN = 0x0, unprogrammed default
  4785                           ;	Internal/External Oscillator Switchover bit
  4786                           ;	IESO = 0x0, unprogrammed default
  4787   300001                     	org	3145729
  4788   300001  09                 	db	9
  4789                           
  4790                           ;Config register CONFIG2L @ 0x300002
  4791                           ;	unspecified, using default values
  4792                           ;	Power-up Timer Enable bit
  4793                           ;	PWRT = 0x1, unprogrammed default
  4794                           ;	Brown-out Reset Enable bits
  4795                           ;	BOR = 0x3, unprogrammed default
  4796                           ;	Brown-out Reset Voltage bits
  4797                           ;	BORV = 0x3, unprogrammed default
  4798                           ;	USB Voltage Regulator Enable bit
  4799                           ;	VREGEN = 0x0, unprogrammed default
  4800   300002                     	org	3145730
  4801   300002  1F                 	db	31
  4802                           
  4803                           ;Config register CONFIG2H @ 0x300003
  4804                           ;	Watchdog Timer Enable bit
  4805                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  4806                           ;	Watchdog Timer Postscale Select bits
  4807                           ;	WDTPS = 0xF, unprogrammed default
  4808   300003                     	org	3145731
  4809   300003  1E                 	db	30
  4810                           
  4811                           ; Padding undefined space
  4812   300004                     	org	3145732
  4813   300004  FF                 	db	255
  4814                           
  4815                           ;Config register CONFIG3H @ 0x300005
  4816                           ;	CCP2 MUX bit
  4817                           ;	CCP2MX = 0x1, unprogrammed default
  4818                           ;	PORTB A/D Enable bit
  4819                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  4820                           ;	Low-Power Timer 1 Oscillator Enable bit
  4821                           ;	LPT1OSC = 0x0, unprogrammed default
  4822                           ;	MCLR Pin Enable bit
  4823                           ;	MCLRE = 0x1, unprogrammed default
  4824   300005                     	org	3145733
  4825   300005  81                 	db	129
  4826                           
  4827                           ;Config register CONFIG4L @ 0x300006
  4828                           ;	Stack Full/Underflow Reset Enable bit
  4829                           ;	STVREN = 0x1, unprogrammed default
  4830                           ;	Single-Supply ICSP Enable bit
  4831                           ;	LVP = OFF, Single-Supply ICSP disabled
  4832                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  4833                           ;	ICPRT = 0x0, unprogrammed default
  4834                           ;	Extended Instruction Set Enable bit
  4835                           ;	XINST = 0x0, unprogrammed default
  4836                           ;	Background Debugger Enable bit
  4837                           ;	DEBUG = 0x1, unprogrammed default
  4838   300006                     	org	3145734
  4839   300006  81                 	db	129
  4840                           
  4841                           ; Padding undefined space
  4842   300007                     	org	3145735
  4843   300007  FF                 	db	255
  4844                           
  4845                           ;Config register CONFIG5L @ 0x300008
  4846                           ;	unspecified, using default values
  4847                           ;	Code Protection bit
  4848                           ;	CP0 = 0x1, unprogrammed default
  4849                           ;	Code Protection bit
  4850                           ;	CP1 = 0x1, unprogrammed default
  4851                           ;	Code Protection bit
  4852                           ;	CP2 = 0x1, unprogrammed default
  4853                           ;	Code Protection bit
  4854                           ;	CP3 = 0x1, unprogrammed default
  4855   300008                     	org	3145736
  4856   300008  0F                 	db	15
  4857                           
  4858                           ;Config register CONFIG5H @ 0x300009
  4859                           ;	unspecified, using default values
  4860                           ;	Boot Block Code Protection bit
  4861                           ;	CPB = 0x1, unprogrammed default
  4862                           ;	Data EEPROM Code Protection bit
  4863                           ;	CPD = 0x1, unprogrammed default
  4864   300009                     	org	3145737
  4865   300009  C0                 	db	192
  4866                           
  4867                           ;Config register CONFIG6L @ 0x30000A
  4868                           ;	unspecified, using default values
  4869                           ;	Write Protection bit
  4870                           ;	WRT0 = 0x1, unprogrammed default
  4871                           ;	Write Protection bit
  4872                           ;	WRT1 = 0x1, unprogrammed default
  4873                           ;	Write Protection bit
  4874                           ;	WRT2 = 0x1, unprogrammed default
  4875                           ;	Write Protection bit
  4876                           ;	WRT3 = 0x1, unprogrammed default
  4877   30000A                     	org	3145738
  4878   30000A  0F                 	db	15
  4879                           
  4880                           ;Config register CONFIG6H @ 0x30000B
  4881                           ;	unspecified, using default values
  4882                           ;	Configuration Register Write Protection bit
  4883                           ;	WRTC = 0x1, unprogrammed default
  4884                           ;	Boot Block Write Protection bit
  4885                           ;	WRTB = 0x1, unprogrammed default
  4886                           ;	Data EEPROM Write Protection bit
  4887                           ;	WRTD = 0x1, unprogrammed default
  4888   30000B                     	org	3145739
  4889   30000B  E0                 	db	224
  4890                           
  4891                           ;Config register CONFIG7L @ 0x30000C
  4892                           ;	unspecified, using default values
  4893                           ;	Table Read Protection bit
  4894                           ;	EBTR0 = 0x1, unprogrammed default
  4895                           ;	Table Read Protection bit
  4896                           ;	EBTR1 = 0x1, unprogrammed default
  4897                           ;	Table Read Protection bit
  4898                           ;	EBTR2 = 0x1, unprogrammed default
  4899                           ;	Table Read Protection bit
  4900                           ;	EBTR3 = 0x1, unprogrammed default
  4901   30000C                     	org	3145740
  4902   30000C  0F                 	db	15
  4903                           
  4904                           ;Config register CONFIG7H @ 0x30000D
  4905                           ;	unspecified, using default values
  4906                           ;	Boot Block Table Read Protection bit
  4907                           ;	EBTRB = 0x1, unprogrammed default
  4908   30000D                     	org	3145741
  4909   30000D  40                 	db	64
  4910                           tosu	equ	0xFFF
  4911                           tosh	equ	0xFFE
  4912                           tosl	equ	0xFFD
  4913                           stkptr	equ	0xFFC
  4914                           pclatu	equ	0xFFB
  4915                           pclath	equ	0xFFA
  4916                           pcl	equ	0xFF9
  4917                           tblptru	equ	0xFF8
  4918                           tblptrh	equ	0xFF7
  4919                           tblptrl	equ	0xFF6
  4920                           tablat	equ	0xFF5
  4921                           prodh	equ	0xFF4
  4922                           prodl	equ	0xFF3
  4923                           indf0	equ	0xFEF
  4924                           postinc0	equ	0xFEE
  4925                           postdec0	equ	0xFED
  4926                           preinc0	equ	0xFEC
  4927                           plusw0	equ	0xFEB
  4928                           fsr0h	equ	0xFEA
  4929                           fsr0l	equ	0xFE9
  4930                           wreg	equ	0xFE8
  4931                           indf1	equ	0xFE7
  4932                           postinc1	equ	0xFE6
  4933                           postdec1	equ	0xFE5
  4934                           preinc1	equ	0xFE4
  4935                           plusw1	equ	0xFE3
  4936                           fsr1h	equ	0xFE2
  4937                           fsr1l	equ	0xFE1
  4938                           bsr	equ	0xFE0
  4939                           indf2	equ	0xFDF
  4940                           postinc2	equ	0xFDE
  4941                           postdec2	equ	0xFDD
  4942                           preinc2	equ	0xFDC
  4943                           plusw2	equ	0xFDB
  4944                           fsr2h	equ	0xFDA
  4945                           fsr2l	equ	0xFD9
  4946                           status	equ	0xFD8

Data Sizes:
    Strings     74
    Constant    0
    Data        16
    BSS         12
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     49      77
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    Password@pass	PTR unsigned char  size(1) Largest target is 4
		 -> ing(COMRAM[4]), 

    MensajeLCD_Word@a	PTR unsigned char  size(1) Largest target is 23
		 -> STR_9(CODE[7]), STR_8(CODE[6]), STR_7(CODE[6]), STR_6(CODE[23]), 
		 -> STR_5(CODE[11]), STR_4(CODE[23]), STR_3(CODE[10]), STR_2(CODE[17]), 
		 -> STR_1(CODE[11]), 

    NuevoCaracter@c	PTR unsigned char  size(1) Largest target is 8
		 -> cara(COMRAM[8]), 


Critical Paths under _main in COMRAM

    _main->_TransmitirDatos
    _TransmitirDatos->___awmod
    ___awmod->___awdiv
    _MensajeLCD_Word->_EscribeLCD_c
    _Password->_DireccionaLCD
    _Password->_EscribeLCD_c
    _DireccionaLCD->_EnviaDato
    _NuevoCaracter->_EscribeLCD_c
    _EscribeLCD_c->_EnviaDato
    _LeerHT11->_LeerByte
    _LeerByte->_LeerBit
    _InicializaLCD->_EnviaDato
    _BorraLCD->_EnviaDato
    _EnviaDato->_RetardoLCD

Critical Paths under _ISR in COMRAM

    _ISR->i2_MensajeLCD_Word
    i2_MensajeLCD_Word->i2_EscribeLCD_c
    i2_EscribeLCD_c->i2_EnviaDato
    i2_BorraLCD->i2_EnviaDato
    i2_EnviaDato->i2_RetardoLCD

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    8665
                                             45 COMRAM     4     4      0
                           _BorraLCD
                  _ConvertirUnidades
                      _DireccionaLCD
                       _EscribeLCD_c
                      _InicializaLCD
                           _LeerHT11
                    _MensajeLCD_Word
                         _Movimiento
                      _NuevoCaracter
                           _Password
                    _TransmitirDatos
                          _Velocidad
 ---------------------------------------------------------------------------------
 (1) _Velocidad                                            2     0      2     384
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _TransmitirDatos                                     20    16      4    5544
                                             29 COMRAM    16    12      4
                           _BorraLCD
                      _DireccionaLCD
                       _EscribeLCD_c
                    _MensajeLCD_Word
                         _Transmitir
                            ___awdiv
                            ___awmod
                            ___lwdiv
                            ___lwmod
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     311
                                             15 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     615
                                             15 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     922
                                             15 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     600
                                             23 COMRAM     6     2      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4    1212
                                             15 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _Transmitir                                           1     1      0      22
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _MensajeLCD_Word                                      4     3      1     924
                                             20 COMRAM     4     3      1
                       _EscribeLCD_c
 ---------------------------------------------------------------------------------
 (1) _Password                                            12    10      2     576
                                             20 COMRAM    12    10      2
                      _DireccionaLCD
                       _EscribeLCD_c
 ---------------------------------------------------------------------------------
 (2) _DireccionaLCD                                        1     1      0     132
                                             19 COMRAM     1     1      0
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (1) _NuevoCaracter                                        4     3      1     405
                                             20 COMRAM     4     3      1
                         _ComandoLCD
                       _EscribeLCD_c
 ---------------------------------------------------------------------------------
 (3) _EscribeLCD_c                                         1     1      0     132
                                             19 COMRAM     1     1      0
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (2) _ComandoLCD                                           2     2      0      22
                                             15 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Movimiento                                           1     1      0       0
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _LeerHT11                                             1     1      0     117
                                             19 COMRAM     1     1      0
                           _LeerByte
 ---------------------------------------------------------------------------------
 (2) _LeerByte                                             3     3      0     117
                                             16 COMRAM     3     3      0
                            _LeerBit
 ---------------------------------------------------------------------------------
 (3) _LeerBit                                              1     1      0      25
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _InicializaLCD                                        0     0      0     220
                           _BorraLCD
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (2) _BorraLCD                                             0     0      0     110
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (4) _EnviaDato                                            2     2      0      88
                                             17 COMRAM     2     2      0
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (4) _RetardoLCD                                           2     2      0      22
                                             15 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (4) _HabilitaLCD                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConvertirUnidades                                    1     1      0      22
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISR                                                  6     6      0     534
                                              9 COMRAM     6     6      0
                        _LeerTeclado
                         i2_BorraLCD
                     i2_EscribeLCD_c
                  i2_MensajeLCD_Word
 ---------------------------------------------------------------------------------
 (7) i2_MensajeLCD_Word                                    4     3      1     292
                                              5 COMRAM     4     3      1
                     i2_EscribeLCD_c
 ---------------------------------------------------------------------------------
 (8) i2_EscribeLCD_c                                       1     1      0     132
                                              4 COMRAM     1     1      0
                        i2_EnviaDato
                      i2_HabilitaLCD
                       i2_RetardoLCD
 ---------------------------------------------------------------------------------
 (7) i2_BorraLCD                                           0     0      0     110
                        i2_EnviaDato
                      i2_HabilitaLCD
                       i2_RetardoLCD
 ---------------------------------------------------------------------------------
 (9) i2_EnviaDato                                          2     2      0      88
                                              2 COMRAM     2     2      0
                      i2_HabilitaLCD
                       i2_RetardoLCD
 ---------------------------------------------------------------------------------
 (9) i2_RetardoLCD                                         2     2      0      22
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (9) i2_HabilitaLCD                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _LeerTeclado                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BorraLCD
     _EnviaDato
       _HabilitaLCD
       _RetardoLCD
     _HabilitaLCD
     _RetardoLCD
   _ConvertirUnidades
   _DireccionaLCD
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _EscribeLCD_c
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _InicializaLCD
     _BorraLCD
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _LeerHT11
     _LeerByte
       _LeerBit
   _MensajeLCD_Word
     _EscribeLCD_c
   _Movimiento
   _NuevoCaracter
     _ComandoLCD
     _EscribeLCD_c
   _Password
     _DireccionaLCD
     _EscribeLCD_c
   _TransmitirDatos
     _BorraLCD
     _DireccionaLCD
     _EscribeLCD_c
     _MensajeLCD_Word
     _Transmitir
     ___awdiv
     ___awmod
       ___awdiv (ARG)
     ___lwdiv
     ___lwmod
     ___wmul
   _Velocidad

 _ISR (ROOT)
   _LeerTeclado
   i2_BorraLCD
     i2_EnviaDato
       i2_HabilitaLCD
       i2_RetardoLCD
     i2_HabilitaLCD
     i2_RetardoLCD
   i2_EscribeLCD_c
     i2_EnviaDato
     i2_HabilitaLCD
     i2_RetardoLCD
   i2_MensajeLCD_Word
     i2_EscribeLCD_c

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      37        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     31      4D       1       81.9%
BITBIGSFRhhhlh      19      0       0      21        0.0%
BITBIGSFRlhll       10      0       0      33        0.0%
BITBIGSFRhhhh        D      0       0      20        0.0%
BITBIGSFRlll         D      0       0      35        0.0%
BITBIGSFRhhllll      C      0       0      27        0.0%
BITBIGSFRhhlllh      A      0       0      26        0.0%
BITBIGSFRhhllll      6      0       0      28        0.0%
BITBIGSFRlhhhl       5      0       0      31        0.0%
BITBIGSFRhhlhl       5      0       0      24        0.0%
BITBIGSFRhll         4      0       0      29        0.0%
BITBIGSFRhhlhhh      3      0       0      23        0.0%
BITBIGSFRlhhhh       1      0       0      30        0.0%
BITBIGSFRlhhl        1      0       0      32        0.0%
BITBIGSFRllh         1      0       0      34        0.0%
BITBIGSFRhhllh       1      0       0      25        0.0%
BITBIGSFRhhhll       1      0       0      22        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      4D      36        0.0%
DATA                 0      0      4D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Thu Jun 08 17:22:57 2023

                        _a 0036                          _c 0046          Transmitir@BufferT 0010  
                       _GO 7E11               ___awdiv@sign 0015                 EnviaDato@a 0013  
      ___wmul@multiplicand 0012              ??_LeerTeclado 0001              _InicializaLCD 115C  
                      l304 16C2                        l337 17A4                        l281 12C4  
                      l285 1674                        l349 0906                        l288 167E  
                      l299 169E                        l904 15E2                        l894 1478  
                      _GIE 7F97                        _RA5 7C05                        _RC2 7C12  
                      _RB4 7C0C                        _RB5 7C0D                        _RE0 7C20  
                      _RB6 7C0E                        _RB7 7C0F                        _PR2 0FCB  
                      _ISR 0008                        _ing 004A               ___awmod@sign 001D  
                      wreg 0FE8                       ?_ISR 0001           ??i2_EscribeLCD_c 0005  
                     l2030 137A                       l2032 139A                       l2034 13A4  
                     l2050 1556                       l2028 1368                       l2204 1232  
                     l2220 1264                       l2038 13AE                       l2142 148A  
                     l2206 123A                       l2224 1272                       l2216 125A  
                     l2240 1314                       l2090 16B2                       l2316 116E  
                     l2164 1726                       l2260 135A                       l2252 1342  
                     l2244 1322                       l2236 1308                       l2326 118C  
                     l2174 17EC                       l2246 132A                       l2270 1446  
                     l2336 11AA                       l2192 120C                       l2256 134C  
                     l2272 144E                       l2520 0AEE                       l2512 0A9E  
                     l2282 146E                       l2290 15B8                       l2356 11E2  
                     l2292 15C0                       l2516 0AAE                       l2390 12A2  
                     l2198 121C                       l2526 0B04                       l2470 0988  
                     l2550 0F20                       l2528 0B3C                       l2544 0EFE  
                     l2298 15D8                       l2474 0998                       l2562 0F64  
                     l2538 0EDC                       l2484 09EE                       l2556 0F42  
                     l2486 0A26                       l2478 09D8                       l2574 0FA8  
                     l2592 1024                       l2568 0F86                       l2850 1602  
                     l2596 105A                       l2588 0FEE                       l2932 0C5A  
                     l2960 0CDE                       l2938 0C6A                       l2970 0D10  
                     l2976 0D3A                       STR_1 0818                       STR_2 0807  
                     STR_3 082E                       STR_4 0801                       STR_5 0823  
                     STR_6 0801                       STR_7 083F                       STR_8 0845  
                     STR_9 0838                       u1110 16C6                       u1210 123E  
                     u2110 1626                       u1150 14CE                       u1310 1452  
                     u2130 0C9A                       u1420 12D8                       u1340 15C4  
                     u1430 12EC                       u1270 132E                       _LATB 0F8A  
                     u2207 0D2E                       u1440 12EE                       _LATD 0F8C  
                     u2217 0D44                       u1610 0F2C                       u2307 1380  
                     u2227 16D6                       u2317 138A                       u2237 16E0  
                     u1710 0FCC                       u1630 0F4E                       u2327 139C  
                     u2247 16EC                       u2167 0BEC                       u1800 1068  
                     u1720 0FDC                       u1712 0FCE                       u2337 13A6  
                     u2257 166A                       u2177 0C30                       u1810 107C  
                     u1802 106A                       u1722 0FDE                       u1650 0F70  
                     u1570 0EE8                       u2347 17D2                       u2267 167A  
                     u2187 0CD0                       u1812 107E                       u1740 0FFE  
                     u2277 16A4                       u2197 0CF6                       u1750 1012  
                     u1742 1000                       u1670 0F92                       u1590 0F0A  
                     u2287 16B4                       u1752 1014                       u2297 136E  
                     u1770 1034                       u1690 0FB4                       u1780 1048  
                     u1772 1036                       u1782 104A                       _PEIE 7F96  
                     _RBIE 7F93                       _RBIF 7F90                       _RBPU 7F8F  
                     _TMR0 0FD6                       _TMR1 0FCE                       _TMR2 0FCC  
                     _TRMT 7D61                       _Cont 0038             ??_EscribeLCD_c 0014  
                     _Temp 0049                       _cara 003A                       _main 0B4A  
                     fsr1h 0FE2                       fsr2h 0FDA                       indf2 0FDF  
                     fsr1l 0FE1                       fsr2l 0FD9                       btemp 004E  
                     prodh 0FF4                       prodl 0FF3                       start 000E  
          __end_of_LeerBit 16CA               ___param_bank 0000                      ??_ISR 000A  
           ?_InicializaLCD 0001                      ?_main 0001            __end_of___awdiv 127C  
                    _ADRES 0FC3                      _CCPR2 0FBB            __end_of___awmod 1364  
               _ComandoLCD 16CA              EscribeLCD_c@a 0014                      _T0CON 0FD5  
          ___awdiv@divisor 0012                      _T1CON 0FCD                      _T2CON 0FCA  
                    _LATE1 7C69                      _LATE2 7C6A            __end_of___lwdiv 1482  
          __end_of___lwmod 15EC                      i2l400 0E4C                      i2l412 0EB4  
                    i2l404 0E60                      i2l405 0E78                      i2l406 0E68  
                    i2l408 0E70                      i2l380 0DF4                      i2l373 0DD0  
                    i2l390 0E20                      i2l382 0DFC                      i2l375 0DCE  
                    i2l392 0E28                      i2l384 0E04                      i2l396 0E3C  
                    i2l388 0E18                      i2l398 0E44            ___awdiv@counter 0014  
                    _RCREG 0FAE                      _RCSTA 0FAB                      _SPBRG 0FAF  
                    _PORTB 0F81                      _USBEN 7B6B                      _TRISA 0F92  
                    _TRISB 0F93                      _TRISC 0F94                      _TRISD 0F95  
                    _TXREG 0FAD                      _TXSTA 0FAC                      _Tecla 0048  
          _teclaRecibidaIf 0042        __end_of_LeerTeclado 115C                ?i2_BorraLCD 0001  
                    main@i 0030             NuevoCaracter@c 0015             NuevoCaracter@i 0017  
                    tablat 0FF5                _HabilitaLCD 17CE                      ttemp5 004F  
                    ttemp6 0052                      ttemp7 0056                      status 0FD8  
                    wtemp8 004F              Password@F3203 0032           __end_of_BorraLCD 1796  
         __end_of_LeerHT11 169A            __initialization 1628           __end_of_LeerByte 1740  
             __end_of_main 0D7E                     ??_main 002E           __end_of_Password 12F4  
            __activetblptr 0002                     _ADCON0 0FC2                     _ADCON1 0FC1  
                   _ADCON2 0FC0      __end_of_NuevoCaracter 1628             DireccionaLCD@a 0014  
                   _CCPR1L 0FBE           ___awdiv@dividend 0010                     i2l2110 159C  
                   i2l2062 13CE                     i2l2064 13E0                     i2l2072 1414  
                   i2l2066 1400                     i2l2068 140A                     i2l1750 10B0  
                   i2l1742 1098                     i2l2614 14D8                     i2l1760 10CE  
                   i2l1752 10B6                     i2l1744 109E                     i2l2800 0E30  
                   i2l1770 10EC                     i2l1762 10D4                     i2l1754 10BC  
                   i2l1746 10A4                     i2l1772 10F2                     i2l1764 10DA  
                   i2l1756 10C2                     i2l1748 10AA                     i2l2812 0E54  
                   i2l1766 10E0                     i2l1758 10C8                     i2l1768 10E6  
                   i2l1776 10F8                     i2l2832 0E96                     i2l2828 0E86  
                   i2l2788 0E0C                     _OSCCON 0FD3                     _TMR0IE 7F95  
                   _TMR0IF 7F92                     _TMR1IE 7CE8                     _TMR1IF 7CF0  
                   _TMR0ON 7EAF                     _TMR1ON 7E68                     _TMR2ON 7E52  
                   _TRISA5 7C95                     _TRISC1 7CA1                     _TRISC2 7CA2  
                   _TRISE0 7CB0                     _TRISE1 7CB1                     _TRISE2 7CB2  
                   _TRISC6 7CA6                     _TRISC7 7CA7                  ??_LeerBit 0010  
    __end_of_DireccionaLCD 1756                     _UTRDIS 7B7B                 _RetardoLCD 1364  
      TransmitirDatos@Ent1 001E        TransmitirDatos@Ent2 0020                 _Movimiento 0FBC  
                   ___wmul 16F8                  ??___awdiv 0014                  ??___awmod 001C  
                ??___lwdiv 0014                  ??___lwmod 0014            ??_InicializaLCD 0014  
                   clear_0 164E           ___awdiv@quotient 0016            ___awmod@divisor 001A  
                   isa$std 0001            ___awmod@counter 001C       __end_of_EscribeLCD_c 176C  
              ?_ComandoLCD 0001                _LeerTeclado 108E               ?i2_EnviaDato 0001  
             __pdataCOMRAM 0032               __mediumconst 0000                     tblptrh 0FF7  
                   tblptrl 0FF6                     tblptru 0FF8                 _Transmitir 17EA  
    __end_ofi2_HabilitaLCD 17EA                 __accesstop 0060    __end_of__initialization 1654  
            ___rparam_used 0001             __pcstackCOMRAM 0001          __end_of_EnviaDato 1564  
        i2_MensajeLCD_Word 14D0         ?i2_MensajeLCD_Word 0006             Password@access 001D  
                ?_BorraLCD 0001                  ?_LeerHT11 0001                  ?_LeerByte 0001  
           Password@secret 0019        ??i2_MensajeLCD_Word 0007                ?_RetardoLCD 0001  
              RetardoLCD@a 0011          __end_of_Velocidad 0FBC                  ?_Password 0015  
           ComandoLCD@data 0011                ?_Movimiento 0001                    ?___wmul 0010  
                  _CCP1CON 0FBD                    _CCP2CON 0FBA  __end_ofi2_MensajeLCD_Word 151E  
             ??i2_BorraLCD 0005                 ??_BorraLCD 0014                 ??_LeerHT11 0014  
              ?_Transmitir 0001          ??_MensajeLCD_Word 0016                 ??_LeerByte 0011  
             ?_HabilitaLCD 0001                    _LeerBit 169A                 ??_Password 0017  
                  __Hparam 0000                    __Lparam 0000       TransmitirDatos@TempC 002C  
                  ___awdiv 11F8                    ___awmod 12F4                    ___lwdiv 1430  
                  ___lwmod 15AA               __psmallconst 0800         __end_ofi2_BorraLCD 17BE  
                  __pcinit 1628                    __ramtop 0800                    __ptext0 0B4A  
                  __ptext1 0EC8                    __ptext2 084C                    __ptext3 16F8  
                  __ptext4 15AA                    __ptext5 1430                    __ptext6 12F4  
                  __ptext7 11F8                    __ptext8 17EA                    __ptext9 1482  
         ___awmod@dividend 0018                    _teclaIf 0044             __pintcode_body 0D7E  
     end_of_initialization 1654        _TransmitirDatos$230 0028        _TransmitirDatos$226 0022  
      _TransmitirDatos$227 0024        _TransmitirDatos$229 0026        _TransmitirDatos$869 002A  
            __Lmediumconst 0000                    int_func 0D7E               _EscribeLCD_c 1756  
                  postdec1 0FE5          ??_TransmitirDatos 0022                    postinc0 0FEE  
                  postinc1 0FE6                    postinc2 0FDE               ??_ComandoLCD 0010  
             ?_LeerTeclado 0001                  LeerByte@i 0013            i2EscribeLCD_c@a 0005  
            ?i2_RetardoLCD 0001         __end_of_ComandoLCD 16F8             __end_of___wmul 171E  
            __pidataCOMRAM 17BE      __end_of_InicializaLCD 11F8                  _EnviaDato 151E  
      start_initialization 1628                __end_of_ISR 0EC8                  Password@i 001F  
             Password@pass 0015             ??i2_RetardoLCD 0001               ??_RetardoLCD 0010  
             ??_Movimiento 0010                   ??___wmul 0014                  _Velocidad 0EC8  
          _MensajeLCD_Word 1482                 ?_EnviaDato 0001                __pbssCOMRAM 0042  
       __end_of_RetardoLCD 13CA           MensajeLCD_Word@a 0015           MensajeLCD_Word@i 0017  
             ??_Transmitir 0010              _NuevoCaracter 15EC         __end_of_Movimiento 108E  
                 ?_LeerBit 0001              _DireccionaLCD 1740             i2_EscribeLCD_c 176C  
         ___lwdiv@dividend 0010                  __pintcode 0008                   ?___awdiv 0010  
                 ?___awmod 0018                 ?_Velocidad 0010                   ?___lwdiv 0010  
                 ?___lwmod 0010         __end_of_Transmitir 17F6                __smallconst 0800  
         ___lwdiv@quotient 0014             ?_NuevoCaracter 0015            _TransmitirDatos 084C  
           ___wmul@product 0014              i2_HabilitaLCD 17DC             ?_DireccionaLCD 0001  
   __end_ofi2_EscribeLCD_c 1782                   i2u240_47 1402                   i2u241_47 140C  
                 i2u242_47 17E0                   i2u235_47 0DB2                   i2u236_47 0E8E  
                 i2u237_47 13D4                   i2u238_47 13E6                   i2u239_47 13F0  
                 i2u184_40 151C    __end_of_MensajeLCD_Word 14D0          ___wmul@multiplier 0010  
            ??i2_EnviaDato 0003       __end_ofi2_RetardoLCD 1430                ??_EnviaDato 0012  
        _ConvertirUnidades 1796         ?_ConvertirUnidades 0001                   _BorraLCD 1782  
                 _LeerHT11 1662                  copy_data0 163C                   _LeerByte 171E  
           ?i2_HabilitaLCD 0001        ??_ConvertirUnidades 0010            ?i2_EscribeLCD_c 0001  
                 _Password 127C                   __Hrparam 0000                   __Lrparam 0000  
              ??_Velocidad 0012               i2EnviaDato@a 0004  __end_of_ConvertirUnidades 17AA  
          ??_NuevoCaracter 0016    __end_of_TransmitirDatos 0B4A            ___lwdiv@divisor 0012  
          ___lwdiv@counter 0016                   __ptext10 127C                   __ptext11 1740  
                 __ptext20 1782                   __ptext12 15EC                   __ptext21 151E  
                 __ptext13 1756                   __ptext30 13CA                   __ptext22 1364  
                 __ptext14 16CA                   __ptext31 17DC                   __ptext23 17CE  
                 __ptext15 0FBC                   __ptext32 108E                   __ptext24 1796  
                 __ptext16 1662                   __ptext17 171E                   __ptext26 14D0  
                 __ptext18 169A                   __ptext27 176C                   __ptext19 115C  
                 __ptext28 17AA                   __ptext29 1564        __end_ofi2_EnviaDato 15AA  
          ??_DireccionaLCD 0014                   _interfaz 0039               Velocidad@val 0010  
                 isa$xinst 0000           ?_MensajeLCD_Word 0015                   int$flags 004E  
        NuevoCaracter@addr 0016            ??i2_HabilitaLCD 0001                   intlevel2 0000  
            ??_HabilitaLCD 0010           ___lwmod@dividend 0010              i2RetardoLCD@a 0002  
              i2_EnviaDato 1564            ___lwmod@divisor 0012            ___lwmod@counter 0014  
         ?_TransmitirDatos 001E                 i2_BorraLCD 17AA     ConvertirUnidades@canal 0010  
       i2MensajeLCD_Word@a 0006         i2MensajeLCD_Word@i 0008              ?_EscribeLCD_c 0001  
               LeerBit@res 0010               i2_RetardoLCD 13CA        __end_of_HabilitaLCD 17DC  
              LeerByte@res 0012  
