

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Tue Jun 06 18:17:06 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og9 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    35                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    42                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    43                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    44                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    45                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    46   000000                     
    47                           ; Generated 09/02/2023 GMT
    48                           ; 
    49                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    50                           ; All rights reserved.
    51                           ; 
    52                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    53                           ; 
    54                           ; Redistribution and use in source and binary forms, with or without modification, are
    55                           ; permitted provided that the following conditions are met:
    56                           ; 
    57                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    58                           ;        conditions and the following disclaimer.
    59                           ; 
    60                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    61                           ;        of conditions and the following disclaimer in the documentation and/or other
    62                           ;        materials provided with the distribution. Publication is not required when
    63                           ;        this file is used in an embedded application.
    64                           ; 
    65                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    66                           ;        software without specific prior written permission.
    67                           ; 
    68                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    69                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    70                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    71                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    72                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    73                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    74                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    75                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    76                           ; 
    77                           ; 
    78                           ; Code-generator required, PIC18F4550 Definitions
    79                           ; 
    80                           ; SFR Addresses
    81   000000                     
    82                           	psect	idataCOMRAM
    83   00145A                     __pidataCOMRAM:
    84                           	callstack 0
    85                           
    86                           ;initializer for _c
    87   00145A  4240               	dw	16960
    88                           
    89                           ;initializer for _Cont
    90   00145C  06                 	db	6
    91                           
    92                           ;initializer for _interfaz
    93   00145D  08                 	db	8
    94                           
    95                           ;initializer for _cara
    96   00145E  00                 	db	0
    97   00145F  0A                 	db	10
    98   001460  0A                 	db	10
    99   001461  0A                 	db	10
   100   001462  00                 	db	0
   101   001463  1F                 	db	31
   102   001464  0E                 	db	14
   103   001465  00                 	db	0
   104   000000                     _RCREG	set	4014
   105   000000                     _TXREG	set	4013
   106   000000                     _SPBRG	set	4015
   107   000000                     _RB7	set	31759
   108   000000                     _RB6	set	31758
   109   000000                     _RB5	set	31757
   110   000000                     _RB4	set	31756
   111   000000                     _TRMT	set	32097
   112   000000                     _TRISC0	set	31904
   113   000000                     _TRISC7	set	31911
   114   000000                     _TRISC6	set	31910
   115   000000                     _TMR2ON	set	32338
   116   000000                     _TRISC2	set	31906
   117   000000                     _TMR0ON	set	32431
   118   000000                     _GIE	set	32663
   119   000000                     _TMR0IE	set	32661
   120   000000                     _TMR0IF	set	32658
   121   000000                     _RBIE	set	32659
   122   000000                     _TRISE1	set	31921
   123   000000                     _TRISE2	set	31922
   124   000000                     _LATE2	set	31850
   125   000000                     _LATD	set	3980
   126   000000                     _USBEN	set	31595
   127   000000                     _UTRDIS	set	31611
   128   000000                     _TRISB	set	3987
   129   000000                     _TRISC	set	3988
   130   000000                     _LATE1	set	31849
   131   000000                     _RCSTA	set	4011
   132   000000                     _TXSTA	set	4012
   133   000000                     _CCP1CON	set	4029
   134   000000                     _CCPR1L	set	4030
   135   000000                     _ADCON2	set	4032
   136   000000                     _ADCON1	set	4033
   137   000000                     _ADCON0	set	4034
   138   000000                     _TRISD	set	3989
   139   000000                     _OSCCON	set	4051
   140   000000                     _RCIF	set	31989
   141   000000                     _TRISE0	set	31920
   142   000000                     _T0CON	set	4053
   143   000000                     _RBPU	set	32655
   144   000000                     _T2CON	set	4042
   145   000000                     _PR2	set	4043
   146   000000                     _RBIF	set	32656
   147   000000                     _TMR0	set	4054
   148   000000                     _TMR2	set	4044
   149   000000                     _PORTB	set	3969
   150   000000                     _RC0	set	31760
   151   000000                     _RE0	set	31776
   152   000000                     _LATB	set	3978
   153                           
   154                           	psect	smallconst
   155   000800                     __psmallconst:
   156                           	callstack 0
   157   000800  00                 	db	0
   158   000801                     STR_2:
   159   000801  20                 	db	32
   160   000802  20                 	db	32
   161   000803  20                 	db	32
   162   000804  20                 	db	32
   163   000805  20                 	db	32
   164   000806  20                 	db	32
   165   000807  20                 	db	32
   166   000808  20                 	db	32
   167   000809  20                 	db	32
   168   00080A  20                 	db	32
   169   00080B  20                 	db	32
   170   00080C  20                 	db	32
   171   00080D  20                 	db	32
   172   00080E  20                 	db	32
   173   00080F  20                 	db	32
   174   000810  20                 	db	32
   175   000811  00                 	db	0
   176   000812                     STR_1:
   177   000812  42                 	db	66	;'B'
   178   000813  69                 	db	105	;'i'
   179   000814  65                 	db	101	;'e'
   180   000815  6E                 	db	110	;'n'
   181   000816  76                 	db	118	;'v'
   182   000817  65                 	db	101	;'e'
   183   000818  6E                 	db	110	;'n'
   184   000819  69                 	db	105	;'i'
   185   00081A  64                 	db	100	;'d'
   186   00081B  6F                 	db	111	;'o'
   187   00081C  00                 	db	0
   188   00081D                     STR_3:
   189   00081D  50                 	db	80	;'P'
   190   00081E  61                 	db	97	;'a'
   191   00081F  73                 	db	115	;'s'
   192   000820  73                 	db	115	;'s'
   193   000821  77                 	db	119	;'w'
   194   000822  6F                 	db	111	;'o'
   195   000823  72                 	db	114	;'r'
   196   000824  64                 	db	100	;'d'
   197   000825  3A                 	db	58	;':'
   198   000826  00                 	db	0
   199   000827                     STR_7:
   200   000827  54                 	db	84	;'T'
   201   000828  65                 	db	101	;'e'
   202   000829  6D                 	db	109	;'m'
   203   00082A  70                 	db	112	;'p'
   204   00082B  3A                 	db	58	;':'
   205   00082C  00                 	db	0
   206   00082D                     STR_8:
   207   00082D  48                 	db	72	;'H'
   208   00082E  75                 	db	117	;'u'
   209   00082F  6D                 	db	109	;'m'
   210   000830  3A                 	db	58	;':'
   211   000831  00                 	db	0
   212   000832  00                 	db	0	; dummy byte at the end
   213   000000                     
   214                           ; #config settings
   215                           
   216                           	psect	cinit
   217   00126A                     __pcinit:
   218                           	callstack 0
   219   00126A                     start_initialization:
   220                           	callstack 0
   221   00126A                     __initialization:
   222                           	callstack 0
   223                           
   224                           ; Initialize objects allocated to COMRAM (12 bytes)
   225                           ; load TBLPTR registers with __pidataCOMRAM
   226   00126A  0E5A               	movlw	low __pidataCOMRAM
   227   00126C  6EF6               	movwf	tblptrl,c
   228   00126E  0E14               	movlw	high __pidataCOMRAM
   229   001270  6EF7               	movwf	tblptrh,c
   230   001272  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   231   001274  6EF8               	movwf	tblptru,c
   232   001276  EE00  F01F         	lfsr	0,__pdataCOMRAM
   233   00127A  EE10 F00C          	lfsr	1,12
   234   00127E                     copy_data0:
   235   00127E  0009               	tblrd		*+
   236   001280  CFF5 FFEE          	movff	tablat,postinc0
   237   001284  50E5               	movf	postdec1,w,c
   238   001286  50E1               	movf	fsr1l,w,c
   239   001288  E1FA               	bnz	copy_data0
   240                           
   241                           ; Clear objects allocated to COMRAM (8 bytes)
   242   00128A  EE00  F02B         	lfsr	0,__pbssCOMRAM
   243   00128E  0E08               	movlw	8
   244   001290                     clear_0:
   245   001290  6AEE               	clrf	postinc0,c
   246   001292  06E8               	decf	wreg,f,c
   247   001294  E1FD               	bnz	clear_0
   248   001296                     end_of_initialization:
   249                           	callstack 0
   250   001296                     __end_of__initialization:
   251                           	callstack 0
   252   001296  9033               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   253   001298  9233               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   254   00129A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   255   00129C  6EF8               	movwf	tblptru,c
   256   00129E  0100               	movlb	0
   257   0012A0  EF62  F005         	goto	_main	;jump to C main() function
   258                           
   259                           	psect	bssCOMRAM
   260   00002B                     __pbssCOMRAM:
   261                           	callstack 0
   262   00002B                     _duty:
   263                           	callstack 0
   264   00002B                     	ds	2
   265   00002D                     _contador:
   266                           	callstack 0
   267   00002D                     	ds	2
   268   00002F                     _ing:
   269                           	callstack 0
   270   00002F                     	ds	1
   271   000030                     _Tecla:
   272                           	callstack 0
   273   000030                     	ds	1
   274   000031                     _Humedad:
   275                           	callstack 0
   276   000031                     	ds	1
   277   000032                     _Temp:
   278                           	callstack 0
   279   000032                     	ds	1
   280                           
   281                           	psect	dataCOMRAM
   282   00001F                     __pdataCOMRAM:
   283                           	callstack 0
   284   00001F                     _c:
   285                           	callstack 0
   286   00001F                     	ds	2
   287   000021                     _Cont:
   288                           	callstack 0
   289   000021                     	ds	1
   290   000022                     _interfaz:
   291                           	callstack 0
   292   000022                     	ds	1
   293   000023                     _cara:
   294                           	callstack 0
   295   000023                     	ds	8
   296                           
   297                           	psect	cstackCOMRAM
   298   000001                     __pcstackCOMRAM:
   299                           	callstack 0
   300   000001                     ??i2_RetardoLCD:
   301                           
   302                           ; 1 bytes @ 0x0
   303   000001                     	ds	1
   304   000002                     i2RetardoLCD@a:
   305                           	callstack 0
   306                           
   307                           ; 1 bytes @ 0x1
   308   000002                     	ds	1
   309   000003                     ??i2_EnviaDato:
   310                           
   311                           ; 1 bytes @ 0x2
   312   000003                     	ds	1
   313   000004                     i2EnviaDato@a:
   314                           	callstack 0
   315                           
   316                           ; 1 bytes @ 0x3
   317   000004                     	ds	1
   318   000005                     i2EscribeLCD_c@a:
   319                           	callstack 0
   320                           
   321                           ; 1 bytes @ 0x4
   322   000005                     	ds	1
   323   000006                     ??_ISR:
   324                           
   325                           ; 1 bytes @ 0x5
   326   000006                     	ds	2
   327   000008                     ??_RetardoLCD:
   328   000008                     ??_ComandoLCD:
   329   000008                     ?___wmul:
   330                           	callstack 0
   331   000008                     ?___awdiv:
   332                           	callstack 0
   333   000008                     ?___lwdiv:
   334                           	callstack 0
   335   000008                     ?___lwmod:
   336                           	callstack 0
   337   000008                     LeerBit@res:
   338                           	callstack 0
   339   000008                     Transmitir@BufferT:
   340                           	callstack 0
   341   000008                     ___lbdiv@divisor:
   342                           	callstack 0
   343   000008                     ___lbmod@divisor:
   344                           	callstack 0
   345   000008                     Velocidad@val:
   346                           	callstack 0
   347   000008                     ___wmul@multiplier:
   348                           	callstack 0
   349   000008                     ___awdiv@dividend:
   350                           	callstack 0
   351   000008                     ___lwdiv@dividend:
   352                           	callstack 0
   353   000008                     ___lwmod@dividend:
   354                           	callstack 0
   355                           
   356                           ; 2 bytes @ 0x7
   357   000008                     	ds	1
   358   000009                     ??_LeerByte:
   359   000009                     ComandoLCD@data:
   360                           	callstack 0
   361   000009                     RetardoLCD@a:
   362                           	callstack 0
   363   000009                     ___lbdiv@dividend:
   364                           	callstack 0
   365   000009                     ___lbmod@dividend:
   366                           	callstack 0
   367                           
   368                           ; 1 bytes @ 0x8
   369   000009                     	ds	1
   370   00000A                     ??_EnviaDato:
   371   00000A                     LeerByte@res:
   372                           	callstack 0
   373   00000A                     ___lbdiv@counter:
   374                           	callstack 0
   375   00000A                     ___lbmod@counter:
   376                           	callstack 0
   377   00000A                     ___wmul@multiplicand:
   378                           	callstack 0
   379   00000A                     ___awdiv@divisor:
   380                           	callstack 0
   381   00000A                     ___lwdiv@divisor:
   382                           	callstack 0
   383   00000A                     ___lwmod@divisor:
   384                           	callstack 0
   385                           
   386                           ; 2 bytes @ 0x9
   387   00000A                     	ds	1
   388   00000B                     EnviaDato@a:
   389                           	callstack 0
   390   00000B                     LeerByte@i:
   391                           	callstack 0
   392   00000B                     ___lbdiv@quotient:
   393                           	callstack 0
   394   00000B                     ___lbmod@rem:
   395                           	callstack 0
   396                           
   397                           ; 1 bytes @ 0xA
   398   00000B                     	ds	1
   399   00000C                     ??_LeerHT11:
   400   00000C                     EscribeLCD_c@a:
   401                           	callstack 0
   402   00000C                     DireccionaLCD@a:
   403                           	callstack 0
   404   00000C                     ___awdiv@counter:
   405                           	callstack 0
   406   00000C                     ___lwmod@counter:
   407                           	callstack 0
   408   00000C                     ___wmul@product:
   409                           	callstack 0
   410   00000C                     ___lwdiv@quotient:
   411                           	callstack 0
   412                           
   413                           ; 2 bytes @ 0xB
   414   00000C                     	ds	1
   415   00000D                     NuevoCaracter@c:
   416                           	callstack 0
   417   00000D                     MensajeLCD_Word@a:
   418                           	callstack 0
   419   00000D                     ___awdiv@sign:
   420                           	callstack 0
   421                           
   422                           ; 1 bytes @ 0xC
   423   00000D                     	ds	1
   424   00000E                     ??_MensajeLCD_Word:
   425   00000E                     NuevoCaracter@addr:
   426                           	callstack 0
   427   00000E                     ___lwdiv@counter:
   428                           	callstack 0
   429   00000E                     ___awdiv@quotient:
   430                           	callstack 0
   431                           
   432                           ; 2 bytes @ 0xD
   433   00000E                     	ds	1
   434   00000F                     NuevoCaracter@i:
   435                           	callstack 0
   436   00000F                     MensajeLCD_Word@i:
   437                           	callstack 0
   438                           
   439                           ; 2 bytes @ 0xE
   440   00000F                     	ds	2
   441   000011                     TransmitirDatos@Ent1:
   442                           	callstack 0
   443                           
   444                           ; 2 bytes @ 0x10
   445   000011                     	ds	2
   446   000013                     TransmitirDatos@Ent2:
   447                           	callstack 0
   448                           
   449                           ; 2 bytes @ 0x12
   450   000013                     	ds	2
   451   000015                     ??_TransmitirDatos:
   452                           
   453                           ; 1 bytes @ 0x14
   454   000015                     	ds	2
   455   000017                     TransmitirDatos@n:
   456                           	callstack 0
   457                           
   458                           ; 2 bytes @ 0x16
   459   000017                     	ds	2
   460   000019                     TransmitirDatos@Simb:
   461                           	callstack 0
   462                           
   463                           ; 2 bytes @ 0x18
   464   000019                     	ds	2
   465   00001B                     TransmitirDatos@TempC:
   466                           	callstack 0
   467                           
   468                           ; 2 bytes @ 0x1A
   469   00001B                     	ds	2
   470   00001D                     ??_main:
   471                           
   472                           ; 1 bytes @ 0x1C
   473   00001D                     	ds	2
   474                           
   475 ;;
   476 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   477 ;;
   478 ;; *************** function _main *****************
   479 ;; Defined at:
   480 ;;		line 56 in file "Proyecto.c"
   481 ;; Parameters:    Size  Location     Type
   482 ;;		None
   483 ;; Auto vars:     Size  Location     Type
   484 ;;		None
   485 ;; Return value:  Size  Location     Type
   486 ;;                  1    wreg      void 
   487 ;; Registers used:
   488 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   489 ;; Tracked objects:
   490 ;;		On entry : 0/0
   491 ;;		On exit  : 0/0
   492 ;;		Unchanged: 0/0
   493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   494 ;;      Params:         0       0       0       0       0       0       0       0       0
   495 ;;      Locals:         0       0       0       0       0       0       0       0       0
   496 ;;      Temps:          2       0       0       0       0       0       0       0       0
   497 ;;      Totals:         2       0       0       0       0       0       0       0       0
   498 ;;Total ram usage:        2 bytes
   499 ;; Hardware stack levels required when called: 9
   500 ;; This function calls:
   501 ;;		_BorraLCD
   502 ;;		_DireccionaLCD
   503 ;;		_EscribeLCD_c
   504 ;;		_InicializaLCD
   505 ;;		_LeerHT11
   506 ;;		_MensajeLCD_Word
   507 ;;		_NuevoCaracter
   508 ;;		_TransmitirDatos
   509 ;;		_Velocidad
   510 ;; This function is called by:
   511 ;;		Startup code after reset
   512 ;; This function uses a non-reentrant model
   513 ;;
   514                           
   515                           	psect	text0
   516   000AC4                     __ptext0:
   517                           	callstack 0
   518   000AC4                     _main:
   519                           	callstack 22
   520                           
   521                           ;Proyecto.c: 58: TRISC = 0;
   522                           
   523                           ;incstack = 0
   524   000AC4  0E00               	movlw	0
   525   000AC6  6E94               	movwf	148,c	;volatile
   526                           
   527                           ;Proyecto.c: 59: OSCCON = 0b11110110;
   528   000AC8  0EF6               	movlw	246
   529   000ACA  6ED3               	movwf	211,c	;volatile
   530                           
   531                           ;Proyecto.c: 61: TRISD = 0;
   532   000ACC  0E00               	movlw	0
   533   000ACE  6E95               	movwf	149,c	;volatile
   534                           
   535                           ;Proyecto.c: 62: TRISE0 = 1;
   536   000AD0  8096               	bsf	3990,0,c	;volatile
   537                           
   538                           ;Proyecto.c: 63: TRISE2 = 0;
   539   000AD2  9496               	bcf	3990,2,c	;volatile
   540                           
   541                           ;Proyecto.c: 64: TRISE1 = 0;
   542   000AD4  9296               	bcf	3990,1,c	;volatile
   543                           
   544                           ;Proyecto.c: 65: InicializaLCD();
   545   000AD6  EC6A  F007         	call	_InicializaLCD	;wreg free
   546                           
   547                           ;Proyecto.c: 66: BorraLCD();
   548   000ADA  EC15  F00A         	call	_BorraLCD	;wreg free
   549                           
   550                           ;Proyecto.c: 69: ADCON0 = 0b00000001;
   551   000ADE  0E01               	movlw	1
   552   000AE0  6EC2               	movwf	194,c	;volatile
   553                           
   554                           ;Proyecto.c: 70: ADCON1 = 0b00001100;
   555   000AE2  0E0C               	movlw	12
   556   000AE4  6EC1               	movwf	193,c	;volatile
   557                           
   558                           ;Proyecto.c: 71: ADCON2 = 0b10001000;
   559   000AE6  0E88               	movlw	136
   560   000AE8  6EC0               	movwf	192,c	;volatile
   561                           
   562                           ;Proyecto.c: 74: TRISB=0b11110000;
   563   000AEA  0EF0               	movlw	240
   564   000AEC  6E93               	movwf	147,c	;volatile
   565                           
   566                           ;Proyecto.c: 75: RBPU=0;
   567   000AEE  9EF1               	bcf	4081,7,c	;volatile
   568                           
   569                           ;Proyecto.c: 76: RBIF=0;
   570   000AF0  90F2               	bcf	4082,0,c	;volatile
   571                           
   572                           ;Proyecto.c: 77: RBIE=1;
   573   000AF2  86F2               	bsf	4082,3,c	;volatile
   574                           
   575                           ;Proyecto.c: 80: T0CON=0b00000011;
   576   000AF4  0E03               	movlw	3
   577   000AF6  6ED5               	movwf	213,c	;volatile
   578                           
   579                           ;Proyecto.c: 81: TMR0IF=0;
   580   000AF8  94F2               	bcf	4082,2,c	;volatile
   581                           
   582                           ;Proyecto.c: 82: TMR0=64911;
   583   000AFA  0EFD               	movlw	253
   584   000AFC  6ED7               	movwf	215,c	;volatile
   585   000AFE  0E8F               	movlw	143
   586   000B00  6ED6               	movwf	214,c	;volatile
   587                           
   588                           ;Proyecto.c: 83: TMR0IE=1;
   589   000B02  8AF2               	bsf	4082,5,c	;volatile
   590                           
   591                           ;Proyecto.c: 84: GIE=1;
   592   000B04  8EF2               	bsf	4082,7,c	;volatile
   593                           
   594                           ;Proyecto.c: 85: TMR0ON=1;
   595   000B06  8ED5               	bsf	4053,7,c	;volatile
   596                           
   597                           ;Proyecto.c: 88: TRISC2 = 0;
   598   000B08  9494               	bcf	3988,2,c	;volatile
   599                           
   600                           ;Proyecto.c: 89: PR2 = 125;
   601   000B0A  0E7D               	movlw	125
   602   000B0C  6ECB               	movwf	203,c	;volatile
   603                           
   604                           ;Proyecto.c: 90: CCPR1L = 0;
   605   000B0E  0E00               	movlw	0
   606   000B10  6EBE               	movwf	190,c	;volatile
   607                           
   608                           ;Proyecto.c: 91: T2CON = 0b00000010;
   609   000B12  0E02               	movlw	2
   610   000B14  6ECA               	movwf	202,c	;volatile
   611                           
   612                           ;Proyecto.c: 92: CCP1CON = 0b00001100;
   613   000B16  0E0C               	movlw	12
   614   000B18  6EBD               	movwf	189,c	;volatile
   615                           
   616                           ;Proyecto.c: 93: TMR2 = 0;
   617   000B1A  0E00               	movlw	0
   618   000B1C  6ECC               	movwf	204,c	;volatile
   619                           
   620                           ;Proyecto.c: 94: TMR2ON = 1;
   621   000B1E  84CA               	bsf	4042,2,c	;volatile
   622                           
   623                           ;Proyecto.c: 97: TRISC6 = 1;
   624   000B20  8C94               	bsf	3988,6,c	;volatile
   625                           
   626                           ;Proyecto.c: 98: TRISC7 = 1;
   627   000B22  8E94               	bsf	3988,7,c	;volatile
   628                           
   629                           ;Proyecto.c: 99: TXSTA = 0b00100000;
   630   000B24  0E20               	movlw	32
   631   000B26  6EAC               	movwf	172,c	;volatile
   632                           
   633                           ;Proyecto.c: 100: RCSTA = 0b10010000;
   634   000B28  0E90               	movlw	144
   635   000B2A  6EAB               	movwf	171,c	;volatile
   636                           
   637                           ;Proyecto.c: 101: SPBRG = 12;
   638   000B2C  0E0C               	movlw	12
   639   000B2E  6EAF               	movwf	175,c	;volatile
   640                           
   641                           ;Proyecto.c: 104: TRISC0= 1;
   642   000B30  8094               	bsf	3988,0,c	;volatile
   643                           
   644                           ;Proyecto.c: 105: UTRDIS = 1;
   645   000B32  866F               	bsf	3951,3,c	;volatile
   646                           
   647                           ;Proyecto.c: 106: USBEN = 0;
   648   000B34  966D               	bcf	3949,3,c	;volatile
   649                           
   650                           ;Proyecto.c: 108: _delay((unsigned long)((1000)*(8000000/4000.0)));
   651   000B36  0E0B               	movlw	11
   652   000B38  6E1E               	movwf	(??_main+1)^0,c
   653   000B3A  0E26               	movlw	38
   654   000B3C  6E1D               	movwf	??_main^0,c
   655   000B3E  0E5E               	movlw	94
   656   000B40                     u1457:
   657   000B40  2EE8               	decfsz	wreg,f,c
   658   000B42  D7FE               	bra	u1457
   659   000B44  2E1D               	decfsz	??_main^0,f,c
   660   000B46  D7FC               	bra	u1457
   661   000B48  2E1E               	decfsz	(??_main+1)^0,f,c
   662   000B4A  D7FA               	bra	u1457
   663                           
   664                           ;Proyecto.c: 109: BorraLCD();
   665   000B4C  EC15  F00A         	call	_BorraLCD	;wreg free
   666                           
   667                           ;Proyecto.c: 110: NuevoCaracter(0,cara);
   668   000B50  0E23               	movlw	low _cara
   669   000B52  6E0D               	movwf	NuevoCaracter@c^0,c
   670   000B54  0E00               	movlw	0
   671   000B56  EC17  F009         	call	_NuevoCaracter
   672                           
   673                           ;Proyecto.c: 111: DireccionaLCD(0x82);
   674   000B5A  0E82               	movlw	130
   675   000B5C  ECF4  F009         	call	_DireccionaLCD
   676                           
   677                           ;Proyecto.c: 112: EscribeLCD_c(0);
   678   000B60  0E00               	movlw	0
   679   000B62  ECFF  F009         	call	_EscribeLCD_c
   680                           
   681                           ;Proyecto.c: 113: MensajeLCD_Word("Bienvenido");
   682   000B66  0E12               	movlw	low STR_1
   683   000B68  6E0D               	movwf	MensajeLCD_Word@a^0,c
   684   000B6A  EC89  F008         	call	_MensajeLCD_Word	;wreg free
   685                           
   686                           ;Proyecto.c: 114: EscribeLCD_c(0);
   687   000B6E  0E00               	movlw	0
   688   000B70  ECFF  F009         	call	_EscribeLCD_c
   689                           
   690                           ;Proyecto.c: 115: DireccionaLCD(0xC7);
   691   000B74  0EC7               	movlw	199
   692   000B76  ECF4  F009         	call	_DireccionaLCD
   693                           
   694                           ;Proyecto.c: 116: _delay((unsigned long)((1500)*(8000000/4000.0)));
   695   000B7A  0E10               	movlw	16
   696   000B7C  6E1E               	movwf	(??_main+1)^0,c
   697   000B7E  0E39               	movlw	57
   698   000B80  6E1D               	movwf	??_main^0,c
   699   000B82  0E0E               	movlw	14
   700   000B84                     u1467:
   701   000B84  2EE8               	decfsz	wreg,f,c
   702   000B86  D7FE               	bra	u1467
   703   000B88  2E1D               	decfsz	??_main^0,f,c
   704   000B8A  D7FC               	bra	u1467
   705   000B8C  2E1E               	decfsz	(??_main+1)^0,f,c
   706   000B8E  D7FA               	bra	u1467
   707                           
   708                           ;Proyecto.c: 117: DireccionaLCD(0x80);
   709   000B90  0E80               	movlw	128
   710   000B92  ECF4  F009         	call	_DireccionaLCD
   711                           
   712                           ;Proyecto.c: 118: MensajeLCD_Word("                ");
   713   000B96  0E01               	movlw	low STR_2
   714   000B98  6E0D               	movwf	MensajeLCD_Word@a^0,c
   715   000B9A  EC89  F008         	call	_MensajeLCD_Word	;wreg free
   716                           
   717                           ;Proyecto.c: 119: DireccionaLCD(0x80);
   718   000B9E  0E80               	movlw	128
   719   000BA0  ECF4  F009         	call	_DireccionaLCD
   720                           
   721                           ;Proyecto.c: 120: MensajeLCD_Word("Password:");
   722   000BA4  0E1D               	movlw	low STR_3
   723   000BA6  6E0D               	movwf	MensajeLCD_Word@a^0,c
   724   000BA8  EC89  F008         	call	_MensajeLCD_Word	;wreg free
   725                           
   726                           ;Proyecto.c: 121: while(ing!=Cont){
   727   000BAC  D007               	goto	l2546
   728   000BAE                     l2542:
   729                           
   730                           ;Proyecto.c: 122: DireccionaLCD(0xC1);
   731   000BAE  0EC1               	movlw	193
   732   000BB0  ECF4  F009         	call	_DireccionaLCD
   733                           
   734                           ;Proyecto.c: 123: MensajeLCD_Word("                ");
   735   000BB4  0E01               	movlw	low STR_2
   736   000BB6  6E0D               	movwf	MensajeLCD_Word@a^0,c
   737   000BB8  EC89  F008         	call	_MensajeLCD_Word	;wreg free
   738   000BBC                     l2546:
   739   000BBC  0E06               	movlw	6
   740   000BBE  182F               	xorwf	_ing^0,w,c
   741   000BC0  A4D8               	btfss	status,2,c
   742   000BC2  D7F5               	goto	l2542
   743                           
   744                           ;Proyecto.c: 124: };Proyecto.c: 125: DireccionaLCD(0x80);
   745   000BC4  0E80               	movlw	128
   746   000BC6  ECF4  F009         	call	_DireccionaLCD
   747                           
   748                           ;Proyecto.c: 126: MensajeLCD_Word("                ");
   749   000BCA  0E01               	movlw	low STR_2
   750   000BCC  6E0D               	movwf	MensajeLCD_Word@a^0,c
   751   000BCE  EC89  F008         	call	_MensajeLCD_Word	;wreg free
   752                           
   753                           ;Proyecto.c: 127: DireccionaLCD(0xC1);
   754   000BD2  0EC1               	movlw	193
   755   000BD4  ECF4  F009         	call	_DireccionaLCD
   756                           
   757                           ;Proyecto.c: 128: MensajeLCD_Word("                ");
   758   000BD8  0E01               	movlw	low STR_2
   759   000BDA  6E0D               	movwf	MensajeLCD_Word@a^0,c
   760   000BDC  EC89  F008         	call	_MensajeLCD_Word	;wreg free
   761                           
   762                           ;Proyecto.c: 129: _delay((unsigned long)((500)*(8000000/4000.0)));
   763   000BE0  0E06               	movlw	6
   764   000BE2  6E1E               	movwf	(??_main+1)^0,c
   765   000BE4  0E13               	movlw	19
   766   000BE6  6E1D               	movwf	??_main^0,c
   767   000BE8  0EAE               	movlw	174
   768   000BEA                     u1477:
   769   000BEA  2EE8               	decfsz	wreg,f,c
   770   000BEC  D7FE               	bra	u1477
   771   000BEE  2E1D               	decfsz	??_main^0,f,c
   772   000BF0  D7FC               	bra	u1477
   773   000BF2  2E1E               	decfsz	(??_main+1)^0,f,c
   774   000BF4  D7FA               	bra	u1477
   775   000BF6                     l2556:
   776                           
   777                           ;Proyecto.c: 131: _delay((unsigned long)((500)*(8000000/4000.0)));
   778   000BF6  0E06               	movlw	6
   779   000BF8  6E1E               	movwf	(??_main+1)^0,c
   780   000BFA  0E13               	movlw	19
   781   000BFC  6E1D               	movwf	??_main^0,c
   782   000BFE  0EAE               	movlw	174
   783   000C00                     u1487:
   784   000C00  2EE8               	decfsz	wreg,f,c
   785   000C02  D7FE               	bra	u1487
   786   000C04  2E1D               	decfsz	??_main^0,f,c
   787   000C06  D7FC               	bra	u1487
   788   000C08  2E1E               	decfsz	(??_main+1)^0,f,c
   789   000C0A  D7FA               	bra	u1487
   790                           
   791                           ;Proyecto.c: 132: LeerHT11();
   792   000C0C  EC6F  F009         	call	_LeerHT11	;wreg free
   793                           
   794                           ;Proyecto.c: 133: TransmitirDatos(0, 0);
   795   000C10  0E00               	movlw	0
   796   000C12  6E12               	movwf	(TransmitirDatos@Ent1+1)^0,c
   797   000C14  0E00               	movlw	0
   798   000C16  6E11               	movwf	TransmitirDatos@Ent1^0,c
   799   000C18  0E00               	movlw	0
   800   000C1A  6E14               	movwf	(TransmitirDatos@Ent2+1)^0,c
   801   000C1C  0E00               	movlw	0
   802   000C1E  6E13               	movwf	TransmitirDatos@Ent2^0,c
   803   000C20  EC1A  F004         	call	_TransmitirDatos	;wreg free
   804                           
   805                           ;Proyecto.c: 134: Velocidad(Temp);
   806   000C24  C032  F008         	movff	_Temp,Velocidad@val
   807   000C28  6A09               	clrf	(Velocidad@val+1)^0,c
   808   000C2A  EC9B  F006         	call	_Velocidad	;wreg free
   809   000C2E  D7E3               	goto	l2556
   810   000C30                     __end_of_main:
   811                           	callstack 0
   812                           
   813 ;; *************** function _Velocidad *****************
   814 ;; Defined at:
   815 ;;		line 138 in file "Proyecto.c"
   816 ;; Parameters:    Size  Location     Type
   817 ;;  val             2    7[COMRAM] unsigned int 
   818 ;; Auto vars:     Size  Location     Type
   819 ;;		None
   820 ;; Return value:  Size  Location     Type
   821 ;;                  1    wreg      void 
   822 ;; Registers used:
   823 ;;		wreg, status,2, status,0
   824 ;; Tracked objects:
   825 ;;		On entry : 0/0
   826 ;;		On exit  : 0/0
   827 ;;		Unchanged: 0/0
   828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   829 ;;      Params:         2       0       0       0       0       0       0       0       0
   830 ;;      Locals:         0       0       0       0       0       0       0       0       0
   831 ;;      Temps:          0       0       0       0       0       0       0       0       0
   832 ;;      Totals:         2       0       0       0       0       0       0       0       0
   833 ;;Total ram usage:        2 bytes
   834 ;; Hardware stack levels used: 1
   835 ;; Hardware stack levels required when called: 4
   836 ;; This function calls:
   837 ;;		Nothing
   838 ;; This function is called by:
   839 ;;		_main
   840 ;; This function uses a non-reentrant model
   841 ;;
   842                           
   843                           	psect	text1
   844   000D36                     __ptext1:
   845                           	callstack 0
   846   000D36                     _Velocidad:
   847                           	callstack 26
   848                           
   849                           ;Proyecto.c: 139: if (val < 22) {
   850                           
   851                           ;incstack = 0
   852   000D36  5009               	movf	(Velocidad@val+1)^0,w,c
   853   000D38  E107               	bnz	l2248
   854   000D3A  0E16               	movlw	22
   855   000D3C  5C08               	subwf	Velocidad@val^0,w,c
   856   000D3E  B0D8               	btfsc	status,0,c
   857   000D40  D003               	goto	l2248
   858                           
   859                           ;Proyecto.c: 140: CCPR1L = 0;
   860   000D42  0E00               	movlw	0
   861   000D44  6EBE               	movwf	190,c	;volatile
   862                           
   863                           ;Proyecto.c: 141: } else if (val >= 22 && val < 25) {
   864   000D46  0012               	return	
   865   000D48                     l2248:
   866   000D48  5009               	movf	(Velocidad@val+1)^0,w,c
   867   000D4A  E104               	bnz	u1090
   868   000D4C  0E16               	movlw	22
   869   000D4E  5C08               	subwf	Velocidad@val^0,w,c
   870   000D50  A0D8               	btfss	status,0,c
   871   000D52  D009               	goto	l2254
   872   000D54                     u1090:
   873   000D54  5009               	movf	(Velocidad@val+1)^0,w,c
   874   000D56  E107               	bnz	l2254
   875   000D58  0E19               	movlw	25
   876   000D5A  5C08               	subwf	Velocidad@val^0,w,c
   877   000D5C  B0D8               	btfsc	status,0,c
   878   000D5E  D003               	goto	l2254
   879                           
   880                           ;Proyecto.c: 142: CCPR1L = 19;
   881   000D60  0E13               	movlw	19
   882   000D62  6EBE               	movwf	190,c	;volatile
   883                           
   884                           ;Proyecto.c: 143: } else if (val >= 25 && val < 28) {
   885   000D64  0012               	return	
   886   000D66                     l2254:
   887   000D66  5009               	movf	(Velocidad@val+1)^0,w,c
   888   000D68  E104               	bnz	u1110
   889   000D6A  0E19               	movlw	25
   890   000D6C  5C08               	subwf	Velocidad@val^0,w,c
   891   000D6E  A0D8               	btfss	status,0,c
   892   000D70  D009               	goto	l2260
   893   000D72                     u1110:
   894   000D72  5009               	movf	(Velocidad@val+1)^0,w,c
   895   000D74  E107               	bnz	l2260
   896   000D76  0E1C               	movlw	28
   897   000D78  5C08               	subwf	Velocidad@val^0,w,c
   898   000D7A  B0D8               	btfsc	status,0,c
   899   000D7C  D003               	goto	l2260
   900                           
   901                           ;Proyecto.c: 144: CCPR1L = 38;
   902   000D7E  0E26               	movlw	38
   903   000D80  6EBE               	movwf	190,c	;volatile
   904                           
   905                           ;Proyecto.c: 145: } else if (val >= 28 && val < 31) {
   906   000D82  0012               	return	
   907   000D84                     l2260:
   908   000D84  5009               	movf	(Velocidad@val+1)^0,w,c
   909   000D86  E104               	bnz	u1130
   910   000D88  0E1C               	movlw	28
   911   000D8A  5C08               	subwf	Velocidad@val^0,w,c
   912   000D8C  A0D8               	btfss	status,0,c
   913   000D8E  D009               	goto	l2266
   914   000D90                     u1130:
   915   000D90  5009               	movf	(Velocidad@val+1)^0,w,c
   916   000D92  E107               	bnz	l2266
   917   000D94  0E1F               	movlw	31
   918   000D96  5C08               	subwf	Velocidad@val^0,w,c
   919   000D98  B0D8               	btfsc	status,0,c
   920   000D9A  D003               	goto	l2266
   921                           
   922                           ;Proyecto.c: 146: CCPR1L = 57;
   923   000D9C  0E39               	movlw	57
   924   000D9E  6EBE               	movwf	190,c	;volatile
   925                           
   926                           ;Proyecto.c: 147: } else if (val >= 31 && val < 34) {
   927   000DA0  0012               	return	
   928   000DA2                     l2266:
   929   000DA2  5009               	movf	(Velocidad@val+1)^0,w,c
   930   000DA4  E104               	bnz	u1150
   931   000DA6  0E1F               	movlw	31
   932   000DA8  5C08               	subwf	Velocidad@val^0,w,c
   933   000DAA  A0D8               	btfss	status,0,c
   934   000DAC  D009               	goto	l2272
   935   000DAE                     u1150:
   936   000DAE  5009               	movf	(Velocidad@val+1)^0,w,c
   937   000DB0  E107               	bnz	l2272
   938   000DB2  0E22               	movlw	34
   939   000DB4  5C08               	subwf	Velocidad@val^0,w,c
   940   000DB6  B0D8               	btfsc	status,0,c
   941   000DB8  D003               	goto	l2272
   942                           
   943                           ;Proyecto.c: 148: CCPR1L = 76;
   944   000DBA  0E4C               	movlw	76
   945   000DBC  6EBE               	movwf	190,c	;volatile
   946                           
   947                           ;Proyecto.c: 149: } else if (val >= 34 && val < 37) {
   948   000DBE  0012               	return	
   949   000DC0                     l2272:
   950   000DC0  5009               	movf	(Velocidad@val+1)^0,w,c
   951   000DC2  E104               	bnz	u1170
   952   000DC4  0E22               	movlw	34
   953   000DC6  5C08               	subwf	Velocidad@val^0,w,c
   954   000DC8  A0D8               	btfss	status,0,c
   955   000DCA  D009               	goto	l2278
   956   000DCC                     u1170:
   957   000DCC  5009               	movf	(Velocidad@val+1)^0,w,c
   958   000DCE  E107               	bnz	l2278
   959   000DD0  0E25               	movlw	37
   960   000DD2  5C08               	subwf	Velocidad@val^0,w,c
   961   000DD4  B0D8               	btfsc	status,0,c
   962   000DD6  D003               	goto	l2278
   963                           
   964                           ;Proyecto.c: 150: CCPR1L = 95;
   965   000DD8  0E5F               	movlw	95
   966   000DDA  6EBE               	movwf	190,c	;volatile
   967                           
   968                           ;Proyecto.c: 151: } else if (val >= 37 && val < 40) {
   969   000DDC  0012               	return	
   970   000DDE                     l2278:
   971   000DDE  5009               	movf	(Velocidad@val+1)^0,w,c
   972   000DE0  E104               	bnz	u1190
   973   000DE2  0E25               	movlw	37
   974   000DE4  5C08               	subwf	Velocidad@val^0,w,c
   975   000DE6  A0D8               	btfss	status,0,c
   976   000DE8  D009               	goto	l2284
   977   000DEA                     u1190:
   978   000DEA  5009               	movf	(Velocidad@val+1)^0,w,c
   979   000DEC  E107               	bnz	l2284
   980   000DEE  0E28               	movlw	40
   981   000DF0  5C08               	subwf	Velocidad@val^0,w,c
   982   000DF2  B0D8               	btfsc	status,0,c
   983   000DF4  D003               	goto	l2284
   984                           
   985                           ;Proyecto.c: 152: CCPR1L = 113;
   986   000DF6  0E71               	movlw	113
   987   000DF8  6EBE               	movwf	190,c	;volatile
   988                           
   989                           ;Proyecto.c: 153: } else if (val >= 40) {
   990   000DFA  0012               	return	
   991   000DFC                     l2284:
   992   000DFC  5009               	movf	(Velocidad@val+1)^0,w,c
   993   000DFE  E104               	bnz	u1210
   994   000E00  0E28               	movlw	40
   995   000E02  5C08               	subwf	Velocidad@val^0,w,c
   996   000E04  A0D8               	btfss	status,0,c
   997   000E06  0012               	return	
   998   000E08                     u1210:
   999                           
  1000                           ;Proyecto.c: 154: CCPR1L = 126;
  1001   000E08  0E7E               	movlw	126
  1002   000E0A  6EBE               	movwf	190,c	;volatile
  1003   000E0C  0012               	return	
  1004   000E0E                     __end_of_Velocidad:
  1005                           	callstack 0
  1006                           
  1007 ;; *************** function _TransmitirDatos *****************
  1008 ;; Defined at:
  1009 ;;		line 261 in file "Proyecto.c"
  1010 ;; Parameters:    Size  Location     Type
  1011 ;;  Ent1            2   16[COMRAM] unsigned int 
  1012 ;;  Ent2            2   18[COMRAM] unsigned int 
  1013 ;; Auto vars:     Size  Location     Type
  1014 ;;  TempC           2   26[COMRAM] unsigned int 
  1015 ;;  Simb            2   24[COMRAM] unsigned int 
  1016 ;;  n               2   22[COMRAM] unsigned int 
  1017 ;;  HumedadC        2    0        unsigned int 
  1018 ;; Return value:  Size  Location     Type
  1019 ;;                  1    wreg      void 
  1020 ;; Registers used:
  1021 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1022 ;; Tracked objects:
  1023 ;;		On entry : 0/0
  1024 ;;		On exit  : 0/0
  1025 ;;		Unchanged: 0/0
  1026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1027 ;;      Params:         4       0       0       0       0       0       0       0       0
  1028 ;;      Locals:         6       0       0       0       0       0       0       0       0
  1029 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1030 ;;      Totals:        12       0       0       0       0       0       0       0       0
  1031 ;;Total ram usage:       12 bytes
  1032 ;; Hardware stack levels used: 1
  1033 ;; Hardware stack levels required when called: 8
  1034 ;; This function calls:
  1035 ;;		_BorraLCD
  1036 ;;		_DireccionaLCD
  1037 ;;		_EscribeLCD_c
  1038 ;;		_MensajeLCD_Word
  1039 ;;		_Transmitir
  1040 ;;		___awdiv
  1041 ;;		___lbdiv
  1042 ;;		___lbmod
  1043 ;;		___lwdiv
  1044 ;;		___lwmod
  1045 ;;		___wmul
  1046 ;; This function is called by:
  1047 ;;		_main
  1048 ;; This function uses a non-reentrant model
  1049 ;;
  1050                           
  1051                           	psect	text2
  1052   000834                     __ptext2:
  1053                           	callstack 0
  1054   000834                     _TransmitirDatos:
  1055                           	callstack 22
  1056                           
  1057                           ;Proyecto.c: 262: unsigned int n = Ent1 * 10 + Ent2, TempC = Temp, HumedadC = Humedad;
  1058                           
  1059                           ;incstack = 0
  1060   000834  C011  F008         	movff	TransmitirDatos@Ent1,___wmul@multiplier
  1061   000838  C012  F009         	movff	TransmitirDatos@Ent1+1,___wmul@multiplier+1
  1062   00083C  0E00               	movlw	0
  1063   00083E  6E0B               	movwf	(___wmul@multiplicand+1)^0,c
  1064   000840  0E0A               	movlw	10
  1065   000842  6E0A               	movwf	___wmul@multiplicand^0,c
  1066   000844  ECD0  F009         	call	___wmul	;wreg free
  1067   000848  5013               	movf	TransmitirDatos@Ent2^0,w,c
  1068   00084A  2408               	addwf	?___wmul^0,w,c
  1069   00084C  6E17               	movwf	TransmitirDatos@n^0,c
  1070   00084E  5014               	movf	(TransmitirDatos@Ent2+1)^0,w,c
  1071   000850  2009               	addwfc	(?___wmul+1)^0,w,c
  1072   000852  6E18               	movwf	(TransmitirDatos@n+1)^0,c
  1073   000854  C032  F01B         	movff	_Temp,TransmitirDatos@TempC
  1074   000858  6A1C               	clrf	(TransmitirDatos@TempC+1)^0,c
  1075                           
  1076                           ;Proyecto.c: 263: unsigned int Simb = 67;
  1077   00085A  0E00               	movlw	0
  1078   00085C  6E1A               	movwf	(TransmitirDatos@Simb+1)^0,c
  1079   00085E  0E43               	movlw	67
  1080   000860  6E19               	movwf	TransmitirDatos@Simb^0,c
  1081                           
  1082                           ;Proyecto.c: 264: BorraLCD();
  1083   000862  EC15  F00A         	call	_BorraLCD	;wreg free
  1084                           
  1085                           ;Proyecto.c: 265: switch (n) {
  1086   000866  D03E               	goto	l2184
  1087   000868                     l287:
  1088                           
  1089                           ;Proyecto.c: 267: TempC = Temp;
  1090   000868  C032  F01B         	movff	_Temp,TransmitirDatos@TempC
  1091   00086C  6A1C               	clrf	(TransmitirDatos@TempC+1)^0,c
  1092                           
  1093                           ;Proyecto.c: 268: Simb = 67;
  1094   00086E  0E00               	movlw	0
  1095   000870  6E1A               	movwf	(TransmitirDatos@Simb+1)^0,c
  1096   000872  0E43               	movlw	67
  1097   000874  D035               	goto	L3
  1098   000876                     l2170:
  1099                           
  1100                           ;Proyecto.c: 271: TempC = Temp + 273;
  1101   000876  0E11               	movlw	17
  1102   000878  2432               	addwf	_Temp^0,w,c
  1103   00087A  6E1B               	movwf	TransmitirDatos@TempC^0,c
  1104   00087C  6A1C               	clrf	(TransmitirDatos@TempC+1)^0,c
  1105   00087E  0E01               	movlw	1
  1106   000880  221C               	addwfc	(TransmitirDatos@TempC+1)^0,f,c
  1107                           
  1108                           ;Proyecto.c: 272: Simb = 75;
  1109   000882  0E00               	movlw	0
  1110   000884  6E1A               	movwf	(TransmitirDatos@Simb+1)^0,c
  1111   000886  0E4B               	movlw	75
  1112   000888  D02B               	goto	L3
  1113   00088A                     l2174:
  1114                           
  1115                           ;Proyecto.c: 275: TempC = Temp * 9 / 5 + 492;
  1116   00088A  5032               	movf	_Temp^0,w,c
  1117   00088C  0D09               	mullw	9
  1118   00088E  CFF3 F008          	movff	prodl,___awdiv@dividend
  1119   000892  CFF4 F009          	movff	prodh,___awdiv@dividend+1
  1120   000896  0E00               	movlw	0
  1121   000898  6E0B               	movwf	(___awdiv@divisor+1)^0,c
  1122   00089A  0E05               	movlw	5
  1123   00089C  6E0A               	movwf	___awdiv@divisor^0,c
  1124   00089E  ECB8  F007         	call	___awdiv	;wreg free
  1125   0008A2  0EEC               	movlw	236
  1126   0008A4  2408               	addwf	?___awdiv^0,w,c
  1127   0008A6  6E1B               	movwf	TransmitirDatos@TempC^0,c
  1128   0008A8  0E01               	movlw	1
  1129   0008AA  2009               	addwfc	(?___awdiv+1)^0,w,c
  1130   0008AC  6E1C               	movwf	(TransmitirDatos@TempC+1)^0,c
  1131                           
  1132                           ;Proyecto.c: 276: Simb = 82;
  1133   0008AE  0E00               	movlw	0
  1134   0008B0  6E1A               	movwf	(TransmitirDatos@Simb+1)^0,c
  1135   0008B2  0E52               	movlw	82
  1136   0008B4  D015               	goto	L3
  1137   0008B6                     l2178:
  1138                           
  1139                           ;Proyecto.c: 279: TempC = Temp * 9 / 5 + 32;
  1140   0008B6  5032               	movf	_Temp^0,w,c
  1141   0008B8  0D09               	mullw	9
  1142   0008BA  CFF3 F008          	movff	prodl,___awdiv@dividend
  1143   0008BE  CFF4 F009          	movff	prodh,___awdiv@dividend+1
  1144   0008C2  0E00               	movlw	0
  1145   0008C4  6E0B               	movwf	(___awdiv@divisor+1)^0,c
  1146   0008C6  0E05               	movlw	5
  1147   0008C8  6E0A               	movwf	___awdiv@divisor^0,c
  1148   0008CA  ECB8  F007         	call	___awdiv	;wreg free
  1149   0008CE  0E20               	movlw	32
  1150   0008D0  2408               	addwf	?___awdiv^0,w,c
  1151   0008D2  6E1B               	movwf	TransmitirDatos@TempC^0,c
  1152   0008D4  0E00               	movlw	0
  1153   0008D6  2009               	addwfc	(?___awdiv+1)^0,w,c
  1154   0008D8  6E1C               	movwf	(TransmitirDatos@TempC+1)^0,c
  1155                           
  1156                           ;Proyecto.c: 280: Simb = 70;
  1157   0008DA  0E00               	movlw	0
  1158   0008DC  6E1A               	movwf	(TransmitirDatos@Simb+1)^0,c
  1159   0008DE  0E46               	movlw	70
  1160   0008E0                     L3:
  1161   0008E0  6E19               	movwf	TransmitirDatos@Simb^0,c
  1162                           
  1163                           ;Proyecto.c: 281: break;
  1164   0008E2  D015               	goto	l2186
  1165   0008E4                     l2184:
  1166   0008E4  C017  F015         	movff	TransmitirDatos@n,??_TransmitirDatos
  1167   0008E8  C018  F016         	movff	TransmitirDatos@n+1,??_TransmitirDatos+1
  1168                           
  1169                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1170                           ; Switch size 1, requested type "simple"
  1171                           ; Number of cases is 1, Range of values is 0 to 0
  1172                           ; switch strategies available:
  1173                           ; Name         Instructions Cycles
  1174                           ; simple_byte            4     3 (average)
  1175                           ;	Chosen strategy is simple_byte
  1176   0008EC  5016               	movf	(??_TransmitirDatos+1)^0,w,c
  1177   0008EE  0A00               	xorlw	0	; case 0
  1178   0008F0  A4D8               	btfss	status,2,c
  1179   0008F2  D00D               	goto	l2186
  1180                           
  1181                           ; Switch size 1, requested type "simple"
  1182                           ; Number of cases is 4, Range of values is 0 to 11
  1183                           ; switch strategies available:
  1184                           ; Name         Instructions Cycles
  1185                           ; simple_byte           13     7 (average)
  1186                           ;	Chosen strategy is simple_byte
  1187   0008F4  5015               	movf	??_TransmitirDatos^0,w,c
  1188   0008F6  0A00               	xorlw	0	; case 0
  1189   0008F8  B4D8               	btfsc	status,2,c
  1190   0008FA  D7B6               	goto	l287
  1191   0008FC  0A01               	xorlw	1	; case 1
  1192   0008FE  B4D8               	btfsc	status,2,c
  1193   000900  D7BA               	goto	l2170
  1194   000902  0A0B               	xorlw	11	; case 10
  1195   000904  B4D8               	btfsc	status,2,c
  1196   000906  D7C1               	goto	l2174
  1197   000908  0A01               	xorlw	1	; case 11
  1198   00090A  B4D8               	btfsc	status,2,c
  1199   00090C  D7D4               	goto	l2178
  1200   00090E                     l2186:
  1201                           
  1202                           ;Proyecto.c: 283: Transmitir('T');
  1203   00090E  0E54               	movlw	84
  1204   000910  EC33  F00A         	call	_Transmitir
  1205                           
  1206                           ;Proyecto.c: 284: Transmitir('e');
  1207   000914  0E65               	movlw	101
  1208   000916  EC33  F00A         	call	_Transmitir
  1209                           
  1210                           ;Proyecto.c: 285: Transmitir('m');
  1211   00091A  0E6D               	movlw	109
  1212   00091C  EC33  F00A         	call	_Transmitir
  1213                           
  1214                           ;Proyecto.c: 286: Transmitir('p');
  1215   000920  0E70               	movlw	112
  1216   000922  EC33  F00A         	call	_Transmitir
  1217                           
  1218                           ;Proyecto.c: 287: Transmitir(':');
  1219   000926  0E3A               	movlw	58
  1220   000928  EC33  F00A         	call	_Transmitir
  1221                           
  1222                           ;Proyecto.c: 288: Transmitir(' ');
  1223   00092C  0E20               	movlw	32
  1224   00092E  EC33  F00A         	call	_Transmitir
  1225                           
  1226                           ;Proyecto.c: 290: MensajeLCD_Word("Temp:");
  1227   000932  0E27               	movlw	low STR_7
  1228   000934  6E0D               	movwf	MensajeLCD_Word@a^0,c
  1229   000936  EC89  F008         	call	_MensajeLCD_Word	;wreg free
  1230                           
  1231                           ;Proyecto.c: 291: if (TempC / 100 > 0) {
  1232   00093A  C01B  F008         	movff	TransmitirDatos@TempC,___lwdiv@dividend
  1233   00093E  C01C  F009         	movff	TransmitirDatos@TempC+1,___lwdiv@dividend+1
  1234   000942  0E00               	movlw	0
  1235   000944  6E0B               	movwf	(___lwdiv@divisor+1)^0,c
  1236   000946  0E64               	movlw	100
  1237   000948  6E0A               	movwf	___lwdiv@divisor^0,c
  1238   00094A  EC60  F008         	call	___lwdiv	;wreg free
  1239   00094E  5008               	movf	?___lwdiv^0,w,c
  1240   000950  1009               	iorwf	(?___lwdiv+1)^0,w,c
  1241   000952  B4D8               	btfsc	status,2,c
  1242   000954  D02A               	goto	l292
  1243                           
  1244                           ;Proyecto.c: 292: Transmitir(TempC / 100 + 48);
  1245   000956  C01B  F008         	movff	TransmitirDatos@TempC,___lwdiv@dividend
  1246   00095A  C01C  F009         	movff	TransmitirDatos@TempC+1,___lwdiv@dividend+1
  1247   00095E  0E00               	movlw	0
  1248   000960  6E0B               	movwf	(___lwdiv@divisor+1)^0,c
  1249   000962  0E64               	movlw	100
  1250   000964  6E0A               	movwf	___lwdiv@divisor^0,c
  1251   000966  EC60  F008         	call	___lwdiv	;wreg free
  1252   00096A  5008               	movf	?___lwdiv^0,w,c
  1253   00096C  0F30               	addlw	48
  1254   00096E  EC33  F00A         	call	_Transmitir
  1255                           
  1256                           ;Proyecto.c: 293: EscribeLCD_c(TempC / 100 + 48);
  1257   000972  C01B  F008         	movff	TransmitirDatos@TempC,___lwdiv@dividend
  1258   000976  C01C  F009         	movff	TransmitirDatos@TempC+1,___lwdiv@dividend+1
  1259   00097A  0E00               	movlw	0
  1260   00097C  6E0B               	movwf	(___lwdiv@divisor+1)^0,c
  1261   00097E  0E64               	movlw	100
  1262   000980  6E0A               	movwf	___lwdiv@divisor^0,c
  1263   000982  EC60  F008         	call	___lwdiv	;wreg free
  1264   000986  5008               	movf	?___lwdiv^0,w,c
  1265   000988  0F30               	addlw	48
  1266   00098A  ECFF  F009         	call	_EscribeLCD_c
  1267                           
  1268                           ;Proyecto.c: 294: TempC = TempC % 100;
  1269   00098E  C01B  F008         	movff	TransmitirDatos@TempC,___lwmod@dividend
  1270   000992  C01C  F009         	movff	TransmitirDatos@TempC+1,___lwmod@dividend+1
  1271   000996  0E00               	movlw	0
  1272   000998  6E0B               	movwf	(___lwmod@divisor+1)^0,c
  1273   00099A  0E64               	movlw	100
  1274   00099C  6E0A               	movwf	___lwmod@divisor^0,c
  1275   00099E  ECF6  F008         	call	___lwmod	;wreg free
  1276   0009A2  C008  F01B         	movff	?___lwmod,TransmitirDatos@TempC
  1277   0009A6  C009  F01C         	movff	?___lwmod+1,TransmitirDatos@TempC+1
  1278   0009AA                     l292:
  1279                           
  1280                           ;Proyecto.c: 295: };Proyecto.c: 296: Transmitir(TempC / 10 + 48);
  1281   0009AA  C01B  F008         	movff	TransmitirDatos@TempC,___lwdiv@dividend
  1282   0009AE  C01C  F009         	movff	TransmitirDatos@TempC+1,___lwdiv@dividend+1
  1283   0009B2  0E00               	movlw	0
  1284   0009B4  6E0B               	movwf	(___lwdiv@divisor+1)^0,c
  1285   0009B6  0E0A               	movlw	10
  1286   0009B8  6E0A               	movwf	___lwdiv@divisor^0,c
  1287   0009BA  EC60  F008         	call	___lwdiv	;wreg free
  1288   0009BE  5008               	movf	?___lwdiv^0,w,c
  1289   0009C0  0F30               	addlw	48
  1290   0009C2  EC33  F00A         	call	_Transmitir
  1291                           
  1292                           ;Proyecto.c: 297: Transmitir(TempC % 10 + 48);
  1293   0009C6  C01B  F008         	movff	TransmitirDatos@TempC,___lwmod@dividend
  1294   0009CA  C01C  F009         	movff	TransmitirDatos@TempC+1,___lwmod@dividend+1
  1295   0009CE  0E00               	movlw	0
  1296   0009D0  6E0B               	movwf	(___lwmod@divisor+1)^0,c
  1297   0009D2  0E0A               	movlw	10
  1298   0009D4  6E0A               	movwf	___lwmod@divisor^0,c
  1299   0009D6  ECF6  F008         	call	___lwmod	;wreg free
  1300   0009DA  5008               	movf	?___lwmod^0,w,c
  1301   0009DC  0F30               	addlw	48
  1302   0009DE  EC33  F00A         	call	_Transmitir
  1303                           
  1304                           ;Proyecto.c: 298: Transmitir(167);
  1305   0009E2  0EA7               	movlw	167
  1306   0009E4  EC33  F00A         	call	_Transmitir
  1307                           
  1308                           ;Proyecto.c: 299: Transmitir(Simb);
  1309   0009E8  5019               	movf	TransmitirDatos@Simb^0,w,c
  1310   0009EA  EC33  F00A         	call	_Transmitir
  1311                           
  1312                           ;Proyecto.c: 300: Transmitir(' ');
  1313   0009EE  0E20               	movlw	32
  1314   0009F0  EC33  F00A         	call	_Transmitir
  1315                           
  1316                           ;Proyecto.c: 301: Transmitir('\n');
  1317   0009F4  0E0A               	movlw	10
  1318   0009F6  EC33  F00A         	call	_Transmitir
  1319                           
  1320                           ;Proyecto.c: 302: Transmitir('H');
  1321   0009FA  0E48               	movlw	72
  1322   0009FC  EC33  F00A         	call	_Transmitir
  1323                           
  1324                           ;Proyecto.c: 303: Transmitir('u');
  1325   000A00  0E75               	movlw	117
  1326   000A02  EC33  F00A         	call	_Transmitir
  1327                           
  1328                           ;Proyecto.c: 304: Transmitir('m');
  1329   000A06  0E6D               	movlw	109
  1330   000A08  EC33  F00A         	call	_Transmitir
  1331                           
  1332                           ;Proyecto.c: 305: Transmitir(':');
  1333   000A0C  0E3A               	movlw	58
  1334   000A0E  EC33  F00A         	call	_Transmitir
  1335                           
  1336                           ;Proyecto.c: 306: Transmitir(' ');
  1337   000A12  0E20               	movlw	32
  1338   000A14  EC33  F00A         	call	_Transmitir
  1339                           
  1340                           ;Proyecto.c: 307: Transmitir(Humedad / 10 + 48);
  1341   000A18  0E0A               	movlw	10
  1342   000A1A  6E08               	movwf	___lbdiv@divisor^0,c
  1343   000A1C  5031               	movf	_Humedad^0,w,c
  1344   000A1E  EC52  F009         	call	___lbdiv
  1345   000A22  0F30               	addlw	48
  1346   000A24  EC33  F00A         	call	_Transmitir
  1347                           
  1348                           ;Proyecto.c: 308: Transmitir(Humedad % 10 + 48);
  1349   000A28  0E0A               	movlw	10
  1350   000A2A  6E08               	movwf	___lbmod@divisor^0,c
  1351   000A2C  5031               	movf	_Humedad^0,w,c
  1352   000A2E  ECBB  F009         	call	___lbmod
  1353   000A32  0F30               	addlw	48
  1354   000A34  EC33  F00A         	call	_Transmitir
  1355                           
  1356                           ;Proyecto.c: 309: Transmitir(' ');
  1357   000A38  0E20               	movlw	32
  1358   000A3A  EC33  F00A         	call	_Transmitir
  1359                           
  1360                           ;Proyecto.c: 310: Transmitir('%');
  1361   000A3E  0E25               	movlw	37
  1362   000A40  EC33  F00A         	call	_Transmitir
  1363                           
  1364                           ;Proyecto.c: 311: Transmitir('\n');
  1365   000A44  0E0A               	movlw	10
  1366   000A46  EC33  F00A         	call	_Transmitir
  1367                           
  1368                           ;Proyecto.c: 312: Transmitir(' ');
  1369   000A4A  0E20               	movlw	32
  1370   000A4C  EC33  F00A         	call	_Transmitir
  1371                           
  1372                           ;Proyecto.c: 314: EscribeLCD_c(TempC / 10 + 48);
  1373   000A50  C01B  F008         	movff	TransmitirDatos@TempC,___lwdiv@dividend
  1374   000A54  C01C  F009         	movff	TransmitirDatos@TempC+1,___lwdiv@dividend+1
  1375   000A58  0E00               	movlw	0
  1376   000A5A  6E0B               	movwf	(___lwdiv@divisor+1)^0,c
  1377   000A5C  0E0A               	movlw	10
  1378   000A5E  6E0A               	movwf	___lwdiv@divisor^0,c
  1379   000A60  EC60  F008         	call	___lwdiv	;wreg free
  1380   000A64  5008               	movf	?___lwdiv^0,w,c
  1381   000A66  0F30               	addlw	48
  1382   000A68  ECFF  F009         	call	_EscribeLCD_c
  1383                           
  1384                           ;Proyecto.c: 315: EscribeLCD_c(TempC % 10 + 48);
  1385   000A6C  C01B  F008         	movff	TransmitirDatos@TempC,___lwmod@dividend
  1386   000A70  C01C  F009         	movff	TransmitirDatos@TempC+1,___lwmod@dividend+1
  1387   000A74  0E00               	movlw	0
  1388   000A76  6E0B               	movwf	(___lwmod@divisor+1)^0,c
  1389   000A78  0E0A               	movlw	10
  1390   000A7A  6E0A               	movwf	___lwmod@divisor^0,c
  1391   000A7C  ECF6  F008         	call	___lwmod	;wreg free
  1392   000A80  5008               	movf	?___lwmod^0,w,c
  1393   000A82  0F30               	addlw	48
  1394   000A84  ECFF  F009         	call	_EscribeLCD_c
  1395                           
  1396                           ;Proyecto.c: 316: EscribeLCD_c(Simb);
  1397   000A88  5019               	movf	TransmitirDatos@Simb^0,w,c
  1398   000A8A  ECFF  F009         	call	_EscribeLCD_c
  1399                           
  1400                           ;Proyecto.c: 317: DireccionaLCD(192);
  1401   000A8E  0EC0               	movlw	192
  1402   000A90  ECF4  F009         	call	_DireccionaLCD
  1403                           
  1404                           ;Proyecto.c: 318: MensajeLCD_Word("Hum:");
  1405   000A94  0E2D               	movlw	low STR_8
  1406   000A96  6E0D               	movwf	MensajeLCD_Word@a^0,c
  1407   000A98  EC89  F008         	call	_MensajeLCD_Word	;wreg free
  1408                           
  1409                           ;Proyecto.c: 319: EscribeLCD_c(Humedad / 10 + 48);
  1410   000A9C  0E0A               	movlw	10
  1411   000A9E  6E08               	movwf	___lbdiv@divisor^0,c
  1412   000AA0  5031               	movf	_Humedad^0,w,c
  1413   000AA2  EC52  F009         	call	___lbdiv
  1414   000AA6  0F30               	addlw	48
  1415   000AA8  ECFF  F009         	call	_EscribeLCD_c
  1416                           
  1417                           ;Proyecto.c: 320: EscribeLCD_c(Humedad % 10 + 48);
  1418   000AAC  0E0A               	movlw	10
  1419   000AAE  6E08               	movwf	___lbmod@divisor^0,c
  1420   000AB0  5031               	movf	_Humedad^0,w,c
  1421   000AB2  ECBB  F009         	call	___lbmod
  1422   000AB6  0F30               	addlw	48
  1423   000AB8  ECFF  F009         	call	_EscribeLCD_c
  1424                           
  1425                           ;Proyecto.c: 321: EscribeLCD_c('%');
  1426   000ABC  0E25               	movlw	37
  1427   000ABE  ECFF  F009         	call	_EscribeLCD_c
  1428   000AC2  0012               	return		;funcret
  1429   000AC4                     __end_of_TransmitirDatos:
  1430                           	callstack 0
  1431                           
  1432 ;; *************** function ___wmul *****************
  1433 ;; Defined at:
  1434 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\Umul16.c"
  1435 ;; Parameters:    Size  Location     Type
  1436 ;;  multiplier      2    7[COMRAM] unsigned int 
  1437 ;;  multiplicand    2    9[COMRAM] unsigned int 
  1438 ;; Auto vars:     Size  Location     Type
  1439 ;;  product         2   11[COMRAM] unsigned int 
  1440 ;; Return value:  Size  Location     Type
  1441 ;;                  2    7[COMRAM] unsigned int 
  1442 ;; Registers used:
  1443 ;;		wreg, status,2, status,0, prodl, prodh
  1444 ;; Tracked objects:
  1445 ;;		On entry : 0/0
  1446 ;;		On exit  : 0/0
  1447 ;;		Unchanged: 0/0
  1448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1449 ;;      Params:         4       0       0       0       0       0       0       0       0
  1450 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1451 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1452 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1453 ;;Total ram usage:        6 bytes
  1454 ;; Hardware stack levels used: 1
  1455 ;; Hardware stack levels required when called: 4
  1456 ;; This function calls:
  1457 ;;		Nothing
  1458 ;; This function is called by:
  1459 ;;		_TransmitirDatos
  1460 ;; This function uses a non-reentrant model
  1461 ;;
  1462                           
  1463                           	psect	text3
  1464   0013A0                     __ptext3:
  1465                           	callstack 0
  1466   0013A0                     ___wmul:
  1467                           	callstack 25
  1468                           
  1469                           ;incstack = 0
  1470   0013A0  5008               	movf	___wmul@multiplier^0,w,c
  1471   0013A2  020A               	mulwf	___wmul@multiplicand^0,c
  1472   0013A4  CFF3 F00C          	movff	prodl,___wmul@product
  1473   0013A8  CFF4 F00D          	movff	prodh,___wmul@product+1
  1474   0013AC  5008               	movf	___wmul@multiplier^0,w,c
  1475   0013AE  020B               	mulwf	(___wmul@multiplicand+1)^0,c
  1476   0013B0  50F3               	movf	243,w,c
  1477   0013B2  260D               	addwf	(___wmul@product+1)^0,f,c
  1478   0013B4  5009               	movf	(___wmul@multiplier+1)^0,w,c
  1479   0013B6  020A               	mulwf	___wmul@multiplicand^0,c
  1480   0013B8  50F3               	movf	243,w,c
  1481   0013BA  260D               	addwf	(___wmul@product+1)^0,f,c
  1482   0013BC  C00C  F008         	movff	___wmul@product,?___wmul
  1483   0013C0  C00D  F009         	movff	___wmul@product+1,?___wmul+1
  1484   0013C4  0012               	return		;funcret
  1485   0013C6                     __end_of___wmul:
  1486                           	callstack 0
  1487                           
  1488 ;; *************** function ___lwmod *****************
  1489 ;; Defined at:
  1490 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\lwmod.c"
  1491 ;; Parameters:    Size  Location     Type
  1492 ;;  dividend        2    7[COMRAM] unsigned int 
  1493 ;;  divisor         2    9[COMRAM] unsigned int 
  1494 ;; Auto vars:     Size  Location     Type
  1495 ;;  counter         1   11[COMRAM] unsigned char 
  1496 ;; Return value:  Size  Location     Type
  1497 ;;                  2    7[COMRAM] unsigned int 
  1498 ;; Registers used:
  1499 ;;		wreg, status,2, status,0
  1500 ;; Tracked objects:
  1501 ;;		On entry : 0/0
  1502 ;;		On exit  : 0/0
  1503 ;;		Unchanged: 0/0
  1504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1505 ;;      Params:         4       0       0       0       0       0       0       0       0
  1506 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1507 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1508 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1509 ;;Total ram usage:        5 bytes
  1510 ;; Hardware stack levels used: 1
  1511 ;; Hardware stack levels required when called: 4
  1512 ;; This function calls:
  1513 ;;		Nothing
  1514 ;; This function is called by:
  1515 ;;		_TransmitirDatos
  1516 ;; This function uses a non-reentrant model
  1517 ;;
  1518                           
  1519                           	psect	text4
  1520   0011EC                     __ptext4:
  1521                           	callstack 0
  1522   0011EC                     ___lwmod:
  1523                           	callstack 25
  1524                           
  1525                           ;incstack = 0
  1526   0011EC  500A               	movf	___lwmod@divisor^0,w,c
  1527   0011EE  100B               	iorwf	(___lwmod@divisor+1)^0,w,c
  1528   0011F0  B4D8               	btfsc	status,2,c
  1529   0011F2  D018               	goto	l828
  1530   0011F4  0E01               	movlw	1
  1531   0011F6  6E0C               	movwf	___lwmod@counter^0,c
  1532   0011F8  D004               	goto	l2056
  1533   0011FA                     l2054:
  1534   0011FA  90D8               	bcf	status,0,c
  1535   0011FC  360A               	rlcf	___lwmod@divisor^0,f,c
  1536   0011FE  360B               	rlcf	(___lwmod@divisor+1)^0,f,c
  1537   001200  2A0C               	incf	___lwmod@counter^0,f,c
  1538   001202                     l2056:
  1539   001202  AE0B               	btfss	(___lwmod@divisor+1)^0,7,c
  1540   001204  D7FA               	goto	l2054
  1541   001206                     u960:
  1542   001206  500A               	movf	___lwmod@divisor^0,w,c
  1543   001208  5C08               	subwf	___lwmod@dividend^0,w,c
  1544   00120A  500B               	movf	(___lwmod@divisor+1)^0,w,c
  1545   00120C  5809               	subwfb	(___lwmod@dividend+1)^0,w,c
  1546   00120E  A0D8               	btfss	status,0,c
  1547   001210  D004               	goto	l2062
  1548   001212  500A               	movf	___lwmod@divisor^0,w,c
  1549   001214  5E08               	subwf	___lwmod@dividend^0,f,c
  1550   001216  500B               	movf	(___lwmod@divisor+1)^0,w,c
  1551   001218  5A09               	subwfb	(___lwmod@dividend+1)^0,f,c
  1552   00121A                     l2062:
  1553   00121A  90D8               	bcf	status,0,c
  1554   00121C  320B               	rrcf	(___lwmod@divisor+1)^0,f,c
  1555   00121E  320A               	rrcf	___lwmod@divisor^0,f,c
  1556   001220  2E0C               	decfsz	___lwmod@counter^0,f,c
  1557   001222  D7F1               	goto	u960
  1558   001224                     l828:
  1559   001224  C008  F008         	movff	___lwmod@dividend,?___lwmod
  1560   001228  C009  F009         	movff	___lwmod@dividend+1,?___lwmod+1
  1561   00122C  0012               	return		;funcret
  1562   00122E                     __end_of___lwmod:
  1563                           	callstack 0
  1564                           
  1565 ;; *************** function ___lwdiv *****************
  1566 ;; Defined at:
  1567 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\lwdiv.c"
  1568 ;; Parameters:    Size  Location     Type
  1569 ;;  dividend        2    7[COMRAM] unsigned int 
  1570 ;;  divisor         2    9[COMRAM] unsigned int 
  1571 ;; Auto vars:     Size  Location     Type
  1572 ;;  quotient        2   11[COMRAM] unsigned int 
  1573 ;;  counter         1   13[COMRAM] unsigned char 
  1574 ;; Return value:  Size  Location     Type
  1575 ;;                  2    7[COMRAM] unsigned int 
  1576 ;; Registers used:
  1577 ;;		wreg, status,2, status,0
  1578 ;; Tracked objects:
  1579 ;;		On entry : 0/0
  1580 ;;		On exit  : 0/0
  1581 ;;		Unchanged: 0/0
  1582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1583 ;;      Params:         4       0       0       0       0       0       0       0       0
  1584 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1585 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1586 ;;      Totals:         7       0       0       0       0       0       0       0       0
  1587 ;;Total ram usage:        7 bytes
  1588 ;; Hardware stack levels used: 1
  1589 ;; Hardware stack levels required when called: 4
  1590 ;; This function calls:
  1591 ;;		Nothing
  1592 ;; This function is called by:
  1593 ;;		_TransmitirDatos
  1594 ;; This function uses a non-reentrant model
  1595 ;;
  1596                           
  1597                           	psect	text5
  1598   0010C0                     __ptext5:
  1599                           	callstack 0
  1600   0010C0                     ___lwdiv:
  1601                           	callstack 25
  1602                           
  1603                           ;incstack = 0
  1604   0010C0  0E00               	movlw	0
  1605   0010C2  6E0D               	movwf	(___lwdiv@quotient+1)^0,c
  1606   0010C4  0E00               	movlw	0
  1607   0010C6  6E0C               	movwf	___lwdiv@quotient^0,c
  1608   0010C8  500A               	movf	___lwdiv@divisor^0,w,c
  1609   0010CA  100B               	iorwf	(___lwdiv@divisor+1)^0,w,c
  1610   0010CC  B4D8               	btfsc	status,2,c
  1611   0010CE  D01C               	goto	l818
  1612   0010D0  0E01               	movlw	1
  1613   0010D2  6E0E               	movwf	___lwdiv@counter^0,c
  1614   0010D4  D004               	goto	l2036
  1615   0010D6                     l2034:
  1616   0010D6  90D8               	bcf	status,0,c
  1617   0010D8  360A               	rlcf	___lwdiv@divisor^0,f,c
  1618   0010DA  360B               	rlcf	(___lwdiv@divisor+1)^0,f,c
  1619   0010DC  2A0E               	incf	___lwdiv@counter^0,f,c
  1620   0010DE                     l2036:
  1621   0010DE  AE0B               	btfss	(___lwdiv@divisor+1)^0,7,c
  1622   0010E0  D7FA               	goto	l2034
  1623   0010E2                     u930:
  1624   0010E2  90D8               	bcf	status,0,c
  1625   0010E4  360C               	rlcf	___lwdiv@quotient^0,f,c
  1626   0010E6  360D               	rlcf	(___lwdiv@quotient+1)^0,f,c
  1627   0010E8  500A               	movf	___lwdiv@divisor^0,w,c
  1628   0010EA  5C08               	subwf	___lwdiv@dividend^0,w,c
  1629   0010EC  500B               	movf	(___lwdiv@divisor+1)^0,w,c
  1630   0010EE  5809               	subwfb	(___lwdiv@dividend+1)^0,w,c
  1631   0010F0  A0D8               	btfss	status,0,c
  1632   0010F2  D005               	goto	l2046
  1633   0010F4  500A               	movf	___lwdiv@divisor^0,w,c
  1634   0010F6  5E08               	subwf	___lwdiv@dividend^0,f,c
  1635   0010F8  500B               	movf	(___lwdiv@divisor+1)^0,w,c
  1636   0010FA  5A09               	subwfb	(___lwdiv@dividend+1)^0,f,c
  1637   0010FC  800C               	bsf	___lwdiv@quotient^0,0,c
  1638   0010FE                     l2046:
  1639   0010FE  90D8               	bcf	status,0,c
  1640   001100  320B               	rrcf	(___lwdiv@divisor+1)^0,f,c
  1641   001102  320A               	rrcf	___lwdiv@divisor^0,f,c
  1642   001104  2E0E               	decfsz	___lwdiv@counter^0,f,c
  1643   001106  D7ED               	goto	u930
  1644   001108                     l818:
  1645   001108  C00C  F008         	movff	___lwdiv@quotient,?___lwdiv
  1646   00110C  C00D  F009         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1647   001110  0012               	return		;funcret
  1648   001112                     __end_of___lwdiv:
  1649                           	callstack 0
  1650                           
  1651 ;; *************** function ___lbmod *****************
  1652 ;; Defined at:
  1653 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\lbmod.c"
  1654 ;; Parameters:    Size  Location     Type
  1655 ;;  dividend        1    wreg     unsigned char 
  1656 ;;  divisor         1    7[COMRAM] unsigned char 
  1657 ;; Auto vars:     Size  Location     Type
  1658 ;;  dividend        1    8[COMRAM] unsigned char 
  1659 ;;  rem             1   10[COMRAM] unsigned char 
  1660 ;;  counter         1    9[COMRAM] unsigned char 
  1661 ;; Return value:  Size  Location     Type
  1662 ;;                  1    wreg      unsigned char 
  1663 ;; Registers used:
  1664 ;;		wreg, status,2, status,0
  1665 ;; Tracked objects:
  1666 ;;		On entry : 0/0
  1667 ;;		On exit  : 0/0
  1668 ;;		Unchanged: 0/0
  1669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1670 ;;      Params:         1       0       0       0       0       0       0       0       0
  1671 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1672 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1673 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1674 ;;Total ram usage:        4 bytes
  1675 ;; Hardware stack levels used: 1
  1676 ;; Hardware stack levels required when called: 4
  1677 ;; This function calls:
  1678 ;;		Nothing
  1679 ;; This function is called by:
  1680 ;;		_TransmitirDatos
  1681 ;; This function uses a non-reentrant model
  1682 ;;
  1683                           
  1684                           	psect	text6
  1685   001376                     __ptext6:
  1686                           	callstack 0
  1687   001376                     ___lbmod:
  1688                           	callstack 25
  1689                           
  1690                           ;incstack = 0
  1691                           ;___lbmod@dividend stored from wreg
  1692   001376  6E09               	movwf	___lbmod@dividend^0,c
  1693   001378  0E08               	movlw	8
  1694   00137A  6E0A               	movwf	___lbmod@counter^0,c
  1695   00137C  0E00               	movlw	0
  1696   00137E  6E0B               	movwf	___lbmod@rem^0,c
  1697   001380                     l2014:
  1698   001380  90D8               	bcf	status,0,c
  1699   001382  3409               	rlcf	___lbmod@dividend^0,w,c
  1700   001384  340B               	rlcf	___lbmod@rem^0,w,c
  1701   001386  6E0B               	movwf	___lbmod@rem^0,c
  1702   001388  90D8               	bcf	status,0,c
  1703   00138A  3609               	rlcf	___lbmod@dividend^0,f,c
  1704   00138C  5008               	movf	___lbmod@divisor^0,w,c
  1705   00138E  5C0B               	subwf	___lbmod@rem^0,w,c
  1706   001390  A0D8               	btfss	status,0,c
  1707   001392  D002               	goto	l2022
  1708   001394  5008               	movf	___lbmod@divisor^0,w,c
  1709   001396  5E0B               	subwf	___lbmod@rem^0,f,c
  1710   001398                     l2022:
  1711   001398  2E0A               	decfsz	___lbmod@counter^0,f,c
  1712   00139A  D7F2               	goto	l2014
  1713   00139C  500B               	movf	___lbmod@rem^0,w,c
  1714   00139E  0012               	return		;funcret
  1715   0013A0                     __end_of___lbmod:
  1716                           	callstack 0
  1717                           
  1718 ;; *************** function ___lbdiv *****************
  1719 ;; Defined at:
  1720 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\lbdiv.c"
  1721 ;; Parameters:    Size  Location     Type
  1722 ;;  dividend        1    wreg     unsigned char 
  1723 ;;  divisor         1    7[COMRAM] unsigned char 
  1724 ;; Auto vars:     Size  Location     Type
  1725 ;;  dividend        1    8[COMRAM] unsigned char 
  1726 ;;  quotient        1   10[COMRAM] unsigned char 
  1727 ;;  counter         1    9[COMRAM] unsigned char 
  1728 ;; Return value:  Size  Location     Type
  1729 ;;                  1    wreg      unsigned char 
  1730 ;; Registers used:
  1731 ;;		wreg, status,2, status,0
  1732 ;; Tracked objects:
  1733 ;;		On entry : 0/0
  1734 ;;		On exit  : 0/0
  1735 ;;		Unchanged: 0/0
  1736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1737 ;;      Params:         1       0       0       0       0       0       0       0       0
  1738 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1739 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1740 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1741 ;;Total ram usage:        4 bytes
  1742 ;; Hardware stack levels used: 1
  1743 ;; Hardware stack levels required when called: 4
  1744 ;; This function calls:
  1745 ;;		Nothing
  1746 ;; This function is called by:
  1747 ;;		_TransmitirDatos
  1748 ;; This function uses a non-reentrant model
  1749 ;;
  1750                           
  1751                           	psect	text7
  1752   0012A4                     __ptext7:
  1753                           	callstack 0
  1754   0012A4                     ___lbdiv:
  1755                           	callstack 25
  1756                           
  1757                           ;incstack = 0
  1758                           ;___lbdiv@dividend stored from wreg
  1759   0012A4  6E09               	movwf	___lbdiv@dividend^0,c
  1760   0012A6  0E00               	movlw	0
  1761   0012A8  6E0B               	movwf	___lbdiv@quotient^0,c
  1762   0012AA  5008               	movf	___lbdiv@divisor^0,w,c
  1763   0012AC  B4D8               	btfsc	status,2,c
  1764   0012AE  D015               	goto	l2008
  1765   0012B0  0E01               	movlw	1
  1766   0012B2  6E0A               	movwf	___lbdiv@counter^0,c
  1767   0012B4  D003               	goto	l1996
  1768   0012B6                     l1992:
  1769   0012B6  90D8               	bcf	status,0,c
  1770   0012B8  3608               	rlcf	___lbdiv@divisor^0,f,c
  1771   0012BA  2A0A               	incf	___lbdiv@counter^0,f,c
  1772   0012BC                     l1996:
  1773   0012BC  AE08               	btfss	___lbdiv@divisor^0,7,c
  1774   0012BE  D7FB               	goto	l1992
  1775   0012C0                     u890:
  1776   0012C0  90D8               	bcf	status,0,c
  1777   0012C2  360B               	rlcf	___lbdiv@quotient^0,f,c
  1778   0012C4  5008               	movf	___lbdiv@divisor^0,w,c
  1779   0012C6  5C09               	subwf	___lbdiv@dividend^0,w,c
  1780   0012C8  A0D8               	btfss	status,0,c
  1781   0012CA  D003               	goto	l2004
  1782   0012CC  5008               	movf	___lbdiv@divisor^0,w,c
  1783   0012CE  5E09               	subwf	___lbdiv@dividend^0,f,c
  1784   0012D0  800B               	bsf	___lbdiv@quotient^0,0,c
  1785   0012D2                     l2004:
  1786   0012D2  90D8               	bcf	status,0,c
  1787   0012D4  3208               	rrcf	___lbdiv@divisor^0,f,c
  1788   0012D6  2E0A               	decfsz	___lbdiv@counter^0,f,c
  1789   0012D8  D7F3               	goto	u890
  1790   0012DA                     l2008:
  1791   0012DA  500B               	movf	___lbdiv@quotient^0,w,c
  1792   0012DC  0012               	return		;funcret
  1793   0012DE                     __end_of___lbdiv:
  1794                           	callstack 0
  1795                           
  1796 ;; *************** function ___awdiv *****************
  1797 ;; Defined at:
  1798 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\awdiv.c"
  1799 ;; Parameters:    Size  Location     Type
  1800 ;;  dividend        2    7[COMRAM] int 
  1801 ;;  divisor         2    9[COMRAM] int 
  1802 ;; Auto vars:     Size  Location     Type
  1803 ;;  quotient        2   13[COMRAM] int 
  1804 ;;  sign            1   12[COMRAM] unsigned char 
  1805 ;;  counter         1   11[COMRAM] unsigned char 
  1806 ;; Return value:  Size  Location     Type
  1807 ;;                  2    7[COMRAM] int 
  1808 ;; Registers used:
  1809 ;;		wreg, status,2, status,0
  1810 ;; Tracked objects:
  1811 ;;		On entry : 0/0
  1812 ;;		On exit  : 0/0
  1813 ;;		Unchanged: 0/0
  1814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1815 ;;      Params:         4       0       0       0       0       0       0       0       0
  1816 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1817 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1818 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1819 ;;Total ram usage:        8 bytes
  1820 ;; Hardware stack levels used: 1
  1821 ;; Hardware stack levels required when called: 4
  1822 ;; This function calls:
  1823 ;;		Nothing
  1824 ;; This function is called by:
  1825 ;;		_TransmitirDatos
  1826 ;; This function uses a non-reentrant model
  1827 ;;
  1828                           
  1829                           	psect	text8
  1830   000F70                     __ptext8:
  1831                           	callstack 0
  1832   000F70                     ___awdiv:
  1833                           	callstack 25
  1834                           
  1835                           ;incstack = 0
  1836   000F70  0E00               	movlw	0
  1837   000F72  6E0D               	movwf	___awdiv@sign^0,c
  1838   000F74  AE0B               	btfss	(___awdiv@divisor+1)^0,7,c
  1839   000F76  D006               	goto	l1950
  1840   000F78  6C0A               	negf	___awdiv@divisor^0,c
  1841   000F7A  1E0B               	comf	(___awdiv@divisor+1)^0,f,c
  1842   000F7C  B0D8               	btfsc	status,0,c
  1843   000F7E  2A0B               	incf	(___awdiv@divisor+1)^0,f,c
  1844   000F80  0E01               	movlw	1
  1845   000F82  6E0D               	movwf	___awdiv@sign^0,c
  1846   000F84                     l1950:
  1847   000F84  AE09               	btfss	(___awdiv@dividend+1)^0,7,c
  1848   000F86  D006               	goto	l1956
  1849   000F88  6C08               	negf	___awdiv@dividend^0,c
  1850   000F8A  1E09               	comf	(___awdiv@dividend+1)^0,f,c
  1851   000F8C  B0D8               	btfsc	status,0,c
  1852   000F8E  2A09               	incf	(___awdiv@dividend+1)^0,f,c
  1853   000F90  0E01               	movlw	1
  1854   000F92  1A0D               	xorwf	___awdiv@sign^0,f,c
  1855   000F94                     l1956:
  1856   000F94  0E00               	movlw	0
  1857   000F96  6E0F               	movwf	(___awdiv@quotient+1)^0,c
  1858   000F98  0E00               	movlw	0
  1859   000F9A  6E0E               	movwf	___awdiv@quotient^0,c
  1860   000F9C  500A               	movf	___awdiv@divisor^0,w,c
  1861   000F9E  100B               	iorwf	(___awdiv@divisor+1)^0,w,c
  1862   000FA0  B4D8               	btfsc	status,2,c
  1863   000FA2  D01C               	goto	l1978
  1864   000FA4  0E01               	movlw	1
  1865   000FA6  6E0C               	movwf	___awdiv@counter^0,c
  1866   000FA8  D004               	goto	l1964
  1867   000FAA                     l1962:
  1868   000FAA  90D8               	bcf	status,0,c
  1869   000FAC  360A               	rlcf	___awdiv@divisor^0,f,c
  1870   000FAE  360B               	rlcf	(___awdiv@divisor+1)^0,f,c
  1871   000FB0  2A0C               	incf	___awdiv@counter^0,f,c
  1872   000FB2                     l1964:
  1873   000FB2  AE0B               	btfss	(___awdiv@divisor+1)^0,7,c
  1874   000FB4  D7FA               	goto	l1962
  1875   000FB6                     u850:
  1876   000FB6  90D8               	bcf	status,0,c
  1877   000FB8  360E               	rlcf	___awdiv@quotient^0,f,c
  1878   000FBA  360F               	rlcf	(___awdiv@quotient+1)^0,f,c
  1879   000FBC  500A               	movf	___awdiv@divisor^0,w,c
  1880   000FBE  5C08               	subwf	___awdiv@dividend^0,w,c
  1881   000FC0  500B               	movf	(___awdiv@divisor+1)^0,w,c
  1882   000FC2  5809               	subwfb	(___awdiv@dividend+1)^0,w,c
  1883   000FC4  A0D8               	btfss	status,0,c
  1884   000FC6  D005               	goto	l1974
  1885   000FC8  500A               	movf	___awdiv@divisor^0,w,c
  1886   000FCA  5E08               	subwf	___awdiv@dividend^0,f,c
  1887   000FCC  500B               	movf	(___awdiv@divisor+1)^0,w,c
  1888   000FCE  5A09               	subwfb	(___awdiv@dividend+1)^0,f,c
  1889   000FD0  800E               	bsf	___awdiv@quotient^0,0,c
  1890   000FD2                     l1974:
  1891   000FD2  90D8               	bcf	status,0,c
  1892   000FD4  320B               	rrcf	(___awdiv@divisor+1)^0,f,c
  1893   000FD6  320A               	rrcf	___awdiv@divisor^0,f,c
  1894   000FD8  2E0C               	decfsz	___awdiv@counter^0,f,c
  1895   000FDA  D7ED               	goto	u850
  1896   000FDC                     l1978:
  1897   000FDC  500D               	movf	___awdiv@sign^0,w,c
  1898   000FDE  B4D8               	btfsc	status,2,c
  1899   000FE0  D004               	goto	l1982
  1900   000FE2  6C0E               	negf	___awdiv@quotient^0,c
  1901   000FE4  1E0F               	comf	(___awdiv@quotient+1)^0,f,c
  1902   000FE6  B0D8               	btfsc	status,0,c
  1903   000FE8  2A0F               	incf	(___awdiv@quotient+1)^0,f,c
  1904   000FEA                     l1982:
  1905   000FEA  C00E  F008         	movff	___awdiv@quotient,?___awdiv
  1906   000FEE  C00F  F009         	movff	___awdiv@quotient+1,?___awdiv+1
  1907   000FF2  0012               	return		;funcret
  1908   000FF4                     __end_of___awdiv:
  1909                           	callstack 0
  1910                           
  1911 ;; *************** function _Transmitir *****************
  1912 ;; Defined at:
  1913 ;;		line 251 in file "Proyecto.c"
  1914 ;; Parameters:    Size  Location     Type
  1915 ;;  BufferT         1    wreg     unsigned char 
  1916 ;; Auto vars:     Size  Location     Type
  1917 ;;  BufferT         1    7[COMRAM] unsigned char 
  1918 ;; Return value:  Size  Location     Type
  1919 ;;                  1    wreg      void 
  1920 ;; Registers used:
  1921 ;;		wreg
  1922 ;; Tracked objects:
  1923 ;;		On entry : 0/0
  1924 ;;		On exit  : 0/0
  1925 ;;		Unchanged: 0/0
  1926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1927 ;;      Params:         0       0       0       0       0       0       0       0       0
  1928 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1929 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1930 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1931 ;;Total ram usage:        1 bytes
  1932 ;; Hardware stack levels used: 1
  1933 ;; Hardware stack levels required when called: 4
  1934 ;; This function calls:
  1935 ;;		Nothing
  1936 ;; This function is called by:
  1937 ;;		_TransmitirDatos
  1938 ;; This function uses a non-reentrant model
  1939 ;;
  1940                           
  1941                           	psect	text9
  1942   001466                     __ptext9:
  1943                           	callstack 0
  1944   001466                     _Transmitir:
  1945                           	callstack 25
  1946                           
  1947                           ;incstack = 0
  1948                           ;Transmitir@BufferT stored from wreg
  1949   001466  6E08               	movwf	Transmitir@BufferT^0,c
  1950   001468                     
  1951                           ;Proyecto.c: 252: while (TRMT == 0);
  1952   001468  A2AC               	btfss	4012,1,c	;volatile
  1953   00146A  D7FE               	goto	l1932
  1954                           
  1955                           ;Proyecto.c: 253: TXREG = BufferT;
  1956   00146C  C008  FFAD         	movff	Transmitir@BufferT,4013	;volatile
  1957   001470  0012               	return		;funcret
  1958   001472                     __end_of_Transmitir:
  1959                           	callstack 0
  1960                           
  1961 ;; *************** function _MensajeLCD_Word *****************
  1962 ;; Defined at:
  1963 ;;		line 247 in file "LibLCDXC8.h"
  1964 ;; Parameters:    Size  Location     Type
  1965 ;;  a               1   12[COMRAM] PTR unsigned char 
  1966 ;;		 -> STR_8(5), STR_7(6), STR_6(17), STR_5(17), 
  1967 ;;		 -> STR_4(17), STR_3(10), STR_2(17), STR_1(11), 
  1968 ;; Auto vars:     Size  Location     Type
  1969 ;;  i               2   14[COMRAM] int 
  1970 ;; Return value:  Size  Location     Type
  1971 ;;                  1    wreg      void 
  1972 ;; Registers used:
  1973 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1974 ;; Tracked objects:
  1975 ;;		On entry : 0/0
  1976 ;;		On exit  : 0/0
  1977 ;;		Unchanged: 0/0
  1978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1979 ;;      Params:         1       0       0       0       0       0       0       0       0
  1980 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1981 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1982 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1983 ;;Total ram usage:        4 bytes
  1984 ;; Hardware stack levels used: 1
  1985 ;; Hardware stack levels required when called: 7
  1986 ;; This function calls:
  1987 ;;		_EscribeLCD_c
  1988 ;; This function is called by:
  1989 ;;		_main
  1990 ;;		_TransmitirDatos
  1991 ;; This function uses a non-reentrant model
  1992 ;;
  1993                           
  1994                           	psect	text10
  1995   001112                     __ptext10:
  1996                           	callstack 0
  1997   001112                     _MensajeLCD_Word:
  1998                           	callstack 22
  1999                           
  2000                           ;LibLCDXC8.h: 251: for(int i = 0; i<16; i++){
  2001                           
  2002                           ;incstack = 0
  2003   001112  0E00               	movlw	0
  2004   001114  6E10               	movwf	(MensajeLCD_Word@i+1)^0,c
  2005   001116  0E00               	movlw	0
  2006   001118  6E0F               	movwf	MensajeLCD_Word@i^0,c
  2007   00111A                     l1900:
  2008                           
  2009                           ;LibLCDXC8.h: 252: if(a[i] == (0)){
  2010   00111A  500D               	movf	MensajeLCD_Word@a^0,w,c
  2011   00111C  240F               	addwf	MensajeLCD_Word@i^0,w,c
  2012   00111E  6E0E               	movwf	??_MensajeLCD_Word^0,c
  2013   001120  C00E  FFF6         	movff	??_MensajeLCD_Word,tblptrl
  2014   001124                     	if	1	;There is more than 1 active tblptr byte
  2015   001124  0E08               	movlw	high __smallconst
  2016   001126  6EF7               	movwf	tblptrh,c
  2017   001128                     	endif
  2018   001128                     	if	0	;tblptru may be non-zero
  2019   001128                     	endif
  2020   001128                     	if	0	;tblptru may be non-zero
  2021   001128                     	endif
  2022   001128  0008               	tblrd		*
  2023   00112A  50F5               	movf	tablat,w,c
  2024   00112C  0900               	iorlw	0
  2025   00112E  B4D8               	btfsc	status,2,c
  2026   001130  0012               	return	
  2027                           
  2028                           ;LibLCDXC8.h: 254: };LibLCDXC8.h: 255: EscribeLCD_c(a[i]);
  2029   001132  500D               	movf	MensajeLCD_Word@a^0,w,c
  2030   001134  240F               	addwf	MensajeLCD_Word@i^0,w,c
  2031   001136  6E0E               	movwf	??_MensajeLCD_Word^0,c
  2032   001138  C00E  FFF6         	movff	??_MensajeLCD_Word,tblptrl
  2033   00113C                     	if	1	;There is more than 1 active tblptr byte
  2034   00113C  0E08               	movlw	high __smallconst
  2035   00113E  6EF7               	movwf	tblptrh,c
  2036   001140                     	endif
  2037   001140                     	if	0	;tblptru may be non-zero
  2038   001140                     	endif
  2039   001140                     	if	0	;tblptru may be non-zero
  2040   001140                     	endif
  2041   001140  0008               	tblrd		*
  2042   001142  50F5               	movf	tablat,w,c
  2043   001144  ECFF  F009         	call	_EscribeLCD_c
  2044   001148  4A0F               	infsnz	MensajeLCD_Word@i^0,f,c
  2045   00114A  2A10               	incf	(MensajeLCD_Word@i+1)^0,f,c
  2046   00114C  BE10               	btfsc	(MensajeLCD_Word@i+1)^0,7,c
  2047   00114E  D7E5               	goto	l1900
  2048   001150  5010               	movf	(MensajeLCD_Word@i+1)^0,w,c
  2049   001152  E105               	bnz	u790
  2050   001154  0E10               	movlw	16
  2051   001156  5C0F               	subwf	MensajeLCD_Word@i^0,w,c
  2052   001158  B0D8               	btfsc	status,0,c
  2053   00115A  0012               	return	
  2054   00115C  D7DE               	goto	l1900
  2055   00115E                     u790:
  2056   00115E  0012               	return		;funcret
  2057   001160                     __end_of_MensajeLCD_Word:
  2058                           	callstack 0
  2059                           
  2060 ;; *************** function _DireccionaLCD *****************
  2061 ;; Defined at:
  2062 ;;		line 259 in file "LibLCDXC8.h"
  2063 ;; Parameters:    Size  Location     Type
  2064 ;;  a               1    wreg     unsigned char 
  2065 ;; Auto vars:     Size  Location     Type
  2066 ;;  a               1   11[COMRAM] unsigned char 
  2067 ;; Return value:  Size  Location     Type
  2068 ;;                  1    wreg      void 
  2069 ;; Registers used:
  2070 ;;		wreg, status,2, status,0, cstack
  2071 ;; Tracked objects:
  2072 ;;		On entry : 0/0
  2073 ;;		On exit  : 0/0
  2074 ;;		Unchanged: 0/0
  2075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2076 ;;      Params:         0       0       0       0       0       0       0       0       0
  2077 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2078 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2079 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2080 ;;Total ram usage:        1 bytes
  2081 ;; Hardware stack levels used: 1
  2082 ;; Hardware stack levels required when called: 6
  2083 ;; This function calls:
  2084 ;;		_EnviaDato
  2085 ;;		_HabilitaLCD
  2086 ;;		_RetardoLCD
  2087 ;; This function is called by:
  2088 ;;		_main
  2089 ;;		_TransmitirDatos
  2090 ;; This function uses a non-reentrant model
  2091 ;;
  2092                           
  2093                           	psect	text11
  2094   0013E8                     __ptext11:
  2095                           	callstack 0
  2096   0013E8                     _DireccionaLCD:
  2097                           	callstack 23
  2098                           
  2099                           ;incstack = 0
  2100                           ;DireccionaLCD@a stored from wreg
  2101   0013E8  6E0C               	movwf	DireccionaLCD@a^0,c
  2102                           
  2103                           ;LibLCDXC8.h: 262: LATE1=0;
  2104   0013EA  928D               	bcf	3981,1,c	;volatile
  2105                           
  2106                           ;LibLCDXC8.h: 263: EnviaDato(a);
  2107   0013EC  500C               	movf	DireccionaLCD@a^0,w,c
  2108   0013EE  ECB0  F008         	call	_EnviaDato
  2109                           
  2110                           ;LibLCDXC8.h: 264: HabilitaLCD();
  2111   0013F2  EC1F  F00A         	call	_HabilitaLCD	;wreg free
  2112                           
  2113                           ;LibLCDXC8.h: 265: RetardoLCD(4);
  2114   0013F6  0E04               	movlw	4
  2115   0013F8  ECFA  F007         	call	_RetardoLCD
  2116   0013FC  0012               	return		;funcret
  2117   0013FE                     __end_of_DireccionaLCD:
  2118                           	callstack 0
  2119                           
  2120 ;; *************** function _NuevoCaracter *****************
  2121 ;; Defined at:
  2122 ;;		line 140 in file "LibLCDXC8.h"
  2123 ;; Parameters:    Size  Location     Type
  2124 ;;  addr            1    wreg     unsigned char 
  2125 ;;  c               1   12[COMRAM] PTR unsigned char 
  2126 ;;		 -> cara(8), 
  2127 ;; Auto vars:     Size  Location     Type
  2128 ;;  addr            1   13[COMRAM] unsigned char 
  2129 ;;  i               2   14[COMRAM] int 
  2130 ;; Return value:  Size  Location     Type
  2131 ;;                  1    wreg      void 
  2132 ;; Registers used:
  2133 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2134 ;; Tracked objects:
  2135 ;;		On entry : 0/0
  2136 ;;		On exit  : 0/0
  2137 ;;		Unchanged: 0/0
  2138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2139 ;;      Params:         1       0       0       0       0       0       0       0       0
  2140 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2141 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2142 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2143 ;;Total ram usage:        4 bytes
  2144 ;; Hardware stack levels used: 1
  2145 ;; Hardware stack levels required when called: 7
  2146 ;; This function calls:
  2147 ;;		_ComandoLCD
  2148 ;;		_EscribeLCD_c
  2149 ;; This function is called by:
  2150 ;;		_main
  2151 ;; This function uses a non-reentrant model
  2152 ;;
  2153                           
  2154                           	psect	text12
  2155   00122E                     __ptext12:
  2156                           	callstack 0
  2157   00122E                     _NuevoCaracter:
  2158                           	callstack 23
  2159                           
  2160                           ;incstack = 0
  2161                           ;NuevoCaracter@addr stored from wreg
  2162   00122E  6E0E               	movwf	NuevoCaracter@addr^0,c
  2163                           
  2164                           ;LibLCDXC8.h: 141: int i;;LibLCDXC8.h: 142: ComandoLCD(0x40 + (addr * 8));
  2165   001230  500E               	movf	NuevoCaracter@addr^0,w,c
  2166   001232  0D08               	mullw	8
  2167   001234  50F3               	movf	243,w,c
  2168   001236  0F40               	addlw	64
  2169   001238  ECA4  F009         	call	_ComandoLCD
  2170                           
  2171                           ;LibLCDXC8.h: 143: for (i = 0; i < 8; i++) {
  2172   00123C  0E00               	movlw	0
  2173   00123E  6E10               	movwf	(NuevoCaracter@i+1)^0,c
  2174   001240  0E00               	movlw	0
  2175   001242  6E0F               	movwf	NuevoCaracter@i^0,c
  2176   001244                     l2470:
  2177                           
  2178                           ;LibLCDXC8.h: 144: EscribeLCD_c(c[i]);
  2179   001244  500D               	movf	NuevoCaracter@c^0,w,c
  2180   001246  240F               	addwf	NuevoCaracter@i^0,w,c
  2181   001248  6ED9               	movwf	fsr2l,c
  2182   00124A  6ADA               	clrf	fsr2h,c
  2183   00124C  50DF               	movf	indf2,w,c
  2184   00124E  ECFF  F009         	call	_EscribeLCD_c
  2185   001252  4A0F               	infsnz	NuevoCaracter@i^0,f,c
  2186   001254  2A10               	incf	(NuevoCaracter@i+1)^0,f,c
  2187   001256  BE10               	btfsc	(NuevoCaracter@i+1)^0,7,c
  2188   001258  D7F5               	goto	l2470
  2189   00125A  5010               	movf	(NuevoCaracter@i+1)^0,w,c
  2190   00125C  E105               	bnz	u1430
  2191   00125E  0E08               	movlw	8
  2192   001260  5C0F               	subwf	NuevoCaracter@i^0,w,c
  2193   001262  B0D8               	btfsc	status,0,c
  2194   001264  0012               	return	
  2195   001266  D7EE               	goto	l2470
  2196   001268                     u1430:
  2197   001268  0012               	return		;funcret
  2198   00126A                     __end_of_NuevoCaracter:
  2199                           	callstack 0
  2200                           
  2201 ;; *************** function _EscribeLCD_c *****************
  2202 ;; Defined at:
  2203 ;;		line 148 in file "LibLCDXC8.h"
  2204 ;; Parameters:    Size  Location     Type
  2205 ;;  a               1    wreg     unsigned char 
  2206 ;; Auto vars:     Size  Location     Type
  2207 ;;  a               1   11[COMRAM] unsigned char 
  2208 ;; Return value:  Size  Location     Type
  2209 ;;                  1    wreg      void 
  2210 ;; Registers used:
  2211 ;;		wreg, status,2, status,0, cstack
  2212 ;; Tracked objects:
  2213 ;;		On entry : 0/0
  2214 ;;		On exit  : 0/0
  2215 ;;		Unchanged: 0/0
  2216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2217 ;;      Params:         0       0       0       0       0       0       0       0       0
  2218 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2219 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2220 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2221 ;;Total ram usage:        1 bytes
  2222 ;; Hardware stack levels used: 1
  2223 ;; Hardware stack levels required when called: 6
  2224 ;; This function calls:
  2225 ;;		_EnviaDato
  2226 ;;		_HabilitaLCD
  2227 ;;		_RetardoLCD
  2228 ;; This function is called by:
  2229 ;;		_NuevoCaracter
  2230 ;;		_MensajeLCD_Word
  2231 ;;		_main
  2232 ;;		_TransmitirDatos
  2233 ;; This function uses a non-reentrant model
  2234 ;;
  2235                           
  2236                           	psect	text13
  2237   0013FE                     __ptext13:
  2238                           	callstack 0
  2239   0013FE                     _EscribeLCD_c:
  2240                           	callstack 22
  2241                           
  2242                           ;incstack = 0
  2243                           ;EscribeLCD_c@a stored from wreg
  2244   0013FE  6E0C               	movwf	EscribeLCD_c@a^0,c
  2245                           
  2246                           ;LibLCDXC8.h: 152: LATE1=1;
  2247   001400  828D               	bsf	3981,1,c	;volatile
  2248                           
  2249                           ;LibLCDXC8.h: 153: EnviaDato(a);
  2250   001402  500C               	movf	EscribeLCD_c@a^0,w,c
  2251   001404  ECB0  F008         	call	_EnviaDato
  2252                           
  2253                           ;LibLCDXC8.h: 154: HabilitaLCD();
  2254   001408  EC1F  F00A         	call	_HabilitaLCD	;wreg free
  2255                           
  2256                           ;LibLCDXC8.h: 155: RetardoLCD(4);
  2257   00140C  0E04               	movlw	4
  2258   00140E  ECFA  F007         	call	_RetardoLCD
  2259   001412  0012               	return		;funcret
  2260   001414                     __end_of_EscribeLCD_c:
  2261                           	callstack 0
  2262                           
  2263 ;; *************** function _ComandoLCD *****************
  2264 ;; Defined at:
  2265 ;;		line 129 in file "LibLCDXC8.h"
  2266 ;; Parameters:    Size  Location     Type
  2267 ;;  data            1    wreg     unsigned char 
  2268 ;; Auto vars:     Size  Location     Type
  2269 ;;  data            1    8[COMRAM] unsigned char 
  2270 ;; Return value:  Size  Location     Type
  2271 ;;                  1    wreg      void 
  2272 ;; Registers used:
  2273 ;;		wreg, status,2, cstack
  2274 ;; Tracked objects:
  2275 ;;		On entry : 0/0
  2276 ;;		On exit  : 0/0
  2277 ;;		Unchanged: 0/0
  2278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2279 ;;      Params:         0       0       0       0       0       0       0       0       0
  2280 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2281 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2282 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2283 ;;Total ram usage:        2 bytes
  2284 ;; Hardware stack levels used: 1
  2285 ;; Hardware stack levels required when called: 4
  2286 ;; This function calls:
  2287 ;;		Nothing
  2288 ;; This function is called by:
  2289 ;;		_NuevoCaracter
  2290 ;; This function uses a non-reentrant model
  2291 ;;
  2292                           
  2293                           	psect	text14
  2294   001348                     __ptext14:
  2295                           	callstack 0
  2296   001348                     _ComandoLCD:
  2297                           	callstack 25
  2298                           
  2299                           ;incstack = 0
  2300                           ;ComandoLCD@data stored from wreg
  2301   001348  6E09               	movwf	ComandoLCD@data^0,c
  2302                           
  2303                           ;LibLCDXC8.h: 131: LATE1 = 0;
  2304   00134A  928D               	bcf	3981,1,c	;volatile
  2305                           
  2306                           ;LibLCDXC8.h: 132: LATD = data;
  2307   00134C  C009  FF8C         	movff	ComandoLCD@data,3980	;volatile
  2308                           
  2309                           ;LibLCDXC8.h: 133: LATE2 = 1;
  2310   001350  848D               	bsf	3981,2,c	;volatile
  2311                           
  2312                           ;LibLCDXC8.h: 134: _delay((unsigned long)((5)*(8000000/4000000.0)));
  2313   001352  0E03               	movlw	3
  2314   001354                     u1497:
  2315   001354  2EE8               	decfsz	wreg,f,c
  2316   001356  D7FE               	bra	u1497
  2317   001358  F000               	nop	
  2318                           
  2319                           ;LibLCDXC8.h: 135: LATE2 = 0;
  2320   00135A  948D               	bcf	3981,2,c	;volatile
  2321                           
  2322                           ;LibLCDXC8.h: 136: _delay((unsigned long)((5)*(8000000/4000000.0)));
  2323   00135C  0E03               	movlw	3
  2324   00135E                     u1507:
  2325   00135E  2EE8               	decfsz	wreg,f,c
  2326   001360  D7FE               	bra	u1507
  2327   001362  F000               	nop	
  2328                           
  2329                           ;LibLCDXC8.h: 137: _delay((unsigned long)((2)*(8000000/4000.0)));
  2330   001364  0E06               	movlw	6
  2331   001366  6E08               	movwf	??_ComandoLCD^0,c
  2332   001368  0E30               	movlw	48
  2333   00136A                     u1517:
  2334   00136A  2EE8               	decfsz	wreg,f,c
  2335   00136C  D7FE               	bra	u1517
  2336   00136E  2E08               	decfsz	??_ComandoLCD^0,f,c
  2337   001370  D7FC               	bra	u1517
  2338   001372  D000               	nop2	
  2339   001374  0012               	return		;funcret
  2340   001376                     __end_of_ComandoLCD:
  2341                           	callstack 0
  2342                           
  2343 ;; *************** function _LeerHT11 *****************
  2344 ;; Defined at:
  2345 ;;		line 159 in file "Proyecto.c"
  2346 ;; Parameters:    Size  Location     Type
  2347 ;;		None
  2348 ;; Auto vars:     Size  Location     Type
  2349 ;;		None
  2350 ;; Return value:  Size  Location     Type
  2351 ;;                  1    wreg      void 
  2352 ;; Registers used:
  2353 ;;		wreg, status,2, status,0, cstack
  2354 ;; Tracked objects:
  2355 ;;		On entry : 0/0
  2356 ;;		On exit  : 0/0
  2357 ;;		Unchanged: 0/0
  2358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2359 ;;      Params:         0       0       0       0       0       0       0       0       0
  2360 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2361 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2362 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2363 ;;Total ram usage:        1 bytes
  2364 ;; Hardware stack levels used: 1
  2365 ;; Hardware stack levels required when called: 6
  2366 ;; This function calls:
  2367 ;;		_LeerByte
  2368 ;; This function is called by:
  2369 ;;		_main
  2370 ;; This function uses a non-reentrant model
  2371 ;;
  2372                           
  2373                           	psect	text15
  2374   0012DE                     __ptext15:
  2375                           	callstack 0
  2376   0012DE                     _LeerHT11:
  2377                           	callstack 24
  2378                           
  2379                           ;Proyecto.c: 161: TRISC0 = 0;
  2380                           
  2381                           ;incstack = 0
  2382   0012DE  9094               	bcf	3988,0,c	;volatile
  2383                           
  2384                           ;Proyecto.c: 162: _delay((unsigned long)((18)*(8000000/4000.0)));
  2385   0012E0  0E2F               	movlw	47
  2386   0012E2  6E0C               	movwf	??_LeerHT11^0,c
  2387   0012E4  0EC0               	movlw	192
  2388   0012E6                     u1527:
  2389   0012E6  2EE8               	decfsz	wreg,f,c
  2390   0012E8  D7FE               	bra	u1527
  2391   0012EA  2E0C               	decfsz	??_LeerHT11^0,f,c
  2392   0012EC  D7FC               	bra	u1527
  2393                           
  2394                           ;Proyecto.c: 163: TRISC0 = 1;
  2395   0012EE  8094               	bsf	3988,0,c	;volatile
  2396   0012F0                     l228:
  2397   0012F0  B082               	btfsc	3970,0,c	;volatile
  2398   0012F2  D7FE               	goto	l228
  2399                           
  2400                           ;Proyecto.c: 166: _delay((unsigned long)((120)*(8000000/4000000.0)));
  2401   0012F4  0E50               	movlw	80
  2402   0012F6                     u1537:
  2403   0012F6  2EE8               	decfsz	wreg,f,c
  2404   0012F8  D7FE               	bra	u1537
  2405   0012FA                     l231:
  2406   0012FA  B082               	btfsc	3970,0,c	;volatile
  2407   0012FC  D7FE               	goto	l231
  2408                           
  2409                           ;Proyecto.c: 169: Humedad = LeerByte();
  2410   0012FE  ECE3  F009         	call	_LeerByte	;wreg free
  2411   001302  6E31               	movwf	_Humedad^0,c
  2412                           
  2413                           ;Proyecto.c: 170: LeerByte();
  2414   001304  ECE3  F009         	call	_LeerByte	;wreg free
  2415                           
  2416                           ;Proyecto.c: 171: Temp = LeerByte();
  2417   001308  ECE3  F009         	call	_LeerByte	;wreg free
  2418   00130C  6E32               	movwf	_Temp^0,c
  2419                           
  2420                           ;Proyecto.c: 172: LeerByte();
  2421   00130E  ECE3  F009         	call	_LeerByte	;wreg free
  2422                           
  2423                           ;Proyecto.c: 173: LeerByte();
  2424   001312  ECE3  F009         	call	_LeerByte	;wreg free
  2425   001316  0012               	return		;funcret
  2426   001318                     __end_of_LeerHT11:
  2427                           	callstack 0
  2428                           
  2429 ;; *************** function _LeerByte *****************
  2430 ;; Defined at:
  2431 ;;		line 176 in file "Proyecto.c"
  2432 ;; Parameters:    Size  Location     Type
  2433 ;;		None
  2434 ;; Auto vars:     Size  Location     Type
  2435 ;;  i               1   10[COMRAM] unsigned char 
  2436 ;;  res             1    9[COMRAM] unsigned char 
  2437 ;; Return value:  Size  Location     Type
  2438 ;;                  1    wreg      unsigned char 
  2439 ;; Registers used:
  2440 ;;		wreg, status,2, status,0, cstack
  2441 ;; Tracked objects:
  2442 ;;		On entry : 0/0
  2443 ;;		On exit  : 0/0
  2444 ;;		Unchanged: 0/0
  2445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2446 ;;      Params:         0       0       0       0       0       0       0       0       0
  2447 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2448 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2449 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2450 ;;Total ram usage:        3 bytes
  2451 ;; Hardware stack levels used: 1
  2452 ;; Hardware stack levels required when called: 5
  2453 ;; This function calls:
  2454 ;;		_LeerBit
  2455 ;; This function is called by:
  2456 ;;		_LeerHT11
  2457 ;; This function uses a non-reentrant model
  2458 ;;
  2459                           
  2460                           	psect	text16
  2461   0013C6                     __ptext16:
  2462                           	callstack 0
  2463   0013C6                     _LeerByte:
  2464                           	callstack 24
  2465                           
  2466                           ;Proyecto.c: 177: unsigned char res = 0, i;
  2467                           
  2468                           ;incstack = 0
  2469   0013C6  0E00               	movlw	0
  2470   0013C8  6E0A               	movwf	LeerByte@res^0,c
  2471                           
  2472                           ;Proyecto.c: 178: for (i = 8; i > 0; i--) {
  2473   0013CA  0E08               	movlw	8
  2474   0013CC  6E0B               	movwf	LeerByte@i^0,c
  2475   0013CE                     l1922:
  2476                           
  2477                           ;Proyecto.c: 179: res = (res << 1) | LeerBit();
  2478   0013CE  EC8C  F009         	call	_LeerBit	;wreg free
  2479   0013D2  6E09               	movwf	??_LeerByte^0,c
  2480   0013D4  500A               	movf	LeerByte@res^0,w,c
  2481   0013D6  240A               	addwf	LeerByte@res^0,w,c
  2482   0013D8  1009               	iorwf	??_LeerByte^0,w,c
  2483   0013DA  6E0A               	movwf	LeerByte@res^0,c
  2484   0013DC  060B               	decf	LeerByte@i^0,f,c
  2485   0013DE  500B               	movf	LeerByte@i^0,w,c
  2486   0013E0  A4D8               	btfss	status,2,c
  2487   0013E2  D7F5               	goto	l1922
  2488                           
  2489                           ;Proyecto.c: 180: };Proyecto.c: 181: return res;
  2490   0013E4  500A               	movf	LeerByte@res^0,w,c
  2491   0013E6  0012               	return		;funcret
  2492   0013E8                     __end_of_LeerByte:
  2493                           	callstack 0
  2494                           
  2495 ;; *************** function _LeerBit *****************
  2496 ;; Defined at:
  2497 ;;		line 184 in file "Proyecto.c"
  2498 ;; Parameters:    Size  Location     Type
  2499 ;;		None
  2500 ;; Auto vars:     Size  Location     Type
  2501 ;;  res             1    7[COMRAM] unsigned char 
  2502 ;; Return value:  Size  Location     Type
  2503 ;;                  1    wreg      unsigned char 
  2504 ;; Registers used:
  2505 ;;		wreg, status,2
  2506 ;; Tracked objects:
  2507 ;;		On entry : 0/0
  2508 ;;		On exit  : 0/0
  2509 ;;		Unchanged: 0/0
  2510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2511 ;;      Params:         0       0       0       0       0       0       0       0       0
  2512 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2513 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2514 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2515 ;;Total ram usage:        1 bytes
  2516 ;; Hardware stack levels used: 1
  2517 ;; Hardware stack levels required when called: 4
  2518 ;; This function calls:
  2519 ;;		Nothing
  2520 ;; This function is called by:
  2521 ;;		_LeerByte
  2522 ;; This function uses a non-reentrant model
  2523 ;;
  2524                           
  2525                           	psect	text17
  2526   001318                     __ptext17:
  2527                           	callstack 0
  2528   001318                     _LeerBit:
  2529                           	callstack 24
  2530                           
  2531                           ;Proyecto.c: 185: unsigned char res = 0;
  2532                           
  2533                           ;incstack = 0
  2534   001318  0E00               	movlw	0
  2535   00131A  6E08               	movwf	LeerBit@res^0,c
  2536   00131C                     l242:
  2537   00131C  A082               	btfss	3970,0,c	;volatile
  2538   00131E  D7FE               	goto	l242
  2539                           
  2540                           ;Proyecto.c: 187: _delay((unsigned long)((13)*(8000000/4000000.0)));
  2541   001320  0E08               	movlw	8
  2542   001322                     u1547:
  2543   001322  2EE8               	decfsz	wreg,f,c
  2544   001324  D7FE               	bra	u1547
  2545   001326  D000               	nop2	
  2546                           
  2547                           ;Proyecto.c: 188: if (RC0 == 1) res = 0;
  2548   001328  A082               	btfss	3970,0,c	;volatile
  2549   00132A  D002               	goto	l1842
  2550   00132C  0E00               	movlw	0
  2551   00132E  6E08               	movwf	LeerBit@res^0,c
  2552   001330                     l1842:
  2553                           
  2554                           ;Proyecto.c: 189: _delay((unsigned long)((22)*(8000000/4000000.0)));
  2555   001330  0E0E               	movlw	14
  2556   001332                     u1557:
  2557   001332  2EE8               	decfsz	wreg,f,c
  2558   001334  D7FE               	bra	u1557
  2559   001336  D000               	nop2	
  2560                           
  2561                           ;Proyecto.c: 190: if (RC0 == 1) {
  2562   001338  A082               	btfss	3970,0,c	;volatile
  2563   00133A  D004               	goto	u770
  2564                           
  2565                           ;Proyecto.c: 191: res = 1;
  2566   00133C  0E01               	movlw	1
  2567   00133E  6E08               	movwf	LeerBit@res^0,c
  2568   001340                     l247:
  2569   001340  B082               	btfsc	3970,0,c	;volatile
  2570   001342  D7FE               	goto	l247
  2571   001344                     u770:
  2572                           
  2573                           ;Proyecto.c: 193: };Proyecto.c: 194: return res;
  2574   001344  5008               	movf	LeerBit@res^0,w,c
  2575   001346  0012               	return		;funcret
  2576   001348                     __end_of_LeerBit:
  2577                           	callstack 0
  2578                           
  2579 ;; *************** function _InicializaLCD *****************
  2580 ;; Defined at:
  2581 ;;		line 74 in file "LibLCDXC8.h"
  2582 ;; Parameters:    Size  Location     Type
  2583 ;;		None
  2584 ;; Auto vars:     Size  Location     Type
  2585 ;;		None
  2586 ;; Return value:  Size  Location     Type
  2587 ;;                  1    wreg      void 
  2588 ;; Registers used:
  2589 ;;		wreg, status,2, status,0, cstack
  2590 ;; Tracked objects:
  2591 ;;		On entry : 0/0
  2592 ;;		On exit  : 0/0
  2593 ;;		Unchanged: 0/0
  2594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2595 ;;      Params:         0       0       0       0       0       0       0       0       0
  2596 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2597 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2598 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2599 ;;Total ram usage:        0 bytes
  2600 ;; Hardware stack levels used: 1
  2601 ;; Hardware stack levels required when called: 7
  2602 ;; This function calls:
  2603 ;;		_BorraLCD
  2604 ;;		_EnviaDato
  2605 ;;		_HabilitaLCD
  2606 ;;		_RetardoLCD
  2607 ;; This function is called by:
  2608 ;;		_main
  2609 ;; This function uses a non-reentrant model
  2610 ;;
  2611                           
  2612                           	psect	text18
  2613   000ED4                     __ptext18:
  2614                           	callstack 0
  2615   000ED4                     _InicializaLCD:
  2616                           	callstack 23
  2617                           
  2618                           ;LibLCDXC8.h: 76: LATE1=0;
  2619                           
  2620                           ;incstack = 0
  2621   000ED4  928D               	bcf	3981,1,c	;volatile
  2622                           
  2623                           ;LibLCDXC8.h: 77: if(interfaz==4)
  2624   000ED6  0E04               	movlw	4
  2625   000ED8  1822               	xorwf	_interfaz^0,w,c
  2626   000EDA  A4D8               	btfss	status,2,c
  2627   000EDC  D004               	goto	l2086
  2628                           
  2629                           ;LibLCDXC8.h: 78: LATD=(LATD & 0b00001111) | 0x30;
  2630   000EDE  508C               	movf	140,w,c	;volatile
  2631   000EE0  0B0F               	andlw	15
  2632   000EE2  0930               	iorlw	48
  2633   000EE4  D001               	goto	L4
  2634   000EE6                     l2086:
  2635                           
  2636                           ;LibLCDXC8.h: 79: else;LibLCDXC8.h: 80: LATD=0x3F;
  2637   000EE6  0E3F               	movlw	63
  2638   000EE8                     L4:
  2639   000EE8  6E8C               	movwf	140,c	;volatile
  2640                           
  2641                           ;LibLCDXC8.h: 81: HabilitaLCD();
  2642   000EEA  EC1F  F00A         	call	_HabilitaLCD	;wreg free
  2643                           
  2644                           ;LibLCDXC8.h: 82: RetardoLCD(1);
  2645   000EEE  0E01               	movlw	1
  2646   000EF0  ECFA  F007         	call	_RetardoLCD
  2647                           
  2648                           ;LibLCDXC8.h: 83: if(interfaz==4)
  2649   000EF4  0E04               	movlw	4
  2650   000EF6  1822               	xorwf	_interfaz^0,w,c
  2651   000EF8  A4D8               	btfss	status,2,c
  2652   000EFA  D004               	goto	l2096
  2653                           
  2654                           ;LibLCDXC8.h: 84: LATD=(LATD & 0b00001111) | 0x30;
  2655   000EFC  508C               	movf	140,w,c	;volatile
  2656   000EFE  0B0F               	andlw	15
  2657   000F00  0930               	iorlw	48
  2658   000F02  D001               	goto	L5
  2659   000F04                     l2096:
  2660                           
  2661                           ;LibLCDXC8.h: 85: else;LibLCDXC8.h: 86: LATD=0x3F;
  2662   000F04  0E3F               	movlw	63
  2663   000F06                     L5:
  2664   000F06  6E8C               	movwf	140,c	;volatile
  2665                           
  2666                           ;LibLCDXC8.h: 87: HabilitaLCD();
  2667   000F08  EC1F  F00A         	call	_HabilitaLCD	;wreg free
  2668                           
  2669                           ;LibLCDXC8.h: 88: RetardoLCD(3);
  2670   000F0C  0E03               	movlw	3
  2671   000F0E  ECFA  F007         	call	_RetardoLCD
  2672                           
  2673                           ;LibLCDXC8.h: 89: if(interfaz==4)
  2674   000F12  0E04               	movlw	4
  2675   000F14  1822               	xorwf	_interfaz^0,w,c
  2676   000F16  A4D8               	btfss	status,2,c
  2677   000F18  D004               	goto	l2106
  2678                           
  2679                           ;LibLCDXC8.h: 90: LATD=(LATD & 0b00001111) | 0x30;
  2680   000F1A  508C               	movf	140,w,c	;volatile
  2681   000F1C  0B0F               	andlw	15
  2682   000F1E  0930               	iorlw	48
  2683   000F20  D001               	goto	L6
  2684   000F22                     l2106:
  2685                           
  2686                           ;LibLCDXC8.h: 91: else;LibLCDXC8.h: 92: LATD=0x3F;
  2687   000F22  0E3F               	movlw	63
  2688   000F24                     L6:
  2689   000F24  6E8C               	movwf	140,c	;volatile
  2690                           
  2691                           ;LibLCDXC8.h: 93: HabilitaLCD();
  2692   000F26  EC1F  F00A         	call	_HabilitaLCD	;wreg free
  2693                           
  2694                           ;LibLCDXC8.h: 94: RetardoLCD(4);
  2695   000F2A  0E04               	movlw	4
  2696   000F2C  ECFA  F007         	call	_RetardoLCD
  2697                           
  2698                           ;LibLCDXC8.h: 95: if(interfaz==4){
  2699   000F30  0E04               	movlw	4
  2700   000F32  1822               	xorwf	_interfaz^0,w,c
  2701   000F34  A4D8               	btfss	status,2,c
  2702   000F36  D011               	goto	l2126
  2703                           
  2704                           ;LibLCDXC8.h: 96: LATD=(LATD & 0b00001111) | 0x20;
  2705   000F38  508C               	movf	140,w,c	;volatile
  2706   000F3A  0B0F               	andlw	15
  2707   000F3C  0920               	iorlw	32
  2708   000F3E  6E8C               	movwf	140,c	;volatile
  2709                           
  2710                           ;LibLCDXC8.h: 97: HabilitaLCD();
  2711   000F40  EC1F  F00A         	call	_HabilitaLCD	;wreg free
  2712                           
  2713                           ;LibLCDXC8.h: 98: RetardoLCD(4);
  2714   000F44  0E04               	movlw	4
  2715   000F46  ECFA  F007         	call	_RetardoLCD
  2716                           
  2717                           ;LibLCDXC8.h: 99: EnviaDato(0x2F);
  2718   000F4A  0E2F               	movlw	47
  2719   000F4C  ECB0  F008         	call	_EnviaDato
  2720                           
  2721                           ;LibLCDXC8.h: 100: HabilitaLCD();
  2722   000F50  EC1F  F00A         	call	_HabilitaLCD	;wreg free
  2723                           
  2724                           ;LibLCDXC8.h: 101: RetardoLCD(4);
  2725   000F54  0E04               	movlw	4
  2726   000F56  ECFA  F007         	call	_RetardoLCD
  2727   000F5A                     l2126:
  2728                           
  2729                           ;LibLCDXC8.h: 102: };LibLCDXC8.h: 103: BorraLCD();
  2730   000F5A  EC15  F00A         	call	_BorraLCD	;wreg free
  2731                           
  2732                           ;LibLCDXC8.h: 104: EnviaDato(0xF);
  2733   000F5E  0E0F               	movlw	15
  2734   000F60  ECB0  F008         	call	_EnviaDato
  2735                           
  2736                           ;LibLCDXC8.h: 105: HabilitaLCD();
  2737   000F64  EC1F  F00A         	call	_HabilitaLCD	;wreg free
  2738                           
  2739                           ;LibLCDXC8.h: 106: RetardoLCD(4);
  2740   000F68  0E04               	movlw	4
  2741   000F6A  ECFA  F007         	call	_RetardoLCD
  2742   000F6E  0012               	return		;funcret
  2743   000F70                     __end_of_InicializaLCD:
  2744                           	callstack 0
  2745                           
  2746 ;; *************** function _BorraLCD *****************
  2747 ;; Defined at:
  2748 ;;		line 115 in file "LibLCDXC8.h"
  2749 ;; Parameters:    Size  Location     Type
  2750 ;;		None
  2751 ;; Auto vars:     Size  Location     Type
  2752 ;;		None
  2753 ;; Return value:  Size  Location     Type
  2754 ;;                  1    wreg      void 
  2755 ;; Registers used:
  2756 ;;		wreg, status,2, status,0, cstack
  2757 ;; Tracked objects:
  2758 ;;		On entry : 0/0
  2759 ;;		On exit  : 0/0
  2760 ;;		Unchanged: 0/0
  2761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2762 ;;      Params:         0       0       0       0       0       0       0       0       0
  2763 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2764 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2765 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2766 ;;Total ram usage:        0 bytes
  2767 ;; Hardware stack levels used: 1
  2768 ;; Hardware stack levels required when called: 6
  2769 ;; This function calls:
  2770 ;;		_EnviaDato
  2771 ;;		_HabilitaLCD
  2772 ;;		_RetardoLCD
  2773 ;; This function is called by:
  2774 ;;		_InicializaLCD
  2775 ;;		_main
  2776 ;;		_TransmitirDatos
  2777 ;; This function uses a non-reentrant model
  2778 ;;
  2779                           
  2780                           	psect	text19
  2781   00142A                     __ptext19:
  2782                           	callstack 0
  2783   00142A                     _BorraLCD:
  2784                           	callstack 23
  2785                           
  2786                           ;LibLCDXC8.h: 117: LATE1=0;
  2787                           
  2788                           ;incstack = 0
  2789   00142A  928D               	bcf	3981,1,c	;volatile
  2790                           
  2791                           ;LibLCDXC8.h: 118: EnviaDato(0x01);
  2792   00142C  0E01               	movlw	1
  2793   00142E  ECB0  F008         	call	_EnviaDato
  2794                           
  2795                           ;LibLCDXC8.h: 119: HabilitaLCD();
  2796   001432  EC1F  F00A         	call	_HabilitaLCD	;wreg free
  2797                           
  2798                           ;LibLCDXC8.h: 120: RetardoLCD(2);
  2799   001436  0E02               	movlw	2
  2800   001438  ECFA  F007         	call	_RetardoLCD
  2801   00143C  0012               	return		;funcret
  2802   00143E                     __end_of_BorraLCD:
  2803                           	callstack 0
  2804                           
  2805 ;; *************** function _EnviaDato *****************
  2806 ;; Defined at:
  2807 ;;		line 62 in file "LibLCDXC8.h"
  2808 ;; Parameters:    Size  Location     Type
  2809 ;;  a               1    wreg     unsigned char 
  2810 ;; Auto vars:     Size  Location     Type
  2811 ;;  a               1   10[COMRAM] unsigned char 
  2812 ;; Return value:  Size  Location     Type
  2813 ;;                  1    wreg      void 
  2814 ;; Registers used:
  2815 ;;		wreg, status,2, status,0, cstack
  2816 ;; Tracked objects:
  2817 ;;		On entry : 0/0
  2818 ;;		On exit  : 0/0
  2819 ;;		Unchanged: 0/0
  2820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2821 ;;      Params:         0       0       0       0       0       0       0       0       0
  2822 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2823 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2824 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2825 ;;Total ram usage:        2 bytes
  2826 ;; Hardware stack levels used: 1
  2827 ;; Hardware stack levels required when called: 5
  2828 ;; This function calls:
  2829 ;;		_HabilitaLCD
  2830 ;;		_RetardoLCD
  2831 ;; This function is called by:
  2832 ;;		_InicializaLCD
  2833 ;;		_BorraLCD
  2834 ;;		_EscribeLCD_c
  2835 ;;		_DireccionaLCD
  2836 ;; This function uses a non-reentrant model
  2837 ;;
  2838                           
  2839                           	psect	text20
  2840   001160                     __ptext20:
  2841                           	callstack 0
  2842   001160                     _EnviaDato:
  2843                           	callstack 22
  2844                           
  2845                           ;incstack = 0
  2846                           ;EnviaDato@a stored from wreg
  2847   001160  6E0B               	movwf	EnviaDato@a^0,c
  2848                           
  2849                           ;LibLCDXC8.h: 63: if(interfaz==4){
  2850   001162  0E04               	movlw	4
  2851   001164  1822               	xorwf	_interfaz^0,w,c
  2852   001166  A4D8               	btfss	status,2,c
  2853   001168  D017               	goto	l1822
  2854                           
  2855                           ;LibLCDXC8.h: 64: LATD=(LATD & 0b00001111) | (a & 0b11110000);
  2856   00116A  C00B  F00A         	movff	EnviaDato@a,??_EnviaDato
  2857   00116E  0EF0               	movlw	240
  2858   001170  160A               	andwf	??_EnviaDato^0,f,c
  2859   001172  508C               	movf	140,w,c	;volatile
  2860   001174  0B0F               	andlw	15
  2861   001176  100A               	iorwf	??_EnviaDato^0,w,c
  2862   001178  6E8C               	movwf	140,c	;volatile
  2863                           
  2864                           ;LibLCDXC8.h: 65: HabilitaLCD();
  2865   00117A  EC1F  F00A         	call	_HabilitaLCD	;wreg free
  2866                           
  2867                           ;LibLCDXC8.h: 66: RetardoLCD(1);
  2868   00117E  0E01               	movlw	1
  2869   001180  ECFA  F007         	call	_RetardoLCD
  2870                           
  2871                           ;LibLCDXC8.h: 67: LATD=(LATD & 0b00001111) | (a<<4);
  2872   001184  C00B  F00A         	movff	EnviaDato@a,??_EnviaDato
  2873   001188  3A0A               	swapf	??_EnviaDato^0,f,c
  2874   00118A  0EF0               	movlw	240
  2875   00118C  160A               	andwf	??_EnviaDato^0,f,c
  2876   00118E  508C               	movf	140,w,c	;volatile
  2877   001190  0B0F               	andlw	15
  2878   001192  100A               	iorwf	??_EnviaDato^0,w,c
  2879   001194  6E8C               	movwf	140,c	;volatile
  2880                           
  2881                           ;LibLCDXC8.h: 70: }else if(interfaz==8){
  2882   001196  0012               	return	
  2883   001198                     l1822:
  2884   001198  0E08               	movlw	8
  2885   00119A  1822               	xorwf	_interfaz^0,w,c
  2886   00119C  A4D8               	btfss	status,2,c
  2887   00119E  0012               	return	
  2888                           
  2889                           ;LibLCDXC8.h: 71: LATD=a;
  2890   0011A0  C00B  FF8C         	movff	EnviaDato@a,3980	;volatile
  2891   0011A4  0012               	return		;funcret
  2892   0011A6                     __end_of_EnviaDato:
  2893                           	callstack 0
  2894                           
  2895 ;; *************** function _RetardoLCD *****************
  2896 ;; Defined at:
  2897 ;;		line 295 in file "LibLCDXC8.h"
  2898 ;; Parameters:    Size  Location     Type
  2899 ;;  a               1    wreg     unsigned char 
  2900 ;; Auto vars:     Size  Location     Type
  2901 ;;  a               1    8[COMRAM] unsigned char 
  2902 ;; Return value:  Size  Location     Type
  2903 ;;                  1    wreg      void 
  2904 ;; Registers used:
  2905 ;;		wreg, status,2, status,0
  2906 ;; Tracked objects:
  2907 ;;		On entry : 0/0
  2908 ;;		On exit  : 0/0
  2909 ;;		Unchanged: 0/0
  2910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2911 ;;      Params:         0       0       0       0       0       0       0       0       0
  2912 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2913 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2914 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2915 ;;Total ram usage:        2 bytes
  2916 ;; Hardware stack levels used: 1
  2917 ;; Hardware stack levels required when called: 4
  2918 ;; This function calls:
  2919 ;;		Nothing
  2920 ;; This function is called by:
  2921 ;;		_EnviaDato
  2922 ;;		_InicializaLCD
  2923 ;;		_BorraLCD
  2924 ;;		_EscribeLCD_c
  2925 ;;		_DireccionaLCD
  2926 ;; This function uses a non-reentrant model
  2927 ;;
  2928                           
  2929                           	psect	text21
  2930   000FF4                     __ptext21:
  2931                           	callstack 0
  2932   000FF4                     _RetardoLCD:
  2933                           	callstack 23
  2934                           
  2935                           ;incstack = 0
  2936                           ;RetardoLCD@a stored from wreg
  2937   000FF4  6E09               	movwf	RetardoLCD@a^0,c
  2938                           
  2939                           ;LibLCDXC8.h: 296: switch(a){
  2940   000FF6  D023               	goto	l1810
  2941   000FF8                     l1800:
  2942   000FF8  0E27               	movlw	39
  2943   000FFA  6E08               	movwf	??_RetardoLCD^0,c
  2944   000FFC  0EF5               	movlw	245
  2945   000FFE                     u1567:
  2946   000FFE  2EE8               	decfsz	wreg,f,c
  2947   001000  D7FE               	bra	u1567
  2948   001002  2E08               	decfsz	??_RetardoLCD^0,f,c
  2949   001004  D7FC               	bra	u1567
  2950   001006  F000               	nop	
  2951                           
  2952                           ;LibLCDXC8.h: 299: break;
  2953   001008  0012               	return	
  2954   00100A                     l1802:
  2955   00100A  0E03               	movlw	3
  2956   00100C  6E08               	movwf	??_RetardoLCD^0,c
  2957   00100E  0E98               	movlw	152
  2958   001010                     u1577:
  2959   001010  2EE8               	decfsz	wreg,f,c
  2960   001012  D7FE               	bra	u1577
  2961   001014  2E08               	decfsz	??_RetardoLCD^0,f,c
  2962   001016  D7FC               	bra	u1577
  2963                           
  2964                           ;LibLCDXC8.h: 301: _delay((unsigned long)((640)*(8000000/4000000.0)));
  2965   001018  0EB6               	movlw	182
  2966   00101A                     u1587:
  2967   00101A  D000               	nop2	
  2968   00101C  D000               	nop2	
  2969   00101E  2EE8               	decfsz	wreg,f,c
  2970   001020  D7FC               	bra	u1587
  2971   001022  D000               	nop2	
  2972   001024  D000               	nop2	
  2973   001026  D000               	nop2	
  2974                           
  2975                           ;LibLCDXC8.h: 303: break;
  2976   001028  0012               	return	
  2977   00102A                     l1804:
  2978   00102A  0E42               	movlw	66
  2979   00102C                     u1597:
  2980   00102C  2EE8               	decfsz	wreg,f,c
  2981   00102E  D7FE               	bra	u1597
  2982   001030  D000               	nop2	
  2983                           
  2984                           ;LibLCDXC8.h: 306: break;
  2985   001032  0012               	return	
  2986   001034                     l1806:
  2987   001034  0E1A               	movlw	26
  2988   001036                     u1607:
  2989   001036  2EE8               	decfsz	wreg,f,c
  2990   001038  D7FE               	bra	u1607
  2991   00103A  D000               	nop2	
  2992                           
  2993                           ;LibLCDXC8.h: 309: break;
  2994   00103C  0012               	return	
  2995   00103E                     l1810:
  2996   00103E  5009               	movf	RetardoLCD@a^0,w,c
  2997                           
  2998                           ; Switch size 1, requested type "simple"
  2999                           ; Number of cases is 4, Range of values is 1 to 4
  3000                           ; switch strategies available:
  3001                           ; Name         Instructions Cycles
  3002                           ; simple_byte           13     7 (average)
  3003                           ;	Chosen strategy is simple_byte
  3004   001040  0A01               	xorlw	1	; case 1
  3005   001042  B4D8               	btfsc	status,2,c
  3006   001044  D7D9               	goto	l1800
  3007   001046  0A03               	xorlw	3	; case 2
  3008   001048  B4D8               	btfsc	status,2,c
  3009   00104A  D7DF               	goto	l1802
  3010   00104C  0A01               	xorlw	1	; case 3
  3011   00104E  B4D8               	btfsc	status,2,c
  3012   001050  D7EC               	goto	l1804
  3013   001052  0A07               	xorlw	7	; case 4
  3014   001054  A4D8               	btfss	status,2,c
  3015   001056  0012               	return	
  3016   001058  D7ED               	goto	l1806
  3017   00105A                     __end_of_RetardoLCD:
  3018                           	callstack 0
  3019                           
  3020 ;; *************** function _HabilitaLCD *****************
  3021 ;; Defined at:
  3022 ;;		line 108 in file "LibLCDXC8.h"
  3023 ;; Parameters:    Size  Location     Type
  3024 ;;		None
  3025 ;; Auto vars:     Size  Location     Type
  3026 ;;		None
  3027 ;; Return value:  Size  Location     Type
  3028 ;;                  1    wreg      void 
  3029 ;; Registers used:
  3030 ;;		wreg
  3031 ;; Tracked objects:
  3032 ;;		On entry : 0/0
  3033 ;;		On exit  : 0/0
  3034 ;;		Unchanged: 0/0
  3035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3036 ;;      Params:         0       0       0       0       0       0       0       0       0
  3037 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3038 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3039 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3040 ;;Total ram usage:        0 bytes
  3041 ;; Hardware stack levels used: 1
  3042 ;; Hardware stack levels required when called: 4
  3043 ;; This function calls:
  3044 ;;		Nothing
  3045 ;; This function is called by:
  3046 ;;		_EnviaDato
  3047 ;;		_InicializaLCD
  3048 ;;		_BorraLCD
  3049 ;;		_EscribeLCD_c
  3050 ;;		_DireccionaLCD
  3051 ;; This function uses a non-reentrant model
  3052 ;;
  3053                           
  3054                           	psect	text22
  3055   00143E                     __ptext22:
  3056                           	callstack 0
  3057   00143E                     _HabilitaLCD:
  3058                           	callstack 23
  3059                           
  3060                           ;LibLCDXC8.h: 110: LATE2=1;
  3061                           
  3062                           ;incstack = 0
  3063   00143E  848D               	bsf	3981,2,c	;volatile
  3064                           
  3065                           ;LibLCDXC8.h: 111: _delay((unsigned long)((40)*(8000000/4000000.0)));
  3066   001440  0E1A               	movlw	26
  3067   001442                     u1617:
  3068   001442  2EE8               	decfsz	wreg,f,c
  3069   001444  D7FE               	bra	u1617
  3070   001446  D000               	nop2	
  3071                           
  3072                           ;LibLCDXC8.h: 113: LATE2=0;
  3073   001448  948D               	bcf	3981,2,c	;volatile
  3074   00144A  0012               	return		;funcret
  3075   00144C                     __end_of_HabilitaLCD:
  3076                           	callstack 0
  3077                           
  3078 ;; *************** function _ISR *****************
  3079 ;; Defined at:
  3080 ;;		line 325 in file "Proyecto.c"
  3081 ;; Parameters:    Size  Location     Type
  3082 ;;		None
  3083 ;; Auto vars:     Size  Location     Type
  3084 ;;		None
  3085 ;; Return value:  Size  Location     Type
  3086 ;;                  1    wreg      void 
  3087 ;; Registers used:
  3088 ;;		wreg, status,2, status,0, cstack
  3089 ;; Tracked objects:
  3090 ;;		On entry : 0/0
  3091 ;;		On exit  : 0/0
  3092 ;;		Unchanged: 0/0
  3093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3094 ;;      Params:         0       0       0       0       0       0       0       0       0
  3095 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3096 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3097 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3098 ;;Total ram usage:        2 bytes
  3099 ;; Hardware stack levels used: 1
  3100 ;; Hardware stack levels required when called: 3
  3101 ;; This function calls:
  3102 ;;		_LeerTeclado
  3103 ;;		i2_EscribeLCD_c
  3104 ;; This function is called by:
  3105 ;;		Interrupt level 2
  3106 ;; This function uses a non-reentrant model
  3107 ;;
  3108                           
  3109                           	psect	intcode
  3110   000008                     __pintcode:
  3111                           	callstack 0
  3112   000008                     _ISR:
  3113                           	callstack 22
  3114                           
  3115                           ;incstack = 0
  3116   000008  8233               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  3117   00000A  ED18  F006         	call	int_func,f	;refresh shadow registers
  3118                           
  3119                           	psect	intcode_body
  3120   000C30                     __pintcode_body:
  3121                           	callstack 22
  3122   000C30                     int_func:
  3123                           	callstack 22
  3124   000C30  0006               	pop		; remove dummy address from shadow register refresh
  3125                           
  3126                           ;Proyecto.c: 326: if(TMR0IF == 1){
  3127   000C32  A4F2               	btfss	4082,2,c	;volatile
  3128   000C34  D019               	goto	i2l298
  3129                           
  3130                           ;Proyecto.c: 327: TMR0IF = 0;
  3131   000C36  94F2               	bcf	4082,2,c	;volatile
  3132                           
  3133                           ;Proyecto.c: 328: TMR0 = 64911;
  3134   000C38  0EFD               	movlw	253
  3135   000C3A  6ED7               	movwf	215,c	;volatile
  3136   000C3C  0E8F               	movlw	143
  3137   000C3E  6ED6               	movwf	214,c	;volatile
  3138                           
  3139                           ;Proyecto.c: 329: contador += 1;
  3140   000C40  4A2D               	infsnz	_contador^0,f,c
  3141   000C42  2A2E               	incf	(_contador+1)^0,f,c
  3142                           
  3143                           ;Proyecto.c: 330: if(RE0 == 1){
  3144   000C44  A084               	btfss	3972,0,c	;volatile
  3145   000C46  D010               	goto	i2l298
  3146                           
  3147                           ;Proyecto.c: 331: CCP1CON = 0 ;
  3148   000C48  0E00               	movlw	0
  3149   000C4A  6EBD               	movwf	189,c	;volatile
  3150                           
  3151                           ;Proyecto.c: 332: _delay((unsigned long)((100)*(8000000/4000.0)));
  3152   000C4C  0E02               	movlw	2
  3153   000C4E  6E07               	movwf	(??_ISR+1)^0,c
  3154   000C50  0E04               	movlw	4
  3155   000C52  6E06               	movwf	??_ISR^0,c
  3156   000C54  0EBA               	movlw	186
  3157   000C56                     i2u162_47:
  3158   000C56  2EE8               	decfsz	wreg,f,c
  3159   000C58  D7FE               	bra	i2u162_47
  3160   000C5A  2E06               	decfsz	??_ISR^0,f,c
  3161   000C5C  D7FC               	bra	i2u162_47
  3162   000C5E  2E07               	decfsz	(??_ISR+1)^0,f,c
  3163   000C60  D7FA               	bra	i2u162_47
  3164   000C62  D000               	nop2	
  3165   000C64  0003               	sleep		;# 
  3166   000C66                     i2l300:
  3167   000C66  D7FF               	goto	i2l300
  3168   000C68                     i2l298:
  3169                           
  3170                           ;Proyecto.c: 335: };Proyecto.c: 336: };Proyecto.c: 337: if(RBIF==1){
  3171   000C68  A0F2               	btfss	4082,0,c	;volatile
  3172   000C6A  D063               	goto	i2l336
  3173                           
  3174                           ;Proyecto.c: 338: if(PORTB!=0b11110000){
  3175   000C6C  0EF0               	movlw	240
  3176   000C6E  1881               	xorwf	129,w,c	;volatile
  3177   000C70  B4D8               	btfsc	status,2,c
  3178   000C72  D053               	goto	i2l2454
  3179                           
  3180                           ;Proyecto.c: 339: Tecla=0;
  3181   000C74  0E00               	movlw	0
  3182   000C76  6E30               	movwf	_Tecla^0,c
  3183                           
  3184                           ;Proyecto.c: 340: LATB=0b11111110;
  3185   000C78  0EFE               	movlw	254
  3186   000C7A  6E8A               	movwf	138,c	;volatile
  3187                           
  3188                           ;Proyecto.c: 341: if(RB4==0) Tecla=16;
  3189   000C7C  B881               	btfsc	3969,4,c	;volatile
  3190   000C7E  D002               	goto	i2l305
  3191   000C80  0E10               	movlw	16
  3192   000C82  D041               	goto	L21
  3193   000C84                     i2l305:
  3194                           
  3195                           ;Proyecto.c: 342: else if(RB5==0) Tecla=12;
  3196   000C84  BA81               	btfsc	3969,5,c	;volatile
  3197   000C86  D002               	goto	i2l307
  3198   000C88  0E0C               	movlw	12
  3199   000C8A  D03D               	goto	L21
  3200   000C8C                     i2l307:
  3201                           
  3202                           ;Proyecto.c: 343: else if(RB6==0) Tecla=8;
  3203   000C8C  BC81               	btfsc	3969,6,c	;volatile
  3204   000C8E  D002               	goto	i2l309
  3205   000C90  0E08               	movlw	8
  3206   000C92  D039               	goto	L21
  3207   000C94                     i2l309:
  3208                           
  3209                           ;Proyecto.c: 344: else if(RB7==0) Tecla=4;
  3210   000C94  BE81               	btfsc	3969,7,c	;volatile
  3211   000C96  D002               	goto	i2l2412
  3212   000C98  0E04               	movlw	4
  3213   000C9A  D035               	goto	L21
  3214   000C9C                     i2l2412:
  3215                           
  3216                           ;Proyecto.c: 345: else{;Proyecto.c: 346: LATB=0b11111101;
  3217   000C9C  0EFD               	movlw	253
  3218   000C9E  6E8A               	movwf	138,c	;volatile
  3219                           
  3220                           ;Proyecto.c: 347: if(RB4==0) Tecla=15;
  3221   000CA0  B881               	btfsc	3969,4,c	;volatile
  3222   000CA2  D002               	goto	i2l313
  3223   000CA4  0E0F               	movlw	15
  3224   000CA6  D02F               	goto	L21
  3225   000CA8                     i2l313:
  3226                           
  3227                           ;Proyecto.c: 348: else if(RB5==0) Tecla=11;
  3228   000CA8  BA81               	btfsc	3969,5,c	;volatile
  3229   000CAA  D002               	goto	i2l315
  3230   000CAC  0E0B               	movlw	11
  3231   000CAE  D02B               	goto	L21
  3232   000CB0                     i2l315:
  3233                           
  3234                           ;Proyecto.c: 349: else if(RB6==0) Tecla=7;
  3235   000CB0  BC81               	btfsc	3969,6,c	;volatile
  3236   000CB2  D002               	goto	i2l317
  3237   000CB4  0E07               	movlw	7
  3238   000CB6  D027               	goto	L21
  3239   000CB8                     i2l317:
  3240                           
  3241                           ;Proyecto.c: 350: else if(RB7==0) Tecla=3;
  3242   000CB8  BE81               	btfsc	3969,7,c	;volatile
  3243   000CBA  D002               	goto	i2l2424
  3244   000CBC  0E03               	movlw	3
  3245   000CBE  D023               	goto	L21
  3246   000CC0                     i2l2424:
  3247                           
  3248                           ;Proyecto.c: 351: else{;Proyecto.c: 352: LATB=0b11111011;
  3249   000CC0  0EFB               	movlw	251
  3250   000CC2  6E8A               	movwf	138,c	;volatile
  3251                           
  3252                           ;Proyecto.c: 353: if(RB4==0) Tecla=14;
  3253   000CC4  B881               	btfsc	3969,4,c	;volatile
  3254   000CC6  D002               	goto	i2l321
  3255   000CC8  0E0E               	movlw	14
  3256   000CCA  D01D               	goto	L21
  3257   000CCC                     i2l321:
  3258                           
  3259                           ;Proyecto.c: 354: else if(RB5==0) Tecla=10;
  3260   000CCC  BA81               	btfsc	3969,5,c	;volatile
  3261   000CCE  D002               	goto	i2l323
  3262   000CD0  0E0A               	movlw	10
  3263   000CD2  D019               	goto	L21
  3264   000CD4                     i2l323:
  3265                           
  3266                           ;Proyecto.c: 355: else if(RB6==0) Tecla=6;
  3267   000CD4  BC81               	btfsc	3969,6,c	;volatile
  3268   000CD6  D002               	goto	i2l325
  3269   000CD8  0E06               	movlw	6
  3270   000CDA  D015               	goto	L21
  3271   000CDC                     i2l325:
  3272                           
  3273                           ;Proyecto.c: 356: else if(RB7==0) Tecla=2;
  3274   000CDC  BE81               	btfsc	3969,7,c	;volatile
  3275   000CDE  D002               	goto	i2l2436
  3276   000CE0  0E02               	movlw	2
  3277   000CE2  D011               	goto	L21
  3278   000CE4                     i2l2436:
  3279                           
  3280                           ;Proyecto.c: 357: else{;Proyecto.c: 358: LATB=0b11110111;
  3281   000CE4  0EF7               	movlw	247
  3282   000CE6  6E8A               	movwf	138,c	;volatile
  3283                           
  3284                           ;Proyecto.c: 359: if(RB4==0) Tecla=13;
  3285   000CE8  B881               	btfsc	3969,4,c	;volatile
  3286   000CEA  D002               	goto	i2l329
  3287   000CEC  0E0D               	movlw	13
  3288   000CEE  D00B               	goto	L21
  3289   000CF0                     i2l329:
  3290                           
  3291                           ;Proyecto.c: 360: else if(RB5==0) Tecla=9;
  3292   000CF0  BA81               	btfsc	3969,5,c	;volatile
  3293   000CF2  D002               	goto	i2l331
  3294   000CF4  0E09               	movlw	9
  3295   000CF6  D007               	goto	L21
  3296   000CF8                     i2l331:
  3297                           
  3298                           ;Proyecto.c: 361: else if(RB6==0) Tecla=5;
  3299   000CF8  BC81               	btfsc	3969,6,c	;volatile
  3300   000CFA  D002               	goto	i2l333
  3301   000CFC  0E05               	movlw	5
  3302   000CFE  D003               	goto	L21
  3303   000D00                     i2l333:
  3304                           
  3305                           ;Proyecto.c: 362: else if(RB7==0) Tecla=1;
  3306   000D00  BE81               	btfsc	3969,7,c	;volatile
  3307   000D02  D002               	goto	i2l330
  3308   000D04  0E01               	movlw	1
  3309   000D06                     L21:
  3310   000D06  6E30               	movwf	_Tecla^0,c
  3311   000D08                     i2l330:
  3312                           
  3313                           ;Proyecto.c: 363: };Proyecto.c: 364: };Proyecto.c: 365: };Proyecto.c: 366: LATB=0b111100
      +                          00;
  3314   000D08  0EF0               	movlw	240
  3315   000D0A  6E8A               	movwf	138,c	;volatile
  3316                           
  3317                           ;Proyecto.c: 367: ing = Tecla;
  3318   000D0C  C030  F02F         	movff	_Tecla,_ing
  3319                           
  3320                           ;Proyecto.c: 368: LeerTeclado();
  3321   000D10  EC07  F007         	call	_LeerTeclado	;wreg free
  3322                           
  3323                           ;Proyecto.c: 369: EscribeLCD_c(Tecla);
  3324   000D14  5030               	movf	_Tecla^0,w,c
  3325   000D16  EC0A  F00A         	call	i2_EscribeLCD_c
  3326   000D1A                     i2l2454:
  3327                           
  3328                           ;Proyecto.c: 370: };Proyecto.c: 371: RBIF=0;
  3329   000D1A  90F2               	bcf	4082,0,c	;volatile
  3330                           
  3331                           ;Proyecto.c: 372: _delay((unsigned long)((300)*(8000000/4000.0)));
  3332   000D1C  0E04               	movlw	4
  3333   000D1E  6E07               	movwf	(??_ISR+1)^0,c
  3334   000D20  0E0C               	movlw	12
  3335   000D22  6E06               	movwf	??_ISR^0,c
  3336   000D24  0E34               	movlw	52
  3337   000D26                     i2u163_47:
  3338   000D26  2EE8               	decfsz	wreg,f,c
  3339   000D28  D7FE               	bra	i2u163_47
  3340   000D2A  2E06               	decfsz	??_ISR^0,f,c
  3341   000D2C  D7FC               	bra	i2u163_47
  3342   000D2E  2E07               	decfsz	(??_ISR+1)^0,f,c
  3343   000D30  D7FA               	bra	i2u163_47
  3344   000D32                     i2l336:
  3345   000D32  9233               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  3346   000D34  0011               	retfie		f
  3347   000D36                     __end_of_ISR:
  3348                           	callstack 0
  3349                           
  3350 ;; *************** function i2_EscribeLCD_c *****************
  3351 ;; Defined at:
  3352 ;;		line 148 in file "LibLCDXC8.h"
  3353 ;; Parameters:    Size  Location     Type
  3354 ;;  a               1    wreg     unsigned char 
  3355 ;; Auto vars:     Size  Location     Type
  3356 ;;  a               1    4[COMRAM] unsigned char 
  3357 ;; Return value:  Size  Location     Type
  3358 ;;                  1    wreg      void 
  3359 ;; Registers used:
  3360 ;;		wreg, status,2, status,0, cstack
  3361 ;; Tracked objects:
  3362 ;;		On entry : 0/0
  3363 ;;		On exit  : 0/0
  3364 ;;		Unchanged: 0/0
  3365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3366 ;;      Params:         0       0       0       0       0       0       0       0       0
  3367 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3368 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3369 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3370 ;;Total ram usage:        1 bytes
  3371 ;; Hardware stack levels used: 1
  3372 ;; Hardware stack levels required when called: 2
  3373 ;; This function calls:
  3374 ;;		i2_EnviaDato
  3375 ;;		i2_HabilitaLCD
  3376 ;;		i2_RetardoLCD
  3377 ;; This function is called by:
  3378 ;;		_ISR
  3379 ;; This function uses a non-reentrant model
  3380 ;;
  3381                           
  3382                           	psect	text24
  3383   001414                     __ptext24:
  3384                           	callstack 0
  3385   001414                     i2_EscribeLCD_c:
  3386                           	callstack 22
  3387                           
  3388                           ;incstack = 0
  3389                           ;i2EscribeLCD_c@a stored from wreg
  3390   001414  6E05               	movwf	i2EscribeLCD_c@a^0,c
  3391                           
  3392                           ;LibLCDXC8.h: 152: LATE1=1;
  3393   001416  828D               	bsf	3981,1,c	;volatile
  3394                           
  3395                           ;LibLCDXC8.h: 153: EnviaDato(a);
  3396   001418  5005               	movf	i2EscribeLCD_c@a^0,w,c
  3397   00141A  ECD3  F008         	call	i2_EnviaDato
  3398                           
  3399                           ;LibLCDXC8.h: 154: HabilitaLCD();
  3400   00141E  EC26  F00A         	call	i2_HabilitaLCD	;wreg free
  3401                           
  3402                           ;LibLCDXC8.h: 155: RetardoLCD(4);
  3403   001422  0E04               	movlw	4
  3404   001424  EC2D  F008         	call	i2_RetardoLCD
  3405   001428  0012               	return		;funcret
  3406   00142A                     __end_ofi2_EscribeLCD_c:
  3407                           	callstack 0
  3408                           
  3409 ;; *************** function i2_EnviaDato *****************
  3410 ;; Defined at:
  3411 ;;		line 62 in file "LibLCDXC8.h"
  3412 ;; Parameters:    Size  Location     Type
  3413 ;;  a               1    wreg     unsigned char 
  3414 ;; Auto vars:     Size  Location     Type
  3415 ;;  a               1    3[COMRAM] unsigned char 
  3416 ;; Return value:  Size  Location     Type
  3417 ;;                  1    wreg      void 
  3418 ;; Registers used:
  3419 ;;		wreg, status,2, status,0, cstack
  3420 ;; Tracked objects:
  3421 ;;		On entry : 0/0
  3422 ;;		On exit  : 0/0
  3423 ;;		Unchanged: 0/0
  3424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3425 ;;      Params:         0       0       0       0       0       0       0       0       0
  3426 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3427 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3428 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3429 ;;Total ram usage:        2 bytes
  3430 ;; Hardware stack levels used: 1
  3431 ;; Hardware stack levels required when called: 1
  3432 ;; This function calls:
  3433 ;;		i2_HabilitaLCD
  3434 ;;		i2_RetardoLCD
  3435 ;; This function is called by:
  3436 ;;		i2_EscribeLCD_c
  3437 ;; This function uses a non-reentrant model
  3438 ;;
  3439                           
  3440                           	psect	text25
  3441   0011A6                     __ptext25:
  3442                           	callstack 0
  3443   0011A6                     i2_EnviaDato:
  3444                           	callstack 22
  3445                           
  3446                           ;incstack = 0
  3447                           ;i2EnviaDato@a stored from wreg
  3448   0011A6  6E04               	movwf	i2EnviaDato@a^0,c
  3449                           
  3450                           ;LibLCDXC8.h: 63: if(interfaz==4){
  3451   0011A8  0E04               	movlw	4
  3452   0011AA  1822               	xorwf	_interfaz^0,w,c
  3453   0011AC  A4D8               	btfss	status,2,c
  3454   0011AE  D017               	goto	i2l2076
  3455                           
  3456                           ;LibLCDXC8.h: 64: LATD=(LATD & 0b00001111) | (a & 0b11110000);
  3457   0011B0  C004  F003         	movff	i2EnviaDato@a,??i2_EnviaDato
  3458   0011B4  0EF0               	movlw	240
  3459   0011B6  1603               	andwf	??i2_EnviaDato^0,f,c
  3460   0011B8  508C               	movf	140,w,c	;volatile
  3461   0011BA  0B0F               	andlw	15
  3462   0011BC  1003               	iorwf	??i2_EnviaDato^0,w,c
  3463   0011BE  6E8C               	movwf	140,c	;volatile
  3464                           
  3465                           ;LibLCDXC8.h: 65: HabilitaLCD();
  3466   0011C0  EC26  F00A         	call	i2_HabilitaLCD	;wreg free
  3467                           
  3468                           ;LibLCDXC8.h: 66: RetardoLCD(1);
  3469   0011C4  0E01               	movlw	1
  3470   0011C6  EC2D  F008         	call	i2_RetardoLCD
  3471                           
  3472                           ;LibLCDXC8.h: 67: LATD=(LATD & 0b00001111) | (a<<4);
  3473   0011CA  C004  F003         	movff	i2EnviaDato@a,??i2_EnviaDato
  3474   0011CE  3A03               	swapf	??i2_EnviaDato^0,f,c
  3475   0011D0  0EF0               	movlw	240
  3476   0011D2  1603               	andwf	??i2_EnviaDato^0,f,c
  3477   0011D4  508C               	movf	140,w,c	;volatile
  3478   0011D6  0B0F               	andlw	15
  3479   0011D8  1003               	iorwf	??i2_EnviaDato^0,w,c
  3480   0011DA  6E8C               	movwf	140,c	;volatile
  3481                           
  3482                           ;LibLCDXC8.h: 70: }else if(interfaz==8){
  3483   0011DC  0012               	return	
  3484   0011DE                     i2l2076:
  3485   0011DE  0E08               	movlw	8
  3486   0011E0  1822               	xorwf	_interfaz^0,w,c
  3487   0011E2  A4D8               	btfss	status,2,c
  3488   0011E4  0012               	return	
  3489                           
  3490                           ;LibLCDXC8.h: 71: LATD=a;
  3491   0011E6  C004  FF8C         	movff	i2EnviaDato@a,3980	;volatile
  3492   0011EA  0012               	return		;funcret
  3493   0011EC                     __end_ofi2_EnviaDato:
  3494                           	callstack 0
  3495                           
  3496 ;; *************** function i2_RetardoLCD *****************
  3497 ;; Defined at:
  3498 ;;		line 295 in file "LibLCDXC8.h"
  3499 ;; Parameters:    Size  Location     Type
  3500 ;;  a               1    wreg     unsigned char 
  3501 ;; Auto vars:     Size  Location     Type
  3502 ;;  a               1    1[COMRAM] unsigned char 
  3503 ;; Return value:  Size  Location     Type
  3504 ;;                  1    wreg      void 
  3505 ;; Registers used:
  3506 ;;		wreg, status,2, status,0
  3507 ;; Tracked objects:
  3508 ;;		On entry : 0/0
  3509 ;;		On exit  : 0/0
  3510 ;;		Unchanged: 0/0
  3511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3512 ;;      Params:         0       0       0       0       0       0       0       0       0
  3513 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3514 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3515 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3516 ;;Total ram usage:        2 bytes
  3517 ;; Hardware stack levels used: 1
  3518 ;; This function calls:
  3519 ;;		Nothing
  3520 ;; This function is called by:
  3521 ;;		i2_EnviaDato
  3522 ;;		i2_EscribeLCD_c
  3523 ;; This function uses a non-reentrant model
  3524 ;;
  3525                           
  3526                           	psect	text26
  3527   00105A                     __ptext26:
  3528                           	callstack 0
  3529   00105A                     i2_RetardoLCD:
  3530                           	callstack 23
  3531                           
  3532                           ;incstack = 0
  3533                           ;i2RetardoLCD@a stored from wreg
  3534   00105A  6E02               	movwf	i2RetardoLCD@a^0,c
  3535                           
  3536                           ;LibLCDXC8.h: 296: switch(a){
  3537   00105C  D023               	goto	i2l1870
  3538   00105E                     i2l1860:
  3539   00105E  0E27               	movlw	39
  3540   001060  6E01               	movwf	??i2_RetardoLCD^0,c
  3541   001062  0EF5               	movlw	245
  3542   001064                     i2u164_47:
  3543   001064  2EE8               	decfsz	wreg,f,c
  3544   001066  D7FE               	bra	i2u164_47
  3545   001068  2E01               	decfsz	??i2_RetardoLCD^0,f,c
  3546   00106A  D7FC               	bra	i2u164_47
  3547   00106C  F000               	nop	
  3548                           
  3549                           ;LibLCDXC8.h: 299: break;
  3550   00106E  0012               	return	
  3551   001070                     i2l1862:
  3552   001070  0E03               	movlw	3
  3553   001072  6E01               	movwf	??i2_RetardoLCD^0,c
  3554   001074  0E98               	movlw	152
  3555   001076                     i2u165_47:
  3556   001076  2EE8               	decfsz	wreg,f,c
  3557   001078  D7FE               	bra	i2u165_47
  3558   00107A  2E01               	decfsz	??i2_RetardoLCD^0,f,c
  3559   00107C  D7FC               	bra	i2u165_47
  3560                           
  3561                           ;LibLCDXC8.h: 301: _delay((unsigned long)((640)*(8000000/4000000.0)));
  3562   00107E  0EB6               	movlw	182
  3563   001080                     i2u166_47:
  3564   001080  D000               	nop2	
  3565   001082  D000               	nop2	
  3566   001084  2EE8               	decfsz	wreg,f,c
  3567   001086  D7FC               	bra	i2u166_47
  3568   001088  D000               	nop2	
  3569   00108A  D000               	nop2	
  3570   00108C  D000               	nop2	
  3571                           
  3572                           ;LibLCDXC8.h: 303: break;
  3573   00108E  0012               	return	
  3574   001090                     i2l1864:
  3575   001090  0E42               	movlw	66
  3576   001092                     i2u167_47:
  3577   001092  2EE8               	decfsz	wreg,f,c
  3578   001094  D7FE               	bra	i2u167_47
  3579   001096  D000               	nop2	
  3580                           
  3581                           ;LibLCDXC8.h: 306: break;
  3582   001098  0012               	return	
  3583   00109A                     i2l1866:
  3584   00109A  0E1A               	movlw	26
  3585   00109C                     i2u168_47:
  3586   00109C  2EE8               	decfsz	wreg,f,c
  3587   00109E  D7FE               	bra	i2u168_47
  3588   0010A0  D000               	nop2	
  3589                           
  3590                           ;LibLCDXC8.h: 309: break;
  3591   0010A2  0012               	return	
  3592   0010A4                     i2l1870:
  3593   0010A4  5002               	movf	i2RetardoLCD@a^0,w,c
  3594                           
  3595                           ; Switch size 1, requested type "simple"
  3596                           ; Number of cases is 4, Range of values is 1 to 4
  3597                           ; switch strategies available:
  3598                           ; Name         Instructions Cycles
  3599                           ; simple_byte           13     7 (average)
  3600                           ;	Chosen strategy is simple_byte
  3601   0010A6  0A01               	xorlw	1	; case 1
  3602   0010A8  B4D8               	btfsc	status,2,c
  3603   0010AA  D7D9               	goto	i2l1860
  3604   0010AC  0A03               	xorlw	3	; case 2
  3605   0010AE  B4D8               	btfsc	status,2,c
  3606   0010B0  D7DF               	goto	i2l1862
  3607   0010B2  0A01               	xorlw	1	; case 3
  3608   0010B4  B4D8               	btfsc	status,2,c
  3609   0010B6  D7EC               	goto	i2l1864
  3610   0010B8  0A07               	xorlw	7	; case 4
  3611   0010BA  A4D8               	btfss	status,2,c
  3612   0010BC  0012               	return	
  3613   0010BE  D7ED               	goto	i2l1866
  3614   0010C0                     __end_ofi2_RetardoLCD:
  3615                           	callstack 0
  3616                           
  3617 ;; *************** function i2_HabilitaLCD *****************
  3618 ;; Defined at:
  3619 ;;		line 108 in file "LibLCDXC8.h"
  3620 ;; Parameters:    Size  Location     Type
  3621 ;;		None
  3622 ;; Auto vars:     Size  Location     Type
  3623 ;;		None
  3624 ;; Return value:  Size  Location     Type
  3625 ;;                  1    wreg      void 
  3626 ;; Registers used:
  3627 ;;		wreg
  3628 ;; Tracked objects:
  3629 ;;		On entry : 0/0
  3630 ;;		On exit  : 0/0
  3631 ;;		Unchanged: 0/0
  3632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3633 ;;      Params:         0       0       0       0       0       0       0       0       0
  3634 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3635 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3636 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3637 ;;Total ram usage:        0 bytes
  3638 ;; Hardware stack levels used: 1
  3639 ;; This function calls:
  3640 ;;		Nothing
  3641 ;; This function is called by:
  3642 ;;		i2_EnviaDato
  3643 ;;		i2_EscribeLCD_c
  3644 ;; This function uses a non-reentrant model
  3645 ;;
  3646                           
  3647                           	psect	text27
  3648   00144C                     __ptext27:
  3649                           	callstack 0
  3650   00144C                     i2_HabilitaLCD:
  3651                           	callstack 23
  3652                           
  3653                           ;LibLCDXC8.h: 110: LATE2=1;
  3654                           
  3655                           ;incstack = 0
  3656   00144C  848D               	bsf	3981,2,c	;volatile
  3657                           
  3658                           ;LibLCDXC8.h: 111: _delay((unsigned long)((40)*(8000000/4000000.0)));
  3659   00144E  0E1A               	movlw	26
  3660   001450                     i2u169_47:
  3661   001450  2EE8               	decfsz	wreg,f,c
  3662   001452  D7FE               	bra	i2u169_47
  3663   001454  D000               	nop2	
  3664                           
  3665                           ;LibLCDXC8.h: 113: LATE2=0;
  3666   001456  948D               	bcf	3981,2,c	;volatile
  3667   001458  0012               	return		;funcret
  3668   00145A                     __end_ofi2_HabilitaLCD:
  3669                           	callstack 0
  3670                           
  3671 ;; *************** function _LeerTeclado *****************
  3672 ;; Defined at:
  3673 ;;		line 197 in file "Proyecto.c"
  3674 ;; Parameters:    Size  Location     Type
  3675 ;;		None
  3676 ;; Auto vars:     Size  Location     Type
  3677 ;;		None
  3678 ;; Return value:  Size  Location     Type
  3679 ;;                  1    wreg      unsigned char 
  3680 ;; Registers used:
  3681 ;;		wreg, status,2, status,0
  3682 ;; Tracked objects:
  3683 ;;		On entry : 0/0
  3684 ;;		On exit  : 0/0
  3685 ;;		Unchanged: 0/0
  3686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3687 ;;      Params:         0       0       0       0       0       0       0       0       0
  3688 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3689 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3690 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3691 ;;Total ram usage:        0 bytes
  3692 ;; Hardware stack levels used: 1
  3693 ;; This function calls:
  3694 ;;		Nothing
  3695 ;; This function is called by:
  3696 ;;		_ISR
  3697 ;; This function uses a non-reentrant model
  3698 ;;
  3699                           
  3700                           	psect	text28
  3701   000E0E                     __ptext28:
  3702                           	callstack 0
  3703   000E0E                     _LeerTeclado:
  3704                           	callstack 24
  3705                           
  3706                           ;Proyecto.c: 198: switch (Tecla){
  3707                           
  3708                           ;incstack = 0
  3709   000E0E  D030               	goto	i2l1616
  3710   000E10                     i2l1582:
  3711                           
  3712                           ;Proyecto.c: 200: Tecla='1';
  3713   000E10  0E31               	movlw	49
  3714   000E12  6E30               	movwf	_Tecla^0,c
  3715                           
  3716                           ;Proyecto.c: 201: break;
  3717   000E14  0012               	return	
  3718   000E16                     i2l1584:
  3719                           
  3720                           ;Proyecto.c: 203: Tecla='2';
  3721   000E16  0E32               	movlw	50
  3722   000E18  6E30               	movwf	_Tecla^0,c
  3723                           
  3724                           ;Proyecto.c: 204: break;
  3725   000E1A  0012               	return	
  3726   000E1C                     i2l1586:
  3727                           
  3728                           ;Proyecto.c: 206: Tecla='3';
  3729   000E1C  0E33               	movlw	51
  3730   000E1E  6E30               	movwf	_Tecla^0,c
  3731                           
  3732                           ;Proyecto.c: 207: break;
  3733   000E20  0012               	return	
  3734   000E22                     i2l1588:
  3735                           
  3736                           ;Proyecto.c: 209: Tecla='+';
  3737   000E22  0E2B               	movlw	43
  3738   000E24  6E30               	movwf	_Tecla^0,c
  3739                           
  3740                           ;Proyecto.c: 210: break;
  3741   000E26  0012               	return	
  3742   000E28                     i2l1590:
  3743                           
  3744                           ;Proyecto.c: 212: Tecla='4';
  3745   000E28  0E34               	movlw	52
  3746   000E2A  6E30               	movwf	_Tecla^0,c
  3747                           
  3748                           ;Proyecto.c: 213: break;
  3749   000E2C  0012               	return	
  3750   000E2E                     i2l1592:
  3751                           
  3752                           ;Proyecto.c: 215: Tecla ='5';
  3753   000E2E  0E35               	movlw	53
  3754   000E30  6E30               	movwf	_Tecla^0,c
  3755                           
  3756                           ;Proyecto.c: 216: break;
  3757   000E32  0012               	return	
  3758   000E34                     i2l1594:
  3759                           
  3760                           ;Proyecto.c: 218: Tecla='6';
  3761   000E34  0E36               	movlw	54
  3762   000E36  6E30               	movwf	_Tecla^0,c
  3763                           
  3764                           ;Proyecto.c: 219: break;
  3765   000E38  0012               	return	
  3766   000E3A                     i2l1596:
  3767                           
  3768                           ;Proyecto.c: 221: Tecla='-';
  3769   000E3A  0E2D               	movlw	45
  3770   000E3C  6E30               	movwf	_Tecla^0,c
  3771                           
  3772                           ;Proyecto.c: 222: break;
  3773   000E3E  0012               	return	
  3774   000E40                     i2l1598:
  3775                           
  3776                           ;Proyecto.c: 224: Tecla='7';
  3777   000E40  0E37               	movlw	55
  3778   000E42  6E30               	movwf	_Tecla^0,c
  3779                           
  3780                           ;Proyecto.c: 225: break;
  3781   000E44  0012               	return	
  3782   000E46                     i2l1600:
  3783                           
  3784                           ;Proyecto.c: 227: Tecla='8';
  3785   000E46  0E38               	movlw	56
  3786   000E48  6E30               	movwf	_Tecla^0,c
  3787                           
  3788                           ;Proyecto.c: 228: break;
  3789   000E4A  0012               	return	
  3790   000E4C                     i2l1602:
  3791                           
  3792                           ;Proyecto.c: 230: Tecla='9';
  3793   000E4C  0E39               	movlw	57
  3794   000E4E  6E30               	movwf	_Tecla^0,c
  3795                           
  3796                           ;Proyecto.c: 231: break;
  3797   000E50  0012               	return	
  3798   000E52                     i2l1604:
  3799                           
  3800                           ;Proyecto.c: 233: Tecla='X';
  3801   000E52  0E58               	movlw	88
  3802   000E54  6E30               	movwf	_Tecla^0,c
  3803                           
  3804                           ;Proyecto.c: 234: break;
  3805   000E56  0012               	return	
  3806   000E58                     i2l1606:
  3807                           
  3808                           ;Proyecto.c: 236: Tecla='B';
  3809   000E58  0E42               	movlw	66
  3810   000E5A  6E30               	movwf	_Tecla^0,c
  3811                           
  3812                           ;Proyecto.c: 237: break;
  3813   000E5C  0012               	return	
  3814   000E5E                     i2l1608:
  3815                           
  3816                           ;Proyecto.c: 239: Tecla='0';
  3817   000E5E  0E30               	movlw	48
  3818   000E60  6E30               	movwf	_Tecla^0,c
  3819                           
  3820                           ;Proyecto.c: 240: break;
  3821   000E62  0012               	return	
  3822   000E64                     i2l1610:
  3823                           
  3824                           ;Proyecto.c: 242: Tecla='=';
  3825   000E64  0E3D               	movlw	61
  3826   000E66  6E30               	movwf	_Tecla^0,c
  3827                           
  3828                           ;Proyecto.c: 243: break;
  3829   000E68  0012               	return	
  3830   000E6A                     i2l1612:
  3831                           
  3832                           ;Proyecto.c: 245: Tecla='/';
  3833   000E6A  0E2F               	movlw	47
  3834   000E6C  6E30               	movwf	_Tecla^0,c
  3835                           
  3836                           ;Proyecto.c: 246: break;
  3837   000E6E  0012               	return	
  3838   000E70                     i2l1616:
  3839   000E70  5030               	movf	_Tecla^0,w,c
  3840                           
  3841                           ; Switch size 1, requested type "simple"
  3842                           ; Number of cases is 16, Range of values is 1 to 16
  3843                           ; switch strategies available:
  3844                           ; Name         Instructions Cycles
  3845                           ; simple_byte           49    25 (average)
  3846                           ;	Chosen strategy is simple_byte
  3847   000E72  0A01               	xorlw	1	; case 1
  3848   000E74  B4D8               	btfsc	status,2,c
  3849   000E76  D7CC               	goto	i2l1582
  3850   000E78  0A03               	xorlw	3	; case 2
  3851   000E7A  B4D8               	btfsc	status,2,c
  3852   000E7C  D7CC               	goto	i2l1584
  3853   000E7E  0A01               	xorlw	1	; case 3
  3854   000E80  B4D8               	btfsc	status,2,c
  3855   000E82  D7CC               	goto	i2l1586
  3856   000E84  0A07               	xorlw	7	; case 4
  3857   000E86  B4D8               	btfsc	status,2,c
  3858   000E88  D7CC               	goto	i2l1588
  3859   000E8A  0A01               	xorlw	1	; case 5
  3860   000E8C  B4D8               	btfsc	status,2,c
  3861   000E8E  D7CC               	goto	i2l1590
  3862   000E90  0A03               	xorlw	3	; case 6
  3863   000E92  B4D8               	btfsc	status,2,c
  3864   000E94  D7CC               	goto	i2l1592
  3865   000E96  0A01               	xorlw	1	; case 7
  3866   000E98  B4D8               	btfsc	status,2,c
  3867   000E9A  D7CC               	goto	i2l1594
  3868   000E9C  0A0F               	xorlw	15	; case 8
  3869   000E9E  B4D8               	btfsc	status,2,c
  3870   000EA0  D7CC               	goto	i2l1596
  3871   000EA2  0A01               	xorlw	1	; case 9
  3872   000EA4  B4D8               	btfsc	status,2,c
  3873   000EA6  D7CC               	goto	i2l1598
  3874   000EA8  0A03               	xorlw	3	; case 10
  3875   000EAA  B4D8               	btfsc	status,2,c
  3876   000EAC  D7CC               	goto	i2l1600
  3877   000EAE  0A01               	xorlw	1	; case 11
  3878   000EB0  B4D8               	btfsc	status,2,c
  3879   000EB2  D7CC               	goto	i2l1602
  3880   000EB4  0A07               	xorlw	7	; case 12
  3881   000EB6  B4D8               	btfsc	status,2,c
  3882   000EB8  D7CC               	goto	i2l1604
  3883   000EBA  0A01               	xorlw	1	; case 13
  3884   000EBC  B4D8               	btfsc	status,2,c
  3885   000EBE  D7CC               	goto	i2l1606
  3886   000EC0  0A03               	xorlw	3	; case 14
  3887   000EC2  B4D8               	btfsc	status,2,c
  3888   000EC4  D7CC               	goto	i2l1608
  3889   000EC6  0A01               	xorlw	1	; case 15
  3890   000EC8  B4D8               	btfsc	status,2,c
  3891   000ECA  D7CC               	goto	i2l1610
  3892   000ECC  0A1F               	xorlw	31	; case 16
  3893   000ECE  A4D8               	btfss	status,2,c
  3894   000ED0  0012               	return	
  3895   000ED2  D7CB               	goto	i2l1612
  3896   000ED4                     __end_of_LeerTeclado:
  3897                           	callstack 0
  3898                           
  3899                           	psect	rparam
  3900   000000                     
  3901                           	psect	temp
  3902   000033                     btemp:
  3903                           	callstack 0
  3904   000033                     	ds	1
  3905   000000                     int$flags	set	btemp
  3906   000000                     wtemp8	set	btemp+1
  3907   000000                     ttemp5	set	btemp+1
  3908   000000                     ttemp6	set	btemp+4
  3909   000000                     ttemp7	set	btemp+8
  3910                           
  3911                           	psect	idloc
  3912                           
  3913                           ;Config register IDLOC0 @ 0x200000
  3914                           ;	unspecified, using default values
  3915   200000                     	org	2097152
  3916   200000  FF                 	db	255
  3917                           
  3918                           ;Config register IDLOC1 @ 0x200001
  3919                           ;	unspecified, using default values
  3920   200001                     	org	2097153
  3921   200001  FF                 	db	255
  3922                           
  3923                           ;Config register IDLOC2 @ 0x200002
  3924                           ;	unspecified, using default values
  3925   200002                     	org	2097154
  3926   200002  FF                 	db	255
  3927                           
  3928                           ;Config register IDLOC3 @ 0x200003
  3929                           ;	unspecified, using default values
  3930   200003                     	org	2097155
  3931   200003  FF                 	db	255
  3932                           
  3933                           ;Config register IDLOC4 @ 0x200004
  3934                           ;	unspecified, using default values
  3935   200004                     	org	2097156
  3936   200004  FF                 	db	255
  3937                           
  3938                           ;Config register IDLOC5 @ 0x200005
  3939                           ;	unspecified, using default values
  3940   200005                     	org	2097157
  3941   200005  FF                 	db	255
  3942                           
  3943                           ;Config register IDLOC6 @ 0x200006
  3944                           ;	unspecified, using default values
  3945   200006                     	org	2097158
  3946   200006  FF                 	db	255
  3947                           
  3948                           ;Config register IDLOC7 @ 0x200007
  3949                           ;	unspecified, using default values
  3950   200007                     	org	2097159
  3951   200007  FF                 	db	255
  3952                           
  3953                           	psect	config
  3954                           
  3955                           ;Config register CONFIG1L @ 0x300000
  3956                           ;	unspecified, using default values
  3957                           ;	PLL Prescaler Selection bits
  3958                           ;	PLLDIV = 0x0, unprogrammed default
  3959                           ;	System Clock Postscaler Selection bits
  3960                           ;	CPUDIV = 0x0, unprogrammed default
  3961                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  3962                           ;	USBDIV = 0x0, unprogrammed default
  3963   300000                     	org	3145728
  3964   300000  00                 	db	0
  3965                           
  3966                           ;Config register CONFIG1H @ 0x300001
  3967                           ;	Oscillator Selection bits
  3968                           ;	FOSC = INTOSC_EC, Internal oscillator, CLKO function on RA6, EC used by USB (INTCKO)
  3969                           ;	Fail-Safe Clock Monitor Enable bit
  3970                           ;	FCMEN = 0x0, unprogrammed default
  3971                           ;	Internal/External Oscillator Switchover bit
  3972                           ;	IESO = 0x0, unprogrammed default
  3973   300001                     	org	3145729
  3974   300001  09                 	db	9
  3975                           
  3976                           ;Config register CONFIG2L @ 0x300002
  3977                           ;	unspecified, using default values
  3978                           ;	Power-up Timer Enable bit
  3979                           ;	PWRT = 0x1, unprogrammed default
  3980                           ;	Brown-out Reset Enable bits
  3981                           ;	BOR = 0x3, unprogrammed default
  3982                           ;	Brown-out Reset Voltage bits
  3983                           ;	BORV = 0x3, unprogrammed default
  3984                           ;	USB Voltage Regulator Enable bit
  3985                           ;	VREGEN = 0x0, unprogrammed default
  3986   300002                     	org	3145730
  3987   300002  1F                 	db	31
  3988                           
  3989                           ;Config register CONFIG2H @ 0x300003
  3990                           ;	Watchdog Timer Enable bit
  3991                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  3992                           ;	Watchdog Timer Postscale Select bits
  3993                           ;	WDTPS = 0xF, unprogrammed default
  3994   300003                     	org	3145731
  3995   300003  1E                 	db	30
  3996                           
  3997                           ; Padding undefined space
  3998   300004                     	org	3145732
  3999   300004  FF                 	db	255
  4000                           
  4001                           ;Config register CONFIG3H @ 0x300005
  4002                           ;	CCP2 MUX bit
  4003                           ;	CCP2MX = 0x1, unprogrammed default
  4004                           ;	PORTB A/D Enable bit
  4005                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  4006                           ;	Low-Power Timer 1 Oscillator Enable bit
  4007                           ;	LPT1OSC = 0x0, unprogrammed default
  4008                           ;	MCLR Pin Enable bit
  4009                           ;	MCLRE = 0x1, unprogrammed default
  4010   300005                     	org	3145733
  4011   300005  81                 	db	129
  4012                           
  4013                           ;Config register CONFIG4L @ 0x300006
  4014                           ;	Stack Full/Underflow Reset Enable bit
  4015                           ;	STVREN = 0x1, unprogrammed default
  4016                           ;	Single-Supply ICSP Enable bit
  4017                           ;	LVP = OFF, Single-Supply ICSP disabled
  4018                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  4019                           ;	ICPRT = 0x0, unprogrammed default
  4020                           ;	Extended Instruction Set Enable bit
  4021                           ;	XINST = 0x0, unprogrammed default
  4022                           ;	Background Debugger Enable bit
  4023                           ;	DEBUG = 0x1, unprogrammed default
  4024   300006                     	org	3145734
  4025   300006  81                 	db	129
  4026                           
  4027                           ; Padding undefined space
  4028   300007                     	org	3145735
  4029   300007  FF                 	db	255
  4030                           
  4031                           ;Config register CONFIG5L @ 0x300008
  4032                           ;	unspecified, using default values
  4033                           ;	Code Protection bit
  4034                           ;	CP0 = 0x1, unprogrammed default
  4035                           ;	Code Protection bit
  4036                           ;	CP1 = 0x1, unprogrammed default
  4037                           ;	Code Protection bit
  4038                           ;	CP2 = 0x1, unprogrammed default
  4039                           ;	Code Protection bit
  4040                           ;	CP3 = 0x1, unprogrammed default
  4041   300008                     	org	3145736
  4042   300008  0F                 	db	15
  4043                           
  4044                           ;Config register CONFIG5H @ 0x300009
  4045                           ;	unspecified, using default values
  4046                           ;	Boot Block Code Protection bit
  4047                           ;	CPB = 0x1, unprogrammed default
  4048                           ;	Data EEPROM Code Protection bit
  4049                           ;	CPD = 0x1, unprogrammed default
  4050   300009                     	org	3145737
  4051   300009  C0                 	db	192
  4052                           
  4053                           ;Config register CONFIG6L @ 0x30000A
  4054                           ;	unspecified, using default values
  4055                           ;	Write Protection bit
  4056                           ;	WRT0 = 0x1, unprogrammed default
  4057                           ;	Write Protection bit
  4058                           ;	WRT1 = 0x1, unprogrammed default
  4059                           ;	Write Protection bit
  4060                           ;	WRT2 = 0x1, unprogrammed default
  4061                           ;	Write Protection bit
  4062                           ;	WRT3 = 0x1, unprogrammed default
  4063   30000A                     	org	3145738
  4064   30000A  0F                 	db	15
  4065                           
  4066                           ;Config register CONFIG6H @ 0x30000B
  4067                           ;	unspecified, using default values
  4068                           ;	Configuration Register Write Protection bit
  4069                           ;	WRTC = 0x1, unprogrammed default
  4070                           ;	Boot Block Write Protection bit
  4071                           ;	WRTB = 0x1, unprogrammed default
  4072                           ;	Data EEPROM Write Protection bit
  4073                           ;	WRTD = 0x1, unprogrammed default
  4074   30000B                     	org	3145739
  4075   30000B  E0                 	db	224
  4076                           
  4077                           ;Config register CONFIG7L @ 0x30000C
  4078                           ;	unspecified, using default values
  4079                           ;	Table Read Protection bit
  4080                           ;	EBTR0 = 0x1, unprogrammed default
  4081                           ;	Table Read Protection bit
  4082                           ;	EBTR1 = 0x1, unprogrammed default
  4083                           ;	Table Read Protection bit
  4084                           ;	EBTR2 = 0x1, unprogrammed default
  4085                           ;	Table Read Protection bit
  4086                           ;	EBTR3 = 0x1, unprogrammed default
  4087   30000C                     	org	3145740
  4088   30000C  0F                 	db	15
  4089                           
  4090                           ;Config register CONFIG7H @ 0x30000D
  4091                           ;	unspecified, using default values
  4092                           ;	Boot Block Table Read Protection bit
  4093                           ;	EBTRB = 0x1, unprogrammed default
  4094   30000D                     	org	3145741
  4095   30000D  40                 	db	64
  4096                           tosu	equ	0xFFF
  4097                           tosh	equ	0xFFE
  4098                           tosl	equ	0xFFD
  4099                           stkptr	equ	0xFFC
  4100                           pclatu	equ	0xFFB
  4101                           pclath	equ	0xFFA
  4102                           pcl	equ	0xFF9
  4103                           tblptru	equ	0xFF8
  4104                           tblptrh	equ	0xFF7
  4105                           tblptrl	equ	0xFF6
  4106                           tablat	equ	0xFF5
  4107                           prodh	equ	0xFF4
  4108                           prodl	equ	0xFF3
  4109                           indf0	equ	0xFEF
  4110                           postinc0	equ	0xFEE
  4111                           postdec0	equ	0xFED
  4112                           preinc0	equ	0xFEC
  4113                           plusw0	equ	0xFEB
  4114                           fsr0h	equ	0xFEA
  4115                           fsr0l	equ	0xFE9
  4116                           wreg	equ	0xFE8
  4117                           indf1	equ	0xFE7
  4118                           postinc1	equ	0xFE6
  4119                           postdec1	equ	0xFE5
  4120                           preinc1	equ	0xFE4
  4121                           plusw1	equ	0xFE3
  4122                           fsr1h	equ	0xFE2
  4123                           fsr1l	equ	0xFE1
  4124                           bsr	equ	0xFE0
  4125                           indf2	equ	0xFDF
  4126                           postinc2	equ	0xFDE
  4127                           postdec2	equ	0xFDD
  4128                           preinc2	equ	0xFDC
  4129                           plusw2	equ	0xFDB
  4130                           fsr2h	equ	0xFDA
  4131                           fsr2l	equ	0xFD9
  4132                           status	equ	0xFD8

Data Sizes:
    Strings     49
    Constant    0
    Data        12
    BSS         8
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     30      50
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    MensajeLCD_Word@a	PTR unsigned char  size(1) Largest target is 17
		 -> STR_8(CODE[5]), STR_7(CODE[6]), STR_6(CODE[17]), STR_5(CODE[17]), 
		 -> STR_4(CODE[17]), STR_3(CODE[10]), STR_2(CODE[17]), STR_1(CODE[11]), 

    NuevoCaracter@c	PTR unsigned char  size(1) Largest target is 8
		 -> cara(COMRAM[8]), 


Critical Paths under _main in COMRAM

    _main->_TransmitirDatos
    _TransmitirDatos->_MensajeLCD_Word
    _MensajeLCD_Word->_EscribeLCD_c
    _DireccionaLCD->_EnviaDato
    _NuevoCaracter->_EscribeLCD_c
    _EscribeLCD_c->_EnviaDato
    _LeerHT11->_LeerByte
    _LeerByte->_LeerBit
    _InicializaLCD->_EnviaDato
    _BorraLCD->_EnviaDato
    _EnviaDato->_RetardoLCD

Critical Paths under _ISR in COMRAM

    _ISR->i2_EscribeLCD_c
    i2_EscribeLCD_c->i2_EnviaDato
    i2_EnviaDato->i2_RetardoLCD

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    7172
                                             28 COMRAM     2     2      0
                           _BorraLCD
                      _DireccionaLCD
                       _EscribeLCD_c
                      _InicializaLCD
                           _LeerHT11
                    _MensajeLCD_Word
                      _NuevoCaracter
                    _TransmitirDatos
                          _Velocidad
 ---------------------------------------------------------------------------------
 (1) _Velocidad                                            2     0      2     384
                                              7 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _TransmitirDatos                                     14    10      4    4798
                                             16 COMRAM    12     8      4
                           _BorraLCD
                      _DireccionaLCD
                       _EscribeLCD_c
                    _MensajeLCD_Word
                         _Transmitir
                            ___awdiv
                            ___lbdiv
                            ___lbmod
                            ___lwdiv
                            ___lwmod
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     311
                                              7 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     615
                                              7 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     922
                                              7 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___lbmod                                              4     3      1     311
                                              7 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (2) ___lbdiv                                              4     3      1     314
                                              7 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     604
                                              7 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _Transmitir                                           1     1      0      22
                                              7 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _MensajeLCD_Word                                      4     3      1     874
                                             12 COMRAM     4     3      1
                       _EscribeLCD_c
 ---------------------------------------------------------------------------------
 (2) _DireccionaLCD                                        1     1      0     132
                                             11 COMRAM     1     1      0
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (1) _NuevoCaracter                                        4     3      1     405
                                             12 COMRAM     4     3      1
                         _ComandoLCD
                       _EscribeLCD_c
 ---------------------------------------------------------------------------------
 (3) _EscribeLCD_c                                         1     1      0     132
                                             11 COMRAM     1     1      0
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (2) _ComandoLCD                                           2     2      0      22
                                              7 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _LeerHT11                                             1     1      0     117
                                             11 COMRAM     1     1      0
                           _LeerByte
 ---------------------------------------------------------------------------------
 (2) _LeerByte                                             3     3      0     117
                                              8 COMRAM     3     3      0
                            _LeerBit
 ---------------------------------------------------------------------------------
 (3) _LeerBit                                              1     1      0      25
                                              7 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _InicializaLCD                                        0     0      0     220
                           _BorraLCD
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (2) _BorraLCD                                             0     0      0     110
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (4) _EnviaDato                                            2     2      0      88
                                              9 COMRAM     2     2      0
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (4) _RetardoLCD                                           2     2      0      22
                                              7 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (4) _HabilitaLCD                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISR                                                  2     2      0     132
                                              5 COMRAM     2     2      0
                        _LeerTeclado
                     i2_EscribeLCD_c
 ---------------------------------------------------------------------------------
 (7) i2_EscribeLCD_c                                       1     1      0     132
                                              4 COMRAM     1     1      0
                        i2_EnviaDato
                      i2_HabilitaLCD
                       i2_RetardoLCD
 ---------------------------------------------------------------------------------
 (8) i2_EnviaDato                                          2     2      0      88
                                              2 COMRAM     2     2      0
                      i2_HabilitaLCD
                       i2_RetardoLCD
 ---------------------------------------------------------------------------------
 (8) i2_RetardoLCD                                         2     2      0      22
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (8) i2_HabilitaLCD                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _LeerTeclado                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BorraLCD
     _EnviaDato
       _HabilitaLCD
       _RetardoLCD
     _HabilitaLCD
     _RetardoLCD
   _DireccionaLCD
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _EscribeLCD_c
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _InicializaLCD
     _BorraLCD
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _LeerHT11
     _LeerByte
       _LeerBit
   _MensajeLCD_Word
     _EscribeLCD_c
   _NuevoCaracter
     _ComandoLCD
     _EscribeLCD_c
   _TransmitirDatos
     _BorraLCD
     _DireccionaLCD
     _EscribeLCD_c
     _MensajeLCD_Word
     _Transmitir
     ___awdiv
     ___lbdiv
     ___lbmod
     ___lwdiv
     ___lwmod
     ___wmul
   _Velocidad

 _ISR (ROOT)
   _LeerTeclado
   i2_EscribeLCD_c
     i2_EnviaDato
       i2_HabilitaLCD
       i2_RetardoLCD
     i2_HabilitaLCD
     i2_RetardoLCD

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      37        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     1E      32       1       53.2%
BITBIGSFRhhhlh      19      0       0      21        0.0%
BITBIGSFRlhl        11      0       0      33        0.0%
BITBIGSFRhhlllh      D      0       0      26        0.0%
BITBIGSFRhhhh        D      0       0      20        0.0%
BITBIGSFRlll         D      0       0      35        0.0%
BITBIGSFRhhllll      C      0       0      27        0.0%
BITBIGSFRhhlhl       7      0       0      24        0.0%
BITBIGSFRhhllll      7      0       0      28        0.0%
BITBIGSFRhhlhh       6      0       0      23        0.0%
BITBIGSFRlhhhl       5      0       0      31        0.0%
BITBIGSFRhl          5      0       0      29        0.0%
BITBIGSFRlhhhh       1      0       0      30        0.0%
BITBIGSFRlhhl        1      0       0      32        0.0%
BITBIGSFRllh         1      0       0      34        0.0%
BITBIGSFRhhllh       1      0       0      25        0.0%
BITBIGSFRhhhll       1      0       0      22        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      32      36        0.0%
DATA                 0      0      32       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Tue Jun 06 18:17:06 2023

                      _c 001F        Transmitir@BufferT 0008             ___awdiv@sign 000D  
             EnviaDato@a 000B      ___wmul@multiplicand 000A            ??_LeerTeclado 0001  
          _InicializaLCD 0ED4                      l231 12FA                      l242 131C  
                    l228 12F0                      l247 1340                      l292 09AA  
                    l287 0868                      l818 1108                      l828 1224  
                    _GIE 7F97                      _RC0 7C10                      _RB4 7C0C  
                    _RB5 7C0D                      _RE0 7C20                      _RB6 7C0E  
                    _RB7 7C0F                      _PR2 0FCB                      _ISR 0008  
                    u770 1344                      u850 0FB6                      u930 10E2  
                    u790 115E                      u960 1206                      u890 12C0  
       TransmitirDatos@n 0017                      _ing 002F                      wreg 0FE8  
                   ?_ISR 0001         ??i2_EscribeLCD_c 0005                     l2004 12D2  
                   l2022 1398                     l2014 1380                     l2008 12DA  
                   l2106 0F22                     l2034 10D6                     l2036 10DE  
                   l2126 0F5A                     l2046 10FE                     l2062 121A  
                   l2054 11FA                     l2056 1202                     l2170 0876  
                   l2260 0D84                     l2086 0EE6                     l2174 088A  
                   l2254 0D66                     l1800 0FF8                     l2096 0F04  
                   l2184 08E4                     l2272 0DC0                     l2248 0D48  
                   l1802 100A                     l1810 103E                     l2178 08B6  
                   l2186 090E                     l2266 0DA2                     l1804 102A  
                   l1900 111A                     l2284 0DFC                     l1806 1034  
                   l1822 1198                     l2470 1244                     l2278 0DDE  
                   l2542 0BAE                     l1842 1330                     l1922 13CE  
                   l2546 0BBC                     l1932 1468                     l2556 0BF6  
                   l1950 0F84                     l1962 0FAA                     l1964 0FB2  
                   l1956 0F94                     l1982 0FEA                     l1974 0FD2  
                   l1992 12B6                     l1978 0FDC                     l1996 12BC  
                   STR_1 0812                     STR_2 0801                     STR_3 081D  
                   STR_4 0801                     STR_5 0801                     STR_6 0801  
                   STR_7 0827                     STR_8 082D                     u1110 0D72  
                   u1210 0E08                     u1130 0D90                     u1150 0DAE  
                   u1170 0DCC                     u1090 0D54                     u1430 1268  
                   u1190 0DEA                     _LATB 0F8A                     _LATD 0F8C  
                   u1507 135E                     u1517 136A                     u1607 1036  
                   u1527 12E6                     u1617 1442                     u1537 12F6  
                   u1457 0B40                     u1547 1322                     u1467 0B84  
                   u1557 1332                     u1477 0BEA                     u1567 0FFE  
                   u1487 0C00                     u1577 1010                     u1497 1354  
                   u1587 101A                     u1597 102C                     _RBIE 7F93  
                   _RBIF 7F90                     _RCIF 7CF5                     _RBPU 7F8F  
                   _TMR0 0FD6                     _TMR2 0FCC                     _TRMT 7D61  
                   _Cont 0021           ??_EscribeLCD_c 000C                     _Temp 0032  
                   _cara 0023                     _main 0AC4                     _duty 002B  
                   fsr2h 0FDA                     indf2 0FDF                     fsr1l 0FE1  
                   fsr2l 0FD9                     btemp 0033                     prodh 0FF4  
                   prodl 0FF3                     start 000E          __end_of_LeerBit 1348  
           ___param_bank 0000                    ??_ISR 0006           ?_InicializaLCD 0001  
                  ?_main 0001          __end_of___awdiv 0FF4          __end_of___lbdiv 12DE  
             _ComandoLCD 1348            EscribeLCD_c@a 000C          __end_of___lbmod 13A0  
                  _T0CON 0FD5          ___awdiv@divisor 000A                    _T2CON 0FCA  
                  _LATE1 7C69                    _LATE2 7C6A          __end_of___lwdiv 1112  
        __end_of___lwmod 122E                    i2l300 0C66                    i2l321 0CCC  
                  i2l313 0CA8                    i2l305 0C84                    i2l330 0D08  
                  i2l331 0CF8                    i2l323 0CD4                    i2l315 0CB0  
                  i2l307 0C8C                    i2l333 0D00                    i2l325 0CDC  
                  i2l317 0CB8                    i2l309 0C94                    i2l336 0D32  
                  i2l329 0CF0                    i2l298 0C68          ___awdiv@counter 000C  
                  _RCREG 0FAE                    _RCSTA 0FAB                    _SPBRG 0FAF  
                  _PORTB 0F81                    _USBEN 7B6B                    _TRISB 0F93  
                  _TRISC 0F94                    _TRISD 0F95                    _TXREG 0FAD  
                  _TXSTA 0FAC                    _Tecla 0030      __end_of_LeerTeclado 0ED4  
         NuevoCaracter@c 000D           NuevoCaracter@i 000F                    tablat 0FF5  
            _HabilitaLCD 143E                    ttemp5 0034                    ttemp6 0037  
                  ttemp7 003B                    status 0FD8                    wtemp8 0034  
        ___lbdiv@divisor 0008          ___lbdiv@counter 000A         __end_of_BorraLCD 143E  
       __end_of_LeerHT11 1318          __initialization 126A         __end_of_LeerByte 13E8  
           __end_of_main 0C30                   ??_main 001D            __activetblptr 0002  
                 _ADCON0 0FC2                   _ADCON1 0FC1                   _ADCON2 0FC0  
  __end_of_NuevoCaracter 126A           DireccionaLCD@a 000C                   _CCPR1L 0FBE  
       ___awdiv@dividend 0008                   i2l1600 0E46                   i2l1610 0E64  
                 i2l1602 0E4C                   i2l1612 0E6A                   i2l1604 0E52  
                 i2l2076 11DE                   i2l2412 0C9C                   i2l1606 0E58  
                 i2l1608 0E5E                   i2l1616 0E70                   i2l2424 0CC0  
                 i2l2436 0CE4                   i2l1590 0E28                   i2l1582 0E10  
                 i2l2454 0D1A                   i2l1592 0E2E                   i2l1584 0E16  
                 i2l1594 0E34                   i2l1586 0E1C                   i2l1596 0E3A  
                 i2l1588 0E22                   i2l1860 105E                   i2l1598 0E40  
                 i2l1862 1070                   i2l1870 10A4                   i2l1864 1090  
                 i2l1866 109A                   _OSCCON 0FD3                   _TMR0IE 7F95  
                 _TMR0IF 7F92                   _TMR0ON 7EAF                   _TMR2ON 7E52  
                 _TRISC0 7CA0                   _TRISC2 7CA2                   _TRISE0 7CB0  
                 _TRISE1 7CB1                   _TRISE2 7CB2                   _TRISC6 7CA6  
                 _TRISC7 7CA7                ??_LeerBit 0008    __end_of_DireccionaLCD 13FE  
                 _UTRDIS 7B7B               _RetardoLCD 0FF4      TransmitirDatos@Ent1 0011  
    TransmitirDatos@Ent2 0013      TransmitirDatos@Simb 0019                   ___wmul 13A0  
              ??___awdiv 000C                ??___lbdiv 0009                ??___lbmod 0009  
              ??___lwdiv 000C                ??___lwmod 000C          ??_InicializaLCD 000C  
                 clear_0 1290         ___awdiv@quotient 000E                   isa$std 0001  
   __end_of_EscribeLCD_c 1414              ?_ComandoLCD 0001              _LeerTeclado 0E0E  
           ?i2_EnviaDato 0001             __pdataCOMRAM 001F             __mediumconst 0000  
                 tblptrh 0FF7                   tblptrl 0FF6                   tblptru 0FF8  
             _Transmitir 1466         ___lbdiv@dividend 0009          ___lbmod@divisor 0008  
  __end_ofi2_HabilitaLCD 145A               __accesstop 0060  __end_of__initialization 1296  
        ___lbmod@counter 000A            ___rparam_used 0001           __pcstackCOMRAM 0001  
      __end_of_EnviaDato 11A6         ___lbdiv@quotient 000B                ?_BorraLCD 0001  
              ?_LeerHT11 0001                ?_LeerByte 0001              ?_RetardoLCD 0001  
            RetardoLCD@a 0009        __end_of_Velocidad 0E0E           ComandoLCD@data 0009  
                ?___wmul 0008                  _CCP1CON 0FBD               ??_BorraLCD 000C  
             ??_LeerHT11 000C              ?_Transmitir 0001        ??_MensajeLCD_Word 000E  
             ??_LeerByte 0009             ?_HabilitaLCD 0001                  _LeerBit 1318  
                _Humedad 0031                  __Hparam 0000                  __Lparam 0000  
   TransmitirDatos@TempC 001B                  ___awdiv 0F70                  ___lbdiv 12A4  
                ___lbmod 1376                  ___lwdiv 10C0                  ___lwmod 11EC  
           __psmallconst 0800                  __pcinit 126A                  __ramtop 0800  
                __ptext0 0AC4                  __ptext1 0D36                  __ptext2 0834  
                __ptext3 13A0                  __ptext4 11EC                  __ptext5 10C0  
                __ptext6 1376                  __ptext7 12A4                  __ptext8 0F70  
                __ptext9 1466           __pintcode_body 0C30     end_of_initialization 1296  
          __Lmediumconst 0000                  int_func 0C30             _EscribeLCD_c 13FE  
                postdec1 0FE5        ??_TransmitirDatos 0015                  postinc0 0FEE  
           ??_ComandoLCD 0008             ?_LeerTeclado 0001         ___lbmod@dividend 0009  
              LeerByte@i 000B          i2EscribeLCD_c@a 0005              ___lbmod@rem 000B  
          ?i2_RetardoLCD 0001       __end_of_ComandoLCD 1376           __end_of___wmul 13C6  
          __pidataCOMRAM 145A    __end_of_InicializaLCD 0F70                _EnviaDato 1160  
    start_initialization 126A              __end_of_ISR 0D36           ??i2_RetardoLCD 0001  
           ??_RetardoLCD 0008                 ??___wmul 000C                _Velocidad 0D36  
        _MensajeLCD_Word 1112               ?_EnviaDato 0001              __pbssCOMRAM 002B  
     __end_of_RetardoLCD 105A         MensajeLCD_Word@a 000D         MensajeLCD_Word@i 000F  
           ??_Transmitir 0008            _NuevoCaracter 122E                 ?_LeerBit 0001  
          _DireccionaLCD 13E8           i2_EscribeLCD_c 1414         ___lwdiv@dividend 0008  
              __pintcode 0008                 ?___awdiv 0008                 ?___lbdiv 0008  
               ?___lbmod 0008               ?_Velocidad 0008                 ?___lwdiv 0008  
               ?___lwmod 0008       __end_of_Transmitir 1472              __smallconst 0800  
       ___lwdiv@quotient 000C           ?_NuevoCaracter 000D          _TransmitirDatos 0834  
         ___wmul@product 000C            i2_HabilitaLCD 144C           ?_DireccionaLCD 0001  
 __end_ofi2_EscribeLCD_c 142A                 i2u162_47 0C56                 i2u163_47 0D26  
               i2u164_47 1064                 i2u165_47 1076                 i2u166_47 1080  
               i2u167_47 1092                 i2u168_47 109C                 i2u169_47 1450  
__end_of_MensajeLCD_Word 1160        ___wmul@multiplier 0008            ??i2_EnviaDato 0003  
   __end_ofi2_RetardoLCD 10C0              ??_EnviaDato 000A                 _BorraLCD 142A  
               _LeerHT11 12DE                copy_data0 127E                 _LeerByte 13C6  
         ?i2_HabilitaLCD 0001          ?i2_EscribeLCD_c 0001                 __Hrparam 0000  
               __Lrparam 0000              ??_Velocidad 000A             i2EnviaDato@a 0004  
        ??_NuevoCaracter 000E  __end_of_TransmitirDatos 0AC4          ___lwdiv@divisor 000A  
        ___lwdiv@counter 000E                 __ptext10 1112                 __ptext11 13E8  
               __ptext20 1160                 __ptext12 122E                 __ptext21 0FF4  
               __ptext13 13FE                 __ptext22 143E                 __ptext14 1348  
               __ptext15 12DE                 __ptext24 1414                 __ptext16 13C6  
               __ptext25 11A6                 __ptext17 1318                 __ptext26 105A  
               __ptext18 0ED4                 __ptext27 144C                 __ptext19 142A  
               __ptext28 0E0E      __end_ofi2_EnviaDato 11EC                 _contador 002D  
        ??_DireccionaLCD 000C                 _interfaz 0022             Velocidad@val 0008  
               isa$xinst 0000         ?_MensajeLCD_Word 000D                 int$flags 0033  
      NuevoCaracter@addr 000E          ??i2_HabilitaLCD 0001                 intlevel2 0000  
          ??_HabilitaLCD 0008         ___lwmod@dividend 0008            i2RetardoLCD@a 0002  
            i2_EnviaDato 11A6          ___lwmod@divisor 000A          ___lwmod@counter 000C  
       ?_TransmitirDatos 0011            ?_EscribeLCD_c 0001               LeerBit@res 0008  
           i2_RetardoLCD 105A      __end_of_HabilitaLCD 144C              LeerByte@res 000A  
