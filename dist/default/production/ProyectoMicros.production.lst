

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Tue Jun 06 19:40:42 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og9 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1
    36                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    37                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1
    43                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    44                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    45                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    46                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    47                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    48   000000                     
    49                           ; Generated 09/02/2023 GMT
    50                           ; 
    51                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    52                           ; All rights reserved.
    53                           ; 
    54                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    55                           ; 
    56                           ; Redistribution and use in source and binary forms, with or without modification, are
    57                           ; permitted provided that the following conditions are met:
    58                           ; 
    59                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    60                           ;        conditions and the following disclaimer.
    61                           ; 
    62                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    63                           ;        of conditions and the following disclaimer in the documentation and/or other
    64                           ;        materials provided with the distribution. Publication is not required when
    65                           ;        this file is used in an embedded application.
    66                           ; 
    67                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    68                           ;        software without specific prior written permission.
    69                           ; 
    70                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    71                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    72                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    73                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    74                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    75                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    76                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    77                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    78                           ; 
    79                           ; 
    80                           ; Code-generator required, PIC18F4550 Definitions
    81                           ; 
    82                           ; SFR Addresses
    83   000000                     
    84                           	psect	idataCOMRAM
    85   00158C                     __pidataCOMRAM:
    86                           	callstack 0
    87                           
    88                           ;initializer for _a
    89   00158C  007D               	dw	125
    90                           
    91                           ;initializer for _Cont
    92   00158E  06                 	db	6
    93                           
    94                           ;initializer for _interfaz
    95   00158F  08                 	db	8
    96                           
    97                           ;initializer for _cara
    98   001590  00                 	db	0
    99   001591  0A                 	db	10
   100   001592  0A                 	db	10
   101   001593  0A                 	db	10
   102   001594  00                 	db	0
   103   001595  1F                 	db	31
   104   001596  0E                 	db	14
   105   001597  00                 	db	0
   106   000000                     _TMR1	set	4046
   107   000000                     _RCREG	set	4014
   108   000000                     _TXREG	set	4013
   109   000000                     _T1CON	set	4045
   110   000000                     _SPBRG	set	4015
   111   000000                     _TMR2	set	4044
   112   000000                     _TRISB	set	3987
   113   000000                     _RB7	set	31759
   114   000000                     _RB6	set	31758
   115   000000                     _RB5	set	31757
   116   000000                     _RB4	set	31756
   117   000000                     _GO	set	32273
   118   000000                     _TRMT	set	32097
   119   000000                     _GIE	set	32663
   120   000000                     _TMR1ON	set	32360
   121   000000                     _PEIE	set	32662
   122   000000                     _TRISC1	set	31905
   123   000000                     _TRISC0	set	31904
   124   000000                     _TRISC7	set	31911
   125   000000                     _TRISC6	set	31910
   126   000000                     _TMR2ON	set	32338
   127   000000                     _TRISC2	set	31906
   128   000000                     _TMR0ON	set	32431
   129   000000                     _TMR0IE	set	32661
   130   000000                     _TMR0IF	set	32658
   131   000000                     _RBIE	set	32659
   132   000000                     _TRISE1	set	31921
   133   000000                     _TRISE2	set	31922
   134   000000                     _LATE2	set	31850
   135   000000                     _LATD	set	3980
   136   000000                     _USBEN	set	31595
   137   000000                     _UTRDIS	set	31611
   138   000000                     _TRISA	set	3986
   139   000000                     _TRISC	set	3988
   140   000000                     _LATE1	set	31849
   141   000000                     _RCSTA	set	4011
   142   000000                     _TXSTA	set	4012
   143   000000                     _CCP1CON	set	4029
   144   000000                     _CCPR1L	set	4030
   145   000000                     _ADCON2	set	4032
   146   000000                     _ADCON1	set	4033
   147   000000                     _ADCON0	set	4034
   148   000000                     _TRISD	set	3989
   149   000000                     _OSCCON	set	4051
   150   000000                     _TMR1IE	set	31976
   151   000000                     _TMR1IF	set	31984
   152   000000                     _TRISE0	set	31920
   153   000000                     _T0CON	set	4053
   154   000000                     _RBPU	set	32655
   155   000000                     _ADRES	set	4035
   156   000000                     _T2CON	set	4042
   157   000000                     _PR2	set	4043
   158   000000                     _RBIF	set	32656
   159   000000                     _TMR0	set	4054
   160   000000                     _CCPR2	set	4027
   161   000000                     _CCP2CON	set	4026
   162   000000                     _PORTB	set	3969
   163   000000                     _RC0	set	31760
   164   000000                     _RE0	set	31776
   165   000000                     _LATB	set	3978
   166                           
   167                           	psect	smallconst
   168   000800                     __psmallconst:
   169                           	callstack 0
   170   000800  00                 	db	0
   171   000801                     STR_2:
   172   000801  20                 	db	32
   173   000802  20                 	db	32
   174   000803  20                 	db	32
   175   000804  20                 	db	32
   176   000805  20                 	db	32
   177   000806  20                 	db	32
   178   000807  20                 	db	32
   179   000808  20                 	db	32
   180   000809  20                 	db	32
   181   00080A  20                 	db	32
   182   00080B  20                 	db	32
   183   00080C  20                 	db	32
   184   00080D  20                 	db	32
   185   00080E  20                 	db	32
   186   00080F  20                 	db	32
   187   000810  20                 	db	32
   188   000811  00                 	db	0
   189   000812                     STR_1:
   190   000812  42                 	db	66	;'B'
   191   000813  69                 	db	105	;'i'
   192   000814  65                 	db	101	;'e'
   193   000815  6E                 	db	110	;'n'
   194   000816  76                 	db	118	;'v'
   195   000817  65                 	db	101	;'e'
   196   000818  6E                 	db	110	;'n'
   197   000819  69                 	db	105	;'i'
   198   00081A  64                 	db	100	;'d'
   199   00081B  6F                 	db	111	;'o'
   200   00081C  00                 	db	0
   201   00081D                     STR_3:
   202   00081D  50                 	db	80	;'P'
   203   00081E  61                 	db	97	;'a'
   204   00081F  73                 	db	115	;'s'
   205   000820  73                 	db	115	;'s'
   206   000821  77                 	db	119	;'w'
   207   000822  6F                 	db	111	;'o'
   208   000823  72                 	db	114	;'r'
   209   000824  64                 	db	100	;'d'
   210   000825  3A                 	db	58	;':'
   211   000826  00                 	db	0
   212   000827                     STR_7:
   213   000827  54                 	db	84	;'T'
   214   000828  65                 	db	101	;'e'
   215   000829  6D                 	db	109	;'m'
   216   00082A  70                 	db	112	;'p'
   217   00082B  3A                 	db	58	;':'
   218   00082C  00                 	db	0
   219   00082D                     STR_8:
   220   00082D  48                 	db	72	;'H'
   221   00082E  75                 	db	117	;'u'
   222   00082F  6D                 	db	109	;'m'
   223   000830  3A                 	db	58	;':'
   224   000831  00                 	db	0
   225   000832  00                 	db	0	; dummy byte at the end
   226   000000                     
   227                           ; #config settings
   228                           
   229                           	psect	cinit
   230   001388                     __pcinit:
   231                           	callstack 0
   232   001388                     start_initialization:
   233                           	callstack 0
   234   001388                     __initialization:
   235                           	callstack 0
   236                           
   237                           ; Initialize objects allocated to COMRAM (12 bytes)
   238                           ; load TBLPTR registers with __pidataCOMRAM
   239   001388  0E8C               	movlw	low __pidataCOMRAM
   240   00138A  6EF6               	movwf	tblptrl,c
   241   00138C  0E15               	movlw	high __pidataCOMRAM
   242   00138E  6EF7               	movwf	tblptrh,c
   243   001390  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   244   001392  6EF8               	movwf	tblptru,c
   245   001394  EE00  F01F         	lfsr	0,__pdataCOMRAM
   246   001398  EE10 F00C          	lfsr	1,12
   247   00139C                     copy_data0:
   248   00139C  0009               	tblrd		*+
   249   00139E  CFF5 FFEE          	movff	tablat,postinc0
   250   0013A2  50E5               	movf	postdec1,w,c
   251   0013A4  50E1               	movf	fsr1l,w,c
   252   0013A6  E1FA               	bnz	copy_data0
   253                           
   254                           ; Clear objects allocated to COMRAM (6 bytes)
   255   0013A8  6A30               	clrf	(__pbssCOMRAM+5)& (0+255),c
   256   0013AA  6A2F               	clrf	(__pbssCOMRAM+4)& (0+255),c
   257   0013AC  6A2E               	clrf	(__pbssCOMRAM+3)& (0+255),c
   258   0013AE  6A2D               	clrf	(__pbssCOMRAM+2)& (0+255),c
   259   0013B0  6A2C               	clrf	(__pbssCOMRAM+1)& (0+255),c
   260   0013B2  6A2B               	clrf	__pbssCOMRAM& (0+255),c
   261   0013B4                     end_of_initialization:
   262                           	callstack 0
   263   0013B4                     __end_of__initialization:
   264                           	callstack 0
   265   0013B4  9031               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   266   0013B6  9231               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   267   0013B8  0E00               	movlw	low (__Lmediumconst shr (0+16))
   268   0013BA  6EF8               	movwf	tblptru,c
   269   0013BC  0100               	movlb	0
   270   0013BE  EF62  F005         	goto	_main	;jump to C main() function
   271                           
   272                           	psect	bssCOMRAM
   273   00002B                     __pbssCOMRAM:
   274                           	callstack 0
   275   00002B                     _c:
   276                           	callstack 0
   277   00002B                     	ds	2
   278   00002D                     _ing:
   279                           	callstack 0
   280   00002D                     	ds	1
   281   00002E                     _Tecla:
   282                           	callstack 0
   283   00002E                     	ds	1
   284   00002F                     _Humedad:
   285                           	callstack 0
   286   00002F                     	ds	1
   287   000030                     _Temp:
   288                           	callstack 0
   289   000030                     	ds	1
   290                           
   291                           	psect	dataCOMRAM
   292   00001F                     __pdataCOMRAM:
   293                           	callstack 0
   294   00001F                     _a:
   295                           	callstack 0
   296   00001F                     	ds	2
   297   000021                     _Cont:
   298                           	callstack 0
   299   000021                     	ds	1
   300   000022                     _interfaz:
   301                           	callstack 0
   302   000022                     	ds	1
   303   000023                     _cara:
   304                           	callstack 0
   305   000023                     	ds	8
   306                           
   307                           	psect	cstackCOMRAM
   308   000001                     __pcstackCOMRAM:
   309                           	callstack 0
   310   000001                     ??i2_RetardoLCD:
   311   000001                     
   312                           ; 2 bytes @ 0x0
   313   000001                     	ds	1
   314   000002                     i2RetardoLCD@a:
   315                           	callstack 0
   316                           
   317                           ; 1 bytes @ 0x1
   318   000002                     	ds	1
   319   000003                     ??i2_EnviaDato:
   320                           
   321                           ; 1 bytes @ 0x2
   322   000003                     	ds	1
   323   000004                     i2EnviaDato@a:
   324                           	callstack 0
   325                           
   326                           ; 1 bytes @ 0x3
   327   000004                     	ds	1
   328   000005                     i2EscribeLCD_c@a:
   329                           	callstack 0
   330                           
   331                           ; 1 bytes @ 0x4
   332   000005                     	ds	1
   333   000006                     ??_ISR:
   334                           
   335                           ; 1 bytes @ 0x5
   336   000006                     	ds	2
   337   000008                     ??_RetardoLCD:
   338   000008                     ??_Movimiento:
   339   000008                     ??_ComandoLCD:
   340   000008                     ?___wmul:
   341                           	callstack 0
   342   000008                     ?___awdiv:
   343                           	callstack 0
   344   000008                     ?___lwdiv:
   345                           	callstack 0
   346   000008                     ?___lwmod:
   347                           	callstack 0
   348   000008                     LeerBit@res:
   349                           	callstack 0
   350   000008                     Transmitir@BufferT:
   351                           	callstack 0
   352   000008                     ConvertirUnidades@canal:
   353                           	callstack 0
   354   000008                     ___lbdiv@divisor:
   355                           	callstack 0
   356   000008                     ___lbmod@divisor:
   357                           	callstack 0
   358   000008                     Velocidad@val:
   359                           	callstack 0
   360   000008                     ___wmul@multiplier:
   361                           	callstack 0
   362   000008                     ___awdiv@dividend:
   363                           	callstack 0
   364   000008                     ___lwdiv@dividend:
   365                           	callstack 0
   366   000008                     ___lwmod@dividend:
   367                           	callstack 0
   368                           
   369                           ; 2 bytes @ 0x7
   370   000008                     	ds	1
   371   000009                     ??_LeerByte:
   372   000009                     ComandoLCD@data:
   373                           	callstack 0
   374   000009                     RetardoLCD@a:
   375                           	callstack 0
   376   000009                     ___lbdiv@dividend:
   377                           	callstack 0
   378   000009                     ___lbmod@dividend:
   379                           	callstack 0
   380                           
   381                           ; 1 bytes @ 0x8
   382   000009                     	ds	1
   383   00000A                     ??_EnviaDato:
   384   00000A                     LeerByte@res:
   385                           	callstack 0
   386   00000A                     ___lbdiv@counter:
   387                           	callstack 0
   388   00000A                     ___lbmod@counter:
   389                           	callstack 0
   390   00000A                     ___wmul@multiplicand:
   391                           	callstack 0
   392   00000A                     ___awdiv@divisor:
   393                           	callstack 0
   394   00000A                     ___lwdiv@divisor:
   395                           	callstack 0
   396   00000A                     ___lwmod@divisor:
   397                           	callstack 0
   398                           
   399                           ; 2 bytes @ 0x9
   400   00000A                     	ds	1
   401   00000B                     EnviaDato@a:
   402                           	callstack 0
   403   00000B                     LeerByte@i:
   404                           	callstack 0
   405   00000B                     ___lbdiv@quotient:
   406                           	callstack 0
   407   00000B                     ___lbmod@rem:
   408                           	callstack 0
   409                           
   410                           ; 1 bytes @ 0xA
   411   00000B                     	ds	1
   412   00000C                     ??_LeerHT11:
   413   00000C                     EscribeLCD_c@a:
   414                           	callstack 0
   415   00000C                     DireccionaLCD@a:
   416                           	callstack 0
   417   00000C                     ___awdiv@counter:
   418                           	callstack 0
   419   00000C                     ___lwmod@counter:
   420                           	callstack 0
   421   00000C                     ___wmul@product:
   422                           	callstack 0
   423   00000C                     ___lwdiv@quotient:
   424                           	callstack 0
   425                           
   426                           ; 2 bytes @ 0xB
   427   00000C                     	ds	1
   428   00000D                     NuevoCaracter@c:
   429                           	callstack 0
   430   00000D                     MensajeLCD_Word@a:
   431                           	callstack 0
   432   00000D                     ___awdiv@sign:
   433                           	callstack 0
   434                           
   435                           ; 1 bytes @ 0xC
   436   00000D                     	ds	1
   437   00000E                     ??_MensajeLCD_Word:
   438   00000E                     NuevoCaracter@addr:
   439                           	callstack 0
   440   00000E                     ___lwdiv@counter:
   441                           	callstack 0
   442   00000E                     ___awdiv@quotient:
   443                           	callstack 0
   444                           
   445                           ; 2 bytes @ 0xD
   446   00000E                     	ds	1
   447   00000F                     NuevoCaracter@i:
   448                           	callstack 0
   449   00000F                     MensajeLCD_Word@i:
   450                           	callstack 0
   451                           
   452                           ; 2 bytes @ 0xE
   453   00000F                     	ds	2
   454   000011                     TransmitirDatos@Ent1:
   455                           	callstack 0
   456                           
   457                           ; 2 bytes @ 0x10
   458   000011                     	ds	2
   459   000013                     TransmitirDatos@Ent2:
   460                           	callstack 0
   461                           
   462                           ; 2 bytes @ 0x12
   463   000013                     	ds	2
   464   000015                     ??_TransmitirDatos:
   465                           
   466                           ; 1 bytes @ 0x14
   467   000015                     	ds	2
   468   000017                     TransmitirDatos@n:
   469                           	callstack 0
   470                           
   471                           ; 2 bytes @ 0x16
   472   000017                     	ds	2
   473   000019                     TransmitirDatos@Simb:
   474                           	callstack 0
   475                           
   476                           ; 2 bytes @ 0x18
   477   000019                     	ds	2
   478   00001B                     TransmitirDatos@TempC:
   479                           	callstack 0
   480                           
   481                           ; 2 bytes @ 0x1A
   482   00001B                     	ds	2
   483   00001D                     ??_main:
   484                           
   485                           ; 1 bytes @ 0x1C
   486   00001D                     	ds	2
   487                           
   488 ;;
   489 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   490 ;;
   491 ;; *************** function _main *****************
   492 ;; Defined at:
   493 ;;		line 57 in file "Proyecto.c"
   494 ;; Parameters:    Size  Location     Type
   495 ;;		None
   496 ;; Auto vars:     Size  Location     Type
   497 ;;		None
   498 ;; Return value:  Size  Location     Type
   499 ;;                  1    wreg      void 
   500 ;; Registers used:
   501 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   502 ;; Tracked objects:
   503 ;;		On entry : 0/0
   504 ;;		On exit  : 0/0
   505 ;;		Unchanged: 0/0
   506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   507 ;;      Params:         0       0       0       0       0       0       0       0       0
   508 ;;      Locals:         0       0       0       0       0       0       0       0       0
   509 ;;      Temps:          2       0       0       0       0       0       0       0       0
   510 ;;      Totals:         2       0       0       0       0       0       0       0       0
   511 ;;Total ram usage:        2 bytes
   512 ;; Hardware stack levels required when called: 9
   513 ;; This function calls:
   514 ;;		_BorraLCD
   515 ;;		_ConvertirUnidades
   516 ;;		_DireccionaLCD
   517 ;;		_EscribeLCD_c
   518 ;;		_InicializaLCD
   519 ;;		_LeerHT11
   520 ;;		_MensajeLCD_Word
   521 ;;		_Movimiento
   522 ;;		_NuevoCaracter
   523 ;;		_TransmitirDatos
   524 ;;		_Velocidad
   525 ;; This function is called by:
   526 ;;		Startup code after reset
   527 ;; This function uses a non-reentrant model
   528 ;;
   529                           
   530                           	psect	text0
   531   000AC4                     __ptext0:
   532                           	callstack 0
   533   000AC4                     _main:
   534                           	callstack 22
   535                           
   536                           ;Proyecto.c: 59: TRISC = 0;
   537                           
   538                           ;incstack = 0
   539   000AC4  0E00               	movlw	0
   540   000AC6  6E94               	movwf	148,c	;volatile
   541                           
   542                           ;Proyecto.c: 60: OSCCON = 0b11110110;
   543   000AC8  0EF6               	movlw	246
   544   000ACA  6ED3               	movwf	211,c	;volatile
   545                           
   546                           ;Proyecto.c: 62: TRISD = 0;
   547   000ACC  0E00               	movlw	0
   548   000ACE  6E95               	movwf	149,c	;volatile
   549                           
   550                           ;Proyecto.c: 63: TRISE0 = 1;
   551   000AD0  8096               	bsf	3990,0,c	;volatile
   552                           
   553                           ;Proyecto.c: 64: TRISE2 = 0;
   554   000AD2  9496               	bcf	3990,2,c	;volatile
   555                           
   556                           ;Proyecto.c: 65: TRISE1 = 0;
   557   000AD4  9296               	bcf	3990,1,c	;volatile
   558                           
   559                           ;Proyecto.c: 66: InicializaLCD();
   560   000AD6  ECF9  F007         	call	_InicializaLCD	;wreg free
   561                           
   562                           ;Proyecto.c: 67: BorraLCD();
   563   000ADA  ECA4  F00A         	call	_BorraLCD	;wreg free
   564                           
   565                           ;Proyecto.c: 70: TRISA = 0b00000010;
   566   000ADE  0E02               	movlw	2
   567   000AE0  6E92               	movwf	146,c	;volatile
   568                           
   569                           ;Proyecto.c: 71: ADCON0 = 0b00000101;
   570   000AE2  0E05               	movlw	5
   571   000AE4  6EC2               	movwf	194,c	;volatile
   572                           
   573                           ;Proyecto.c: 72: ADCON1 = 0b00001100;
   574   000AE6  0E0C               	movlw	12
   575   000AE8  6EC1               	movwf	193,c	;volatile
   576                           
   577                           ;Proyecto.c: 73: ADCON2 = 0b10001000;
   578   000AEA  0E88               	movlw	136
   579   000AEC  6EC0               	movwf	192,c	;volatile
   580                           
   581                           ;Proyecto.c: 76: TRISB=0b11110000;
   582   000AEE  0EF0               	movlw	240
   583   000AF0  6E93               	movwf	147,c	;volatile
   584                           
   585                           ;Proyecto.c: 77: RBPU=0;
   586   000AF2  9EF1               	bcf	4081,7,c	;volatile
   587                           
   588                           ;Proyecto.c: 78: RBIF=0;
   589   000AF4  90F2               	bcf	4082,0,c	;volatile
   590                           
   591                           ;Proyecto.c: 79: RBIE=1;
   592   000AF6  86F2               	bsf	4082,3,c	;volatile
   593                           
   594                           ;Proyecto.c: 82: T0CON=0b00000011;
   595   000AF8  0E03               	movlw	3
   596   000AFA  6ED5               	movwf	213,c	;volatile
   597                           
   598                           ;Proyecto.c: 83: TMR0IF=0;
   599   000AFC  94F2               	bcf	4082,2,c	;volatile
   600                           
   601                           ;Proyecto.c: 84: TMR0=64286;
   602   000AFE  0EFB               	movlw	251
   603   000B00  6ED7               	movwf	215,c	;volatile
   604   000B02  0E1E               	movlw	30
   605   000B04  6ED6               	movwf	214,c	;volatile
   606                           
   607                           ;Proyecto.c: 85: TMR0IE=1;
   608   000B06  8AF2               	bsf	4082,5,c	;volatile
   609                           
   610                           ;Proyecto.c: 86: TMR0ON=1;
   611   000B08  8ED5               	bsf	4053,7,c	;volatile
   612                           
   613                           ;Proyecto.c: 89: TRISC2 = 0;
   614   000B0A  9494               	bcf	3988,2,c	;volatile
   615                           
   616                           ;Proyecto.c: 90: PR2 = 125;
   617   000B0C  0E7D               	movlw	125
   618   000B0E  6ECB               	movwf	203,c	;volatile
   619                           
   620                           ;Proyecto.c: 91: CCPR1L = 0;
   621   000B10  0E00               	movlw	0
   622   000B12  6EBE               	movwf	190,c	;volatile
   623                           
   624                           ;Proyecto.c: 92: T2CON = 0b00000010;
   625   000B14  0E02               	movlw	2
   626   000B16  6ECA               	movwf	202,c	;volatile
   627                           
   628                           ;Proyecto.c: 93: CCP1CON = 0b00001100;
   629   000B18  0E0C               	movlw	12
   630   000B1A  6EBD               	movwf	189,c	;volatile
   631                           
   632                           ;Proyecto.c: 94: TMR2 = 0;
   633   000B1C  0E00               	movlw	0
   634   000B1E  6ECC               	movwf	204,c	;volatile
   635                           
   636                           ;Proyecto.c: 95: TMR2ON = 1;
   637   000B20  84CA               	bsf	4042,2,c	;volatile
   638                           
   639                           ;Proyecto.c: 98: TRISC6 = 1;
   640   000B22  8C94               	bsf	3988,6,c	;volatile
   641                           
   642                           ;Proyecto.c: 99: TRISC7 = 1;
   643   000B24  8E94               	bsf	3988,7,c	;volatile
   644                           
   645                           ;Proyecto.c: 100: TXSTA = 0b00100000;
   646   000B26  0E20               	movlw	32
   647   000B28  6EAC               	movwf	172,c	;volatile
   648                           
   649                           ;Proyecto.c: 101: RCSTA = 0b10010000;
   650   000B2A  0E90               	movlw	144
   651   000B2C  6EAB               	movwf	171,c	;volatile
   652                           
   653                           ;Proyecto.c: 102: SPBRG = 12;
   654   000B2E  0E0C               	movlw	12
   655   000B30  6EAF               	movwf	175,c	;volatile
   656                           
   657                           ;Proyecto.c: 105: TRISC0= 1;
   658   000B32  8094               	bsf	3988,0,c	;volatile
   659                           
   660                           ;Proyecto.c: 106: UTRDIS = 1;
   661   000B34  866F               	bsf	3951,3,c	;volatile
   662                           
   663                           ;Proyecto.c: 107: USBEN = 0;
   664   000B36  966D               	bcf	3949,3,c	;volatile
   665                           
   666                           ;Proyecto.c: 109: TRISC1=0;
   667   000B38  9294               	bcf	3988,1,c	;volatile
   668                           
   669                           ;Proyecto.c: 110: TMR1=60536;
   670   000B3A  0EEC               	movlw	236
   671   000B3C  6ECF               	movwf	207,c	;volatile
   672   000B3E  0E78               	movlw	120
   673   000B40  6ECE               	movwf	206,c	;volatile
   674                           
   675                           ;Proyecto.c: 111: T1CON=0b10110000;
   676   000B42  0EB0               	movlw	176
   677   000B44  6ECD               	movwf	205,c	;volatile
   678                           
   679                           ;Proyecto.c: 112: CCPR2=60536+125;
   680   000B46  0EEC               	movlw	236
   681   000B48  6EBC               	movwf	188,c	;volatile
   682   000B4A  0EF5               	movlw	245
   683   000B4C  6EBB               	movwf	187,c	;volatile
   684                           
   685                           ;Proyecto.c: 113: CCP2CON=0b00001001;
   686   000B4E  0E09               	movlw	9
   687   000B50  6EBA               	movwf	186,c	;volatile
   688                           
   689                           ;Proyecto.c: 114: TMR1IF=0;
   690   000B52  909E               	bcf	3998,0,c	;volatile
   691                           
   692                           ;Proyecto.c: 115: TMR1IE=1;
   693   000B54  809D               	bsf	3997,0,c	;volatile
   694                           
   695                           ;Proyecto.c: 116: PEIE=1;
   696   000B56  8CF2               	bsf	4082,6,c	;volatile
   697                           
   698                           ;Proyecto.c: 117: TMR1ON=1;
   699   000B58  80CD               	bsf	4045,0,c	;volatile
   700                           
   701                           ;Proyecto.c: 118: GIE=1;
   702   000B5A  8EF2               	bsf	4082,7,c	;volatile
   703                           
   704                           ;Proyecto.c: 120: _delay((unsigned long)((1000)*(8000000/4000.0)));
   705   000B5C  0E0B               	movlw	11
   706   000B5E  6E1E               	movwf	(??_main+1)^0,c
   707   000B60  0E26               	movlw	38
   708   000B62  6E1D               	movwf	??_main^0,c
   709   000B64  0E5E               	movlw	94
   710   000B66                     u1737:
   711   000B66  2EE8               	decfsz	wreg,f,c
   712   000B68  D7FE               	bra	u1737
   713   000B6A  2E1D               	decfsz	??_main^0,f,c
   714   000B6C  D7FC               	bra	u1737
   715   000B6E  2E1E               	decfsz	(??_main+1)^0,f,c
   716   000B70  D7FA               	bra	u1737
   717                           
   718                           ;Proyecto.c: 121: BorraLCD();
   719   000B72  ECA4  F00A         	call	_BorraLCD	;wreg free
   720                           
   721                           ;Proyecto.c: 122: NuevoCaracter(0,cara);
   722   000B76  0E23               	movlw	low _cara
   723   000B78  6E0D               	movwf	NuevoCaracter@c^0,c
   724   000B7A  0E00               	movlw	0
   725   000B7C  ECA6  F009         	call	_NuevoCaracter
   726                           
   727                           ;Proyecto.c: 123: DireccionaLCD(0x82);
   728   000B80  0E82               	movlw	130
   729   000B82  EC83  F00A         	call	_DireccionaLCD
   730                           
   731                           ;Proyecto.c: 124: EscribeLCD_c(0);
   732   000B86  0E00               	movlw	0
   733   000B88  EC8E  F00A         	call	_EscribeLCD_c
   734                           
   735                           ;Proyecto.c: 125: MensajeLCD_Word("Bienvenido");
   736   000B8C  0E12               	movlw	low STR_1
   737   000B8E  6E0D               	movwf	MensajeLCD_Word@a^0,c
   738   000B90  EC18  F009         	call	_MensajeLCD_Word	;wreg free
   739                           
   740                           ;Proyecto.c: 126: EscribeLCD_c(0);
   741   000B94  0E00               	movlw	0
   742   000B96  EC8E  F00A         	call	_EscribeLCD_c
   743                           
   744                           ;Proyecto.c: 127: DireccionaLCD(0xC7);
   745   000B9A  0EC7               	movlw	199
   746   000B9C  EC83  F00A         	call	_DireccionaLCD
   747                           
   748                           ;Proyecto.c: 128: _delay((unsigned long)((1500)*(8000000/4000.0)));
   749   000BA0  0E10               	movlw	16
   750   000BA2  6E1E               	movwf	(??_main+1)^0,c
   751   000BA4  0E39               	movlw	57
   752   000BA6  6E1D               	movwf	??_main^0,c
   753   000BA8  0E0E               	movlw	14
   754   000BAA                     u1747:
   755   000BAA  2EE8               	decfsz	wreg,f,c
   756   000BAC  D7FE               	bra	u1747
   757   000BAE  2E1D               	decfsz	??_main^0,f,c
   758   000BB0  D7FC               	bra	u1747
   759   000BB2  2E1E               	decfsz	(??_main+1)^0,f,c
   760   000BB4  D7FA               	bra	u1747
   761                           
   762                           ;Proyecto.c: 129: DireccionaLCD(0x80);
   763   000BB6  0E80               	movlw	128
   764   000BB8  EC83  F00A         	call	_DireccionaLCD
   765                           
   766                           ;Proyecto.c: 130: MensajeLCD_Word("                ");
   767   000BBC  0E01               	movlw	low STR_2
   768   000BBE  6E0D               	movwf	MensajeLCD_Word@a^0,c
   769   000BC0  EC18  F009         	call	_MensajeLCD_Word	;wreg free
   770                           
   771                           ;Proyecto.c: 131: DireccionaLCD(0x80);
   772   000BC4  0E80               	movlw	128
   773   000BC6  EC83  F00A         	call	_DireccionaLCD
   774                           
   775                           ;Proyecto.c: 132: MensajeLCD_Word("Password:");
   776   000BCA  0E1D               	movlw	low STR_3
   777   000BCC  6E0D               	movwf	MensajeLCD_Word@a^0,c
   778   000BCE  EC18  F009         	call	_MensajeLCD_Word	;wreg free
   779                           
   780                           ;Proyecto.c: 133: while(ing!=Cont){
   781   000BD2  D007               	goto	l2683
   782   000BD4                     l2679:
   783                           
   784                           ;Proyecto.c: 134: DireccionaLCD(0xC1);
   785   000BD4  0EC1               	movlw	193
   786   000BD6  EC83  F00A         	call	_DireccionaLCD
   787                           
   788                           ;Proyecto.c: 135: MensajeLCD_Word("                ");
   789   000BDA  0E01               	movlw	low STR_2
   790   000BDC  6E0D               	movwf	MensajeLCD_Word@a^0,c
   791   000BDE  EC18  F009         	call	_MensajeLCD_Word	;wreg free
   792   000BE2                     l2683:
   793   000BE2  0E06               	movlw	6
   794   000BE4  182D               	xorwf	_ing^0,w,c
   795   000BE6  A4D8               	btfss	status,2,c
   796   000BE8  D7F5               	goto	l2679
   797                           
   798                           ;Proyecto.c: 136: };Proyecto.c: 137: DireccionaLCD(0x80);
   799   000BEA  0E80               	movlw	128
   800   000BEC  EC83  F00A         	call	_DireccionaLCD
   801                           
   802                           ;Proyecto.c: 138: MensajeLCD_Word("                ");
   803   000BF0  0E01               	movlw	low STR_2
   804   000BF2  6E0D               	movwf	MensajeLCD_Word@a^0,c
   805   000BF4  EC18  F009         	call	_MensajeLCD_Word	;wreg free
   806                           
   807                           ;Proyecto.c: 139: DireccionaLCD(0xC1);
   808   000BF8  0EC1               	movlw	193
   809   000BFA  EC83  F00A         	call	_DireccionaLCD
   810                           
   811                           ;Proyecto.c: 140: MensajeLCD_Word("                ");
   812   000BFE  0E01               	movlw	low STR_2
   813   000C00  6E0D               	movwf	MensajeLCD_Word@a^0,c
   814   000C02  EC18  F009         	call	_MensajeLCD_Word	;wreg free
   815                           
   816                           ;Proyecto.c: 141: _delay((unsigned long)((500)*(8000000/4000.0)));
   817   000C06  0E06               	movlw	6
   818   000C08  6E1E               	movwf	(??_main+1)^0,c
   819   000C0A  0E13               	movlw	19
   820   000C0C  6E1D               	movwf	??_main^0,c
   821   000C0E  0EAE               	movlw	174
   822   000C10                     u1757:
   823   000C10  2EE8               	decfsz	wreg,f,c
   824   000C12  D7FE               	bra	u1757
   825   000C14  2E1D               	decfsz	??_main^0,f,c
   826   000C16  D7FC               	bra	u1757
   827   000C18  2E1E               	decfsz	(??_main+1)^0,f,c
   828   000C1A  D7FA               	bra	u1757
   829   000C1C                     l2693:
   830                           
   831                           ;Proyecto.c: 143: _delay((unsigned long)((500)*(8000000/4000.0)));
   832   000C1C  0E06               	movlw	6
   833   000C1E  6E1E               	movwf	(??_main+1)^0,c
   834   000C20  0E13               	movlw	19
   835   000C22  6E1D               	movwf	??_main^0,c
   836   000C24  0EAE               	movlw	174
   837   000C26                     u1767:
   838   000C26  2EE8               	decfsz	wreg,f,c
   839   000C28  D7FE               	bra	u1767
   840   000C2A  2E1D               	decfsz	??_main^0,f,c
   841   000C2C  D7FC               	bra	u1767
   842   000C2E  2E1E               	decfsz	(??_main+1)^0,f,c
   843   000C30  D7FA               	bra	u1767
   844                           
   845                           ;Proyecto.c: 144: LeerHT11();
   846   000C32  ECFE  F009         	call	_LeerHT11	;wreg free
   847                           
   848                           ;Proyecto.c: 145: TransmitirDatos(0, 0);
   849   000C36  0E00               	movlw	0
   850   000C38  6E12               	movwf	(TransmitirDatos@Ent1+1)^0,c
   851   000C3A  0E00               	movlw	0
   852   000C3C  6E11               	movwf	TransmitirDatos@Ent1^0,c
   853   000C3E  0E00               	movlw	0
   854   000C40  6E14               	movwf	(TransmitirDatos@Ent2+1)^0,c
   855   000C42  0E00               	movlw	0
   856   000C44  6E13               	movwf	TransmitirDatos@Ent2^0,c
   857   000C46  EC1A  F004         	call	_TransmitirDatos	;wreg free
   858                           
   859                           ;Proyecto.c: 146: Velocidad(Temp);
   860   000C4A  C030  F008         	movff	_Temp,Velocidad@val
   861   000C4E  6A09               	clrf	(Velocidad@val+1)^0,c
   862   000C50  ECC0  F006         	call	_Velocidad	;wreg free
   863                           
   864                           ;Proyecto.c: 147: ConvertirUnidades(0);
   865   000C54  0E00               	movlw	0
   866   000C56  ECAE  F00A         	call	_ConvertirUnidades
   867                           
   868                           ;Proyecto.c: 148: Movimiento();
   869   000C5A  EC2C  F007         	call	_Movimiento	;wreg free
   870   000C5E  D7DE               	goto	l2693
   871   000C60                     __end_of_main:
   872                           	callstack 0
   873                           
   874 ;; *************** function _Velocidad *****************
   875 ;; Defined at:
   876 ;;		line 164 in file "Proyecto.c"
   877 ;; Parameters:    Size  Location     Type
   878 ;;  val             2    7[COMRAM] unsigned int 
   879 ;; Auto vars:     Size  Location     Type
   880 ;;		None
   881 ;; Return value:  Size  Location     Type
   882 ;;                  1    wreg      void 
   883 ;; Registers used:
   884 ;;		wreg, status,2, status,0
   885 ;; Tracked objects:
   886 ;;		On entry : 0/0
   887 ;;		On exit  : 0/0
   888 ;;		Unchanged: 0/0
   889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   890 ;;      Params:         2       0       0       0       0       0       0       0       0
   891 ;;      Locals:         0       0       0       0       0       0       0       0       0
   892 ;;      Temps:          0       0       0       0       0       0       0       0       0
   893 ;;      Totals:         2       0       0       0       0       0       0       0       0
   894 ;;Total ram usage:        2 bytes
   895 ;; Hardware stack levels used: 1
   896 ;; Hardware stack levels required when called: 4
   897 ;; This function calls:
   898 ;;		Nothing
   899 ;; This function is called by:
   900 ;;		_main
   901 ;; This function uses a non-reentrant model
   902 ;;
   903                           
   904                           	psect	text1
   905   000D80                     __ptext1:
   906                           	callstack 0
   907   000D80                     _Velocidad:
   908                           	callstack 26
   909                           
   910                           ;Proyecto.c: 165: if (val < 22) {
   911                           
   912                           ;incstack = 0
   913   000D80  5009               	movf	(Velocidad@val+1)^0,w,c
   914   000D82  E107               	bnz	l2333
   915   000D84  0E16               	movlw	22
   916   000D86  5C08               	subwf	Velocidad@val^0,w,c
   917   000D88  B0D8               	btfsc	status,0,c
   918   000D8A  D003               	goto	l2333
   919                           
   920                           ;Proyecto.c: 166: CCPR1L = 0;
   921   000D8C  0E00               	movlw	0
   922   000D8E  6EBE               	movwf	190,c	;volatile
   923                           
   924                           ;Proyecto.c: 167: } else if (val >= 22 && val < 25) {
   925   000D90  0012               	return	
   926   000D92                     l2333:
   927   000D92  5009               	movf	(Velocidad@val+1)^0,w,c
   928   000D94  E104               	bnz	u1230
   929   000D96  0E16               	movlw	22
   930   000D98  5C08               	subwf	Velocidad@val^0,w,c
   931   000D9A  A0D8               	btfss	status,0,c
   932   000D9C  D009               	goto	l2339
   933   000D9E                     u1230:
   934   000D9E  5009               	movf	(Velocidad@val+1)^0,w,c
   935   000DA0  E107               	bnz	l2339
   936   000DA2  0E19               	movlw	25
   937   000DA4  5C08               	subwf	Velocidad@val^0,w,c
   938   000DA6  B0D8               	btfsc	status,0,c
   939   000DA8  D003               	goto	l2339
   940                           
   941                           ;Proyecto.c: 168: CCPR1L = 19;
   942   000DAA  0E13               	movlw	19
   943   000DAC  6EBE               	movwf	190,c	;volatile
   944                           
   945                           ;Proyecto.c: 169: } else if (val >= 25 && val < 28) {
   946   000DAE  0012               	return	
   947   000DB0                     l2339:
   948   000DB0  5009               	movf	(Velocidad@val+1)^0,w,c
   949   000DB2  E104               	bnz	u1250
   950   000DB4  0E19               	movlw	25
   951   000DB6  5C08               	subwf	Velocidad@val^0,w,c
   952   000DB8  A0D8               	btfss	status,0,c
   953   000DBA  D009               	goto	l2345
   954   000DBC                     u1250:
   955   000DBC  5009               	movf	(Velocidad@val+1)^0,w,c
   956   000DBE  E107               	bnz	l2345
   957   000DC0  0E1C               	movlw	28
   958   000DC2  5C08               	subwf	Velocidad@val^0,w,c
   959   000DC4  B0D8               	btfsc	status,0,c
   960   000DC6  D003               	goto	l2345
   961                           
   962                           ;Proyecto.c: 170: CCPR1L = 38;
   963   000DC8  0E26               	movlw	38
   964   000DCA  6EBE               	movwf	190,c	;volatile
   965                           
   966                           ;Proyecto.c: 171: } else if (val >= 28 && val < 31) {
   967   000DCC  0012               	return	
   968   000DCE                     l2345:
   969   000DCE  5009               	movf	(Velocidad@val+1)^0,w,c
   970   000DD0  E104               	bnz	u1270
   971   000DD2  0E1C               	movlw	28
   972   000DD4  5C08               	subwf	Velocidad@val^0,w,c
   973   000DD6  A0D8               	btfss	status,0,c
   974   000DD8  D009               	goto	l2351
   975   000DDA                     u1270:
   976   000DDA  5009               	movf	(Velocidad@val+1)^0,w,c
   977   000DDC  E107               	bnz	l2351
   978   000DDE  0E1F               	movlw	31
   979   000DE0  5C08               	subwf	Velocidad@val^0,w,c
   980   000DE2  B0D8               	btfsc	status,0,c
   981   000DE4  D003               	goto	l2351
   982                           
   983                           ;Proyecto.c: 172: CCPR1L = 57;
   984   000DE6  0E39               	movlw	57
   985   000DE8  6EBE               	movwf	190,c	;volatile
   986                           
   987                           ;Proyecto.c: 173: } else if (val >= 31 && val < 34) {
   988   000DEA  0012               	return	
   989   000DEC                     l2351:
   990   000DEC  5009               	movf	(Velocidad@val+1)^0,w,c
   991   000DEE  E104               	bnz	u1290
   992   000DF0  0E1F               	movlw	31
   993   000DF2  5C08               	subwf	Velocidad@val^0,w,c
   994   000DF4  A0D8               	btfss	status,0,c
   995   000DF6  D009               	goto	l2357
   996   000DF8                     u1290:
   997   000DF8  5009               	movf	(Velocidad@val+1)^0,w,c
   998   000DFA  E107               	bnz	l2357
   999   000DFC  0E22               	movlw	34
  1000   000DFE  5C08               	subwf	Velocidad@val^0,w,c
  1001   000E00  B0D8               	btfsc	status,0,c
  1002   000E02  D003               	goto	l2357
  1003                           
  1004                           ;Proyecto.c: 174: CCPR1L = 76;
  1005   000E04  0E4C               	movlw	76
  1006   000E06  6EBE               	movwf	190,c	;volatile
  1007                           
  1008                           ;Proyecto.c: 175: } else if (val >= 34 && val < 37) {
  1009   000E08  0012               	return	
  1010   000E0A                     l2357:
  1011   000E0A  5009               	movf	(Velocidad@val+1)^0,w,c
  1012   000E0C  E104               	bnz	u1310
  1013   000E0E  0E22               	movlw	34
  1014   000E10  5C08               	subwf	Velocidad@val^0,w,c
  1015   000E12  A0D8               	btfss	status,0,c
  1016   000E14  D009               	goto	l2363
  1017   000E16                     u1310:
  1018   000E16  5009               	movf	(Velocidad@val+1)^0,w,c
  1019   000E18  E107               	bnz	l2363
  1020   000E1A  0E25               	movlw	37
  1021   000E1C  5C08               	subwf	Velocidad@val^0,w,c
  1022   000E1E  B0D8               	btfsc	status,0,c
  1023   000E20  D003               	goto	l2363
  1024                           
  1025                           ;Proyecto.c: 176: CCPR1L = 95;
  1026   000E22  0E5F               	movlw	95
  1027   000E24  6EBE               	movwf	190,c	;volatile
  1028                           
  1029                           ;Proyecto.c: 177: } else if (val >= 37 && val < 40) {
  1030   000E26  0012               	return	
  1031   000E28                     l2363:
  1032   000E28  5009               	movf	(Velocidad@val+1)^0,w,c
  1033   000E2A  E104               	bnz	u1330
  1034   000E2C  0E25               	movlw	37
  1035   000E2E  5C08               	subwf	Velocidad@val^0,w,c
  1036   000E30  A0D8               	btfss	status,0,c
  1037   000E32  D009               	goto	l2369
  1038   000E34                     u1330:
  1039   000E34  5009               	movf	(Velocidad@val+1)^0,w,c
  1040   000E36  E107               	bnz	l2369
  1041   000E38  0E28               	movlw	40
  1042   000E3A  5C08               	subwf	Velocidad@val^0,w,c
  1043   000E3C  B0D8               	btfsc	status,0,c
  1044   000E3E  D003               	goto	l2369
  1045                           
  1046                           ;Proyecto.c: 178: CCPR1L = 113;
  1047   000E40  0E71               	movlw	113
  1048   000E42  6EBE               	movwf	190,c	;volatile
  1049                           
  1050                           ;Proyecto.c: 179: } else if (val >= 40) {
  1051   000E44  0012               	return	
  1052   000E46                     l2369:
  1053   000E46  5009               	movf	(Velocidad@val+1)^0,w,c
  1054   000E48  E104               	bnz	u1350
  1055   000E4A  0E28               	movlw	40
  1056   000E4C  5C08               	subwf	Velocidad@val^0,w,c
  1057   000E4E  A0D8               	btfss	status,0,c
  1058   000E50  0012               	return	
  1059   000E52                     u1350:
  1060                           
  1061                           ;Proyecto.c: 180: CCPR1L = 126;
  1062   000E52  0E7E               	movlw	126
  1063   000E54  6EBE               	movwf	190,c	;volatile
  1064   000E56  0012               	return	
  1065   000E58                     __end_of_Velocidad:
  1066                           	callstack 0
  1067                           
  1068 ;; *************** function _TransmitirDatos *****************
  1069 ;; Defined at:
  1070 ;;		line 294 in file "Proyecto.c"
  1071 ;; Parameters:    Size  Location     Type
  1072 ;;  Ent1            2   16[COMRAM] unsigned int 
  1073 ;;  Ent2            2   18[COMRAM] unsigned int 
  1074 ;; Auto vars:     Size  Location     Type
  1075 ;;  TempC           2   26[COMRAM] unsigned int 
  1076 ;;  Simb            2   24[COMRAM] unsigned int 
  1077 ;;  n               2   22[COMRAM] unsigned int 
  1078 ;;  HumedadC        2    0        unsigned int 
  1079 ;; Return value:  Size  Location     Type
  1080 ;;                  1    wreg      void 
  1081 ;; Registers used:
  1082 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1083 ;; Tracked objects:
  1084 ;;		On entry : 0/0
  1085 ;;		On exit  : 0/0
  1086 ;;		Unchanged: 0/0
  1087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1088 ;;      Params:         4       0       0       0       0       0       0       0       0
  1089 ;;      Locals:         6       0       0       0       0       0       0       0       0
  1090 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1091 ;;      Totals:        12       0       0       0       0       0       0       0       0
  1092 ;;Total ram usage:       12 bytes
  1093 ;; Hardware stack levels used: 1
  1094 ;; Hardware stack levels required when called: 8
  1095 ;; This function calls:
  1096 ;;		_BorraLCD
  1097 ;;		_DireccionaLCD
  1098 ;;		_EscribeLCD_c
  1099 ;;		_MensajeLCD_Word
  1100 ;;		_Transmitir
  1101 ;;		___awdiv
  1102 ;;		___lbdiv
  1103 ;;		___lbmod
  1104 ;;		___lwdiv
  1105 ;;		___lwmod
  1106 ;;		___wmul
  1107 ;; This function is called by:
  1108 ;;		_main
  1109 ;; This function uses a non-reentrant model
  1110 ;;
  1111                           
  1112                           	psect	text2
  1113   000834                     __ptext2:
  1114                           	callstack 0
  1115   000834                     _TransmitirDatos:
  1116                           	callstack 22
  1117                           
  1118                           ;Proyecto.c: 295: unsigned int n = Ent1 * 10 + Ent2, TempC = Temp, HumedadC = Humedad;
  1119                           
  1120                           ;incstack = 0
  1121   000834  C011  F008         	movff	TransmitirDatos@Ent1,___wmul@multiplier
  1122   000838  C012  F009         	movff	TransmitirDatos@Ent1+1,___wmul@multiplier+1
  1123   00083C  0E00               	movlw	0
  1124   00083E  6E0B               	movwf	(___wmul@multiplicand+1)^0,c
  1125   000840  0E0A               	movlw	10
  1126   000842  6E0A               	movwf	___wmul@multiplicand^0,c
  1127   000844  EC5F  F00A         	call	___wmul	;wreg free
  1128   000848  5013               	movf	TransmitirDatos@Ent2^0,w,c
  1129   00084A  2408               	addwf	?___wmul^0,w,c
  1130   00084C  6E17               	movwf	TransmitirDatos@n^0,c
  1131   00084E  5014               	movf	(TransmitirDatos@Ent2+1)^0,w,c
  1132   000850  2009               	addwfc	(?___wmul+1)^0,w,c
  1133   000852  6E18               	movwf	(TransmitirDatos@n+1)^0,c
  1134   000854  C030  F01B         	movff	_Temp,TransmitirDatos@TempC
  1135   000858  6A1C               	clrf	(TransmitirDatos@TempC+1)^0,c
  1136                           
  1137                           ;Proyecto.c: 296: unsigned int Simb = 67;
  1138   00085A  0E00               	movlw	0
  1139   00085C  6E1A               	movwf	(TransmitirDatos@Simb+1)^0,c
  1140   00085E  0E43               	movlw	67
  1141   000860  6E19               	movwf	TransmitirDatos@Simb^0,c
  1142                           
  1143                           ;Proyecto.c: 297: BorraLCD();
  1144   000862  ECA4  F00A         	call	_BorraLCD	;wreg free
  1145                           
  1146                           ;Proyecto.c: 298: switch (n) {
  1147   000866  D03E               	goto	l2269
  1148   000868                     l329:
  1149                           
  1150                           ;Proyecto.c: 300: TempC = Temp;
  1151   000868  C030  F01B         	movff	_Temp,TransmitirDatos@TempC
  1152   00086C  6A1C               	clrf	(TransmitirDatos@TempC+1)^0,c
  1153                           
  1154                           ;Proyecto.c: 301: Simb = 67;
  1155   00086E  0E00               	movlw	0
  1156   000870  6E1A               	movwf	(TransmitirDatos@Simb+1)^0,c
  1157   000872  0E43               	movlw	67
  1158   000874  D035               	goto	L3
  1159   000876                     l2255:
  1160                           
  1161                           ;Proyecto.c: 304: TempC = Temp + 273;
  1162   000876  0E11               	movlw	17
  1163   000878  2430               	addwf	_Temp^0,w,c
  1164   00087A  6E1B               	movwf	TransmitirDatos@TempC^0,c
  1165   00087C  6A1C               	clrf	(TransmitirDatos@TempC+1)^0,c
  1166   00087E  0E01               	movlw	1
  1167   000880  221C               	addwfc	(TransmitirDatos@TempC+1)^0,f,c
  1168                           
  1169                           ;Proyecto.c: 305: Simb = 75;
  1170   000882  0E00               	movlw	0
  1171   000884  6E1A               	movwf	(TransmitirDatos@Simb+1)^0,c
  1172   000886  0E4B               	movlw	75
  1173   000888  D02B               	goto	L3
  1174   00088A                     l2259:
  1175                           
  1176                           ;Proyecto.c: 308: TempC = Temp * 9 / 5 + 492;
  1177   00088A  5030               	movf	_Temp^0,w,c
  1178   00088C  0D09               	mullw	9
  1179   00088E  CFF3 F008          	movff	prodl,___awdiv@dividend
  1180   000892  CFF4 F009          	movff	prodh,___awdiv@dividend+1
  1181   000896  0E00               	movlw	0
  1182   000898  6E0B               	movwf	(___awdiv@divisor+1)^0,c
  1183   00089A  0E05               	movlw	5
  1184   00089C  6E0A               	movwf	___awdiv@divisor^0,c
  1185   00089E  EC47  F008         	call	___awdiv	;wreg free
  1186   0008A2  0EEC               	movlw	236
  1187   0008A4  2408               	addwf	?___awdiv^0,w,c
  1188   0008A6  6E1B               	movwf	TransmitirDatos@TempC^0,c
  1189   0008A8  0E01               	movlw	1
  1190   0008AA  2009               	addwfc	(?___awdiv+1)^0,w,c
  1191   0008AC  6E1C               	movwf	(TransmitirDatos@TempC+1)^0,c
  1192                           
  1193                           ;Proyecto.c: 309: Simb = 82;
  1194   0008AE  0E00               	movlw	0
  1195   0008B0  6E1A               	movwf	(TransmitirDatos@Simb+1)^0,c
  1196   0008B2  0E52               	movlw	82
  1197   0008B4  D015               	goto	L3
  1198   0008B6                     l2263:
  1199                           
  1200                           ;Proyecto.c: 312: TempC = Temp * 9 / 5 + 32;
  1201   0008B6  5030               	movf	_Temp^0,w,c
  1202   0008B8  0D09               	mullw	9
  1203   0008BA  CFF3 F008          	movff	prodl,___awdiv@dividend
  1204   0008BE  CFF4 F009          	movff	prodh,___awdiv@dividend+1
  1205   0008C2  0E00               	movlw	0
  1206   0008C4  6E0B               	movwf	(___awdiv@divisor+1)^0,c
  1207   0008C6  0E05               	movlw	5
  1208   0008C8  6E0A               	movwf	___awdiv@divisor^0,c
  1209   0008CA  EC47  F008         	call	___awdiv	;wreg free
  1210   0008CE  0E20               	movlw	32
  1211   0008D0  2408               	addwf	?___awdiv^0,w,c
  1212   0008D2  6E1B               	movwf	TransmitirDatos@TempC^0,c
  1213   0008D4  0E00               	movlw	0
  1214   0008D6  2009               	addwfc	(?___awdiv+1)^0,w,c
  1215   0008D8  6E1C               	movwf	(TransmitirDatos@TempC+1)^0,c
  1216                           
  1217                           ;Proyecto.c: 313: Simb = 70;
  1218   0008DA  0E00               	movlw	0
  1219   0008DC  6E1A               	movwf	(TransmitirDatos@Simb+1)^0,c
  1220   0008DE  0E46               	movlw	70
  1221   0008E0                     L3:
  1222   0008E0  6E19               	movwf	TransmitirDatos@Simb^0,c
  1223                           
  1224                           ;Proyecto.c: 314: break;
  1225   0008E2  D015               	goto	l2271
  1226   0008E4                     l2269:
  1227   0008E4  C017  F015         	movff	TransmitirDatos@n,??_TransmitirDatos
  1228   0008E8  C018  F016         	movff	TransmitirDatos@n+1,??_TransmitirDatos+1
  1229                           
  1230                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1231                           ; Switch size 1, requested type "simple"
  1232                           ; Number of cases is 1, Range of values is 0 to 0
  1233                           ; switch strategies available:
  1234                           ; Name         Instructions Cycles
  1235                           ; simple_byte            4     3 (average)
  1236                           ;	Chosen strategy is simple_byte
  1237   0008EC  5016               	movf	(??_TransmitirDatos+1)^0,w,c
  1238   0008EE  0A00               	xorlw	0	; case 0
  1239   0008F0  A4D8               	btfss	status,2,c
  1240   0008F2  D00D               	goto	l2271
  1241                           
  1242                           ; Switch size 1, requested type "simple"
  1243                           ; Number of cases is 4, Range of values is 0 to 11
  1244                           ; switch strategies available:
  1245                           ; Name         Instructions Cycles
  1246                           ; simple_byte           13     7 (average)
  1247                           ;	Chosen strategy is simple_byte
  1248   0008F4  5015               	movf	??_TransmitirDatos^0,w,c
  1249   0008F6  0A00               	xorlw	0	; case 0
  1250   0008F8  B4D8               	btfsc	status,2,c
  1251   0008FA  D7B6               	goto	l329
  1252   0008FC  0A01               	xorlw	1	; case 1
  1253   0008FE  B4D8               	btfsc	status,2,c
  1254   000900  D7BA               	goto	l2255
  1255   000902  0A0B               	xorlw	11	; case 10
  1256   000904  B4D8               	btfsc	status,2,c
  1257   000906  D7C1               	goto	l2259
  1258   000908  0A01               	xorlw	1	; case 11
  1259   00090A  B4D8               	btfsc	status,2,c
  1260   00090C  D7D4               	goto	l2263
  1261   00090E                     l2271:
  1262                           
  1263                           ;Proyecto.c: 316: Transmitir('T');
  1264   00090E  0E54               	movlw	84
  1265   000910  ECCC  F00A         	call	_Transmitir
  1266                           
  1267                           ;Proyecto.c: 317: Transmitir('e');
  1268   000914  0E65               	movlw	101
  1269   000916  ECCC  F00A         	call	_Transmitir
  1270                           
  1271                           ;Proyecto.c: 318: Transmitir('m');
  1272   00091A  0E6D               	movlw	109
  1273   00091C  ECCC  F00A         	call	_Transmitir
  1274                           
  1275                           ;Proyecto.c: 319: Transmitir('p');
  1276   000920  0E70               	movlw	112
  1277   000922  ECCC  F00A         	call	_Transmitir
  1278                           
  1279                           ;Proyecto.c: 320: Transmitir(':');
  1280   000926  0E3A               	movlw	58
  1281   000928  ECCC  F00A         	call	_Transmitir
  1282                           
  1283                           ;Proyecto.c: 321: Transmitir(' ');
  1284   00092C  0E20               	movlw	32
  1285   00092E  ECCC  F00A         	call	_Transmitir
  1286                           
  1287                           ;Proyecto.c: 323: MensajeLCD_Word("Temp:");
  1288   000932  0E27               	movlw	low STR_7
  1289   000934  6E0D               	movwf	MensajeLCD_Word@a^0,c
  1290   000936  EC18  F009         	call	_MensajeLCD_Word	;wreg free
  1291                           
  1292                           ;Proyecto.c: 324: if (TempC / 100 > 0) {
  1293   00093A  C01B  F008         	movff	TransmitirDatos@TempC,___lwdiv@dividend
  1294   00093E  C01C  F009         	movff	TransmitirDatos@TempC+1,___lwdiv@dividend+1
  1295   000942  0E00               	movlw	0
  1296   000944  6E0B               	movwf	(___lwdiv@divisor+1)^0,c
  1297   000946  0E64               	movlw	100
  1298   000948  6E0A               	movwf	___lwdiv@divisor^0,c
  1299   00094A  ECEF  F008         	call	___lwdiv	;wreg free
  1300   00094E  5008               	movf	?___lwdiv^0,w,c
  1301   000950  1009               	iorwf	(?___lwdiv+1)^0,w,c
  1302   000952  B4D8               	btfsc	status,2,c
  1303   000954  D02A               	goto	l334
  1304                           
  1305                           ;Proyecto.c: 325: Transmitir(TempC / 100 + 48);
  1306   000956  C01B  F008         	movff	TransmitirDatos@TempC,___lwdiv@dividend
  1307   00095A  C01C  F009         	movff	TransmitirDatos@TempC+1,___lwdiv@dividend+1
  1308   00095E  0E00               	movlw	0
  1309   000960  6E0B               	movwf	(___lwdiv@divisor+1)^0,c
  1310   000962  0E64               	movlw	100
  1311   000964  6E0A               	movwf	___lwdiv@divisor^0,c
  1312   000966  ECEF  F008         	call	___lwdiv	;wreg free
  1313   00096A  5008               	movf	?___lwdiv^0,w,c
  1314   00096C  0F30               	addlw	48
  1315   00096E  ECCC  F00A         	call	_Transmitir
  1316                           
  1317                           ;Proyecto.c: 326: EscribeLCD_c(TempC / 100 + 48);
  1318   000972  C01B  F008         	movff	TransmitirDatos@TempC,___lwdiv@dividend
  1319   000976  C01C  F009         	movff	TransmitirDatos@TempC+1,___lwdiv@dividend+1
  1320   00097A  0E00               	movlw	0
  1321   00097C  6E0B               	movwf	(___lwdiv@divisor+1)^0,c
  1322   00097E  0E64               	movlw	100
  1323   000980  6E0A               	movwf	___lwdiv@divisor^0,c
  1324   000982  ECEF  F008         	call	___lwdiv	;wreg free
  1325   000986  5008               	movf	?___lwdiv^0,w,c
  1326   000988  0F30               	addlw	48
  1327   00098A  EC8E  F00A         	call	_EscribeLCD_c
  1328                           
  1329                           ;Proyecto.c: 327: TempC = TempC % 100;
  1330   00098E  C01B  F008         	movff	TransmitirDatos@TempC,___lwmod@dividend
  1331   000992  C01C  F009         	movff	TransmitirDatos@TempC+1,___lwmod@dividend+1
  1332   000996  0E00               	movlw	0
  1333   000998  6E0B               	movwf	(___lwmod@divisor+1)^0,c
  1334   00099A  0E64               	movlw	100
  1335   00099C  6E0A               	movwf	___lwmod@divisor^0,c
  1336   00099E  EC85  F009         	call	___lwmod	;wreg free
  1337   0009A2  C008  F01B         	movff	?___lwmod,TransmitirDatos@TempC
  1338   0009A6  C009  F01C         	movff	?___lwmod+1,TransmitirDatos@TempC+1
  1339   0009AA                     l334:
  1340                           
  1341                           ;Proyecto.c: 328: };Proyecto.c: 329: Transmitir(TempC / 10 + 48);
  1342   0009AA  C01B  F008         	movff	TransmitirDatos@TempC,___lwdiv@dividend
  1343   0009AE  C01C  F009         	movff	TransmitirDatos@TempC+1,___lwdiv@dividend+1
  1344   0009B2  0E00               	movlw	0
  1345   0009B4  6E0B               	movwf	(___lwdiv@divisor+1)^0,c
  1346   0009B6  0E0A               	movlw	10
  1347   0009B8  6E0A               	movwf	___lwdiv@divisor^0,c
  1348   0009BA  ECEF  F008         	call	___lwdiv	;wreg free
  1349   0009BE  5008               	movf	?___lwdiv^0,w,c
  1350   0009C0  0F30               	addlw	48
  1351   0009C2  ECCC  F00A         	call	_Transmitir
  1352                           
  1353                           ;Proyecto.c: 330: Transmitir(TempC % 10 + 48);
  1354   0009C6  C01B  F008         	movff	TransmitirDatos@TempC,___lwmod@dividend
  1355   0009CA  C01C  F009         	movff	TransmitirDatos@TempC+1,___lwmod@dividend+1
  1356   0009CE  0E00               	movlw	0
  1357   0009D0  6E0B               	movwf	(___lwmod@divisor+1)^0,c
  1358   0009D2  0E0A               	movlw	10
  1359   0009D4  6E0A               	movwf	___lwmod@divisor^0,c
  1360   0009D6  EC85  F009         	call	___lwmod	;wreg free
  1361   0009DA  5008               	movf	?___lwmod^0,w,c
  1362   0009DC  0F30               	addlw	48
  1363   0009DE  ECCC  F00A         	call	_Transmitir
  1364                           
  1365                           ;Proyecto.c: 331: Transmitir(167);
  1366   0009E2  0EA7               	movlw	167
  1367   0009E4  ECCC  F00A         	call	_Transmitir
  1368                           
  1369                           ;Proyecto.c: 332: Transmitir(Simb);
  1370   0009E8  5019               	movf	TransmitirDatos@Simb^0,w,c
  1371   0009EA  ECCC  F00A         	call	_Transmitir
  1372                           
  1373                           ;Proyecto.c: 333: Transmitir(' ');
  1374   0009EE  0E20               	movlw	32
  1375   0009F0  ECCC  F00A         	call	_Transmitir
  1376                           
  1377                           ;Proyecto.c: 334: Transmitir('\n');
  1378   0009F4  0E0A               	movlw	10
  1379   0009F6  ECCC  F00A         	call	_Transmitir
  1380                           
  1381                           ;Proyecto.c: 335: Transmitir('H');
  1382   0009FA  0E48               	movlw	72
  1383   0009FC  ECCC  F00A         	call	_Transmitir
  1384                           
  1385                           ;Proyecto.c: 336: Transmitir('u');
  1386   000A00  0E75               	movlw	117
  1387   000A02  ECCC  F00A         	call	_Transmitir
  1388                           
  1389                           ;Proyecto.c: 337: Transmitir('m');
  1390   000A06  0E6D               	movlw	109
  1391   000A08  ECCC  F00A         	call	_Transmitir
  1392                           
  1393                           ;Proyecto.c: 338: Transmitir(':');
  1394   000A0C  0E3A               	movlw	58
  1395   000A0E  ECCC  F00A         	call	_Transmitir
  1396                           
  1397                           ;Proyecto.c: 339: Transmitir(' ');
  1398   000A12  0E20               	movlw	32
  1399   000A14  ECCC  F00A         	call	_Transmitir
  1400                           
  1401                           ;Proyecto.c: 340: Transmitir(Humedad / 10 + 48);
  1402   000A18  0E0A               	movlw	10
  1403   000A1A  6E08               	movwf	___lbdiv@divisor^0,c
  1404   000A1C  502F               	movf	_Humedad^0,w,c
  1405   000A1E  ECE1  F009         	call	___lbdiv
  1406   000A22  0F30               	addlw	48
  1407   000A24  ECCC  F00A         	call	_Transmitir
  1408                           
  1409                           ;Proyecto.c: 341: Transmitir(Humedad % 10 + 48);
  1410   000A28  0E0A               	movlw	10
  1411   000A2A  6E08               	movwf	___lbmod@divisor^0,c
  1412   000A2C  502F               	movf	_Humedad^0,w,c
  1413   000A2E  EC4A  F00A         	call	___lbmod
  1414   000A32  0F30               	addlw	48
  1415   000A34  ECCC  F00A         	call	_Transmitir
  1416                           
  1417                           ;Proyecto.c: 342: Transmitir(' ');
  1418   000A38  0E20               	movlw	32
  1419   000A3A  ECCC  F00A         	call	_Transmitir
  1420                           
  1421                           ;Proyecto.c: 343: Transmitir('%');
  1422   000A3E  0E25               	movlw	37
  1423   000A40  ECCC  F00A         	call	_Transmitir
  1424                           
  1425                           ;Proyecto.c: 344: Transmitir('\n');
  1426   000A44  0E0A               	movlw	10
  1427   000A46  ECCC  F00A         	call	_Transmitir
  1428                           
  1429                           ;Proyecto.c: 345: Transmitir(' ');
  1430   000A4A  0E20               	movlw	32
  1431   000A4C  ECCC  F00A         	call	_Transmitir
  1432                           
  1433                           ;Proyecto.c: 347: EscribeLCD_c(TempC / 10 + 48);
  1434   000A50  C01B  F008         	movff	TransmitirDatos@TempC,___lwdiv@dividend
  1435   000A54  C01C  F009         	movff	TransmitirDatos@TempC+1,___lwdiv@dividend+1
  1436   000A58  0E00               	movlw	0
  1437   000A5A  6E0B               	movwf	(___lwdiv@divisor+1)^0,c
  1438   000A5C  0E0A               	movlw	10
  1439   000A5E  6E0A               	movwf	___lwdiv@divisor^0,c
  1440   000A60  ECEF  F008         	call	___lwdiv	;wreg free
  1441   000A64  5008               	movf	?___lwdiv^0,w,c
  1442   000A66  0F30               	addlw	48
  1443   000A68  EC8E  F00A         	call	_EscribeLCD_c
  1444                           
  1445                           ;Proyecto.c: 348: EscribeLCD_c(TempC % 10 + 48);
  1446   000A6C  C01B  F008         	movff	TransmitirDatos@TempC,___lwmod@dividend
  1447   000A70  C01C  F009         	movff	TransmitirDatos@TempC+1,___lwmod@dividend+1
  1448   000A74  0E00               	movlw	0
  1449   000A76  6E0B               	movwf	(___lwmod@divisor+1)^0,c
  1450   000A78  0E0A               	movlw	10
  1451   000A7A  6E0A               	movwf	___lwmod@divisor^0,c
  1452   000A7C  EC85  F009         	call	___lwmod	;wreg free
  1453   000A80  5008               	movf	?___lwmod^0,w,c
  1454   000A82  0F30               	addlw	48
  1455   000A84  EC8E  F00A         	call	_EscribeLCD_c
  1456                           
  1457                           ;Proyecto.c: 349: EscribeLCD_c(Simb);
  1458   000A88  5019               	movf	TransmitirDatos@Simb^0,w,c
  1459   000A8A  EC8E  F00A         	call	_EscribeLCD_c
  1460                           
  1461                           ;Proyecto.c: 350: DireccionaLCD(192);
  1462   000A8E  0EC0               	movlw	192
  1463   000A90  EC83  F00A         	call	_DireccionaLCD
  1464                           
  1465                           ;Proyecto.c: 351: MensajeLCD_Word("Hum:");
  1466   000A94  0E2D               	movlw	low STR_8
  1467   000A96  6E0D               	movwf	MensajeLCD_Word@a^0,c
  1468   000A98  EC18  F009         	call	_MensajeLCD_Word	;wreg free
  1469                           
  1470                           ;Proyecto.c: 352: EscribeLCD_c(Humedad / 10 + 48);
  1471   000A9C  0E0A               	movlw	10
  1472   000A9E  6E08               	movwf	___lbdiv@divisor^0,c
  1473   000AA0  502F               	movf	_Humedad^0,w,c
  1474   000AA2  ECE1  F009         	call	___lbdiv
  1475   000AA6  0F30               	addlw	48
  1476   000AA8  EC8E  F00A         	call	_EscribeLCD_c
  1477                           
  1478                           ;Proyecto.c: 353: EscribeLCD_c(Humedad % 10 + 48);
  1479   000AAC  0E0A               	movlw	10
  1480   000AAE  6E08               	movwf	___lbmod@divisor^0,c
  1481   000AB0  502F               	movf	_Humedad^0,w,c
  1482   000AB2  EC4A  F00A         	call	___lbmod
  1483   000AB6  0F30               	addlw	48
  1484   000AB8  EC8E  F00A         	call	_EscribeLCD_c
  1485                           
  1486                           ;Proyecto.c: 354: EscribeLCD_c('%');
  1487   000ABC  0E25               	movlw	37
  1488   000ABE  EC8E  F00A         	call	_EscribeLCD_c
  1489   000AC2  0012               	return		;funcret
  1490   000AC4                     __end_of_TransmitirDatos:
  1491                           	callstack 0
  1492                           
  1493 ;; *************** function ___wmul *****************
  1494 ;; Defined at:
  1495 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\Umul16.c"
  1496 ;; Parameters:    Size  Location     Type
  1497 ;;  multiplier      2    7[COMRAM] unsigned int 
  1498 ;;  multiplicand    2    9[COMRAM] unsigned int 
  1499 ;; Auto vars:     Size  Location     Type
  1500 ;;  product         2   11[COMRAM] unsigned int 
  1501 ;; Return value:  Size  Location     Type
  1502 ;;                  2    7[COMRAM] unsigned int 
  1503 ;; Registers used:
  1504 ;;		wreg, status,2, status,0, prodl, prodh
  1505 ;; Tracked objects:
  1506 ;;		On entry : 0/0
  1507 ;;		On exit  : 0/0
  1508 ;;		Unchanged: 0/0
  1509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1510 ;;      Params:         4       0       0       0       0       0       0       0       0
  1511 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1512 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1513 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1514 ;;Total ram usage:        6 bytes
  1515 ;; Hardware stack levels used: 1
  1516 ;; Hardware stack levels required when called: 4
  1517 ;; This function calls:
  1518 ;;		Nothing
  1519 ;; This function is called by:
  1520 ;;		_TransmitirDatos
  1521 ;; This function uses a non-reentrant model
  1522 ;;
  1523                           
  1524                           	psect	text3
  1525   0014BE                     __ptext3:
  1526                           	callstack 0
  1527   0014BE                     ___wmul:
  1528                           	callstack 25
  1529                           
  1530                           ;incstack = 0
  1531   0014BE  5008               	movf	___wmul@multiplier^0,w,c
  1532   0014C0  020A               	mulwf	___wmul@multiplicand^0,c
  1533   0014C2  CFF3 F00C          	movff	prodl,___wmul@product
  1534   0014C6  CFF4 F00D          	movff	prodh,___wmul@product+1
  1535   0014CA  5008               	movf	___wmul@multiplier^0,w,c
  1536   0014CC  020B               	mulwf	(___wmul@multiplicand+1)^0,c
  1537   0014CE  50F3               	movf	243,w,c
  1538   0014D0  260D               	addwf	(___wmul@product+1)^0,f,c
  1539   0014D2  5009               	movf	(___wmul@multiplier+1)^0,w,c
  1540   0014D4  020A               	mulwf	___wmul@multiplicand^0,c
  1541   0014D6  50F3               	movf	243,w,c
  1542   0014D8  260D               	addwf	(___wmul@product+1)^0,f,c
  1543   0014DA  C00C  F008         	movff	___wmul@product,?___wmul
  1544   0014DE  C00D  F009         	movff	___wmul@product+1,?___wmul+1
  1545   0014E2  0012               	return		;funcret
  1546   0014E4                     __end_of___wmul:
  1547                           	callstack 0
  1548                           
  1549 ;; *************** function ___lwmod *****************
  1550 ;; Defined at:
  1551 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\lwmod.c"
  1552 ;; Parameters:    Size  Location     Type
  1553 ;;  dividend        2    7[COMRAM] unsigned int 
  1554 ;;  divisor         2    9[COMRAM] unsigned int 
  1555 ;; Auto vars:     Size  Location     Type
  1556 ;;  counter         1   11[COMRAM] unsigned char 
  1557 ;; Return value:  Size  Location     Type
  1558 ;;                  2    7[COMRAM] unsigned int 
  1559 ;; Registers used:
  1560 ;;		wreg, status,2, status,0
  1561 ;; Tracked objects:
  1562 ;;		On entry : 0/0
  1563 ;;		On exit  : 0/0
  1564 ;;		Unchanged: 0/0
  1565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1566 ;;      Params:         4       0       0       0       0       0       0       0       0
  1567 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1568 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1569 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1570 ;;Total ram usage:        5 bytes
  1571 ;; Hardware stack levels used: 1
  1572 ;; Hardware stack levels required when called: 4
  1573 ;; This function calls:
  1574 ;;		Nothing
  1575 ;; This function is called by:
  1576 ;;		_TransmitirDatos
  1577 ;; This function uses a non-reentrant model
  1578 ;;
  1579                           
  1580                           	psect	text4
  1581   00130A                     __ptext4:
  1582                           	callstack 0
  1583   00130A                     ___lwmod:
  1584                           	callstack 25
  1585                           
  1586                           ;incstack = 0
  1587   00130A  500A               	movf	___lwmod@divisor^0,w,c
  1588   00130C  100B               	iorwf	(___lwmod@divisor+1)^0,w,c
  1589   00130E  B4D8               	btfsc	status,2,c
  1590   001310  D018               	goto	l871
  1591   001312  0E01               	movlw	1
  1592   001314  6E0C               	movwf	___lwmod@counter^0,c
  1593   001316  D004               	goto	l2141
  1594   001318                     l2139:
  1595   001318  90D8               	bcf	status,0,c
  1596   00131A  360A               	rlcf	___lwmod@divisor^0,f,c
  1597   00131C  360B               	rlcf	(___lwmod@divisor+1)^0,f,c
  1598   00131E  2A0C               	incf	___lwmod@counter^0,f,c
  1599   001320                     l2141:
  1600   001320  AE0B               	btfss	(___lwmod@divisor+1)^0,7,c
  1601   001322  D7FA               	goto	l2139
  1602   001324                     u1100:
  1603   001324  500A               	movf	___lwmod@divisor^0,w,c
  1604   001326  5C08               	subwf	___lwmod@dividend^0,w,c
  1605   001328  500B               	movf	(___lwmod@divisor+1)^0,w,c
  1606   00132A  5809               	subwfb	(___lwmod@dividend+1)^0,w,c
  1607   00132C  A0D8               	btfss	status,0,c
  1608   00132E  D004               	goto	l2147
  1609   001330  500A               	movf	___lwmod@divisor^0,w,c
  1610   001332  5E08               	subwf	___lwmod@dividend^0,f,c
  1611   001334  500B               	movf	(___lwmod@divisor+1)^0,w,c
  1612   001336  5A09               	subwfb	(___lwmod@dividend+1)^0,f,c
  1613   001338                     l2147:
  1614   001338  90D8               	bcf	status,0,c
  1615   00133A  320B               	rrcf	(___lwmod@divisor+1)^0,f,c
  1616   00133C  320A               	rrcf	___lwmod@divisor^0,f,c
  1617   00133E  2E0C               	decfsz	___lwmod@counter^0,f,c
  1618   001340  D7F1               	goto	u1100
  1619   001342                     l871:
  1620   001342  C008  F008         	movff	___lwmod@dividend,?___lwmod
  1621   001346  C009  F009         	movff	___lwmod@dividend+1,?___lwmod+1
  1622   00134A  0012               	return		;funcret
  1623   00134C                     __end_of___lwmod:
  1624                           	callstack 0
  1625                           
  1626 ;; *************** function ___lwdiv *****************
  1627 ;; Defined at:
  1628 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\lwdiv.c"
  1629 ;; Parameters:    Size  Location     Type
  1630 ;;  dividend        2    7[COMRAM] unsigned int 
  1631 ;;  divisor         2    9[COMRAM] unsigned int 
  1632 ;; Auto vars:     Size  Location     Type
  1633 ;;  quotient        2   11[COMRAM] unsigned int 
  1634 ;;  counter         1   13[COMRAM] unsigned char 
  1635 ;; Return value:  Size  Location     Type
  1636 ;;                  2    7[COMRAM] unsigned int 
  1637 ;; Registers used:
  1638 ;;		wreg, status,2, status,0
  1639 ;; Tracked objects:
  1640 ;;		On entry : 0/0
  1641 ;;		On exit  : 0/0
  1642 ;;		Unchanged: 0/0
  1643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1644 ;;      Params:         4       0       0       0       0       0       0       0       0
  1645 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1646 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1647 ;;      Totals:         7       0       0       0       0       0       0       0       0
  1648 ;;Total ram usage:        7 bytes
  1649 ;; Hardware stack levels used: 1
  1650 ;; Hardware stack levels required when called: 4
  1651 ;; This function calls:
  1652 ;;		Nothing
  1653 ;; This function is called by:
  1654 ;;		_TransmitirDatos
  1655 ;; This function uses a non-reentrant model
  1656 ;;
  1657                           
  1658                           	psect	text5
  1659   0011DE                     __ptext5:
  1660                           	callstack 0
  1661   0011DE                     ___lwdiv:
  1662                           	callstack 25
  1663                           
  1664                           ;incstack = 0
  1665   0011DE  0E00               	movlw	0
  1666   0011E0  6E0D               	movwf	(___lwdiv@quotient+1)^0,c
  1667   0011E2  0E00               	movlw	0
  1668   0011E4  6E0C               	movwf	___lwdiv@quotient^0,c
  1669   0011E6  500A               	movf	___lwdiv@divisor^0,w,c
  1670   0011E8  100B               	iorwf	(___lwdiv@divisor+1)^0,w,c
  1671   0011EA  B4D8               	btfsc	status,2,c
  1672   0011EC  D01C               	goto	l861
  1673   0011EE  0E01               	movlw	1
  1674   0011F0  6E0E               	movwf	___lwdiv@counter^0,c
  1675   0011F2  D004               	goto	l2121
  1676   0011F4                     l2119:
  1677   0011F4  90D8               	bcf	status,0,c
  1678   0011F6  360A               	rlcf	___lwdiv@divisor^0,f,c
  1679   0011F8  360B               	rlcf	(___lwdiv@divisor+1)^0,f,c
  1680   0011FA  2A0E               	incf	___lwdiv@counter^0,f,c
  1681   0011FC                     l2121:
  1682   0011FC  AE0B               	btfss	(___lwdiv@divisor+1)^0,7,c
  1683   0011FE  D7FA               	goto	l2119
  1684   001200                     u1070:
  1685   001200  90D8               	bcf	status,0,c
  1686   001202  360C               	rlcf	___lwdiv@quotient^0,f,c
  1687   001204  360D               	rlcf	(___lwdiv@quotient+1)^0,f,c
  1688   001206  500A               	movf	___lwdiv@divisor^0,w,c
  1689   001208  5C08               	subwf	___lwdiv@dividend^0,w,c
  1690   00120A  500B               	movf	(___lwdiv@divisor+1)^0,w,c
  1691   00120C  5809               	subwfb	(___lwdiv@dividend+1)^0,w,c
  1692   00120E  A0D8               	btfss	status,0,c
  1693   001210  D005               	goto	l2131
  1694   001212  500A               	movf	___lwdiv@divisor^0,w,c
  1695   001214  5E08               	subwf	___lwdiv@dividend^0,f,c
  1696   001216  500B               	movf	(___lwdiv@divisor+1)^0,w,c
  1697   001218  5A09               	subwfb	(___lwdiv@dividend+1)^0,f,c
  1698   00121A  800C               	bsf	___lwdiv@quotient^0,0,c
  1699   00121C                     l2131:
  1700   00121C  90D8               	bcf	status,0,c
  1701   00121E  320B               	rrcf	(___lwdiv@divisor+1)^0,f,c
  1702   001220  320A               	rrcf	___lwdiv@divisor^0,f,c
  1703   001222  2E0E               	decfsz	___lwdiv@counter^0,f,c
  1704   001224  D7ED               	goto	u1070
  1705   001226                     l861:
  1706   001226  C00C  F008         	movff	___lwdiv@quotient,?___lwdiv
  1707   00122A  C00D  F009         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1708   00122E  0012               	return		;funcret
  1709   001230                     __end_of___lwdiv:
  1710                           	callstack 0
  1711                           
  1712 ;; *************** function ___lbmod *****************
  1713 ;; Defined at:
  1714 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\lbmod.c"
  1715 ;; Parameters:    Size  Location     Type
  1716 ;;  dividend        1    wreg     unsigned char 
  1717 ;;  divisor         1    7[COMRAM] unsigned char 
  1718 ;; Auto vars:     Size  Location     Type
  1719 ;;  dividend        1    8[COMRAM] unsigned char 
  1720 ;;  rem             1   10[COMRAM] unsigned char 
  1721 ;;  counter         1    9[COMRAM] unsigned char 
  1722 ;; Return value:  Size  Location     Type
  1723 ;;                  1    wreg      unsigned char 
  1724 ;; Registers used:
  1725 ;;		wreg, status,2, status,0
  1726 ;; Tracked objects:
  1727 ;;		On entry : 0/0
  1728 ;;		On exit  : 0/0
  1729 ;;		Unchanged: 0/0
  1730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1731 ;;      Params:         1       0       0       0       0       0       0       0       0
  1732 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1733 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1734 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1735 ;;Total ram usage:        4 bytes
  1736 ;; Hardware stack levels used: 1
  1737 ;; Hardware stack levels required when called: 4
  1738 ;; This function calls:
  1739 ;;		Nothing
  1740 ;; This function is called by:
  1741 ;;		_TransmitirDatos
  1742 ;; This function uses a non-reentrant model
  1743 ;;
  1744                           
  1745                           	psect	text6
  1746   001494                     __ptext6:
  1747                           	callstack 0
  1748   001494                     ___lbmod:
  1749                           	callstack 25
  1750                           
  1751                           ;incstack = 0
  1752                           ;___lbmod@dividend stored from wreg
  1753   001494  6E09               	movwf	___lbmod@dividend^0,c
  1754   001496  0E08               	movlw	8
  1755   001498  6E0A               	movwf	___lbmod@counter^0,c
  1756   00149A  0E00               	movlw	0
  1757   00149C  6E0B               	movwf	___lbmod@rem^0,c
  1758   00149E                     l2099:
  1759   00149E  90D8               	bcf	status,0,c
  1760   0014A0  3409               	rlcf	___lbmod@dividend^0,w,c
  1761   0014A2  340B               	rlcf	___lbmod@rem^0,w,c
  1762   0014A4  6E0B               	movwf	___lbmod@rem^0,c
  1763   0014A6  90D8               	bcf	status,0,c
  1764   0014A8  3609               	rlcf	___lbmod@dividend^0,f,c
  1765   0014AA  5008               	movf	___lbmod@divisor^0,w,c
  1766   0014AC  5C0B               	subwf	___lbmod@rem^0,w,c
  1767   0014AE  A0D8               	btfss	status,0,c
  1768   0014B0  D002               	goto	l2107
  1769   0014B2  5008               	movf	___lbmod@divisor^0,w,c
  1770   0014B4  5E0B               	subwf	___lbmod@rem^0,f,c
  1771   0014B6                     l2107:
  1772   0014B6  2E0A               	decfsz	___lbmod@counter^0,f,c
  1773   0014B8  D7F2               	goto	l2099
  1774   0014BA  500B               	movf	___lbmod@rem^0,w,c
  1775   0014BC  0012               	return		;funcret
  1776   0014BE                     __end_of___lbmod:
  1777                           	callstack 0
  1778                           
  1779 ;; *************** function ___lbdiv *****************
  1780 ;; Defined at:
  1781 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\lbdiv.c"
  1782 ;; Parameters:    Size  Location     Type
  1783 ;;  dividend        1    wreg     unsigned char 
  1784 ;;  divisor         1    7[COMRAM] unsigned char 
  1785 ;; Auto vars:     Size  Location     Type
  1786 ;;  dividend        1    8[COMRAM] unsigned char 
  1787 ;;  quotient        1   10[COMRAM] unsigned char 
  1788 ;;  counter         1    9[COMRAM] unsigned char 
  1789 ;; Return value:  Size  Location     Type
  1790 ;;                  1    wreg      unsigned char 
  1791 ;; Registers used:
  1792 ;;		wreg, status,2, status,0
  1793 ;; Tracked objects:
  1794 ;;		On entry : 0/0
  1795 ;;		On exit  : 0/0
  1796 ;;		Unchanged: 0/0
  1797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1798 ;;      Params:         1       0       0       0       0       0       0       0       0
  1799 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1800 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1801 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1802 ;;Total ram usage:        4 bytes
  1803 ;; Hardware stack levels used: 1
  1804 ;; Hardware stack levels required when called: 4
  1805 ;; This function calls:
  1806 ;;		Nothing
  1807 ;; This function is called by:
  1808 ;;		_TransmitirDatos
  1809 ;; This function uses a non-reentrant model
  1810 ;;
  1811                           
  1812                           	psect	text7
  1813   0013C2                     __ptext7:
  1814                           	callstack 0
  1815   0013C2                     ___lbdiv:
  1816                           	callstack 25
  1817                           
  1818                           ;incstack = 0
  1819                           ;___lbdiv@dividend stored from wreg
  1820   0013C2  6E09               	movwf	___lbdiv@dividend^0,c
  1821   0013C4  0E00               	movlw	0
  1822   0013C6  6E0B               	movwf	___lbdiv@quotient^0,c
  1823   0013C8  5008               	movf	___lbdiv@divisor^0,w,c
  1824   0013CA  B4D8               	btfsc	status,2,c
  1825   0013CC  D015               	goto	l2093
  1826   0013CE  0E01               	movlw	1
  1827   0013D0  6E0A               	movwf	___lbdiv@counter^0,c
  1828   0013D2  D003               	goto	l2081
  1829   0013D4                     l2077:
  1830   0013D4  90D8               	bcf	status,0,c
  1831   0013D6  3608               	rlcf	___lbdiv@divisor^0,f,c
  1832   0013D8  2A0A               	incf	___lbdiv@counter^0,f,c
  1833   0013DA                     l2081:
  1834   0013DA  AE08               	btfss	___lbdiv@divisor^0,7,c
  1835   0013DC  D7FB               	goto	l2077
  1836   0013DE                     u1030:
  1837   0013DE  90D8               	bcf	status,0,c
  1838   0013E0  360B               	rlcf	___lbdiv@quotient^0,f,c
  1839   0013E2  5008               	movf	___lbdiv@divisor^0,w,c
  1840   0013E4  5C09               	subwf	___lbdiv@dividend^0,w,c
  1841   0013E6  A0D8               	btfss	status,0,c
  1842   0013E8  D003               	goto	l2089
  1843   0013EA  5008               	movf	___lbdiv@divisor^0,w,c
  1844   0013EC  5E09               	subwf	___lbdiv@dividend^0,f,c
  1845   0013EE  800B               	bsf	___lbdiv@quotient^0,0,c
  1846   0013F0                     l2089:
  1847   0013F0  90D8               	bcf	status,0,c
  1848   0013F2  3208               	rrcf	___lbdiv@divisor^0,f,c
  1849   0013F4  2E0A               	decfsz	___lbdiv@counter^0,f,c
  1850   0013F6  D7F3               	goto	u1030
  1851   0013F8                     l2093:
  1852   0013F8  500B               	movf	___lbdiv@quotient^0,w,c
  1853   0013FA  0012               	return		;funcret
  1854   0013FC                     __end_of___lbdiv:
  1855                           	callstack 0
  1856                           
  1857 ;; *************** function ___awdiv *****************
  1858 ;; Defined at:
  1859 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\awdiv.c"
  1860 ;; Parameters:    Size  Location     Type
  1861 ;;  dividend        2    7[COMRAM] int 
  1862 ;;  divisor         2    9[COMRAM] int 
  1863 ;; Auto vars:     Size  Location     Type
  1864 ;;  quotient        2   13[COMRAM] int 
  1865 ;;  sign            1   12[COMRAM] unsigned char 
  1866 ;;  counter         1   11[COMRAM] unsigned char 
  1867 ;; Return value:  Size  Location     Type
  1868 ;;                  2    7[COMRAM] int 
  1869 ;; Registers used:
  1870 ;;		wreg, status,2, status,0
  1871 ;; Tracked objects:
  1872 ;;		On entry : 0/0
  1873 ;;		On exit  : 0/0
  1874 ;;		Unchanged: 0/0
  1875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1876 ;;      Params:         4       0       0       0       0       0       0       0       0
  1877 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1878 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1879 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1880 ;;Total ram usage:        8 bytes
  1881 ;; Hardware stack levels used: 1
  1882 ;; Hardware stack levels required when called: 4
  1883 ;; This function calls:
  1884 ;;		Nothing
  1885 ;; This function is called by:
  1886 ;;		_TransmitirDatos
  1887 ;; This function uses a non-reentrant model
  1888 ;;
  1889                           
  1890                           	psect	text8
  1891   00108E                     __ptext8:
  1892                           	callstack 0
  1893   00108E                     ___awdiv:
  1894                           	callstack 25
  1895                           
  1896                           ;incstack = 0
  1897   00108E  0E00               	movlw	0
  1898   001090  6E0D               	movwf	___awdiv@sign^0,c
  1899   001092  AE0B               	btfss	(___awdiv@divisor+1)^0,7,c
  1900   001094  D006               	goto	l2035
  1901   001096  6C0A               	negf	___awdiv@divisor^0,c
  1902   001098  1E0B               	comf	(___awdiv@divisor+1)^0,f,c
  1903   00109A  B0D8               	btfsc	status,0,c
  1904   00109C  2A0B               	incf	(___awdiv@divisor+1)^0,f,c
  1905   00109E  0E01               	movlw	1
  1906   0010A0  6E0D               	movwf	___awdiv@sign^0,c
  1907   0010A2                     l2035:
  1908   0010A2  AE09               	btfss	(___awdiv@dividend+1)^0,7,c
  1909   0010A4  D006               	goto	l2041
  1910   0010A6  6C08               	negf	___awdiv@dividend^0,c
  1911   0010A8  1E09               	comf	(___awdiv@dividend+1)^0,f,c
  1912   0010AA  B0D8               	btfsc	status,0,c
  1913   0010AC  2A09               	incf	(___awdiv@dividend+1)^0,f,c
  1914   0010AE  0E01               	movlw	1
  1915   0010B0  1A0D               	xorwf	___awdiv@sign^0,f,c
  1916   0010B2                     l2041:
  1917   0010B2  0E00               	movlw	0
  1918   0010B4  6E0F               	movwf	(___awdiv@quotient+1)^0,c
  1919   0010B6  0E00               	movlw	0
  1920   0010B8  6E0E               	movwf	___awdiv@quotient^0,c
  1921   0010BA  500A               	movf	___awdiv@divisor^0,w,c
  1922   0010BC  100B               	iorwf	(___awdiv@divisor+1)^0,w,c
  1923   0010BE  B4D8               	btfsc	status,2,c
  1924   0010C0  D01C               	goto	l2063
  1925   0010C2  0E01               	movlw	1
  1926   0010C4  6E0C               	movwf	___awdiv@counter^0,c
  1927   0010C6  D004               	goto	l2049
  1928   0010C8                     l2047:
  1929   0010C8  90D8               	bcf	status,0,c
  1930   0010CA  360A               	rlcf	___awdiv@divisor^0,f,c
  1931   0010CC  360B               	rlcf	(___awdiv@divisor+1)^0,f,c
  1932   0010CE  2A0C               	incf	___awdiv@counter^0,f,c
  1933   0010D0                     l2049:
  1934   0010D0  AE0B               	btfss	(___awdiv@divisor+1)^0,7,c
  1935   0010D2  D7FA               	goto	l2047
  1936   0010D4                     u990:
  1937   0010D4  90D8               	bcf	status,0,c
  1938   0010D6  360E               	rlcf	___awdiv@quotient^0,f,c
  1939   0010D8  360F               	rlcf	(___awdiv@quotient+1)^0,f,c
  1940   0010DA  500A               	movf	___awdiv@divisor^0,w,c
  1941   0010DC  5C08               	subwf	___awdiv@dividend^0,w,c
  1942   0010DE  500B               	movf	(___awdiv@divisor+1)^0,w,c
  1943   0010E0  5809               	subwfb	(___awdiv@dividend+1)^0,w,c
  1944   0010E2  A0D8               	btfss	status,0,c
  1945   0010E4  D005               	goto	l2059
  1946   0010E6  500A               	movf	___awdiv@divisor^0,w,c
  1947   0010E8  5E08               	subwf	___awdiv@dividend^0,f,c
  1948   0010EA  500B               	movf	(___awdiv@divisor+1)^0,w,c
  1949   0010EC  5A09               	subwfb	(___awdiv@dividend+1)^0,f,c
  1950   0010EE  800E               	bsf	___awdiv@quotient^0,0,c
  1951   0010F0                     l2059:
  1952   0010F0  90D8               	bcf	status,0,c
  1953   0010F2  320B               	rrcf	(___awdiv@divisor+1)^0,f,c
  1954   0010F4  320A               	rrcf	___awdiv@divisor^0,f,c
  1955   0010F6  2E0C               	decfsz	___awdiv@counter^0,f,c
  1956   0010F8  D7ED               	goto	u990
  1957   0010FA                     l2063:
  1958   0010FA  500D               	movf	___awdiv@sign^0,w,c
  1959   0010FC  B4D8               	btfsc	status,2,c
  1960   0010FE  D004               	goto	l2067
  1961   001100  6C0E               	negf	___awdiv@quotient^0,c
  1962   001102  1E0F               	comf	(___awdiv@quotient+1)^0,f,c
  1963   001104  B0D8               	btfsc	status,0,c
  1964   001106  2A0F               	incf	(___awdiv@quotient+1)^0,f,c
  1965   001108                     l2067:
  1966   001108  C00E  F008         	movff	___awdiv@quotient,?___awdiv
  1967   00110C  C00F  F009         	movff	___awdiv@quotient+1,?___awdiv+1
  1968   001110  0012               	return		;funcret
  1969   001112                     __end_of___awdiv:
  1970                           	callstack 0
  1971                           
  1972 ;; *************** function _Transmitir *****************
  1973 ;; Defined at:
  1974 ;;		line 277 in file "Proyecto.c"
  1975 ;; Parameters:    Size  Location     Type
  1976 ;;  BufferT         1    wreg     unsigned char 
  1977 ;; Auto vars:     Size  Location     Type
  1978 ;;  BufferT         1    7[COMRAM] unsigned char 
  1979 ;; Return value:  Size  Location     Type
  1980 ;;                  1    wreg      void 
  1981 ;; Registers used:
  1982 ;;		wreg
  1983 ;; Tracked objects:
  1984 ;;		On entry : 0/0
  1985 ;;		On exit  : 0/0
  1986 ;;		Unchanged: 0/0
  1987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1988 ;;      Params:         0       0       0       0       0       0       0       0       0
  1989 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1990 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1991 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1992 ;;Total ram usage:        1 bytes
  1993 ;; Hardware stack levels used: 1
  1994 ;; Hardware stack levels required when called: 4
  1995 ;; This function calls:
  1996 ;;		Nothing
  1997 ;; This function is called by:
  1998 ;;		_TransmitirDatos
  1999 ;; This function uses a non-reentrant model
  2000 ;;
  2001                           
  2002                           	psect	text9
  2003   001598                     __ptext9:
  2004                           	callstack 0
  2005   001598                     _Transmitir:
  2006                           	callstack 25
  2007                           
  2008                           ;incstack = 0
  2009                           ;Transmitir@BufferT stored from wreg
  2010   001598  6E08               	movwf	Transmitir@BufferT^0,c
  2011   00159A                     
  2012                           ;Proyecto.c: 278: while (TRMT == 0);
  2013   00159A  A2AC               	btfss	4012,1,c	;volatile
  2014   00159C  D7FE               	goto	l2017
  2015                           
  2016                           ;Proyecto.c: 279: TXREG = BufferT;
  2017   00159E  C008  FFAD         	movff	Transmitir@BufferT,4013	;volatile
  2018   0015A2  0012               	return		;funcret
  2019   0015A4                     __end_of_Transmitir:
  2020                           	callstack 0
  2021                           
  2022 ;; *************** function _MensajeLCD_Word *****************
  2023 ;; Defined at:
  2024 ;;		line 247 in file "LibLCDXC8.h"
  2025 ;; Parameters:    Size  Location     Type
  2026 ;;  a               1   12[COMRAM] PTR unsigned char 
  2027 ;;		 -> STR_8(5), STR_7(6), STR_6(17), STR_5(17), 
  2028 ;;		 -> STR_4(17), STR_3(10), STR_2(17), STR_1(11), 
  2029 ;; Auto vars:     Size  Location     Type
  2030 ;;  i               2   14[COMRAM] int 
  2031 ;; Return value:  Size  Location     Type
  2032 ;;                  1    wreg      void 
  2033 ;; Registers used:
  2034 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2035 ;; Tracked objects:
  2036 ;;		On entry : 0/0
  2037 ;;		On exit  : 0/0
  2038 ;;		Unchanged: 0/0
  2039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2040 ;;      Params:         1       0       0       0       0       0       0       0       0
  2041 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2042 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2043 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2044 ;;Total ram usage:        4 bytes
  2045 ;; Hardware stack levels used: 1
  2046 ;; Hardware stack levels required when called: 7
  2047 ;; This function calls:
  2048 ;;		_EscribeLCD_c
  2049 ;; This function is called by:
  2050 ;;		_main
  2051 ;;		_TransmitirDatos
  2052 ;; This function uses a non-reentrant model
  2053 ;;
  2054                           
  2055                           	psect	text10
  2056   001230                     __ptext10:
  2057                           	callstack 0
  2058   001230                     _MensajeLCD_Word:
  2059                           	callstack 22
  2060                           
  2061                           ;LibLCDXC8.h: 251: for(int i = 0; i<16; i++){
  2062                           
  2063                           ;incstack = 0
  2064   001230  0E00               	movlw	0
  2065   001232  6E10               	movwf	(MensajeLCD_Word@i+1)^0,c
  2066   001234  0E00               	movlw	0
  2067   001236  6E0F               	movwf	MensajeLCD_Word@i^0,c
  2068   001238                     l1985:
  2069                           
  2070                           ;LibLCDXC8.h: 252: if(a[i] == (0)){
  2071   001238  500D               	movf	MensajeLCD_Word@a^0,w,c
  2072   00123A  240F               	addwf	MensajeLCD_Word@i^0,w,c
  2073   00123C  6E0E               	movwf	??_MensajeLCD_Word^0,c
  2074   00123E  C00E  FFF6         	movff	??_MensajeLCD_Word,tblptrl
  2075   001242                     	if	1	;There is more than 1 active tblptr byte
  2076   001242  0E08               	movlw	high __smallconst
  2077   001244  6EF7               	movwf	tblptrh,c
  2078   001246                     	endif
  2079   001246                     	if	0	;tblptru may be non-zero
  2080   001246                     	endif
  2081   001246                     	if	0	;tblptru may be non-zero
  2082   001246                     	endif
  2083   001246  0008               	tblrd		*
  2084   001248  50F5               	movf	tablat,w,c
  2085   00124A  0900               	iorlw	0
  2086   00124C  B4D8               	btfsc	status,2,c
  2087   00124E  0012               	return	
  2088                           
  2089                           ;LibLCDXC8.h: 254: };LibLCDXC8.h: 255: EscribeLCD_c(a[i]);
  2090   001250  500D               	movf	MensajeLCD_Word@a^0,w,c
  2091   001252  240F               	addwf	MensajeLCD_Word@i^0,w,c
  2092   001254  6E0E               	movwf	??_MensajeLCD_Word^0,c
  2093   001256  C00E  FFF6         	movff	??_MensajeLCD_Word,tblptrl
  2094   00125A                     	if	1	;There is more than 1 active tblptr byte
  2095   00125A  0E08               	movlw	high __smallconst
  2096   00125C  6EF7               	movwf	tblptrh,c
  2097   00125E                     	endif
  2098   00125E                     	if	0	;tblptru may be non-zero
  2099   00125E                     	endif
  2100   00125E                     	if	0	;tblptru may be non-zero
  2101   00125E                     	endif
  2102   00125E  0008               	tblrd		*
  2103   001260  50F5               	movf	tablat,w,c
  2104   001262  EC8E  F00A         	call	_EscribeLCD_c
  2105   001266  4A0F               	infsnz	MensajeLCD_Word@i^0,f,c
  2106   001268  2A10               	incf	(MensajeLCD_Word@i+1)^0,f,c
  2107   00126A  BE10               	btfsc	(MensajeLCD_Word@i+1)^0,7,c
  2108   00126C  D7E5               	goto	l1985
  2109   00126E  5010               	movf	(MensajeLCD_Word@i+1)^0,w,c
  2110   001270  E105               	bnz	u930
  2111   001272  0E10               	movlw	16
  2112   001274  5C0F               	subwf	MensajeLCD_Word@i^0,w,c
  2113   001276  B0D8               	btfsc	status,0,c
  2114   001278  0012               	return	
  2115   00127A  D7DE               	goto	l1985
  2116   00127C                     u930:
  2117   00127C  0012               	return		;funcret
  2118   00127E                     __end_of_MensajeLCD_Word:
  2119                           	callstack 0
  2120                           
  2121 ;; *************** function _DireccionaLCD *****************
  2122 ;; Defined at:
  2123 ;;		line 259 in file "LibLCDXC8.h"
  2124 ;; Parameters:    Size  Location     Type
  2125 ;;  a               1    wreg     unsigned char 
  2126 ;; Auto vars:     Size  Location     Type
  2127 ;;  a               1   11[COMRAM] unsigned char 
  2128 ;; Return value:  Size  Location     Type
  2129 ;;                  1    wreg      void 
  2130 ;; Registers used:
  2131 ;;		wreg, status,2, status,0, cstack
  2132 ;; Tracked objects:
  2133 ;;		On entry : 0/0
  2134 ;;		On exit  : 0/0
  2135 ;;		Unchanged: 0/0
  2136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2137 ;;      Params:         0       0       0       0       0       0       0       0       0
  2138 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2139 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2140 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2141 ;;Total ram usage:        1 bytes
  2142 ;; Hardware stack levels used: 1
  2143 ;; Hardware stack levels required when called: 6
  2144 ;; This function calls:
  2145 ;;		_EnviaDato
  2146 ;;		_HabilitaLCD
  2147 ;;		_RetardoLCD
  2148 ;; This function is called by:
  2149 ;;		_main
  2150 ;;		_TransmitirDatos
  2151 ;; This function uses a non-reentrant model
  2152 ;;
  2153                           
  2154                           	psect	text11
  2155   001506                     __ptext11:
  2156                           	callstack 0
  2157   001506                     _DireccionaLCD:
  2158                           	callstack 23
  2159                           
  2160                           ;incstack = 0
  2161                           ;DireccionaLCD@a stored from wreg
  2162   001506  6E0C               	movwf	DireccionaLCD@a^0,c
  2163                           
  2164                           ;LibLCDXC8.h: 262: LATE1=0;
  2165   001508  928D               	bcf	3981,1,c	;volatile
  2166                           
  2167                           ;LibLCDXC8.h: 263: EnviaDato(a);
  2168   00150A  500C               	movf	DireccionaLCD@a^0,w,c
  2169   00150C  EC3F  F009         	call	_EnviaDato
  2170                           
  2171                           ;LibLCDXC8.h: 264: HabilitaLCD();
  2172   001510  ECB8  F00A         	call	_HabilitaLCD	;wreg free
  2173                           
  2174                           ;LibLCDXC8.h: 265: RetardoLCD(4);
  2175   001514  0E04               	movlw	4
  2176   001516  EC89  F008         	call	_RetardoLCD
  2177   00151A  0012               	return		;funcret
  2178   00151C                     __end_of_DireccionaLCD:
  2179                           	callstack 0
  2180                           
  2181 ;; *************** function _NuevoCaracter *****************
  2182 ;; Defined at:
  2183 ;;		line 140 in file "LibLCDXC8.h"
  2184 ;; Parameters:    Size  Location     Type
  2185 ;;  addr            1    wreg     unsigned char 
  2186 ;;  c               1   12[COMRAM] PTR unsigned char 
  2187 ;;		 -> cara(8), 
  2188 ;; Auto vars:     Size  Location     Type
  2189 ;;  addr            1   13[COMRAM] unsigned char 
  2190 ;;  i               2   14[COMRAM] int 
  2191 ;; Return value:  Size  Location     Type
  2192 ;;                  1    wreg      void 
  2193 ;; Registers used:
  2194 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2195 ;; Tracked objects:
  2196 ;;		On entry : 0/0
  2197 ;;		On exit  : 0/0
  2198 ;;		Unchanged: 0/0
  2199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2200 ;;      Params:         1       0       0       0       0       0       0       0       0
  2201 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2202 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2203 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2204 ;;Total ram usage:        4 bytes
  2205 ;; Hardware stack levels used: 1
  2206 ;; Hardware stack levels required when called: 7
  2207 ;; This function calls:
  2208 ;;		_ComandoLCD
  2209 ;;		_EscribeLCD_c
  2210 ;; This function is called by:
  2211 ;;		_main
  2212 ;; This function uses a non-reentrant model
  2213 ;;
  2214                           
  2215                           	psect	text12
  2216   00134C                     __ptext12:
  2217                           	callstack 0
  2218   00134C                     _NuevoCaracter:
  2219                           	callstack 23
  2220                           
  2221                           ;incstack = 0
  2222                           ;NuevoCaracter@addr stored from wreg
  2223   00134C  6E0E               	movwf	NuevoCaracter@addr^0,c
  2224                           
  2225                           ;LibLCDXC8.h: 141: int i;;LibLCDXC8.h: 142: ComandoLCD(0x40 + (addr * 8));
  2226   00134E  500E               	movf	NuevoCaracter@addr^0,w,c
  2227   001350  0D08               	mullw	8
  2228   001352  50F3               	movf	243,w,c
  2229   001354  0F40               	addlw	64
  2230   001356  EC33  F00A         	call	_ComandoLCD
  2231                           
  2232                           ;LibLCDXC8.h: 143: for (i = 0; i < 8; i++) {
  2233   00135A  0E00               	movlw	0
  2234   00135C  6E10               	movwf	(NuevoCaracter@i+1)^0,c
  2235   00135E  0E00               	movlw	0
  2236   001360  6E0F               	movwf	NuevoCaracter@i^0,c
  2237   001362                     l2597:
  2238                           
  2239                           ;LibLCDXC8.h: 144: EscribeLCD_c(c[i]);
  2240   001362  500D               	movf	NuevoCaracter@c^0,w,c
  2241   001364  240F               	addwf	NuevoCaracter@i^0,w,c
  2242   001366  6ED9               	movwf	fsr2l,c
  2243   001368  6ADA               	clrf	fsr2h,c
  2244   00136A  50DF               	movf	indf2,w,c
  2245   00136C  EC8E  F00A         	call	_EscribeLCD_c
  2246   001370  4A0F               	infsnz	NuevoCaracter@i^0,f,c
  2247   001372  2A10               	incf	(NuevoCaracter@i+1)^0,f,c
  2248   001374  BE10               	btfsc	(NuevoCaracter@i+1)^0,7,c
  2249   001376  D7F5               	goto	l2597
  2250   001378  5010               	movf	(NuevoCaracter@i+1)^0,w,c
  2251   00137A  E105               	bnz	u1710
  2252   00137C  0E08               	movlw	8
  2253   00137E  5C0F               	subwf	NuevoCaracter@i^0,w,c
  2254   001380  B0D8               	btfsc	status,0,c
  2255   001382  0012               	return	
  2256   001384  D7EE               	goto	l2597
  2257   001386                     u1710:
  2258   001386  0012               	return		;funcret
  2259   001388                     __end_of_NuevoCaracter:
  2260                           	callstack 0
  2261                           
  2262 ;; *************** function _EscribeLCD_c *****************
  2263 ;; Defined at:
  2264 ;;		line 148 in file "LibLCDXC8.h"
  2265 ;; Parameters:    Size  Location     Type
  2266 ;;  a               1    wreg     unsigned char 
  2267 ;; Auto vars:     Size  Location     Type
  2268 ;;  a               1   11[COMRAM] unsigned char 
  2269 ;; Return value:  Size  Location     Type
  2270 ;;                  1    wreg      void 
  2271 ;; Registers used:
  2272 ;;		wreg, status,2, status,0, cstack
  2273 ;; Tracked objects:
  2274 ;;		On entry : 0/0
  2275 ;;		On exit  : 0/0
  2276 ;;		Unchanged: 0/0
  2277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2278 ;;      Params:         0       0       0       0       0       0       0       0       0
  2279 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2280 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2281 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2282 ;;Total ram usage:        1 bytes
  2283 ;; Hardware stack levels used: 1
  2284 ;; Hardware stack levels required when called: 6
  2285 ;; This function calls:
  2286 ;;		_EnviaDato
  2287 ;;		_HabilitaLCD
  2288 ;;		_RetardoLCD
  2289 ;; This function is called by:
  2290 ;;		_NuevoCaracter
  2291 ;;		_MensajeLCD_Word
  2292 ;;		_main
  2293 ;;		_TransmitirDatos
  2294 ;; This function uses a non-reentrant model
  2295 ;;
  2296                           
  2297                           	psect	text13
  2298   00151C                     __ptext13:
  2299                           	callstack 0
  2300   00151C                     _EscribeLCD_c:
  2301                           	callstack 22
  2302                           
  2303                           ;incstack = 0
  2304                           ;EscribeLCD_c@a stored from wreg
  2305   00151C  6E0C               	movwf	EscribeLCD_c@a^0,c
  2306                           
  2307                           ;LibLCDXC8.h: 152: LATE1=1;
  2308   00151E  828D               	bsf	3981,1,c	;volatile
  2309                           
  2310                           ;LibLCDXC8.h: 153: EnviaDato(a);
  2311   001520  500C               	movf	EscribeLCD_c@a^0,w,c
  2312   001522  EC3F  F009         	call	_EnviaDato
  2313                           
  2314                           ;LibLCDXC8.h: 154: HabilitaLCD();
  2315   001526  ECB8  F00A         	call	_HabilitaLCD	;wreg free
  2316                           
  2317                           ;LibLCDXC8.h: 155: RetardoLCD(4);
  2318   00152A  0E04               	movlw	4
  2319   00152C  EC89  F008         	call	_RetardoLCD
  2320   001530  0012               	return		;funcret
  2321   001532                     __end_of_EscribeLCD_c:
  2322                           	callstack 0
  2323                           
  2324 ;; *************** function _ComandoLCD *****************
  2325 ;; Defined at:
  2326 ;;		line 129 in file "LibLCDXC8.h"
  2327 ;; Parameters:    Size  Location     Type
  2328 ;;  data            1    wreg     unsigned char 
  2329 ;; Auto vars:     Size  Location     Type
  2330 ;;  data            1    8[COMRAM] unsigned char 
  2331 ;; Return value:  Size  Location     Type
  2332 ;;                  1    wreg      void 
  2333 ;; Registers used:
  2334 ;;		wreg, status,2, cstack
  2335 ;; Tracked objects:
  2336 ;;		On entry : 0/0
  2337 ;;		On exit  : 0/0
  2338 ;;		Unchanged: 0/0
  2339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2340 ;;      Params:         0       0       0       0       0       0       0       0       0
  2341 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2342 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2343 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2344 ;;Total ram usage:        2 bytes
  2345 ;; Hardware stack levels used: 1
  2346 ;; Hardware stack levels required when called: 4
  2347 ;; This function calls:
  2348 ;;		Nothing
  2349 ;; This function is called by:
  2350 ;;		_NuevoCaracter
  2351 ;; This function uses a non-reentrant model
  2352 ;;
  2353                           
  2354                           	psect	text14
  2355   001466                     __ptext14:
  2356                           	callstack 0
  2357   001466                     _ComandoLCD:
  2358                           	callstack 25
  2359                           
  2360                           ;incstack = 0
  2361                           ;ComandoLCD@data stored from wreg
  2362   001466  6E09               	movwf	ComandoLCD@data^0,c
  2363                           
  2364                           ;LibLCDXC8.h: 131: LATE1 = 0;
  2365   001468  928D               	bcf	3981,1,c	;volatile
  2366                           
  2367                           ;LibLCDXC8.h: 132: LATD = data;
  2368   00146A  C009  FF8C         	movff	ComandoLCD@data,3980	;volatile
  2369                           
  2370                           ;LibLCDXC8.h: 133: LATE2 = 1;
  2371   00146E  848D               	bsf	3981,2,c	;volatile
  2372                           
  2373                           ;LibLCDXC8.h: 134: _delay((unsigned long)((5)*(8000000/4000000.0)));
  2374   001470  0E03               	movlw	3
  2375   001472                     u1777:
  2376   001472  2EE8               	decfsz	wreg,f,c
  2377   001474  D7FE               	bra	u1777
  2378   001476  F000               	nop	
  2379                           
  2380                           ;LibLCDXC8.h: 135: LATE2 = 0;
  2381   001478  948D               	bcf	3981,2,c	;volatile
  2382                           
  2383                           ;LibLCDXC8.h: 136: _delay((unsigned long)((5)*(8000000/4000000.0)));
  2384   00147A  0E03               	movlw	3
  2385   00147C                     u1787:
  2386   00147C  2EE8               	decfsz	wreg,f,c
  2387   00147E  D7FE               	bra	u1787
  2388   001480  F000               	nop	
  2389                           
  2390                           ;LibLCDXC8.h: 137: _delay((unsigned long)((2)*(8000000/4000.0)));
  2391   001482  0E06               	movlw	6
  2392   001484  6E08               	movwf	??_ComandoLCD^0,c
  2393   001486  0E30               	movlw	48
  2394   001488                     u1797:
  2395   001488  2EE8               	decfsz	wreg,f,c
  2396   00148A  D7FE               	bra	u1797
  2397   00148C  2E08               	decfsz	??_ComandoLCD^0,f,c
  2398   00148E  D7FC               	bra	u1797
  2399   001490  D000               	nop2	
  2400   001492  0012               	return		;funcret
  2401   001494                     __end_of_ComandoLCD:
  2402                           	callstack 0
  2403                           
  2404 ;; *************** function _Movimiento *****************
  2405 ;; Defined at:
  2406 ;;		line 152 in file "Proyecto.c"
  2407 ;; Parameters:    Size  Location     Type
  2408 ;;		None
  2409 ;; Auto vars:     Size  Location     Type
  2410 ;;		None
  2411 ;; Return value:  Size  Location     Type
  2412 ;;                  1    wreg      void 
  2413 ;; Registers used:
  2414 ;;		wreg, status,2, status,0
  2415 ;; Tracked objects:
  2416 ;;		On entry : 0/0
  2417 ;;		On exit  : 0/0
  2418 ;;		Unchanged: 0/0
  2419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2420 ;;      Params:         0       0       0       0       0       0       0       0       0
  2421 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2422 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2423 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2424 ;;Total ram usage:        1 bytes
  2425 ;; Hardware stack levels used: 1
  2426 ;; Hardware stack levels required when called: 4
  2427 ;; This function calls:
  2428 ;;		Nothing
  2429 ;; This function is called by:
  2430 ;;		_main
  2431 ;; This function uses a non-reentrant model
  2432 ;;
  2433                           
  2434                           	psect	text15
  2435   000E58                     __ptext15:
  2436                           	callstack 0
  2437   000E58                     _Movimiento:
  2438                           	callstack 26
  2439                           
  2440                           ;Proyecto.c: 153: if(ADRES>0 & ADRES<=255){
  2441                           
  2442                           ;incstack = 0
  2443   000E58  0E00               	movlw	0
  2444   000E5A  5CC3               	subwf	195,w,c	;volatile
  2445   000E5C  0E01               	movlw	1
  2446   000E5E  58C4               	subwfb	196,w,c	;volatile
  2447   000E60  B0D8               	btfsc	status,0,c
  2448   000E62  D002               	goto	u1370
  2449   000E64  0E01               	movlw	1
  2450   000E66  D001               	goto	u1372
  2451   000E68                     u1370:
  2452   000E68  0E00               	movlw	0
  2453   000E6A                     u1372:
  2454   000E6A  6E08               	movwf	??_Movimiento^0,c
  2455   000E6C  50C3               	movf	195,w,c	;volatile
  2456   000E6E  10C4               	iorwf	196,w,c	;volatile
  2457   000E70  B4D8               	btfsc	status,2,c
  2458   000E72  D002               	goto	u1380
  2459   000E74  0E01               	movlw	1
  2460   000E76  D001               	goto	u1382
  2461   000E78                     u1380:
  2462   000E78  0E00               	movlw	0
  2463   000E7A                     u1382:
  2464   000E7A  1408               	andwf	??_Movimiento^0,w,c
  2465   000E7C  A0E8               	btfss	wreg,0,c
  2466   000E7E  D005               	goto	l2381
  2467                           
  2468                           ;Proyecto.c: 154: a = 125;
  2469   000E80  0E00               	movlw	0
  2470   000E82  6E20               	movwf	(_a+1)^0,c
  2471   000E84  0E7D               	movlw	125
  2472   000E86  6E1F               	movwf	_a^0,c
  2473                           
  2474                           ;Proyecto.c: 155: }else if(ADRES>255 & ADRES<=511){
  2475   000E88  0012               	return	
  2476   000E8A                     l2381:
  2477   000E8A  0E00               	movlw	0
  2478   000E8C  5CC3               	subwf	195,w,c	;volatile
  2479   000E8E  0E02               	movlw	2
  2480   000E90  58C4               	subwfb	196,w,c	;volatile
  2481   000E92  B0D8               	btfsc	status,0,c
  2482   000E94  D002               	goto	u1400
  2483   000E96  0E01               	movlw	1
  2484   000E98  D001               	goto	u1402
  2485   000E9A                     u1400:
  2486   000E9A  0E00               	movlw	0
  2487   000E9C                     u1402:
  2488   000E9C  6E08               	movwf	??_Movimiento^0,c
  2489   000E9E  0E00               	movlw	0
  2490   000EA0  5CC3               	subwf	195,w,c	;volatile
  2491   000EA2  0E01               	movlw	1
  2492   000EA4  58C4               	subwfb	196,w,c	;volatile
  2493   000EA6  A0D8               	btfss	status,0,c
  2494   000EA8  D002               	goto	u1410
  2495   000EAA  0E01               	movlw	1
  2496   000EAC  D001               	goto	u1412
  2497   000EAE                     u1410:
  2498   000EAE  0E00               	movlw	0
  2499   000EB0                     u1412:
  2500   000EB0  1408               	andwf	??_Movimiento^0,w,c
  2501   000EB2  A0E8               	btfss	wreg,0,c
  2502   000EB4  D005               	goto	l2385
  2503                           
  2504                           ;Proyecto.c: 156: a = 292;
  2505   000EB6  0E01               	movlw	1
  2506   000EB8  6E20               	movwf	(_a+1)^0,c
  2507   000EBA  0E24               	movlw	36
  2508   000EBC  6E1F               	movwf	_a^0,c
  2509                           
  2510                           ;Proyecto.c: 157: }else if(ADRES>511 & ADRES<=1918){
  2511   000EBE  0012               	return	
  2512   000EC0                     l2385:
  2513   000EC0  0E7F               	movlw	127
  2514   000EC2  5CC3               	subwf	195,w,c	;volatile
  2515   000EC4  0E07               	movlw	7
  2516   000EC6  58C4               	subwfb	196,w,c	;volatile
  2517   000EC8  B0D8               	btfsc	status,0,c
  2518   000ECA  D002               	goto	u1430
  2519   000ECC  0E01               	movlw	1
  2520   000ECE  D001               	goto	u1432
  2521   000ED0                     u1430:
  2522   000ED0  0E00               	movlw	0
  2523   000ED2                     u1432:
  2524   000ED2  6E08               	movwf	??_Movimiento^0,c
  2525   000ED4  0E00               	movlw	0
  2526   000ED6  5CC3               	subwf	195,w,c	;volatile
  2527   000ED8  0E02               	movlw	2
  2528   000EDA  58C4               	subwfb	196,w,c	;volatile
  2529   000EDC  A0D8               	btfss	status,0,c
  2530   000EDE  D002               	goto	u1440
  2531   000EE0  0E01               	movlw	1
  2532   000EE2  D001               	goto	u1442
  2533   000EE4                     u1440:
  2534   000EE4  0E00               	movlw	0
  2535   000EE6                     u1442:
  2536   000EE6  1408               	andwf	??_Movimiento^0,w,c
  2537   000EE8  A0E8               	btfss	wreg,0,c
  2538   000EEA  D005               	goto	l2389
  2539                           
  2540                           ;Proyecto.c: 158: a = 458;
  2541   000EEC  0E01               	movlw	1
  2542   000EEE  6E20               	movwf	(_a+1)^0,c
  2543   000EF0  0ECA               	movlw	202
  2544   000EF2  6E1F               	movwf	_a^0,c
  2545                           
  2546                           ;Proyecto.c: 159: }else if(ADRES>1918 & ADRES<=5115){
  2547   000EF4  0012               	return	
  2548   000EF6                     l2389:
  2549   000EF6  0EFC               	movlw	252
  2550   000EF8  5CC3               	subwf	195,w,c	;volatile
  2551   000EFA  0E13               	movlw	19
  2552   000EFC  58C4               	subwfb	196,w,c	;volatile
  2553   000EFE  B0D8               	btfsc	status,0,c
  2554   000F00  D002               	goto	u1460
  2555   000F02  0E01               	movlw	1
  2556   000F04  D001               	goto	u1462
  2557   000F06                     u1460:
  2558   000F06  0E00               	movlw	0
  2559   000F08                     u1462:
  2560   000F08  6E08               	movwf	??_Movimiento^0,c
  2561   000F0A  0E7F               	movlw	127
  2562   000F0C  5CC3               	subwf	195,w,c	;volatile
  2563   000F0E  0E07               	movlw	7
  2564   000F10  58C4               	subwfb	196,w,c	;volatile
  2565   000F12  A0D8               	btfss	status,0,c
  2566   000F14  D002               	goto	u1470
  2567   000F16  0E01               	movlw	1
  2568   000F18  D001               	goto	u1472
  2569   000F1A                     u1470:
  2570   000F1A  0E00               	movlw	0
  2571   000F1C                     u1472:
  2572   000F1C  1408               	andwf	??_Movimiento^0,w,c
  2573   000F1E  A0E8               	btfss	wreg,0,c
  2574   000F20  0012               	return	
  2575                           
  2576                           ;Proyecto.c: 160: a = 625;
  2577   000F22  0E02               	movlw	2
  2578   000F24  6E20               	movwf	(_a+1)^0,c
  2579   000F26  0E71               	movlw	113
  2580   000F28  6E1F               	movwf	_a^0,c
  2581   000F2A  0012               	return	
  2582   000F2C                     __end_of_Movimiento:
  2583                           	callstack 0
  2584                           
  2585 ;; *************** function _LeerHT11 *****************
  2586 ;; Defined at:
  2587 ;;		line 185 in file "Proyecto.c"
  2588 ;; Parameters:    Size  Location     Type
  2589 ;;		None
  2590 ;; Auto vars:     Size  Location     Type
  2591 ;;		None
  2592 ;; Return value:  Size  Location     Type
  2593 ;;                  1    wreg      void 
  2594 ;; Registers used:
  2595 ;;		wreg, status,2, status,0, cstack
  2596 ;; Tracked objects:
  2597 ;;		On entry : 0/0
  2598 ;;		On exit  : 0/0
  2599 ;;		Unchanged: 0/0
  2600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2601 ;;      Params:         0       0       0       0       0       0       0       0       0
  2602 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2603 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2604 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2605 ;;Total ram usage:        1 bytes
  2606 ;; Hardware stack levels used: 1
  2607 ;; Hardware stack levels required when called: 6
  2608 ;; This function calls:
  2609 ;;		_LeerByte
  2610 ;; This function is called by:
  2611 ;;		_main
  2612 ;; This function uses a non-reentrant model
  2613 ;;
  2614                           
  2615                           	psect	text16
  2616   0013FC                     __ptext16:
  2617                           	callstack 0
  2618   0013FC                     _LeerHT11:
  2619                           	callstack 24
  2620                           
  2621                           ;Proyecto.c: 187: TRISC0 = 0;
  2622                           
  2623                           ;incstack = 0
  2624   0013FC  9094               	bcf	3988,0,c	;volatile
  2625                           
  2626                           ;Proyecto.c: 188: _delay((unsigned long)((18)*(8000000/4000.0)));
  2627   0013FE  0E2F               	movlw	47
  2628   001400  6E0C               	movwf	??_LeerHT11^0,c
  2629   001402  0EC0               	movlw	192
  2630   001404                     u1807:
  2631   001404  2EE8               	decfsz	wreg,f,c
  2632   001406  D7FE               	bra	u1807
  2633   001408  2E0C               	decfsz	??_LeerHT11^0,f,c
  2634   00140A  D7FC               	bra	u1807
  2635                           
  2636                           ;Proyecto.c: 189: TRISC0 = 1;
  2637   00140C  8094               	bsf	3988,0,c	;volatile
  2638   00140E                     l264:
  2639   00140E  B082               	btfsc	3970,0,c	;volatile
  2640   001410  D7FE               	goto	l264
  2641                           
  2642                           ;Proyecto.c: 192: _delay((unsigned long)((120)*(8000000/4000000.0)));
  2643   001412  0E50               	movlw	80
  2644   001414                     u1817:
  2645   001414  2EE8               	decfsz	wreg,f,c
  2646   001416  D7FE               	bra	u1817
  2647   001418                     l267:
  2648   001418  B082               	btfsc	3970,0,c	;volatile
  2649   00141A  D7FE               	goto	l267
  2650                           
  2651                           ;Proyecto.c: 195: Humedad = LeerByte();
  2652   00141C  EC72  F00A         	call	_LeerByte	;wreg free
  2653   001420  6E2F               	movwf	_Humedad^0,c
  2654                           
  2655                           ;Proyecto.c: 196: LeerByte();
  2656   001422  EC72  F00A         	call	_LeerByte	;wreg free
  2657                           
  2658                           ;Proyecto.c: 197: Temp = LeerByte();
  2659   001426  EC72  F00A         	call	_LeerByte	;wreg free
  2660   00142A  6E30               	movwf	_Temp^0,c
  2661                           
  2662                           ;Proyecto.c: 198: LeerByte();
  2663   00142C  EC72  F00A         	call	_LeerByte	;wreg free
  2664                           
  2665                           ;Proyecto.c: 199: LeerByte();
  2666   001430  EC72  F00A         	call	_LeerByte	;wreg free
  2667   001434  0012               	return		;funcret
  2668   001436                     __end_of_LeerHT11:
  2669                           	callstack 0
  2670                           
  2671 ;; *************** function _LeerByte *****************
  2672 ;; Defined at:
  2673 ;;		line 202 in file "Proyecto.c"
  2674 ;; Parameters:    Size  Location     Type
  2675 ;;		None
  2676 ;; Auto vars:     Size  Location     Type
  2677 ;;  i               1   10[COMRAM] unsigned char 
  2678 ;;  res             1    9[COMRAM] unsigned char 
  2679 ;; Return value:  Size  Location     Type
  2680 ;;                  1    wreg      unsigned char 
  2681 ;; Registers used:
  2682 ;;		wreg, status,2, status,0, cstack
  2683 ;; Tracked objects:
  2684 ;;		On entry : 0/0
  2685 ;;		On exit  : 0/0
  2686 ;;		Unchanged: 0/0
  2687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2688 ;;      Params:         0       0       0       0       0       0       0       0       0
  2689 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2690 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2691 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2692 ;;Total ram usage:        3 bytes
  2693 ;; Hardware stack levels used: 1
  2694 ;; Hardware stack levels required when called: 5
  2695 ;; This function calls:
  2696 ;;		_LeerBit
  2697 ;; This function is called by:
  2698 ;;		_LeerHT11
  2699 ;; This function uses a non-reentrant model
  2700 ;;
  2701                           
  2702                           	psect	text17
  2703   0014E4                     __ptext17:
  2704                           	callstack 0
  2705   0014E4                     _LeerByte:
  2706                           	callstack 24
  2707                           
  2708                           ;Proyecto.c: 203: unsigned char res = 0, i;
  2709                           
  2710                           ;incstack = 0
  2711   0014E4  0E00               	movlw	0
  2712   0014E6  6E0A               	movwf	LeerByte@res^0,c
  2713                           
  2714                           ;Proyecto.c: 204: for (i = 8; i > 0; i--) {
  2715   0014E8  0E08               	movlw	8
  2716   0014EA  6E0B               	movwf	LeerByte@i^0,c
  2717   0014EC                     l2007:
  2718                           
  2719                           ;Proyecto.c: 205: res = (res << 1) | LeerBit();
  2720   0014EC  EC1B  F00A         	call	_LeerBit	;wreg free
  2721   0014F0  6E09               	movwf	??_LeerByte^0,c
  2722   0014F2  500A               	movf	LeerByte@res^0,w,c
  2723   0014F4  240A               	addwf	LeerByte@res^0,w,c
  2724   0014F6  1009               	iorwf	??_LeerByte^0,w,c
  2725   0014F8  6E0A               	movwf	LeerByte@res^0,c
  2726   0014FA  060B               	decf	LeerByte@i^0,f,c
  2727   0014FC  500B               	movf	LeerByte@i^0,w,c
  2728   0014FE  A4D8               	btfss	status,2,c
  2729   001500  D7F5               	goto	l2007
  2730                           
  2731                           ;Proyecto.c: 206: };Proyecto.c: 207: return res;
  2732   001502  500A               	movf	LeerByte@res^0,w,c
  2733   001504  0012               	return		;funcret
  2734   001506                     __end_of_LeerByte:
  2735                           	callstack 0
  2736                           
  2737 ;; *************** function _LeerBit *****************
  2738 ;; Defined at:
  2739 ;;		line 210 in file "Proyecto.c"
  2740 ;; Parameters:    Size  Location     Type
  2741 ;;		None
  2742 ;; Auto vars:     Size  Location     Type
  2743 ;;  res             1    7[COMRAM] unsigned char 
  2744 ;; Return value:  Size  Location     Type
  2745 ;;                  1    wreg      unsigned char 
  2746 ;; Registers used:
  2747 ;;		wreg, status,2
  2748 ;; Tracked objects:
  2749 ;;		On entry : 0/0
  2750 ;;		On exit  : 0/0
  2751 ;;		Unchanged: 0/0
  2752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2753 ;;      Params:         0       0       0       0       0       0       0       0       0
  2754 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2755 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2756 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2757 ;;Total ram usage:        1 bytes
  2758 ;; Hardware stack levels used: 1
  2759 ;; Hardware stack levels required when called: 4
  2760 ;; This function calls:
  2761 ;;		Nothing
  2762 ;; This function is called by:
  2763 ;;		_LeerByte
  2764 ;; This function uses a non-reentrant model
  2765 ;;
  2766                           
  2767                           	psect	text18
  2768   001436                     __ptext18:
  2769                           	callstack 0
  2770   001436                     _LeerBit:
  2771                           	callstack 24
  2772                           
  2773                           ;Proyecto.c: 211: unsigned char res = 0;
  2774                           
  2775                           ;incstack = 0
  2776   001436  0E00               	movlw	0
  2777   001438  6E08               	movwf	LeerBit@res^0,c
  2778   00143A                     l278:
  2779   00143A  A082               	btfss	3970,0,c	;volatile
  2780   00143C  D7FE               	goto	l278
  2781                           
  2782                           ;Proyecto.c: 213: _delay((unsigned long)((13)*(8000000/4000000.0)));
  2783   00143E  0E08               	movlw	8
  2784   001440                     u1827:
  2785   001440  2EE8               	decfsz	wreg,f,c
  2786   001442  D7FE               	bra	u1827
  2787   001444  D000               	nop2	
  2788                           
  2789                           ;Proyecto.c: 214: if (RC0 == 1) res = 0;
  2790   001446  A082               	btfss	3970,0,c	;volatile
  2791   001448  D002               	goto	l1927
  2792   00144A  0E00               	movlw	0
  2793   00144C  6E08               	movwf	LeerBit@res^0,c
  2794   00144E                     l1927:
  2795                           
  2796                           ;Proyecto.c: 215: _delay((unsigned long)((22)*(8000000/4000000.0)));
  2797   00144E  0E0E               	movlw	14
  2798   001450                     u1837:
  2799   001450  2EE8               	decfsz	wreg,f,c
  2800   001452  D7FE               	bra	u1837
  2801   001454  D000               	nop2	
  2802                           
  2803                           ;Proyecto.c: 216: if (RC0 == 1) {
  2804   001456  A082               	btfss	3970,0,c	;volatile
  2805   001458  D004               	goto	u910
  2806                           
  2807                           ;Proyecto.c: 217: res = 1;
  2808   00145A  0E01               	movlw	1
  2809   00145C  6E08               	movwf	LeerBit@res^0,c
  2810   00145E                     l283:
  2811   00145E  B082               	btfsc	3970,0,c	;volatile
  2812   001460  D7FE               	goto	l283
  2813   001462                     u910:
  2814                           
  2815                           ;Proyecto.c: 219: };Proyecto.c: 220: return res;
  2816   001462  5008               	movf	LeerBit@res^0,w,c
  2817   001464  0012               	return		;funcret
  2818   001466                     __end_of_LeerBit:
  2819                           	callstack 0
  2820                           
  2821 ;; *************** function _InicializaLCD *****************
  2822 ;; Defined at:
  2823 ;;		line 74 in file "LibLCDXC8.h"
  2824 ;; Parameters:    Size  Location     Type
  2825 ;;		None
  2826 ;; Auto vars:     Size  Location     Type
  2827 ;;		None
  2828 ;; Return value:  Size  Location     Type
  2829 ;;                  1    wreg      void 
  2830 ;; Registers used:
  2831 ;;		wreg, status,2, status,0, cstack
  2832 ;; Tracked objects:
  2833 ;;		On entry : 0/0
  2834 ;;		On exit  : 0/0
  2835 ;;		Unchanged: 0/0
  2836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2837 ;;      Params:         0       0       0       0       0       0       0       0       0
  2838 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2839 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2840 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2841 ;;Total ram usage:        0 bytes
  2842 ;; Hardware stack levels used: 1
  2843 ;; Hardware stack levels required when called: 7
  2844 ;; This function calls:
  2845 ;;		_BorraLCD
  2846 ;;		_EnviaDato
  2847 ;;		_HabilitaLCD
  2848 ;;		_RetardoLCD
  2849 ;; This function is called by:
  2850 ;;		_main
  2851 ;; This function uses a non-reentrant model
  2852 ;;
  2853                           
  2854                           	psect	text19
  2855   000FF2                     __ptext19:
  2856                           	callstack 0
  2857   000FF2                     _InicializaLCD:
  2858                           	callstack 23
  2859                           
  2860                           ;LibLCDXC8.h: 76: LATE1=0;
  2861                           
  2862                           ;incstack = 0
  2863   000FF2  928D               	bcf	3981,1,c	;volatile
  2864                           
  2865                           ;LibLCDXC8.h: 77: if(interfaz==4)
  2866   000FF4  0E04               	movlw	4
  2867   000FF6  1822               	xorwf	_interfaz^0,w,c
  2868   000FF8  A4D8               	btfss	status,2,c
  2869   000FFA  D004               	goto	l2171
  2870                           
  2871                           ;LibLCDXC8.h: 78: LATD=(LATD & 0b00001111) | 0x30;
  2872   000FFC  508C               	movf	140,w,c	;volatile
  2873   000FFE  0B0F               	andlw	15
  2874   001000  0930               	iorlw	48
  2875   001002  D001               	goto	L4
  2876   001004                     l2171:
  2877                           
  2878                           ;LibLCDXC8.h: 79: else;LibLCDXC8.h: 80: LATD=0x3F;
  2879   001004  0E3F               	movlw	63
  2880   001006                     L4:
  2881   001006  6E8C               	movwf	140,c	;volatile
  2882                           
  2883                           ;LibLCDXC8.h: 81: HabilitaLCD();
  2884   001008  ECB8  F00A         	call	_HabilitaLCD	;wreg free
  2885                           
  2886                           ;LibLCDXC8.h: 82: RetardoLCD(1);
  2887   00100C  0E01               	movlw	1
  2888   00100E  EC89  F008         	call	_RetardoLCD
  2889                           
  2890                           ;LibLCDXC8.h: 83: if(interfaz==4)
  2891   001012  0E04               	movlw	4
  2892   001014  1822               	xorwf	_interfaz^0,w,c
  2893   001016  A4D8               	btfss	status,2,c
  2894   001018  D004               	goto	l2181
  2895                           
  2896                           ;LibLCDXC8.h: 84: LATD=(LATD & 0b00001111) | 0x30;
  2897   00101A  508C               	movf	140,w,c	;volatile
  2898   00101C  0B0F               	andlw	15
  2899   00101E  0930               	iorlw	48
  2900   001020  D001               	goto	L5
  2901   001022                     l2181:
  2902                           
  2903                           ;LibLCDXC8.h: 85: else;LibLCDXC8.h: 86: LATD=0x3F;
  2904   001022  0E3F               	movlw	63
  2905   001024                     L5:
  2906   001024  6E8C               	movwf	140,c	;volatile
  2907                           
  2908                           ;LibLCDXC8.h: 87: HabilitaLCD();
  2909   001026  ECB8  F00A         	call	_HabilitaLCD	;wreg free
  2910                           
  2911                           ;LibLCDXC8.h: 88: RetardoLCD(3);
  2912   00102A  0E03               	movlw	3
  2913   00102C  EC89  F008         	call	_RetardoLCD
  2914                           
  2915                           ;LibLCDXC8.h: 89: if(interfaz==4)
  2916   001030  0E04               	movlw	4
  2917   001032  1822               	xorwf	_interfaz^0,w,c
  2918   001034  A4D8               	btfss	status,2,c
  2919   001036  D004               	goto	l2191
  2920                           
  2921                           ;LibLCDXC8.h: 90: LATD=(LATD & 0b00001111) | 0x30;
  2922   001038  508C               	movf	140,w,c	;volatile
  2923   00103A  0B0F               	andlw	15
  2924   00103C  0930               	iorlw	48
  2925   00103E  D001               	goto	L6
  2926   001040                     l2191:
  2927                           
  2928                           ;LibLCDXC8.h: 91: else;LibLCDXC8.h: 92: LATD=0x3F;
  2929   001040  0E3F               	movlw	63
  2930   001042                     L6:
  2931   001042  6E8C               	movwf	140,c	;volatile
  2932                           
  2933                           ;LibLCDXC8.h: 93: HabilitaLCD();
  2934   001044  ECB8  F00A         	call	_HabilitaLCD	;wreg free
  2935                           
  2936                           ;LibLCDXC8.h: 94: RetardoLCD(4);
  2937   001048  0E04               	movlw	4
  2938   00104A  EC89  F008         	call	_RetardoLCD
  2939                           
  2940                           ;LibLCDXC8.h: 95: if(interfaz==4){
  2941   00104E  0E04               	movlw	4
  2942   001050  1822               	xorwf	_interfaz^0,w,c
  2943   001052  A4D8               	btfss	status,2,c
  2944   001054  D011               	goto	l2211
  2945                           
  2946                           ;LibLCDXC8.h: 96: LATD=(LATD & 0b00001111) | 0x20;
  2947   001056  508C               	movf	140,w,c	;volatile
  2948   001058  0B0F               	andlw	15
  2949   00105A  0920               	iorlw	32
  2950   00105C  6E8C               	movwf	140,c	;volatile
  2951                           
  2952                           ;LibLCDXC8.h: 97: HabilitaLCD();
  2953   00105E  ECB8  F00A         	call	_HabilitaLCD	;wreg free
  2954                           
  2955                           ;LibLCDXC8.h: 98: RetardoLCD(4);
  2956   001062  0E04               	movlw	4
  2957   001064  EC89  F008         	call	_RetardoLCD
  2958                           
  2959                           ;LibLCDXC8.h: 99: EnviaDato(0x2F);
  2960   001068  0E2F               	movlw	47
  2961   00106A  EC3F  F009         	call	_EnviaDato
  2962                           
  2963                           ;LibLCDXC8.h: 100: HabilitaLCD();
  2964   00106E  ECB8  F00A         	call	_HabilitaLCD	;wreg free
  2965                           
  2966                           ;LibLCDXC8.h: 101: RetardoLCD(4);
  2967   001072  0E04               	movlw	4
  2968   001074  EC89  F008         	call	_RetardoLCD
  2969   001078                     l2211:
  2970                           
  2971                           ;LibLCDXC8.h: 102: };LibLCDXC8.h: 103: BorraLCD();
  2972   001078  ECA4  F00A         	call	_BorraLCD	;wreg free
  2973                           
  2974                           ;LibLCDXC8.h: 104: EnviaDato(0xF);
  2975   00107C  0E0F               	movlw	15
  2976   00107E  EC3F  F009         	call	_EnviaDato
  2977                           
  2978                           ;LibLCDXC8.h: 105: HabilitaLCD();
  2979   001082  ECB8  F00A         	call	_HabilitaLCD	;wreg free
  2980                           
  2981                           ;LibLCDXC8.h: 106: RetardoLCD(4);
  2982   001086  0E04               	movlw	4
  2983   001088  EC89  F008         	call	_RetardoLCD
  2984   00108C  0012               	return		;funcret
  2985   00108E                     __end_of_InicializaLCD:
  2986                           	callstack 0
  2987                           
  2988 ;; *************** function _BorraLCD *****************
  2989 ;; Defined at:
  2990 ;;		line 115 in file "LibLCDXC8.h"
  2991 ;; Parameters:    Size  Location     Type
  2992 ;;		None
  2993 ;; Auto vars:     Size  Location     Type
  2994 ;;		None
  2995 ;; Return value:  Size  Location     Type
  2996 ;;                  1    wreg      void 
  2997 ;; Registers used:
  2998 ;;		wreg, status,2, status,0, cstack
  2999 ;; Tracked objects:
  3000 ;;		On entry : 0/0
  3001 ;;		On exit  : 0/0
  3002 ;;		Unchanged: 0/0
  3003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3004 ;;      Params:         0       0       0       0       0       0       0       0       0
  3005 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3006 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3007 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3008 ;;Total ram usage:        0 bytes
  3009 ;; Hardware stack levels used: 1
  3010 ;; Hardware stack levels required when called: 6
  3011 ;; This function calls:
  3012 ;;		_EnviaDato
  3013 ;;		_HabilitaLCD
  3014 ;;		_RetardoLCD
  3015 ;; This function is called by:
  3016 ;;		_InicializaLCD
  3017 ;;		_main
  3018 ;;		_TransmitirDatos
  3019 ;; This function uses a non-reentrant model
  3020 ;;
  3021                           
  3022                           	psect	text20
  3023   001548                     __ptext20:
  3024                           	callstack 0
  3025   001548                     _BorraLCD:
  3026                           	callstack 23
  3027                           
  3028                           ;LibLCDXC8.h: 117: LATE1=0;
  3029                           
  3030                           ;incstack = 0
  3031   001548  928D               	bcf	3981,1,c	;volatile
  3032                           
  3033                           ;LibLCDXC8.h: 118: EnviaDato(0x01);
  3034   00154A  0E01               	movlw	1
  3035   00154C  EC3F  F009         	call	_EnviaDato
  3036                           
  3037                           ;LibLCDXC8.h: 119: HabilitaLCD();
  3038   001550  ECB8  F00A         	call	_HabilitaLCD	;wreg free
  3039                           
  3040                           ;LibLCDXC8.h: 120: RetardoLCD(2);
  3041   001554  0E02               	movlw	2
  3042   001556  EC89  F008         	call	_RetardoLCD
  3043   00155A  0012               	return		;funcret
  3044   00155C                     __end_of_BorraLCD:
  3045                           	callstack 0
  3046                           
  3047 ;; *************** function _EnviaDato *****************
  3048 ;; Defined at:
  3049 ;;		line 62 in file "LibLCDXC8.h"
  3050 ;; Parameters:    Size  Location     Type
  3051 ;;  a               1    wreg     unsigned char 
  3052 ;; Auto vars:     Size  Location     Type
  3053 ;;  a               1   10[COMRAM] unsigned char 
  3054 ;; Return value:  Size  Location     Type
  3055 ;;                  1    wreg      void 
  3056 ;; Registers used:
  3057 ;;		wreg, status,2, status,0, cstack
  3058 ;; Tracked objects:
  3059 ;;		On entry : 0/0
  3060 ;;		On exit  : 0/0
  3061 ;;		Unchanged: 0/0
  3062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3063 ;;      Params:         0       0       0       0       0       0       0       0       0
  3064 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3065 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3066 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3067 ;;Total ram usage:        2 bytes
  3068 ;; Hardware stack levels used: 1
  3069 ;; Hardware stack levels required when called: 5
  3070 ;; This function calls:
  3071 ;;		_HabilitaLCD
  3072 ;;		_RetardoLCD
  3073 ;; This function is called by:
  3074 ;;		_InicializaLCD
  3075 ;;		_BorraLCD
  3076 ;;		_EscribeLCD_c
  3077 ;;		_DireccionaLCD
  3078 ;; This function uses a non-reentrant model
  3079 ;;
  3080                           
  3081                           	psect	text21
  3082   00127E                     __ptext21:
  3083                           	callstack 0
  3084   00127E                     _EnviaDato:
  3085                           	callstack 22
  3086                           
  3087                           ;incstack = 0
  3088                           ;EnviaDato@a stored from wreg
  3089   00127E  6E0B               	movwf	EnviaDato@a^0,c
  3090                           
  3091                           ;LibLCDXC8.h: 63: if(interfaz==4){
  3092   001280  0E04               	movlw	4
  3093   001282  1822               	xorwf	_interfaz^0,w,c
  3094   001284  A4D8               	btfss	status,2,c
  3095   001286  D017               	goto	l1907
  3096                           
  3097                           ;LibLCDXC8.h: 64: LATD=(LATD & 0b00001111) | (a & 0b11110000);
  3098   001288  C00B  F00A         	movff	EnviaDato@a,??_EnviaDato
  3099   00128C  0EF0               	movlw	240
  3100   00128E  160A               	andwf	??_EnviaDato^0,f,c
  3101   001290  508C               	movf	140,w,c	;volatile
  3102   001292  0B0F               	andlw	15
  3103   001294  100A               	iorwf	??_EnviaDato^0,w,c
  3104   001296  6E8C               	movwf	140,c	;volatile
  3105                           
  3106                           ;LibLCDXC8.h: 65: HabilitaLCD();
  3107   001298  ECB8  F00A         	call	_HabilitaLCD	;wreg free
  3108                           
  3109                           ;LibLCDXC8.h: 66: RetardoLCD(1);
  3110   00129C  0E01               	movlw	1
  3111   00129E  EC89  F008         	call	_RetardoLCD
  3112                           
  3113                           ;LibLCDXC8.h: 67: LATD=(LATD & 0b00001111) | (a<<4);
  3114   0012A2  C00B  F00A         	movff	EnviaDato@a,??_EnviaDato
  3115   0012A6  3A0A               	swapf	??_EnviaDato^0,f,c
  3116   0012A8  0EF0               	movlw	240
  3117   0012AA  160A               	andwf	??_EnviaDato^0,f,c
  3118   0012AC  508C               	movf	140,w,c	;volatile
  3119   0012AE  0B0F               	andlw	15
  3120   0012B0  100A               	iorwf	??_EnviaDato^0,w,c
  3121   0012B2  6E8C               	movwf	140,c	;volatile
  3122                           
  3123                           ;LibLCDXC8.h: 70: }else if(interfaz==8){
  3124   0012B4  0012               	return	
  3125   0012B6                     l1907:
  3126   0012B6  0E08               	movlw	8
  3127   0012B8  1822               	xorwf	_interfaz^0,w,c
  3128   0012BA  A4D8               	btfss	status,2,c
  3129   0012BC  0012               	return	
  3130                           
  3131                           ;LibLCDXC8.h: 71: LATD=a;
  3132   0012BE  C00B  FF8C         	movff	EnviaDato@a,3980	;volatile
  3133   0012C2  0012               	return		;funcret
  3134   0012C4                     __end_of_EnviaDato:
  3135                           	callstack 0
  3136                           
  3137 ;; *************** function _RetardoLCD *****************
  3138 ;; Defined at:
  3139 ;;		line 295 in file "LibLCDXC8.h"
  3140 ;; Parameters:    Size  Location     Type
  3141 ;;  a               1    wreg     unsigned char 
  3142 ;; Auto vars:     Size  Location     Type
  3143 ;;  a               1    8[COMRAM] unsigned char 
  3144 ;; Return value:  Size  Location     Type
  3145 ;;                  1    wreg      void 
  3146 ;; Registers used:
  3147 ;;		wreg, status,2, status,0
  3148 ;; Tracked objects:
  3149 ;;		On entry : 0/0
  3150 ;;		On exit  : 0/0
  3151 ;;		Unchanged: 0/0
  3152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3153 ;;      Params:         0       0       0       0       0       0       0       0       0
  3154 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3155 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3156 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3157 ;;Total ram usage:        2 bytes
  3158 ;; Hardware stack levels used: 1
  3159 ;; Hardware stack levels required when called: 4
  3160 ;; This function calls:
  3161 ;;		Nothing
  3162 ;; This function is called by:
  3163 ;;		_EnviaDato
  3164 ;;		_InicializaLCD
  3165 ;;		_BorraLCD
  3166 ;;		_EscribeLCD_c
  3167 ;;		_DireccionaLCD
  3168 ;; This function uses a non-reentrant model
  3169 ;;
  3170                           
  3171                           	psect	text22
  3172   001112                     __ptext22:
  3173                           	callstack 0
  3174   001112                     _RetardoLCD:
  3175                           	callstack 23
  3176                           
  3177                           ;incstack = 0
  3178                           ;RetardoLCD@a stored from wreg
  3179   001112  6E09               	movwf	RetardoLCD@a^0,c
  3180                           
  3181                           ;LibLCDXC8.h: 296: switch(a){
  3182   001114  D023               	goto	l1895
  3183   001116                     l1885:
  3184   001116  0E27               	movlw	39
  3185   001118  6E08               	movwf	??_RetardoLCD^0,c
  3186   00111A  0EF5               	movlw	245
  3187   00111C                     u1847:
  3188   00111C  2EE8               	decfsz	wreg,f,c
  3189   00111E  D7FE               	bra	u1847
  3190   001120  2E08               	decfsz	??_RetardoLCD^0,f,c
  3191   001122  D7FC               	bra	u1847
  3192   001124  F000               	nop	
  3193                           
  3194                           ;LibLCDXC8.h: 299: break;
  3195   001126  0012               	return	
  3196   001128                     l1887:
  3197   001128  0E03               	movlw	3
  3198   00112A  6E08               	movwf	??_RetardoLCD^0,c
  3199   00112C  0E98               	movlw	152
  3200   00112E                     u1857:
  3201   00112E  2EE8               	decfsz	wreg,f,c
  3202   001130  D7FE               	bra	u1857
  3203   001132  2E08               	decfsz	??_RetardoLCD^0,f,c
  3204   001134  D7FC               	bra	u1857
  3205                           
  3206                           ;LibLCDXC8.h: 301: _delay((unsigned long)((640)*(8000000/4000000.0)));
  3207   001136  0EB6               	movlw	182
  3208   001138                     u1867:
  3209   001138  D000               	nop2	
  3210   00113A  D000               	nop2	
  3211   00113C  2EE8               	decfsz	wreg,f,c
  3212   00113E  D7FC               	bra	u1867
  3213   001140  D000               	nop2	
  3214   001142  D000               	nop2	
  3215   001144  D000               	nop2	
  3216                           
  3217                           ;LibLCDXC8.h: 303: break;
  3218   001146  0012               	return	
  3219   001148                     l1889:
  3220   001148  0E42               	movlw	66
  3221   00114A                     u1877:
  3222   00114A  2EE8               	decfsz	wreg,f,c
  3223   00114C  D7FE               	bra	u1877
  3224   00114E  D000               	nop2	
  3225                           
  3226                           ;LibLCDXC8.h: 306: break;
  3227   001150  0012               	return	
  3228   001152                     l1891:
  3229   001152  0E1A               	movlw	26
  3230   001154                     u1887:
  3231   001154  2EE8               	decfsz	wreg,f,c
  3232   001156  D7FE               	bra	u1887
  3233   001158  D000               	nop2	
  3234                           
  3235                           ;LibLCDXC8.h: 309: break;
  3236   00115A  0012               	return	
  3237   00115C                     l1895:
  3238   00115C  5009               	movf	RetardoLCD@a^0,w,c
  3239                           
  3240                           ; Switch size 1, requested type "simple"
  3241                           ; Number of cases is 4, Range of values is 1 to 4
  3242                           ; switch strategies available:
  3243                           ; Name         Instructions Cycles
  3244                           ; simple_byte           13     7 (average)
  3245                           ;	Chosen strategy is simple_byte
  3246   00115E  0A01               	xorlw	1	; case 1
  3247   001160  B4D8               	btfsc	status,2,c
  3248   001162  D7D9               	goto	l1885
  3249   001164  0A03               	xorlw	3	; case 2
  3250   001166  B4D8               	btfsc	status,2,c
  3251   001168  D7DF               	goto	l1887
  3252   00116A  0A01               	xorlw	1	; case 3
  3253   00116C  B4D8               	btfsc	status,2,c
  3254   00116E  D7EC               	goto	l1889
  3255   001170  0A07               	xorlw	7	; case 4
  3256   001172  A4D8               	btfss	status,2,c
  3257   001174  0012               	return	
  3258   001176  D7ED               	goto	l1891
  3259   001178                     __end_of_RetardoLCD:
  3260                           	callstack 0
  3261                           
  3262 ;; *************** function _HabilitaLCD *****************
  3263 ;; Defined at:
  3264 ;;		line 108 in file "LibLCDXC8.h"
  3265 ;; Parameters:    Size  Location     Type
  3266 ;;		None
  3267 ;; Auto vars:     Size  Location     Type
  3268 ;;		None
  3269 ;; Return value:  Size  Location     Type
  3270 ;;                  1    wreg      void 
  3271 ;; Registers used:
  3272 ;;		wreg
  3273 ;; Tracked objects:
  3274 ;;		On entry : 0/0
  3275 ;;		On exit  : 0/0
  3276 ;;		Unchanged: 0/0
  3277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3278 ;;      Params:         0       0       0       0       0       0       0       0       0
  3279 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3280 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3281 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3282 ;;Total ram usage:        0 bytes
  3283 ;; Hardware stack levels used: 1
  3284 ;; Hardware stack levels required when called: 4
  3285 ;; This function calls:
  3286 ;;		Nothing
  3287 ;; This function is called by:
  3288 ;;		_EnviaDato
  3289 ;;		_InicializaLCD
  3290 ;;		_BorraLCD
  3291 ;;		_EscribeLCD_c
  3292 ;;		_DireccionaLCD
  3293 ;; This function uses a non-reentrant model
  3294 ;;
  3295                           
  3296                           	psect	text23
  3297   001570                     __ptext23:
  3298                           	callstack 0
  3299   001570                     _HabilitaLCD:
  3300                           	callstack 23
  3301                           
  3302                           ;LibLCDXC8.h: 110: LATE2=1;
  3303                           
  3304                           ;incstack = 0
  3305   001570  848D               	bsf	3981,2,c	;volatile
  3306                           
  3307                           ;LibLCDXC8.h: 111: _delay((unsigned long)((40)*(8000000/4000000.0)));
  3308   001572  0E1A               	movlw	26
  3309   001574                     u1897:
  3310   001574  2EE8               	decfsz	wreg,f,c
  3311   001576  D7FE               	bra	u1897
  3312   001578  D000               	nop2	
  3313                           
  3314                           ;LibLCDXC8.h: 113: LATE2=0;
  3315   00157A  948D               	bcf	3981,2,c	;volatile
  3316   00157C  0012               	return		;funcret
  3317   00157E                     __end_of_HabilitaLCD:
  3318                           	callstack 0
  3319                           
  3320 ;; *************** function _ConvertirUnidades *****************
  3321 ;; Defined at:
  3322 ;;		line 282 in file "Proyecto.c"
  3323 ;; Parameters:    Size  Location     Type
  3324 ;;  canal           1    wreg     unsigned char 
  3325 ;; Auto vars:     Size  Location     Type
  3326 ;;  canal           1    7[COMRAM] unsigned char 
  3327 ;; Return value:  Size  Location     Type
  3328 ;;                  2  112[None  ] unsigned int 
  3329 ;; Registers used:
  3330 ;;		wreg, status,2, status,0
  3331 ;; Tracked objects:
  3332 ;;		On entry : 0/0
  3333 ;;		On exit  : 0/0
  3334 ;;		Unchanged: 0/0
  3335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3336 ;;      Params:         0       0       0       0       0       0       0       0       0
  3337 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3338 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3339 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3340 ;;Total ram usage:        1 bytes
  3341 ;; Hardware stack levels used: 1
  3342 ;; Hardware stack levels required when called: 4
  3343 ;; This function calls:
  3344 ;;		Nothing
  3345 ;; This function is called by:
  3346 ;;		_main
  3347 ;; This function uses a non-reentrant model
  3348 ;;
  3349                           
  3350                           	psect	text24
  3351   00155C                     __ptext24:
  3352                           	callstack 0
  3353   00155C                     _ConvertirUnidades:
  3354                           	callstack 26
  3355                           
  3356                           ;incstack = 0
  3357                           ;ConvertirUnidades@canal stored from wreg
  3358   00155C  6E08               	movwf	ConvertirUnidades@canal^0,c
  3359                           
  3360                           ;Proyecto.c: 283: ADCON0 = 0b00000101 | (canal << 2);
  3361   00155E  4408               	rlncf	ConvertirUnidades@canal^0,w,c
  3362   001560  46E8               	rlncf	wreg,f,c
  3363   001562  0BFC               	andlw	252
  3364   001564  0905               	iorlw	5
  3365   001566  6EC2               	movwf	194,c	;volatile
  3366                           
  3367                           ;Proyecto.c: 284: GO = 1;
  3368   001568  82C2               	bsf	4034,1,c	;volatile
  3369   00156A                     l316:
  3370   00156A  A2C2               	btfss	4034,1,c	;volatile
  3371   00156C  0012               	return	
  3372   00156E  D7FD               	goto	l316
  3373   001570                     __end_of_ConvertirUnidades:
  3374                           	callstack 0
  3375                           
  3376 ;; *************** function _ISR *****************
  3377 ;; Defined at:
  3378 ;;		line 358 in file "Proyecto.c"
  3379 ;; Parameters:    Size  Location     Type
  3380 ;;		None
  3381 ;; Auto vars:     Size  Location     Type
  3382 ;;		None
  3383 ;; Return value:  Size  Location     Type
  3384 ;;                  1    wreg      void 
  3385 ;; Registers used:
  3386 ;;		wreg, status,2, status,0, cstack
  3387 ;; Tracked objects:
  3388 ;;		On entry : 0/0
  3389 ;;		On exit  : 0/0
  3390 ;;		Unchanged: 0/0
  3391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3392 ;;      Params:         0       0       0       0       0       0       0       0       0
  3393 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3394 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3395 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3396 ;;Total ram usage:        2 bytes
  3397 ;; Hardware stack levels used: 1
  3398 ;; Hardware stack levels required when called: 3
  3399 ;; This function calls:
  3400 ;;		_LeerTeclado
  3401 ;;		i2_EscribeLCD_c
  3402 ;; This function is called by:
  3403 ;;		Interrupt level 2
  3404 ;; This function uses a non-reentrant model
  3405 ;;
  3406                           
  3407                           	psect	intcode
  3408   000008                     __pintcode:
  3409                           	callstack 0
  3410   000008                     _ISR:
  3411                           	callstack 22
  3412                           
  3413                           ;incstack = 0
  3414   000008  8231               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  3415   00000A  ED30  F006         	call	int_func,f	;refresh shadow registers
  3416                           
  3417                           	psect	intcode_body
  3418   000C60                     __pintcode_body:
  3419                           	callstack 22
  3420   000C60                     int_func:
  3421                           	callstack 22
  3422   000C60  0006               	pop		; remove dummy address from shadow register refresh
  3423                           
  3424                           ;Proyecto.c: 359: if(TMR0IF == 1){
  3425   000C62  A4F2               	btfss	4082,2,c	;volatile
  3426   000C64  D017               	goto	i2l340
  3427                           
  3428                           ;Proyecto.c: 360: TMR0IF = 0;
  3429   000C66  94F2               	bcf	4082,2,c	;volatile
  3430                           
  3431                           ;Proyecto.c: 361: TMR0 = 64286;
  3432   000C68  0EFB               	movlw	251
  3433   000C6A  6ED7               	movwf	215,c	;volatile
  3434   000C6C  0E1E               	movlw	30
  3435   000C6E  6ED6               	movwf	214,c	;volatile
  3436                           
  3437                           ;Proyecto.c: 362: if(RE0 == 1){
  3438   000C70  A084               	btfss	3972,0,c	;volatile
  3439   000C72  D010               	goto	i2l340
  3440                           
  3441                           ;Proyecto.c: 363: CCP1CON = 0 ;
  3442   000C74  0E00               	movlw	0
  3443   000C76  6EBD               	movwf	189,c	;volatile
  3444                           
  3445                           ;Proyecto.c: 364: _delay((unsigned long)((100)*(8000000/4000.0)));
  3446   000C78  0E02               	movlw	2
  3447   000C7A  6E07               	movwf	(??_ISR+1)^0,c
  3448   000C7C  0E04               	movlw	4
  3449   000C7E  6E06               	movwf	??_ISR^0,c
  3450   000C80  0EBA               	movlw	186
  3451   000C82                     i2u190_47:
  3452   000C82  2EE8               	decfsz	wreg,f,c
  3453   000C84  D7FE               	bra	i2u190_47
  3454   000C86  2E06               	decfsz	??_ISR^0,f,c
  3455   000C88  D7FC               	bra	i2u190_47
  3456   000C8A  2E07               	decfsz	(??_ISR+1)^0,f,c
  3457   000C8C  D7FA               	bra	i2u190_47
  3458   000C8E  D000               	nop2	
  3459   000C90  0003               	sleep		;# 
  3460   000C92                     i2l342:
  3461   000C92  D7FF               	goto	i2l342
  3462   000C94                     i2l340:
  3463                           
  3464                           ;Proyecto.c: 367: };Proyecto.c: 368: };Proyecto.c: 369: if(RBIF==1){
  3465   000C94  A0F2               	btfss	4082,0,c	;volatile
  3466   000C96  D063               	goto	i2l2575
  3467                           
  3468                           ;Proyecto.c: 370: if(PORTB!=0b11110000){
  3469   000C98  0EF0               	movlw	240
  3470   000C9A  1881               	xorwf	129,w,c	;volatile
  3471   000C9C  B4D8               	btfsc	status,2,c
  3472   000C9E  D053               	goto	i2l2571
  3473                           
  3474                           ;Proyecto.c: 371: Tecla=0;
  3475   000CA0  0E00               	movlw	0
  3476   000CA2  6E2E               	movwf	_Tecla^0,c
  3477                           
  3478                           ;Proyecto.c: 372: LATB=0b11111110;
  3479   000CA4  0EFE               	movlw	254
  3480   000CA6  6E8A               	movwf	138,c	;volatile
  3481                           
  3482                           ;Proyecto.c: 373: if(RB4==0) Tecla=16;
  3483   000CA8  B881               	btfsc	3969,4,c	;volatile
  3484   000CAA  D002               	goto	i2l347
  3485   000CAC  0E10               	movlw	16
  3486   000CAE  D041               	goto	L21
  3487   000CB0                     i2l347:
  3488                           
  3489                           ;Proyecto.c: 374: else if(RB5==0) Tecla=12;
  3490   000CB0  BA81               	btfsc	3969,5,c	;volatile
  3491   000CB2  D002               	goto	i2l349
  3492   000CB4  0E0C               	movlw	12
  3493   000CB6  D03D               	goto	L21
  3494   000CB8                     i2l349:
  3495                           
  3496                           ;Proyecto.c: 375: else if(RB6==0) Tecla=8;
  3497   000CB8  BC81               	btfsc	3969,6,c	;volatile
  3498   000CBA  D002               	goto	i2l351
  3499   000CBC  0E08               	movlw	8
  3500   000CBE  D039               	goto	L21
  3501   000CC0                     i2l351:
  3502                           
  3503                           ;Proyecto.c: 376: else if(RB7==0) Tecla=4;
  3504   000CC0  BE81               	btfsc	3969,7,c	;volatile
  3505   000CC2  D002               	goto	i2l2529
  3506   000CC4  0E04               	movlw	4
  3507   000CC6  D035               	goto	L21
  3508   000CC8                     i2l2529:
  3509                           
  3510                           ;Proyecto.c: 377: else{;Proyecto.c: 378: LATB=0b11111101;
  3511   000CC8  0EFD               	movlw	253
  3512   000CCA  6E8A               	movwf	138,c	;volatile
  3513                           
  3514                           ;Proyecto.c: 379: if(RB4==0) Tecla=15;
  3515   000CCC  B881               	btfsc	3969,4,c	;volatile
  3516   000CCE  D002               	goto	i2l355
  3517   000CD0  0E0F               	movlw	15
  3518   000CD2  D02F               	goto	L21
  3519   000CD4                     i2l355:
  3520                           
  3521                           ;Proyecto.c: 380: else if(RB5==0) Tecla=11;
  3522   000CD4  BA81               	btfsc	3969,5,c	;volatile
  3523   000CD6  D002               	goto	i2l357
  3524   000CD8  0E0B               	movlw	11
  3525   000CDA  D02B               	goto	L21
  3526   000CDC                     i2l357:
  3527                           
  3528                           ;Proyecto.c: 381: else if(RB6==0) Tecla=7;
  3529   000CDC  BC81               	btfsc	3969,6,c	;volatile
  3530   000CDE  D002               	goto	i2l359
  3531   000CE0  0E07               	movlw	7
  3532   000CE2  D027               	goto	L21
  3533   000CE4                     i2l359:
  3534                           
  3535                           ;Proyecto.c: 382: else if(RB7==0) Tecla=3;
  3536   000CE4  BE81               	btfsc	3969,7,c	;volatile
  3537   000CE6  D002               	goto	i2l2541
  3538   000CE8  0E03               	movlw	3
  3539   000CEA  D023               	goto	L21
  3540   000CEC                     i2l2541:
  3541                           
  3542                           ;Proyecto.c: 383: else{;Proyecto.c: 384: LATB=0b11111011;
  3543   000CEC  0EFB               	movlw	251
  3544   000CEE  6E8A               	movwf	138,c	;volatile
  3545                           
  3546                           ;Proyecto.c: 385: if(RB4==0) Tecla=14;
  3547   000CF0  B881               	btfsc	3969,4,c	;volatile
  3548   000CF2  D002               	goto	i2l363
  3549   000CF4  0E0E               	movlw	14
  3550   000CF6  D01D               	goto	L21
  3551   000CF8                     i2l363:
  3552                           
  3553                           ;Proyecto.c: 386: else if(RB5==0) Tecla=10;
  3554   000CF8  BA81               	btfsc	3969,5,c	;volatile
  3555   000CFA  D002               	goto	i2l365
  3556   000CFC  0E0A               	movlw	10
  3557   000CFE  D019               	goto	L21
  3558   000D00                     i2l365:
  3559                           
  3560                           ;Proyecto.c: 387: else if(RB6==0) Tecla=6;
  3561   000D00  BC81               	btfsc	3969,6,c	;volatile
  3562   000D02  D002               	goto	i2l367
  3563   000D04  0E06               	movlw	6
  3564   000D06  D015               	goto	L21
  3565   000D08                     i2l367:
  3566                           
  3567                           ;Proyecto.c: 388: else if(RB7==0) Tecla=2;
  3568   000D08  BE81               	btfsc	3969,7,c	;volatile
  3569   000D0A  D002               	goto	i2l2553
  3570   000D0C  0E02               	movlw	2
  3571   000D0E  D011               	goto	L21
  3572   000D10                     i2l2553:
  3573                           
  3574                           ;Proyecto.c: 389: else{;Proyecto.c: 390: LATB=0b11110111;
  3575   000D10  0EF7               	movlw	247
  3576   000D12  6E8A               	movwf	138,c	;volatile
  3577                           
  3578                           ;Proyecto.c: 391: if(RB4==0) Tecla=13;
  3579   000D14  B881               	btfsc	3969,4,c	;volatile
  3580   000D16  D002               	goto	i2l371
  3581   000D18  0E0D               	movlw	13
  3582   000D1A  D00B               	goto	L21
  3583   000D1C                     i2l371:
  3584                           
  3585                           ;Proyecto.c: 392: else if(RB5==0) Tecla=9;
  3586   000D1C  BA81               	btfsc	3969,5,c	;volatile
  3587   000D1E  D002               	goto	i2l373
  3588   000D20  0E09               	movlw	9
  3589   000D22  D007               	goto	L21
  3590   000D24                     i2l373:
  3591                           
  3592                           ;Proyecto.c: 393: else if(RB6==0) Tecla=5;
  3593   000D24  BC81               	btfsc	3969,6,c	;volatile
  3594   000D26  D002               	goto	i2l375
  3595   000D28  0E05               	movlw	5
  3596   000D2A  D003               	goto	L21
  3597   000D2C                     i2l375:
  3598                           
  3599                           ;Proyecto.c: 394: else if(RB7==0) Tecla=1;
  3600   000D2C  BE81               	btfsc	3969,7,c	;volatile
  3601   000D2E  D002               	goto	i2l372
  3602   000D30  0E01               	movlw	1
  3603   000D32                     L21:
  3604   000D32  6E2E               	movwf	_Tecla^0,c
  3605   000D34                     i2l372:
  3606                           
  3607                           ;Proyecto.c: 395: };Proyecto.c: 396: };Proyecto.c: 397: };Proyecto.c: 398: LATB=0b111100
      +                          00;
  3608   000D34  0EF0               	movlw	240
  3609   000D36  6E8A               	movwf	138,c	;volatile
  3610                           
  3611                           ;Proyecto.c: 399: ing = Tecla;
  3612   000D38  C02E  F02D         	movff	_Tecla,_ing
  3613                           
  3614                           ;Proyecto.c: 400: LeerTeclado();
  3615   000D3C  EC96  F007         	call	_LeerTeclado	;wreg free
  3616                           
  3617                           ;Proyecto.c: 401: EscribeLCD_c(Tecla);
  3618   000D40  502E               	movf	_Tecla^0,w,c
  3619   000D42  EC99  F00A         	call	i2_EscribeLCD_c
  3620   000D46                     i2l2571:
  3621                           
  3622                           ;Proyecto.c: 402: };Proyecto.c: 403: RBIF=0;
  3623   000D46  90F2               	bcf	4082,0,c	;volatile
  3624                           
  3625                           ;Proyecto.c: 404: _delay((unsigned long)((300)*(8000000/4000.0)));
  3626   000D48  0E04               	movlw	4
  3627   000D4A  6E07               	movwf	(??_ISR+1)^0,c
  3628   000D4C  0E0C               	movlw	12
  3629   000D4E  6E06               	movwf	??_ISR^0,c
  3630   000D50  0E34               	movlw	52
  3631   000D52                     i2u191_47:
  3632   000D52  2EE8               	decfsz	wreg,f,c
  3633   000D54  D7FE               	bra	i2u191_47
  3634   000D56  2E06               	decfsz	??_ISR^0,f,c
  3635   000D58  D7FC               	bra	i2u191_47
  3636   000D5A  2E07               	decfsz	(??_ISR+1)^0,f,c
  3637   000D5C  D7FA               	bra	i2u191_47
  3638   000D5E                     i2l2575:
  3639                           
  3640                           ;Proyecto.c: 406: };Proyecto.c: 407: if(TMR1IF==1){
  3641   000D5E  A09E               	btfss	3998,0,c	;volatile
  3642   000D60  D00D               	goto	i2l379
  3643                           
  3644                           ;Proyecto.c: 408: TMR1IF=0;
  3645   000D62  909E               	bcf	3998,0,c	;volatile
  3646                           
  3647                           ;Proyecto.c: 409: TMR1=60536;
  3648   000D64  0EEC               	movlw	236
  3649   000D66  6ECF               	movwf	207,c	;volatile
  3650   000D68  0E78               	movlw	120
  3651   000D6A  6ECE               	movwf	206,c	;volatile
  3652                           
  3653                           ;Proyecto.c: 410: CCPR2=60536+a;
  3654   000D6C  0E78               	movlw	120
  3655   000D6E  241F               	addwf	_a^0,w,c
  3656   000D70  6EBB               	movwf	187,c	;volatile
  3657   000D72  0EEC               	movlw	236
  3658   000D74  2020               	addwfc	(_a+1)^0,w,c
  3659   000D76  6EBC               	movwf	188,c	;volatile
  3660                           
  3661                           ;Proyecto.c: 411: CCP2CON=0b00001001;
  3662   000D78  0E09               	movlw	9
  3663   000D7A  6EBA               	movwf	186,c	;volatile
  3664   000D7C                     i2l379:
  3665   000D7C  9231               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  3666   000D7E  0011               	retfie		f
  3667   000D80                     __end_of_ISR:
  3668                           	callstack 0
  3669                           
  3670 ;; *************** function i2_EscribeLCD_c *****************
  3671 ;; Defined at:
  3672 ;;		line 148 in file "LibLCDXC8.h"
  3673 ;; Parameters:    Size  Location     Type
  3674 ;;  a               1    wreg     unsigned char 
  3675 ;; Auto vars:     Size  Location     Type
  3676 ;;  a               1    4[COMRAM] unsigned char 
  3677 ;; Return value:  Size  Location     Type
  3678 ;;                  1    wreg      void 
  3679 ;; Registers used:
  3680 ;;		wreg, status,2, status,0, cstack
  3681 ;; Tracked objects:
  3682 ;;		On entry : 0/0
  3683 ;;		On exit  : 0/0
  3684 ;;		Unchanged: 0/0
  3685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3686 ;;      Params:         0       0       0       0       0       0       0       0       0
  3687 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3688 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3689 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3690 ;;Total ram usage:        1 bytes
  3691 ;; Hardware stack levels used: 1
  3692 ;; Hardware stack levels required when called: 2
  3693 ;; This function calls:
  3694 ;;		i2_EnviaDato
  3695 ;;		i2_HabilitaLCD
  3696 ;;		i2_RetardoLCD
  3697 ;; This function is called by:
  3698 ;;		_ISR
  3699 ;; This function uses a non-reentrant model
  3700 ;;
  3701                           
  3702                           	psect	text26
  3703   001532                     __ptext26:
  3704                           	callstack 0
  3705   001532                     i2_EscribeLCD_c:
  3706                           	callstack 22
  3707                           
  3708                           ;incstack = 0
  3709                           ;i2EscribeLCD_c@a stored from wreg
  3710   001532  6E05               	movwf	i2EscribeLCD_c@a^0,c
  3711                           
  3712                           ;LibLCDXC8.h: 152: LATE1=1;
  3713   001534  828D               	bsf	3981,1,c	;volatile
  3714                           
  3715                           ;LibLCDXC8.h: 153: EnviaDato(a);
  3716   001536  5005               	movf	i2EscribeLCD_c@a^0,w,c
  3717   001538  EC62  F009         	call	i2_EnviaDato
  3718                           
  3719                           ;LibLCDXC8.h: 154: HabilitaLCD();
  3720   00153C  ECBF  F00A         	call	i2_HabilitaLCD	;wreg free
  3721                           
  3722                           ;LibLCDXC8.h: 155: RetardoLCD(4);
  3723   001540  0E04               	movlw	4
  3724   001542  ECBC  F008         	call	i2_RetardoLCD
  3725   001546  0012               	return		;funcret
  3726   001548                     __end_ofi2_EscribeLCD_c:
  3727                           	callstack 0
  3728                           
  3729 ;; *************** function i2_EnviaDato *****************
  3730 ;; Defined at:
  3731 ;;		line 62 in file "LibLCDXC8.h"
  3732 ;; Parameters:    Size  Location     Type
  3733 ;;  a               1    wreg     unsigned char 
  3734 ;; Auto vars:     Size  Location     Type
  3735 ;;  a               1    3[COMRAM] unsigned char 
  3736 ;; Return value:  Size  Location     Type
  3737 ;;                  1    wreg      void 
  3738 ;; Registers used:
  3739 ;;		wreg, status,2, status,0, cstack
  3740 ;; Tracked objects:
  3741 ;;		On entry : 0/0
  3742 ;;		On exit  : 0/0
  3743 ;;		Unchanged: 0/0
  3744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3745 ;;      Params:         0       0       0       0       0       0       0       0       0
  3746 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3747 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3748 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3749 ;;Total ram usage:        2 bytes
  3750 ;; Hardware stack levels used: 1
  3751 ;; Hardware stack levels required when called: 1
  3752 ;; This function calls:
  3753 ;;		i2_HabilitaLCD
  3754 ;;		i2_RetardoLCD
  3755 ;; This function is called by:
  3756 ;;		i2_EscribeLCD_c
  3757 ;; This function uses a non-reentrant model
  3758 ;;
  3759                           
  3760                           	psect	text27
  3761   0012C4                     __ptext27:
  3762                           	callstack 0
  3763   0012C4                     i2_EnviaDato:
  3764                           	callstack 22
  3765                           
  3766                           ;incstack = 0
  3767                           ;i2EnviaDato@a stored from wreg
  3768   0012C4  6E04               	movwf	i2EnviaDato@a^0,c
  3769                           
  3770                           ;LibLCDXC8.h: 63: if(interfaz==4){
  3771   0012C6  0E04               	movlw	4
  3772   0012C8  1822               	xorwf	_interfaz^0,w,c
  3773   0012CA  A4D8               	btfss	status,2,c
  3774   0012CC  D017               	goto	i2l2161
  3775                           
  3776                           ;LibLCDXC8.h: 64: LATD=(LATD & 0b00001111) | (a & 0b11110000);
  3777   0012CE  C004  F003         	movff	i2EnviaDato@a,??i2_EnviaDato
  3778   0012D2  0EF0               	movlw	240
  3779   0012D4  1603               	andwf	??i2_EnviaDato^0,f,c
  3780   0012D6  508C               	movf	140,w,c	;volatile
  3781   0012D8  0B0F               	andlw	15
  3782   0012DA  1003               	iorwf	??i2_EnviaDato^0,w,c
  3783   0012DC  6E8C               	movwf	140,c	;volatile
  3784                           
  3785                           ;LibLCDXC8.h: 65: HabilitaLCD();
  3786   0012DE  ECBF  F00A         	call	i2_HabilitaLCD	;wreg free
  3787                           
  3788                           ;LibLCDXC8.h: 66: RetardoLCD(1);
  3789   0012E2  0E01               	movlw	1
  3790   0012E4  ECBC  F008         	call	i2_RetardoLCD
  3791                           
  3792                           ;LibLCDXC8.h: 67: LATD=(LATD & 0b00001111) | (a<<4);
  3793   0012E8  C004  F003         	movff	i2EnviaDato@a,??i2_EnviaDato
  3794   0012EC  3A03               	swapf	??i2_EnviaDato^0,f,c
  3795   0012EE  0EF0               	movlw	240
  3796   0012F0  1603               	andwf	??i2_EnviaDato^0,f,c
  3797   0012F2  508C               	movf	140,w,c	;volatile
  3798   0012F4  0B0F               	andlw	15
  3799   0012F6  1003               	iorwf	??i2_EnviaDato^0,w,c
  3800   0012F8  6E8C               	movwf	140,c	;volatile
  3801                           
  3802                           ;LibLCDXC8.h: 70: }else if(interfaz==8){
  3803   0012FA  0012               	return	
  3804   0012FC                     i2l2161:
  3805   0012FC  0E08               	movlw	8
  3806   0012FE  1822               	xorwf	_interfaz^0,w,c
  3807   001300  A4D8               	btfss	status,2,c
  3808   001302  0012               	return	
  3809                           
  3810                           ;LibLCDXC8.h: 71: LATD=a;
  3811   001304  C004  FF8C         	movff	i2EnviaDato@a,3980	;volatile
  3812   001308  0012               	return		;funcret
  3813   00130A                     __end_ofi2_EnviaDato:
  3814                           	callstack 0
  3815                           
  3816 ;; *************** function i2_RetardoLCD *****************
  3817 ;; Defined at:
  3818 ;;		line 295 in file "LibLCDXC8.h"
  3819 ;; Parameters:    Size  Location     Type
  3820 ;;  a               1    wreg     unsigned char 
  3821 ;; Auto vars:     Size  Location     Type
  3822 ;;  a               1    1[COMRAM] unsigned char 
  3823 ;; Return value:  Size  Location     Type
  3824 ;;                  1    wreg      void 
  3825 ;; Registers used:
  3826 ;;		wreg, status,2, status,0
  3827 ;; Tracked objects:
  3828 ;;		On entry : 0/0
  3829 ;;		On exit  : 0/0
  3830 ;;		Unchanged: 0/0
  3831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3832 ;;      Params:         0       0       0       0       0       0       0       0       0
  3833 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3834 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3835 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3836 ;;Total ram usage:        2 bytes
  3837 ;; Hardware stack levels used: 1
  3838 ;; This function calls:
  3839 ;;		Nothing
  3840 ;; This function is called by:
  3841 ;;		i2_EnviaDato
  3842 ;;		i2_EscribeLCD_c
  3843 ;; This function uses a non-reentrant model
  3844 ;;
  3845                           
  3846                           	psect	text28
  3847   001178                     __ptext28:
  3848                           	callstack 0
  3849   001178                     i2_RetardoLCD:
  3850                           	callstack 23
  3851                           
  3852                           ;incstack = 0
  3853                           ;i2RetardoLCD@a stored from wreg
  3854   001178  6E02               	movwf	i2RetardoLCD@a^0,c
  3855                           
  3856                           ;LibLCDXC8.h: 296: switch(a){
  3857   00117A  D023               	goto	i2l1955
  3858   00117C                     i2l1945:
  3859   00117C  0E27               	movlw	39
  3860   00117E  6E01               	movwf	??i2_RetardoLCD^0,c
  3861   001180  0EF5               	movlw	245
  3862   001182                     i2u192_47:
  3863   001182  2EE8               	decfsz	wreg,f,c
  3864   001184  D7FE               	bra	i2u192_47
  3865   001186  2E01               	decfsz	??i2_RetardoLCD^0,f,c
  3866   001188  D7FC               	bra	i2u192_47
  3867   00118A  F000               	nop	
  3868                           
  3869                           ;LibLCDXC8.h: 299: break;
  3870   00118C  0012               	return	
  3871   00118E                     i2l1947:
  3872   00118E  0E03               	movlw	3
  3873   001190  6E01               	movwf	??i2_RetardoLCD^0,c
  3874   001192  0E98               	movlw	152
  3875   001194                     i2u193_47:
  3876   001194  2EE8               	decfsz	wreg,f,c
  3877   001196  D7FE               	bra	i2u193_47
  3878   001198  2E01               	decfsz	??i2_RetardoLCD^0,f,c
  3879   00119A  D7FC               	bra	i2u193_47
  3880                           
  3881                           ;LibLCDXC8.h: 301: _delay((unsigned long)((640)*(8000000/4000000.0)));
  3882   00119C  0EB6               	movlw	182
  3883   00119E                     i2u194_47:
  3884   00119E  D000               	nop2	
  3885   0011A0  D000               	nop2	
  3886   0011A2  2EE8               	decfsz	wreg,f,c
  3887   0011A4  D7FC               	bra	i2u194_47
  3888   0011A6  D000               	nop2	
  3889   0011A8  D000               	nop2	
  3890   0011AA  D000               	nop2	
  3891                           
  3892                           ;LibLCDXC8.h: 303: break;
  3893   0011AC  0012               	return	
  3894   0011AE                     i2l1949:
  3895   0011AE  0E42               	movlw	66
  3896   0011B0                     i2u195_47:
  3897   0011B0  2EE8               	decfsz	wreg,f,c
  3898   0011B2  D7FE               	bra	i2u195_47
  3899   0011B4  D000               	nop2	
  3900                           
  3901                           ;LibLCDXC8.h: 306: break;
  3902   0011B6  0012               	return	
  3903   0011B8                     i2l1951:
  3904   0011B8  0E1A               	movlw	26
  3905   0011BA                     i2u196_47:
  3906   0011BA  2EE8               	decfsz	wreg,f,c
  3907   0011BC  D7FE               	bra	i2u196_47
  3908   0011BE  D000               	nop2	
  3909                           
  3910                           ;LibLCDXC8.h: 309: break;
  3911   0011C0  0012               	return	
  3912   0011C2                     i2l1955:
  3913   0011C2  5002               	movf	i2RetardoLCD@a^0,w,c
  3914                           
  3915                           ; Switch size 1, requested type "simple"
  3916                           ; Number of cases is 4, Range of values is 1 to 4
  3917                           ; switch strategies available:
  3918                           ; Name         Instructions Cycles
  3919                           ; simple_byte           13     7 (average)
  3920                           ;	Chosen strategy is simple_byte
  3921   0011C4  0A01               	xorlw	1	; case 1
  3922   0011C6  B4D8               	btfsc	status,2,c
  3923   0011C8  D7D9               	goto	i2l1945
  3924   0011CA  0A03               	xorlw	3	; case 2
  3925   0011CC  B4D8               	btfsc	status,2,c
  3926   0011CE  D7DF               	goto	i2l1947
  3927   0011D0  0A01               	xorlw	1	; case 3
  3928   0011D2  B4D8               	btfsc	status,2,c
  3929   0011D4  D7EC               	goto	i2l1949
  3930   0011D6  0A07               	xorlw	7	; case 4
  3931   0011D8  A4D8               	btfss	status,2,c
  3932   0011DA  0012               	return	
  3933   0011DC  D7ED               	goto	i2l1951
  3934   0011DE                     __end_ofi2_RetardoLCD:
  3935                           	callstack 0
  3936                           
  3937 ;; *************** function i2_HabilitaLCD *****************
  3938 ;; Defined at:
  3939 ;;		line 108 in file "LibLCDXC8.h"
  3940 ;; Parameters:    Size  Location     Type
  3941 ;;		None
  3942 ;; Auto vars:     Size  Location     Type
  3943 ;;		None
  3944 ;; Return value:  Size  Location     Type
  3945 ;;                  1    wreg      void 
  3946 ;; Registers used:
  3947 ;;		wreg
  3948 ;; Tracked objects:
  3949 ;;		On entry : 0/0
  3950 ;;		On exit  : 0/0
  3951 ;;		Unchanged: 0/0
  3952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3953 ;;      Params:         0       0       0       0       0       0       0       0       0
  3954 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3955 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3956 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3957 ;;Total ram usage:        0 bytes
  3958 ;; Hardware stack levels used: 1
  3959 ;; This function calls:
  3960 ;;		Nothing
  3961 ;; This function is called by:
  3962 ;;		i2_EnviaDato
  3963 ;;		i2_EscribeLCD_c
  3964 ;; This function uses a non-reentrant model
  3965 ;;
  3966                           
  3967                           	psect	text29
  3968   00157E                     __ptext29:
  3969                           	callstack 0
  3970   00157E                     i2_HabilitaLCD:
  3971                           	callstack 23
  3972                           
  3973                           ;LibLCDXC8.h: 110: LATE2=1;
  3974                           
  3975                           ;incstack = 0
  3976   00157E  848D               	bsf	3981,2,c	;volatile
  3977                           
  3978                           ;LibLCDXC8.h: 111: _delay((unsigned long)((40)*(8000000/4000000.0)));
  3979   001580  0E1A               	movlw	26
  3980   001582                     i2u197_47:
  3981   001582  2EE8               	decfsz	wreg,f,c
  3982   001584  D7FE               	bra	i2u197_47
  3983   001586  D000               	nop2	
  3984                           
  3985                           ;LibLCDXC8.h: 113: LATE2=0;
  3986   001588  948D               	bcf	3981,2,c	;volatile
  3987   00158A  0012               	return		;funcret
  3988   00158C                     __end_ofi2_HabilitaLCD:
  3989                           	callstack 0
  3990                           
  3991 ;; *************** function _LeerTeclado *****************
  3992 ;; Defined at:
  3993 ;;		line 223 in file "Proyecto.c"
  3994 ;; Parameters:    Size  Location     Type
  3995 ;;		None
  3996 ;; Auto vars:     Size  Location     Type
  3997 ;;		None
  3998 ;; Return value:  Size  Location     Type
  3999 ;;                  1    wreg      unsigned char 
  4000 ;; Registers used:
  4001 ;;		wreg, status,2, status,0
  4002 ;; Tracked objects:
  4003 ;;		On entry : 0/0
  4004 ;;		On exit  : 0/0
  4005 ;;		Unchanged: 0/0
  4006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4007 ;;      Params:         0       0       0       0       0       0       0       0       0
  4008 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4009 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4010 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4011 ;;Total ram usage:        0 bytes
  4012 ;; Hardware stack levels used: 1
  4013 ;; This function calls:
  4014 ;;		Nothing
  4015 ;; This function is called by:
  4016 ;;		_ISR
  4017 ;; This function uses a non-reentrant model
  4018 ;;
  4019                           
  4020                           	psect	text30
  4021   000F2C                     __ptext30:
  4022                           	callstack 0
  4023   000F2C                     _LeerTeclado:
  4024                           	callstack 24
  4025                           
  4026                           ;Proyecto.c: 224: switch (Tecla){
  4027                           
  4028                           ;incstack = 0
  4029   000F2C  D030               	goto	i2l1679
  4030   000F2E                     i2l1645:
  4031                           
  4032                           ;Proyecto.c: 226: Tecla='1';
  4033   000F2E  0E31               	movlw	49
  4034   000F30  6E2E               	movwf	_Tecla^0,c
  4035                           
  4036                           ;Proyecto.c: 227: break;
  4037   000F32  0012               	return	
  4038   000F34                     i2l1647:
  4039                           
  4040                           ;Proyecto.c: 229: Tecla='2';
  4041   000F34  0E32               	movlw	50
  4042   000F36  6E2E               	movwf	_Tecla^0,c
  4043                           
  4044                           ;Proyecto.c: 230: break;
  4045   000F38  0012               	return	
  4046   000F3A                     i2l1649:
  4047                           
  4048                           ;Proyecto.c: 232: Tecla='3';
  4049   000F3A  0E33               	movlw	51
  4050   000F3C  6E2E               	movwf	_Tecla^0,c
  4051                           
  4052                           ;Proyecto.c: 233: break;
  4053   000F3E  0012               	return	
  4054   000F40                     i2l1651:
  4055                           
  4056                           ;Proyecto.c: 235: Tecla='+';
  4057   000F40  0E2B               	movlw	43
  4058   000F42  6E2E               	movwf	_Tecla^0,c
  4059                           
  4060                           ;Proyecto.c: 236: break;
  4061   000F44  0012               	return	
  4062   000F46                     i2l1653:
  4063                           
  4064                           ;Proyecto.c: 238: Tecla='4';
  4065   000F46  0E34               	movlw	52
  4066   000F48  6E2E               	movwf	_Tecla^0,c
  4067                           
  4068                           ;Proyecto.c: 239: break;
  4069   000F4A  0012               	return	
  4070   000F4C                     i2l1655:
  4071                           
  4072                           ;Proyecto.c: 241: Tecla ='5';
  4073   000F4C  0E35               	movlw	53
  4074   000F4E  6E2E               	movwf	_Tecla^0,c
  4075                           
  4076                           ;Proyecto.c: 242: break;
  4077   000F50  0012               	return	
  4078   000F52                     i2l1657:
  4079                           
  4080                           ;Proyecto.c: 244: Tecla='6';
  4081   000F52  0E36               	movlw	54
  4082   000F54  6E2E               	movwf	_Tecla^0,c
  4083                           
  4084                           ;Proyecto.c: 245: break;
  4085   000F56  0012               	return	
  4086   000F58                     i2l1659:
  4087                           
  4088                           ;Proyecto.c: 247: Tecla='-';
  4089   000F58  0E2D               	movlw	45
  4090   000F5A  6E2E               	movwf	_Tecla^0,c
  4091                           
  4092                           ;Proyecto.c: 248: break;
  4093   000F5C  0012               	return	
  4094   000F5E                     i2l1661:
  4095                           
  4096                           ;Proyecto.c: 250: Tecla='7';
  4097   000F5E  0E37               	movlw	55
  4098   000F60  6E2E               	movwf	_Tecla^0,c
  4099                           
  4100                           ;Proyecto.c: 251: break;
  4101   000F62  0012               	return	
  4102   000F64                     i2l1663:
  4103                           
  4104                           ;Proyecto.c: 253: Tecla='8';
  4105   000F64  0E38               	movlw	56
  4106   000F66  6E2E               	movwf	_Tecla^0,c
  4107                           
  4108                           ;Proyecto.c: 254: break;
  4109   000F68  0012               	return	
  4110   000F6A                     i2l1665:
  4111                           
  4112                           ;Proyecto.c: 256: Tecla='9';
  4113   000F6A  0E39               	movlw	57
  4114   000F6C  6E2E               	movwf	_Tecla^0,c
  4115                           
  4116                           ;Proyecto.c: 257: break;
  4117   000F6E  0012               	return	
  4118   000F70                     i2l1667:
  4119                           
  4120                           ;Proyecto.c: 259: Tecla='X';
  4121   000F70  0E58               	movlw	88
  4122   000F72  6E2E               	movwf	_Tecla^0,c
  4123                           
  4124                           ;Proyecto.c: 260: break;
  4125   000F74  0012               	return	
  4126   000F76                     i2l1669:
  4127                           
  4128                           ;Proyecto.c: 262: Tecla='B';
  4129   000F76  0E42               	movlw	66
  4130   000F78  6E2E               	movwf	_Tecla^0,c
  4131                           
  4132                           ;Proyecto.c: 263: break;
  4133   000F7A  0012               	return	
  4134   000F7C                     i2l1671:
  4135                           
  4136                           ;Proyecto.c: 265: Tecla='0';
  4137   000F7C  0E30               	movlw	48
  4138   000F7E  6E2E               	movwf	_Tecla^0,c
  4139                           
  4140                           ;Proyecto.c: 266: break;
  4141   000F80  0012               	return	
  4142   000F82                     i2l1673:
  4143                           
  4144                           ;Proyecto.c: 268: Tecla='=';
  4145   000F82  0E3D               	movlw	61
  4146   000F84  6E2E               	movwf	_Tecla^0,c
  4147                           
  4148                           ;Proyecto.c: 269: break;
  4149   000F86  0012               	return	
  4150   000F88                     i2l1675:
  4151                           
  4152                           ;Proyecto.c: 271: Tecla='/';
  4153   000F88  0E2F               	movlw	47
  4154   000F8A  6E2E               	movwf	_Tecla^0,c
  4155                           
  4156                           ;Proyecto.c: 272: break;
  4157   000F8C  0012               	return	
  4158   000F8E                     i2l1679:
  4159   000F8E  502E               	movf	_Tecla^0,w,c
  4160                           
  4161                           ; Switch size 1, requested type "simple"
  4162                           ; Number of cases is 16, Range of values is 1 to 16
  4163                           ; switch strategies available:
  4164                           ; Name         Instructions Cycles
  4165                           ; simple_byte           49    25 (average)
  4166                           ;	Chosen strategy is simple_byte
  4167   000F90  0A01               	xorlw	1	; case 1
  4168   000F92  B4D8               	btfsc	status,2,c
  4169   000F94  D7CC               	goto	i2l1645
  4170   000F96  0A03               	xorlw	3	; case 2
  4171   000F98  B4D8               	btfsc	status,2,c
  4172   000F9A  D7CC               	goto	i2l1647
  4173   000F9C  0A01               	xorlw	1	; case 3
  4174   000F9E  B4D8               	btfsc	status,2,c
  4175   000FA0  D7CC               	goto	i2l1649
  4176   000FA2  0A07               	xorlw	7	; case 4
  4177   000FA4  B4D8               	btfsc	status,2,c
  4178   000FA6  D7CC               	goto	i2l1651
  4179   000FA8  0A01               	xorlw	1	; case 5
  4180   000FAA  B4D8               	btfsc	status,2,c
  4181   000FAC  D7CC               	goto	i2l1653
  4182   000FAE  0A03               	xorlw	3	; case 6
  4183   000FB0  B4D8               	btfsc	status,2,c
  4184   000FB2  D7CC               	goto	i2l1655
  4185   000FB4  0A01               	xorlw	1	; case 7
  4186   000FB6  B4D8               	btfsc	status,2,c
  4187   000FB8  D7CC               	goto	i2l1657
  4188   000FBA  0A0F               	xorlw	15	; case 8
  4189   000FBC  B4D8               	btfsc	status,2,c
  4190   000FBE  D7CC               	goto	i2l1659
  4191   000FC0  0A01               	xorlw	1	; case 9
  4192   000FC2  B4D8               	btfsc	status,2,c
  4193   000FC4  D7CC               	goto	i2l1661
  4194   000FC6  0A03               	xorlw	3	; case 10
  4195   000FC8  B4D8               	btfsc	status,2,c
  4196   000FCA  D7CC               	goto	i2l1663
  4197   000FCC  0A01               	xorlw	1	; case 11
  4198   000FCE  B4D8               	btfsc	status,2,c
  4199   000FD0  D7CC               	goto	i2l1665
  4200   000FD2  0A07               	xorlw	7	; case 12
  4201   000FD4  B4D8               	btfsc	status,2,c
  4202   000FD6  D7CC               	goto	i2l1667
  4203   000FD8  0A01               	xorlw	1	; case 13
  4204   000FDA  B4D8               	btfsc	status,2,c
  4205   000FDC  D7CC               	goto	i2l1669
  4206   000FDE  0A03               	xorlw	3	; case 14
  4207   000FE0  B4D8               	btfsc	status,2,c
  4208   000FE2  D7CC               	goto	i2l1671
  4209   000FE4  0A01               	xorlw	1	; case 15
  4210   000FE6  B4D8               	btfsc	status,2,c
  4211   000FE8  D7CC               	goto	i2l1673
  4212   000FEA  0A1F               	xorlw	31	; case 16
  4213   000FEC  A4D8               	btfss	status,2,c
  4214   000FEE  0012               	return	
  4215   000FF0  D7CB               	goto	i2l1675
  4216   000FF2                     __end_of_LeerTeclado:
  4217                           	callstack 0
  4218                           
  4219                           	psect	rparam
  4220   000000                     
  4221                           	psect	temp
  4222   000031                     btemp:
  4223                           	callstack 0
  4224   000031                     	ds	1
  4225   000000                     int$flags	set	btemp
  4226   000000                     wtemp8	set	btemp+1
  4227   000000                     ttemp5	set	btemp+1
  4228   000000                     ttemp6	set	btemp+4
  4229   000000                     ttemp7	set	btemp+8
  4230                           
  4231                           	psect	idloc
  4232                           
  4233                           ;Config register IDLOC0 @ 0x200000
  4234                           ;	unspecified, using default values
  4235   200000                     	org	2097152
  4236   200000  FF                 	db	255
  4237                           
  4238                           ;Config register IDLOC1 @ 0x200001
  4239                           ;	unspecified, using default values
  4240   200001                     	org	2097153
  4241   200001  FF                 	db	255
  4242                           
  4243                           ;Config register IDLOC2 @ 0x200002
  4244                           ;	unspecified, using default values
  4245   200002                     	org	2097154
  4246   200002  FF                 	db	255
  4247                           
  4248                           ;Config register IDLOC3 @ 0x200003
  4249                           ;	unspecified, using default values
  4250   200003                     	org	2097155
  4251   200003  FF                 	db	255
  4252                           
  4253                           ;Config register IDLOC4 @ 0x200004
  4254                           ;	unspecified, using default values
  4255   200004                     	org	2097156
  4256   200004  FF                 	db	255
  4257                           
  4258                           ;Config register IDLOC5 @ 0x200005
  4259                           ;	unspecified, using default values
  4260   200005                     	org	2097157
  4261   200005  FF                 	db	255
  4262                           
  4263                           ;Config register IDLOC6 @ 0x200006
  4264                           ;	unspecified, using default values
  4265   200006                     	org	2097158
  4266   200006  FF                 	db	255
  4267                           
  4268                           ;Config register IDLOC7 @ 0x200007
  4269                           ;	unspecified, using default values
  4270   200007                     	org	2097159
  4271   200007  FF                 	db	255
  4272                           
  4273                           	psect	config
  4274                           
  4275                           ;Config register CONFIG1L @ 0x300000
  4276                           ;	unspecified, using default values
  4277                           ;	PLL Prescaler Selection bits
  4278                           ;	PLLDIV = 0x0, unprogrammed default
  4279                           ;	System Clock Postscaler Selection bits
  4280                           ;	CPUDIV = 0x0, unprogrammed default
  4281                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  4282                           ;	USBDIV = 0x0, unprogrammed default
  4283   300000                     	org	3145728
  4284   300000  00                 	db	0
  4285                           
  4286                           ;Config register CONFIG1H @ 0x300001
  4287                           ;	Oscillator Selection bits
  4288                           ;	FOSC = INTOSC_EC, Internal oscillator, CLKO function on RA6, EC used by USB (INTCKO)
  4289                           ;	Fail-Safe Clock Monitor Enable bit
  4290                           ;	FCMEN = 0x0, unprogrammed default
  4291                           ;	Internal/External Oscillator Switchover bit
  4292                           ;	IESO = 0x0, unprogrammed default
  4293   300001                     	org	3145729
  4294   300001  09                 	db	9
  4295                           
  4296                           ;Config register CONFIG2L @ 0x300002
  4297                           ;	unspecified, using default values
  4298                           ;	Power-up Timer Enable bit
  4299                           ;	PWRT = 0x1, unprogrammed default
  4300                           ;	Brown-out Reset Enable bits
  4301                           ;	BOR = 0x3, unprogrammed default
  4302                           ;	Brown-out Reset Voltage bits
  4303                           ;	BORV = 0x3, unprogrammed default
  4304                           ;	USB Voltage Regulator Enable bit
  4305                           ;	VREGEN = 0x0, unprogrammed default
  4306   300002                     	org	3145730
  4307   300002  1F                 	db	31
  4308                           
  4309                           ;Config register CONFIG2H @ 0x300003
  4310                           ;	Watchdog Timer Enable bit
  4311                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  4312                           ;	Watchdog Timer Postscale Select bits
  4313                           ;	WDTPS = 0xF, unprogrammed default
  4314   300003                     	org	3145731
  4315   300003  1E                 	db	30
  4316                           
  4317                           ; Padding undefined space
  4318   300004                     	org	3145732
  4319   300004  FF                 	db	255
  4320                           
  4321                           ;Config register CONFIG3H @ 0x300005
  4322                           ;	CCP2 MUX bit
  4323                           ;	CCP2MX = 0x1, unprogrammed default
  4324                           ;	PORTB A/D Enable bit
  4325                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  4326                           ;	Low-Power Timer 1 Oscillator Enable bit
  4327                           ;	LPT1OSC = 0x0, unprogrammed default
  4328                           ;	MCLR Pin Enable bit
  4329                           ;	MCLRE = 0x1, unprogrammed default
  4330   300005                     	org	3145733
  4331   300005  81                 	db	129
  4332                           
  4333                           ;Config register CONFIG4L @ 0x300006
  4334                           ;	Stack Full/Underflow Reset Enable bit
  4335                           ;	STVREN = 0x1, unprogrammed default
  4336                           ;	Single-Supply ICSP Enable bit
  4337                           ;	LVP = OFF, Single-Supply ICSP disabled
  4338                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  4339                           ;	ICPRT = 0x0, unprogrammed default
  4340                           ;	Extended Instruction Set Enable bit
  4341                           ;	XINST = 0x0, unprogrammed default
  4342                           ;	Background Debugger Enable bit
  4343                           ;	DEBUG = 0x1, unprogrammed default
  4344   300006                     	org	3145734
  4345   300006  81                 	db	129
  4346                           
  4347                           ; Padding undefined space
  4348   300007                     	org	3145735
  4349   300007  FF                 	db	255
  4350                           
  4351                           ;Config register CONFIG5L @ 0x300008
  4352                           ;	unspecified, using default values
  4353                           ;	Code Protection bit
  4354                           ;	CP0 = 0x1, unprogrammed default
  4355                           ;	Code Protection bit
  4356                           ;	CP1 = 0x1, unprogrammed default
  4357                           ;	Code Protection bit
  4358                           ;	CP2 = 0x1, unprogrammed default
  4359                           ;	Code Protection bit
  4360                           ;	CP3 = 0x1, unprogrammed default
  4361   300008                     	org	3145736
  4362   300008  0F                 	db	15
  4363                           
  4364                           ;Config register CONFIG5H @ 0x300009
  4365                           ;	unspecified, using default values
  4366                           ;	Boot Block Code Protection bit
  4367                           ;	CPB = 0x1, unprogrammed default
  4368                           ;	Data EEPROM Code Protection bit
  4369                           ;	CPD = 0x1, unprogrammed default
  4370   300009                     	org	3145737
  4371   300009  C0                 	db	192
  4372                           
  4373                           ;Config register CONFIG6L @ 0x30000A
  4374                           ;	unspecified, using default values
  4375                           ;	Write Protection bit
  4376                           ;	WRT0 = 0x1, unprogrammed default
  4377                           ;	Write Protection bit
  4378                           ;	WRT1 = 0x1, unprogrammed default
  4379                           ;	Write Protection bit
  4380                           ;	WRT2 = 0x1, unprogrammed default
  4381                           ;	Write Protection bit
  4382                           ;	WRT3 = 0x1, unprogrammed default
  4383   30000A                     	org	3145738
  4384   30000A  0F                 	db	15
  4385                           
  4386                           ;Config register CONFIG6H @ 0x30000B
  4387                           ;	unspecified, using default values
  4388                           ;	Configuration Register Write Protection bit
  4389                           ;	WRTC = 0x1, unprogrammed default
  4390                           ;	Boot Block Write Protection bit
  4391                           ;	WRTB = 0x1, unprogrammed default
  4392                           ;	Data EEPROM Write Protection bit
  4393                           ;	WRTD = 0x1, unprogrammed default
  4394   30000B                     	org	3145739
  4395   30000B  E0                 	db	224
  4396                           
  4397                           ;Config register CONFIG7L @ 0x30000C
  4398                           ;	unspecified, using default values
  4399                           ;	Table Read Protection bit
  4400                           ;	EBTR0 = 0x1, unprogrammed default
  4401                           ;	Table Read Protection bit
  4402                           ;	EBTR1 = 0x1, unprogrammed default
  4403                           ;	Table Read Protection bit
  4404                           ;	EBTR2 = 0x1, unprogrammed default
  4405                           ;	Table Read Protection bit
  4406                           ;	EBTR3 = 0x1, unprogrammed default
  4407   30000C                     	org	3145740
  4408   30000C  0F                 	db	15
  4409                           
  4410                           ;Config register CONFIG7H @ 0x30000D
  4411                           ;	unspecified, using default values
  4412                           ;	Boot Block Table Read Protection bit
  4413                           ;	EBTRB = 0x1, unprogrammed default
  4414   30000D                     	org	3145741
  4415   30000D  40                 	db	64
  4416                           tosu	equ	0xFFF
  4417                           tosh	equ	0xFFE
  4418                           tosl	equ	0xFFD
  4419                           stkptr	equ	0xFFC
  4420                           pclatu	equ	0xFFB
  4421                           pclath	equ	0xFFA
  4422                           pcl	equ	0xFF9
  4423                           tblptru	equ	0xFF8
  4424                           tblptrh	equ	0xFF7
  4425                           tblptrl	equ	0xFF6
  4426                           tablat	equ	0xFF5
  4427                           prodh	equ	0xFF4
  4428                           prodl	equ	0xFF3
  4429                           indf0	equ	0xFEF
  4430                           postinc0	equ	0xFEE
  4431                           postdec0	equ	0xFED
  4432                           preinc0	equ	0xFEC
  4433                           plusw0	equ	0xFEB
  4434                           fsr0h	equ	0xFEA
  4435                           fsr0l	equ	0xFE9
  4436                           wreg	equ	0xFE8
  4437                           indf1	equ	0xFE7
  4438                           postinc1	equ	0xFE6
  4439                           postdec1	equ	0xFE5
  4440                           preinc1	equ	0xFE4
  4441                           plusw1	equ	0xFE3
  4442                           fsr1h	equ	0xFE2
  4443                           fsr1l	equ	0xFE1
  4444                           bsr	equ	0xFE0
  4445                           indf2	equ	0xFDF
  4446                           postinc2	equ	0xFDE
  4447                           postdec2	equ	0xFDD
  4448                           preinc2	equ	0xFDC
  4449                           plusw2	equ	0xFDB
  4450                           fsr2h	equ	0xFDA
  4451                           fsr2l	equ	0xFD9
  4452                           status	equ	0xFD8

Data Sizes:
    Strings     49
    Constant    0
    Data        12
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     30      48
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    MensajeLCD_Word@a	PTR unsigned char  size(1) Largest target is 17
		 -> STR_8(CODE[5]), STR_7(CODE[6]), STR_6(CODE[17]), STR_5(CODE[17]), 
		 -> STR_4(CODE[17]), STR_3(CODE[10]), STR_2(CODE[17]), STR_1(CODE[11]), 

    NuevoCaracter@c	PTR unsigned char  size(1) Largest target is 8
		 -> cara(COMRAM[8]), 


Critical Paths under _main in COMRAM

    _main->_TransmitirDatos
    _TransmitirDatos->_MensajeLCD_Word
    _MensajeLCD_Word->_EscribeLCD_c
    _DireccionaLCD->_EnviaDato
    _NuevoCaracter->_EscribeLCD_c
    _EscribeLCD_c->_EnviaDato
    _LeerHT11->_LeerByte
    _LeerByte->_LeerBit
    _InicializaLCD->_EnviaDato
    _BorraLCD->_EnviaDato
    _EnviaDato->_RetardoLCD

Critical Paths under _ISR in COMRAM

    _ISR->i2_EscribeLCD_c
    i2_EscribeLCD_c->i2_EnviaDato
    i2_EnviaDato->i2_RetardoLCD

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    7194
                                             28 COMRAM     2     2      0
                           _BorraLCD
                  _ConvertirUnidades
                      _DireccionaLCD
                       _EscribeLCD_c
                      _InicializaLCD
                           _LeerHT11
                    _MensajeLCD_Word
                         _Movimiento
                      _NuevoCaracter
                    _TransmitirDatos
                          _Velocidad
 ---------------------------------------------------------------------------------
 (1) _Velocidad                                            2     0      2     384
                                              7 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _TransmitirDatos                                     14    10      4    4798
                                             16 COMRAM    12     8      4
                           _BorraLCD
                      _DireccionaLCD
                       _EscribeLCD_c
                    _MensajeLCD_Word
                         _Transmitir
                            ___awdiv
                            ___lbdiv
                            ___lbmod
                            ___lwdiv
                            ___lwmod
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     311
                                              7 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     615
                                              7 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     922
                                              7 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___lbmod                                              4     3      1     311
                                              7 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (2) ___lbdiv                                              4     3      1     314
                                              7 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     604
                                              7 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _Transmitir                                           1     1      0      22
                                              7 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _MensajeLCD_Word                                      4     3      1     874
                                             12 COMRAM     4     3      1
                       _EscribeLCD_c
 ---------------------------------------------------------------------------------
 (2) _DireccionaLCD                                        1     1      0     132
                                             11 COMRAM     1     1      0
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (1) _NuevoCaracter                                        4     3      1     405
                                             12 COMRAM     4     3      1
                         _ComandoLCD
                       _EscribeLCD_c
 ---------------------------------------------------------------------------------
 (3) _EscribeLCD_c                                         1     1      0     132
                                             11 COMRAM     1     1      0
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (2) _ComandoLCD                                           2     2      0      22
                                              7 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Movimiento                                           1     1      0       0
                                              7 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _LeerHT11                                             1     1      0     117
                                             11 COMRAM     1     1      0
                           _LeerByte
 ---------------------------------------------------------------------------------
 (2) _LeerByte                                             3     3      0     117
                                              8 COMRAM     3     3      0
                            _LeerBit
 ---------------------------------------------------------------------------------
 (3) _LeerBit                                              1     1      0      25
                                              7 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _InicializaLCD                                        0     0      0     220
                           _BorraLCD
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (2) _BorraLCD                                             0     0      0     110
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (4) _EnviaDato                                            2     2      0      88
                                              9 COMRAM     2     2      0
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (4) _RetardoLCD                                           2     2      0      22
                                              7 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (4) _HabilitaLCD                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConvertirUnidades                                    1     1      0      22
                                              7 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISR                                                  2     2      0     132
                                              5 COMRAM     2     2      0
                        _LeerTeclado
                     i2_EscribeLCD_c
 ---------------------------------------------------------------------------------
 (7) i2_EscribeLCD_c                                       1     1      0     132
                                              4 COMRAM     1     1      0
                        i2_EnviaDato
                      i2_HabilitaLCD
                       i2_RetardoLCD
 ---------------------------------------------------------------------------------
 (8) i2_EnviaDato                                          2     2      0      88
                                              2 COMRAM     2     2      0
                      i2_HabilitaLCD
                       i2_RetardoLCD
 ---------------------------------------------------------------------------------
 (8) i2_RetardoLCD                                         2     2      0      22
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (8) i2_HabilitaLCD                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _LeerTeclado                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BorraLCD
     _EnviaDato
       _HabilitaLCD
       _RetardoLCD
     _HabilitaLCD
     _RetardoLCD
   _ConvertirUnidades
   _DireccionaLCD
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _EscribeLCD_c
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _InicializaLCD
     _BorraLCD
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _LeerHT11
     _LeerByte
       _LeerBit
   _MensajeLCD_Word
     _EscribeLCD_c
   _Movimiento
   _NuevoCaracter
     _ComandoLCD
     _EscribeLCD_c
   _TransmitirDatos
     _BorraLCD
     _DireccionaLCD
     _EscribeLCD_c
     _MensajeLCD_Word
     _Transmitir
     ___awdiv
     ___lbdiv
     ___lbmod
     ___lwdiv
     ___lwmod
     ___wmul
   _Velocidad

 _ISR (ROOT)
   _LeerTeclado
   i2_EscribeLCD_c
     i2_EnviaDato
       i2_HabilitaLCD
       i2_RetardoLCD
     i2_HabilitaLCD
     i2_RetardoLCD

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      37        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     1E      30       1       51.1%
BITBIGSFRhhhlh      19      0       0      21        0.0%
BITBIGSFRlhl        11      0       0      33        0.0%
BITBIGSFRhhhh        D      0       0      20        0.0%
BITBIGSFRlll         D      0       0      35        0.0%
BITBIGSFRhhllll      C      0       0      27        0.0%
BITBIGSFRhhlllh      A      0       0      26        0.0%
BITBIGSFRhhllll      6      0       0      28        0.0%
BITBIGSFRlhhhl       5      0       0      31        0.0%
BITBIGSFRhhlhl       5      0       0      24        0.0%
BITBIGSFRhll         4      0       0      29        0.0%
BITBIGSFRhhlhhh      3      0       0      23        0.0%
BITBIGSFRlhhhh       1      0       0      30        0.0%
BITBIGSFRlhhl        1      0       0      32        0.0%
BITBIGSFRllh         1      0       0      34        0.0%
BITBIGSFRhhllh       1      0       0      25        0.0%
BITBIGSFRhhhll       1      0       0      22        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      30      36        0.0%
DATA                 0      0      30       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Tue Jun 06 19:40:42 2023

                        _a 001F                          _c 002B          Transmitir@BufferT 0008  
                       _GO 7E11               ___awdiv@sign 000D                 EnviaDato@a 000B  
      ___wmul@multiplicand 000A              ??_LeerTeclado 0001              _InicializaLCD 0FF2  
                      l316 156A                        l334 09AA                        l264 140E  
                      l329 0868                        l283 145E                        l267 1418  
                      l278 143A                        l861 1226                        l871 1342  
                      _GIE 7F97                        _RC0 7C10                        _RB4 7C0C  
                      _RB5 7C0D                        _RE0 7C20                        _RB6 7C0E  
                      _RB7 7C0F                        _PR2 0FCB                        _ISR 0008  
                      u910 1462                        u930 127C                        u990 10D4  
         TransmitirDatos@n 0017                        _ing 002D                        wreg 0FE8  
                     ?_ISR 0001           ??i2_EscribeLCD_c 0005                       l2007 14EC  
                     l2017 159A                       l2041 10B2                       l2121 11FC  
                     l2211 1078                       l2035 10A2                       l2107 14B6  
                     l2131 121C                       l2141 1320                       l2047 10C8  
                     l2063 10FA                       l2119 11F4                       l2049 10D0  
                     l2081 13DA                       l2171 1004                       l2067 1108  
                     l2059 10F0                       l2147 1338                       l2139 1318  
                     l2181 1022                       l2077 13D4                       l2093 13F8  
                     l2333 0D92                       l2191 1040                       l2263 08B6  
                     l2255 0876                       l2271 090E                       l2351 0DEC  
                     l2089 13F0                       l2345 0DCE                       l2099 149E  
                     l2259 088A                       l2363 0E28                       l2339 0DB0  
                     l2381 0E8A                       l2269 08E4                       l2357 0E0A  
                     l2385 0EC0                       l2369 0E46                       l1907 12B6  
                     l2389 0EF6                       l1927 144E                       l1891 1152  
                     l2683 0BE2                       l1885 1116                       l2597 1362  
                     l2693 0C1C                       l1887 1128                       l1895 115C  
                     l2679 0BD4                       l1889 1148                       l1985 1238  
                     STR_1 0812                       STR_2 0801                       STR_3 081D  
                     STR_4 0801                       STR_5 0801                       STR_6 0801  
                     STR_7 0827                       STR_8 082D                       u1100 1324  
                     u1030 13DE                       u1070 1200                       u1310 0E16  
                     u1230 0D9E                       u1400 0E9A                       u1410 0EAE  
                     u1402 0E9C                       u1330 0E34                       u1250 0DBC  
                     u1412 0EB0                       u1430 0ED0                       u1350 0E52  
                     u1270 0DDA                       _LATB 0F8A                       u1440 0EE4  
                     u1432 0ED2                       _LATD 0F8C                       u1442 0EE6  
                     u1370 0E68                       u1290 0DF8                       u1460 0F06  
                     u1380 0E78                       u1372 0E6A                       u1470 0F1A  
                     u1462 0F08                       u1382 0E7A                       u1710 1386  
                     u1472 0F1C                       u1807 1404                       u1817 1414  
                     u1737 0B66                       u1827 1440                       u1747 0BAA  
                     u1837 1450                       u1757 0C10                       u1847 111C  
                     u1767 0C26                       u1857 112E                       u1777 1472  
                     u1867 1138                       u1787 147C                       _PEIE 7F96  
                     u1877 114A                       u1797 1488                       u1887 1154  
                     _RBIE 7F93                       _RBIF 7F90                       u1897 1574  
                     _RBPU 7F8F                       _TMR0 0FD6                       _TMR1 0FCE  
                     _TMR2 0FCC                       _TRMT 7D61                       _Cont 0021  
           ??_EscribeLCD_c 000C                       _Temp 0030                       _cara 0023  
                     _main 0AC4                       fsr2h 0FDA                       indf2 0FDF  
                     fsr1l 0FE1                       fsr2l 0FD9                       btemp 0031  
                     prodh 0FF4                       prodl 0FF3                       start 000E  
          __end_of_LeerBit 1466               ___param_bank 0000                      ??_ISR 0006  
           ?_InicializaLCD 0001                      ?_main 0001            __end_of___awdiv 1112  
          __end_of___lbdiv 13FC                      _ADRES 0FC3                      _CCPR2 0FBB  
               _ComandoLCD 1466              EscribeLCD_c@a 000C            __end_of___lbmod 14BE  
                    _T0CON 0FD5            ___awdiv@divisor 000A                      _T1CON 0FCD  
                    _T2CON 0FCA                      _LATE1 7C69                      _LATE2 7C6A  
          __end_of___lwdiv 1230            __end_of___lwmod 134C                      i2l340 0C94  
                    i2l342 0C92                      i2l351 0CC0                      i2l371 0D1C  
                    i2l363 0CF8                      i2l355 0CD4                      i2l347 0CB0  
                    i2l372 0D34                      i2l373 0D24                      i2l365 0D00  
                    i2l357 0CDC                      i2l349 0CB8                      i2l375 0D2C  
                    i2l367 0D08                      i2l359 0CE4                      i2l379 0D7C  
          ___awdiv@counter 000C                      _RCREG 0FAE                      _RCSTA 0FAB  
                    _SPBRG 0FAF                      _PORTB 0F81                      _USBEN 7B6B  
                    _TRISA 0F92                      _TRISB 0F93                      _TRISC 0F94  
                    _TRISD 0F95                      _TXREG 0FAD                      _TXSTA 0FAC  
                    _Tecla 002E        __end_of_LeerTeclado 0FF2             NuevoCaracter@c 000D  
           NuevoCaracter@i 000F                      tablat 0FF5                _HabilitaLCD 1570  
                    ttemp5 0032                      ttemp6 0035                      ttemp7 0039  
                    status 0FD8                      wtemp8 0032            ___lbdiv@divisor 0008  
          ___lbdiv@counter 000A           __end_of_BorraLCD 155C           __end_of_LeerHT11 1436  
          __initialization 1388           __end_of_LeerByte 1506               __end_of_main 0C60  
                   ??_main 001D              __activetblptr 0002                     _ADCON0 0FC2  
                   _ADCON1 0FC1                     _ADCON2 0FC0      __end_of_NuevoCaracter 1388  
           DireccionaLCD@a 000C                     _CCPR1L 0FBE           ___awdiv@dividend 0008  
                   i2l2161 12FC                     i2l1651 0F40                     i2l1661 0F5E  
                   i2l1653 0F46                     i2l1645 0F2E                     i2l2541 0CEC  
                   i2l1671 0F7C                     i2l1663 0F64                     i2l1655 0F4C  
                   i2l1647 0F34                     i2l1673 0F82                     i2l1665 0F6A  
                   i2l1657 0F52                     i2l1649 0F3A                     i2l2553 0D10  
                   i2l2529 0CC8                     i2l1675 0F88                     i2l1667 0F70  
                   i2l1659 0F58                     i2l2571 0D46                     i2l1669 0F76  
                   i2l1679 0F8E                     i2l1951 11B8                     i2l2575 0D5E  
                   i2l1945 117C                     i2l1947 118E                     i2l1955 11C2  
                   i2l1949 11AE                     _OSCCON 0FD3                     _TMR0IE 7F95  
                   _TMR0IF 7F92                     _TMR1IE 7CE8                     _TMR1IF 7CF0  
                   _TMR0ON 7EAF                     _TMR1ON 7E68                     _TMR2ON 7E52  
                   _TRISC0 7CA0                     _TRISC1 7CA1                     _TRISC2 7CA2  
                   _TRISE0 7CB0                     _TRISE1 7CB1                     _TRISE2 7CB2  
                   _TRISC6 7CA6                     _TRISC7 7CA7                  ??_LeerBit 0008  
    __end_of_DireccionaLCD 151C                     _UTRDIS 7B7B                 _RetardoLCD 1112  
      TransmitirDatos@Ent1 0011        TransmitirDatos@Ent2 0013        TransmitirDatos@Simb 0019  
               _Movimiento 0E58                     ___wmul 14BE                  ??___awdiv 000C  
                ??___lbdiv 0009                  ??___lbmod 0009                  ??___lwdiv 000C  
                ??___lwmod 000C            ??_InicializaLCD 000C           ___awdiv@quotient 000E  
                   isa$std 0001       __end_of_EscribeLCD_c 1532                ?_ComandoLCD 0001  
              _LeerTeclado 0F2C               ?i2_EnviaDato 0001               __pdataCOMRAM 001F  
             __mediumconst 0000                     tblptrh 0FF7                     tblptrl 0FF6  
                   tblptru 0FF8                 _Transmitir 1598           ___lbdiv@dividend 0009  
          ___lbmod@divisor 0008      __end_ofi2_HabilitaLCD 158C                 __accesstop 0060  
  __end_of__initialization 13B4            ___lbmod@counter 000A              ___rparam_used 0001  
           __pcstackCOMRAM 0001          __end_of_EnviaDato 12C4           ___lbdiv@quotient 000B  
                ?_BorraLCD 0001                  ?_LeerHT11 0001                  ?_LeerByte 0001  
              ?_RetardoLCD 0001                RetardoLCD@a 0009          __end_of_Velocidad 0E58  
           ComandoLCD@data 0009                ?_Movimiento 0001                    ?___wmul 0008  
                  _CCP1CON 0FBD                    _CCP2CON 0FBA                 ??_BorraLCD 000C  
               ??_LeerHT11 000C                ?_Transmitir 0001          ??_MensajeLCD_Word 000E  
               ??_LeerByte 0009               ?_HabilitaLCD 0001                    _LeerBit 1436  
                  _Humedad 002F                    __Hparam 0000                    __Lparam 0000  
     TransmitirDatos@TempC 001B                    ___awdiv 108E                    ___lbdiv 13C2  
                  ___lbmod 1494                    ___lwdiv 11DE                    ___lwmod 130A  
             __psmallconst 0800                    __pcinit 1388                    __ramtop 0800  
                  __ptext0 0AC4                    __ptext1 0D80                    __ptext2 0834  
                  __ptext3 14BE                    __ptext4 130A                    __ptext5 11DE  
                  __ptext6 1494                    __ptext7 13C2                    __ptext8 108E  
                  __ptext9 1598             __pintcode_body 0C60       end_of_initialization 13B4  
            __Lmediumconst 0000                    int_func 0C60               _EscribeLCD_c 151C  
                  postdec1 0FE5          ??_TransmitirDatos 0015                    postinc0 0FEE  
             ??_ComandoLCD 0008               ?_LeerTeclado 0001           ___lbmod@dividend 0009  
                LeerByte@i 000B            i2EscribeLCD_c@a 0005                ___lbmod@rem 000B  
            ?i2_RetardoLCD 0001         __end_of_ComandoLCD 1494             __end_of___wmul 14E4  
            __pidataCOMRAM 158C      __end_of_InicializaLCD 108E                  _EnviaDato 127E  
      start_initialization 1388                __end_of_ISR 0D80             ??i2_RetardoLCD 0001  
             ??_RetardoLCD 0008               ??_Movimiento 0008                   ??___wmul 000C  
                _Velocidad 0D80            _MensajeLCD_Word 1230                 ?_EnviaDato 0001  
              __pbssCOMRAM 002B         __end_of_RetardoLCD 1178           MensajeLCD_Word@a 000D  
         MensajeLCD_Word@i 000F               ??_Transmitir 0008              _NuevoCaracter 134C  
       __end_of_Movimiento 0F2C                   ?_LeerBit 0001              _DireccionaLCD 1506  
           i2_EscribeLCD_c 1532           ___lwdiv@dividend 0008                  __pintcode 0008  
                 ?___awdiv 0008                   ?___lbdiv 0008                   ?___lbmod 0008  
               ?_Velocidad 0008                   ?___lwdiv 0008                   ?___lwmod 0008  
       __end_of_Transmitir 15A4                __smallconst 0800           ___lwdiv@quotient 000C  
           ?_NuevoCaracter 000D            _TransmitirDatos 0834             ___wmul@product 000C  
            i2_HabilitaLCD 157E             ?_DireccionaLCD 0001     __end_ofi2_EscribeLCD_c 1548  
                 i2u190_47 0C82                   i2u191_47 0D52                   i2u192_47 1182  
                 i2u193_47 1194                   i2u194_47 119E                   i2u195_47 11B0  
                 i2u196_47 11BA                   i2u197_47 1582    __end_of_MensajeLCD_Word 127E  
        ___wmul@multiplier 0008              ??i2_EnviaDato 0003       __end_ofi2_RetardoLCD 11DE  
              ??_EnviaDato 000A          _ConvertirUnidades 155C         ?_ConvertirUnidades 0001  
                 _BorraLCD 1548                   _LeerHT11 13FC                  copy_data0 139C  
                 _LeerByte 14E4             ?i2_HabilitaLCD 0001        ??_ConvertirUnidades 0008  
          ?i2_EscribeLCD_c 0001                   __Hrparam 0000                   __Lrparam 0000  
              ??_Velocidad 000A               i2EnviaDato@a 0004  __end_of_ConvertirUnidades 1570  
          ??_NuevoCaracter 000E    __end_of_TransmitirDatos 0AC4            ___lwdiv@divisor 000A  
          ___lwdiv@counter 000E                   __ptext10 1230                   __ptext11 1506  
                 __ptext20 1548                   __ptext12 134C                   __ptext21 127E  
                 __ptext13 151C                   __ptext30 0F2C                   __ptext22 1112  
                 __ptext14 1466                   __ptext23 1570                   __ptext15 0E58  
                 __ptext24 155C                   __ptext16 13FC                   __ptext17 14E4  
                 __ptext26 1532                   __ptext18 1436                   __ptext27 12C4  
                 __ptext19 0FF2                   __ptext28 1178                   __ptext29 157E  
      __end_ofi2_EnviaDato 130A            ??_DireccionaLCD 000C                   _interfaz 0022  
             Velocidad@val 0008                   isa$xinst 0000           ?_MensajeLCD_Word 000D  
                 int$flags 0031          NuevoCaracter@addr 000E            ??i2_HabilitaLCD 0001  
                 intlevel2 0000              ??_HabilitaLCD 0008           ___lwmod@dividend 0008  
            i2RetardoLCD@a 0002                i2_EnviaDato 12C4            ___lwmod@divisor 000A  
          ___lwmod@counter 000C           ?_TransmitirDatos 0011     ConvertirUnidades@canal 0008  
            ?_EscribeLCD_c 0001                 LeerBit@res 0008               i2_RetardoLCD 1178  
      __end_of_HabilitaLCD 157E                LeerByte@res 000A  
