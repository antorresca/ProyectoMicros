

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu Jun 08 12:18:26 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og9 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1
    36                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    37                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1
    45                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    46                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    47                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    48                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    49                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    50   000000                     
    51                           ; Version 2.40
    52                           ; Generated 04/07/2022 GMT
    53                           ; 
    54                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    55                           ; All rights reserved.
    56                           ; 
    57                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    58                           ; 
    59                           ; Redistribution and use in source and binary forms, with or without modification, are
    60                           ; permitted provided that the following conditions are met:
    61                           ; 
    62                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    63                           ;        conditions and the following disclaimer.
    64                           ; 
    65                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    66                           ;        of conditions and the following disclaimer in the documentation and/or other
    67                           ;        materials provided with the distribution. Publication is not required when
    68                           ;        this file is used in an embedded application.
    69                           ; 
    70                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    71                           ;        software without specific prior written permission.
    72                           ; 
    73                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    74                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    75                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    76                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    77                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    78                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    79                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    80                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    81                           ; 
    82                           ; 
    83                           ; Code-generator required, PIC18F4550 Definitions
    84                           ; 
    85                           ; SFR Addresses
    86   000000                     
    87                           	psect	idataCOMRAM
    88   0017BE                     __pidataCOMRAM:
    89                           	callstack 0
    90                           
    91                           ;initializer for Password@F3203
    92   0017BE  30                 	db	48
    93   0017BF  31                 	db	49
    94   0017C0  32                 	db	50
    95   0017C1  33                 	db	51
    96                           
    97                           ;initializer for _a
    98   0017C2  007D               	dw	125
    99                           
   100                           ;initializer for _Cont
   101   0017C4  06                 	db	6
   102                           
   103                           ;initializer for _interfaz
   104   0017C5  08                 	db	8
   105                           
   106                           ;initializer for _cara
   107   0017C6  00                 	db	0
   108   0017C7  0A                 	db	10
   109   0017C8  0A                 	db	10
   110   0017C9  0A                 	db	10
   111   0017CA  00                 	db	0
   112   0017CB  1F                 	db	31
   113   0017CC  0E                 	db	14
   114   0017CD  00                 	db	0
   115   000000                     _TMR1	set	4046
   116   000000                     _PORTB	set	3969
   117   000000                     _RCREG	set	4014
   118   000000                     _TXREG	set	4013
   119   000000                     _T1CON	set	4045
   120   000000                     _SPBRG	set	4015
   121   000000                     _TMR2	set	4044
   122   000000                     _TRISB	set	3987
   123   000000                     _RB7	set	31759
   124   000000                     _RB6	set	31758
   125   000000                     _RB5	set	31757
   126   000000                     _RB4	set	31756
   127   000000                     _GO	set	32273
   128   000000                     _TRMT	set	32097
   129   000000                     _GIE	set	32663
   130   000000                     _TMR1ON	set	32360
   131   000000                     _PEIE	set	32662
   132   000000                     _TRISC1	set	31905
   133   000000                     _TRISA5	set	31893
   134   000000                     _TRISC7	set	31911
   135   000000                     _TRISC6	set	31910
   136   000000                     _TMR2ON	set	32338
   137   000000                     _TRISC2	set	31906
   138   000000                     _TMR0ON	set	32431
   139   000000                     _TMR0IE	set	32661
   140   000000                     _TMR0IF	set	32658
   141   000000                     _RBIE	set	32659
   142   000000                     _TRISE1	set	31921
   143   000000                     _TRISE2	set	31922
   144   000000                     _LATE2	set	31850
   145   000000                     _LATD	set	3980
   146   000000                     _USBEN	set	31595
   147   000000                     _UTRDIS	set	31611
   148   000000                     _TRISA	set	3986
   149   000000                     _TRISC	set	3988
   150   000000                     _LATE1	set	31849
   151   000000                     _RCSTA	set	4011
   152   000000                     _TXSTA	set	4012
   153   000000                     _CCP1CON	set	4029
   154   000000                     _CCPR1L	set	4030
   155   000000                     _ADCON2	set	4032
   156   000000                     _ADCON1	set	4033
   157   000000                     _ADCON0	set	4034
   158   000000                     _TRISD	set	3989
   159   000000                     _OSCCON	set	4051
   160   000000                     _TMR1IE	set	31976
   161   000000                     _TMR1IF	set	31984
   162   000000                     _TRISE0	set	31920
   163   000000                     _T0CON	set	4053
   164   000000                     _RBPU	set	32655
   165   000000                     _ADRES	set	4035
   166   000000                     _T2CON	set	4042
   167   000000                     _PR2	set	4043
   168   000000                     _RBIF	set	32656
   169   000000                     _TMR0	set	4054
   170   000000                     _CCPR2	set	4027
   171   000000                     _CCP2CON	set	4026
   172   000000                     _RA5	set	31749
   173   000000                     _RC2	set	31762
   174   000000                     _RE0	set	31776
   175   000000                     _LATB	set	3978
   176                           
   177                           	psect	smallconst
   178   000800                     __psmallconst:
   179                           	callstack 0
   180   000800  00                 	db	0
   181   000801                     STR_4:
   182   000801  20                 	db	32
   183   000802  20                 	db	32
   184   000803  20                 	db	32
   185   000804  20                 	db	32
   186   000805  20                 	db	32
   187   000806  20                 	db	32
   188   000807  20                 	db	32
   189   000808  20                 	db	32
   190   000809  20                 	db	32
   191   00080A  20                 	db	32
   192   00080B  20                 	db	32
   193   00080C  20                 	db	32
   194   00080D  20                 	db	32
   195   00080E  20                 	db	32
   196   00080F  20                 	db	32
   197   000810  20                 	db	32
   198   000811  20                 	db	32
   199   000812  20                 	db	32
   200   000813  20                 	db	32
   201   000814  20                 	db	32
   202   000815  20                 	db	32
   203   000816  20                 	db	32
   204   000817  00                 	db	0
   205   000818                     STR_1:
   206   000818  42                 	db	66	;'B'
   207   000819  69                 	db	105	;'i'
   208   00081A  65                 	db	101	;'e'
   209   00081B  6E                 	db	110	;'n'
   210   00081C  76                 	db	118	;'v'
   211   00081D  65                 	db	101	;'e'
   212   00081E  6E                 	db	110	;'n'
   213   00081F  69                 	db	105	;'i'
   214   000820  64                 	db	100	;'d'
   215   000821  6F                 	db	111	;'o'
   216   000822  00                 	db	0
   217   000823                     STR_5:
   218   000823  49                 	db	73	;'I'
   219   000824  6E                 	db	110	;'n'
   220   000825  63                 	db	99	;'c'
   221   000826  6F                 	db	111	;'o'
   222   000827  72                 	db	114	;'r'
   223   000828  72                 	db	114	;'r'
   224   000829  65                 	db	101	;'e'
   225   00082A  63                 	db	99	;'c'
   226   00082B  74                 	db	116	;'t'
   227   00082C  6F                 	db	111	;'o'
   228   00082D  00                 	db	0
   229   00082E                     STR_3:
   230   00082E  50                 	db	80	;'P'
   231   00082F  61                 	db	97	;'a'
   232   000830  73                 	db	115	;'s'
   233   000831  73                 	db	115	;'s'
   234   000832  77                 	db	119	;'w'
   235   000833  6F                 	db	111	;'o'
   236   000834  72                 	db	114	;'r'
   237   000835  64                 	db	100	;'d'
   238   000836  3A                 	db	58	;':'
   239   000837  00                 	db	0
   240   000838                     STR_9:
   241   000838  53                 	db	83	;'S'
   242   000839  54                 	db	84	;'T'
   243   00083A  4F                 	db	79	;'O'
   244   00083B  50                 	db	80	;'P'
   245   00083C  45                 	db	69	;'E'
   246   00083D  44                 	db	68	;'D'
   247   00083E  00                 	db	0
   248   00083F                     STR_7:
   249   00083F  54                 	db	84	;'T'
   250   000840  65                 	db	101	;'e'
   251   000841  6D                 	db	109	;'m'
   252   000842  70                 	db	112	;'p'
   253   000843  3A                 	db	58	;':'
   254   000844  00                 	db	0
   255   000845                     STR_8:
   256   000845  44                 	db	68	;'D'
   257   000846  75                 	db	117	;'u'
   258   000847  74                 	db	116	;'t'
   259   000848  79                 	db	121	;'y'
   260   000849  3A                 	db	58	;':'
   261   00084A  00                 	db	0
   262   00084B  00                 	db	0	; dummy byte at the end
   263   000000                     
   264                           ; #config settings
   265                           
   266                           	psect	cinit
   267   001628                     __pcinit:
   268                           	callstack 0
   269   001628                     start_initialization:
   270                           	callstack 0
   271   001628                     __initialization:
   272                           	callstack 0
   273                           
   274                           ; Initialize objects allocated to COMRAM (16 bytes)
   275                           ; load TBLPTR registers with __pidataCOMRAM
   276   001628  0EBE               	movlw	low __pidataCOMRAM
   277   00162A  6EF6               	movwf	tblptrl,c
   278   00162C  0E17               	movlw	high __pidataCOMRAM
   279   00162E  6EF7               	movwf	tblptrh,c
   280   001630  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   281   001632  6EF8               	movwf	tblptru,c
   282   001634  EE00  F032         	lfsr	0,__pdataCOMRAM
   283   001638  EE10 F010          	lfsr	1,16
   284   00163C                     copy_data0:
   285   00163C  0009               	tblrd		*+
   286   00163E  CFF5 FFEE          	movff	tablat,postinc0
   287   001642  50E5               	movf	postdec1,w,c
   288   001644  50E1               	movf	fsr1l,w,c
   289   001646  E1FA               	bnz	copy_data0
   290                           
   291                           ; Clear objects allocated to COMRAM (12 bytes)
   292   001648  EE00  F042         	lfsr	0,__pbssCOMRAM
   293   00164C  0E0C               	movlw	12
   294   00164E                     clear_0:
   295   00164E  6AEE               	clrf	postinc0,c
   296   001650  06E8               	decf	wreg,f,c
   297   001652  E1FD               	bnz	clear_0
   298   001654                     end_of_initialization:
   299                           	callstack 0
   300   001654                     __end_of__initialization:
   301                           	callstack 0
   302   001654  904E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   303   001656  924E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   304   001658  0E00               	movlw	low (__Lmediumconst shr (0+16))
   305   00165A  6EF8               	movwf	tblptru,c
   306   00165C  0100               	movlb	0
   307   00165E  EFA5  F005         	goto	_main	;jump to C main() function
   308                           
   309                           	psect	bssCOMRAM
   310   000042                     __pbssCOMRAM:
   311                           	callstack 0
   312   000042                     _teclaRecibidaIf:
   313                           	callstack 0
   314   000042                     	ds	2
   315   000044                     _teclaIf:
   316                           	callstack 0
   317   000044                     	ds	2
   318   000046                     _c:
   319                           	callstack 0
   320   000046                     	ds	2
   321   000048                     _Tecla:
   322                           	callstack 0
   323   000048                     	ds	1
   324   000049                     _Temp:
   325                           	callstack 0
   326   000049                     	ds	1
   327   00004A                     _ing:
   328                           	callstack 0
   329   00004A                     	ds	4
   330                           
   331                           	psect	dataCOMRAM
   332   000032                     __pdataCOMRAM:
   333                           	callstack 0
   334   000032                     Password@F3203:
   335                           	callstack 0
   336   000032                     	ds	4
   337   000036                     _a:
   338                           	callstack 0
   339   000036                     	ds	2
   340   000038                     _Cont:
   341                           	callstack 0
   342   000038                     	ds	1
   343   000039                     _interfaz:
   344                           	callstack 0
   345   000039                     	ds	1
   346   00003A                     _cara:
   347                           	callstack 0
   348   00003A                     	ds	8
   349                           
   350                           	psect	cstackCOMRAM
   351   000001                     __pcstackCOMRAM:
   352                           	callstack 0
   353   000001                     ??i2_RetardoLCD:
   354   000001                     
   355                           ; 2 bytes @ 0x0
   356   000001                     	ds	1
   357   000002                     i2RetardoLCD@a:
   358                           	callstack 0
   359                           
   360                           ; 1 bytes @ 0x1
   361   000002                     	ds	1
   362   000003                     ??i2_EnviaDato:
   363                           
   364                           ; 1 bytes @ 0x2
   365   000003                     	ds	1
   366   000004                     i2EnviaDato@a:
   367                           	callstack 0
   368                           
   369                           ; 1 bytes @ 0x3
   370   000004                     	ds	1
   371   000005                     i2EscribeLCD_c@a:
   372                           	callstack 0
   373                           
   374                           ; 1 bytes @ 0x4
   375   000005                     	ds	1
   376   000006                     i2MensajeLCD_Word@a:
   377                           	callstack 0
   378                           
   379                           ; 1 bytes @ 0x5
   380   000006                     	ds	1
   381   000007                     ??i2_MensajeLCD_Word:
   382                           
   383                           ; 1 bytes @ 0x6
   384   000007                     	ds	1
   385   000008                     i2MensajeLCD_Word@i:
   386                           	callstack 0
   387                           
   388                           ; 2 bytes @ 0x7
   389   000008                     	ds	2
   390   00000A                     ??_ISR:
   391                           
   392                           ; 1 bytes @ 0x9
   393   00000A                     	ds	6
   394   000010                     ??_RetardoLCD:
   395   000010                     ??_Movimiento:
   396   000010                     ??_ComandoLCD:
   397   000010                     ?___wmul:
   398                           	callstack 0
   399   000010                     ?___awdiv:
   400                           	callstack 0
   401   000010                     ?___lwdiv:
   402                           	callstack 0
   403   000010                     ?___lwmod:
   404                           	callstack 0
   405   000010                     LeerBit@res:
   406                           	callstack 0
   407   000010                     Transmitir@BufferT:
   408                           	callstack 0
   409   000010                     ConvertirUnidades@canal:
   410                           	callstack 0
   411   000010                     Velocidad@val:
   412                           	callstack 0
   413   000010                     ___wmul@multiplier:
   414                           	callstack 0
   415   000010                     ___awdiv@dividend:
   416                           	callstack 0
   417   000010                     ___lwdiv@dividend:
   418                           	callstack 0
   419   000010                     ___lwmod@dividend:
   420                           	callstack 0
   421                           
   422                           ; 2 bytes @ 0xF
   423   000010                     	ds	1
   424   000011                     ??_LeerByte:
   425   000011                     ComandoLCD@data:
   426                           	callstack 0
   427   000011                     RetardoLCD@a:
   428                           	callstack 0
   429                           
   430                           ; 1 bytes @ 0x10
   431   000011                     	ds	1
   432   000012                     ??_EnviaDato:
   433   000012                     LeerByte@res:
   434                           	callstack 0
   435   000012                     ___wmul@multiplicand:
   436                           	callstack 0
   437   000012                     ___awdiv@divisor:
   438                           	callstack 0
   439   000012                     ___lwdiv@divisor:
   440                           	callstack 0
   441   000012                     ___lwmod@divisor:
   442                           	callstack 0
   443                           
   444                           ; 2 bytes @ 0x11
   445   000012                     	ds	1
   446   000013                     EnviaDato@a:
   447                           	callstack 0
   448   000013                     LeerByte@i:
   449                           	callstack 0
   450                           
   451                           ; 1 bytes @ 0x12
   452   000013                     	ds	1
   453   000014                     ??_LeerHT11:
   454   000014                     EscribeLCD_c@a:
   455                           	callstack 0
   456   000014                     DireccionaLCD@a:
   457                           	callstack 0
   458   000014                     ___awdiv@counter:
   459                           	callstack 0
   460   000014                     ___lwmod@counter:
   461                           	callstack 0
   462   000014                     ___wmul@product:
   463                           	callstack 0
   464   000014                     ___lwdiv@quotient:
   465                           	callstack 0
   466                           
   467                           ; 2 bytes @ 0x13
   468   000014                     	ds	1
   469   000015                     ?_Password:
   470                           	callstack 0
   471   000015                     NuevoCaracter@c:
   472                           	callstack 0
   473   000015                     MensajeLCD_Word@a:
   474                           	callstack 0
   475   000015                     Password@pass:
   476                           	callstack 0
   477   000015                     ___awdiv@sign:
   478                           	callstack 0
   479                           
   480                           ; 1 bytes @ 0x14
   481   000015                     	ds	1
   482   000016                     ??_MensajeLCD_Word:
   483   000016                     NuevoCaracter@addr:
   484                           	callstack 0
   485   000016                     ___lwdiv@counter:
   486                           	callstack 0
   487   000016                     ___awdiv@quotient:
   488                           	callstack 0
   489                           
   490                           ; 2 bytes @ 0x15
   491   000016                     	ds	1
   492   000017                     NuevoCaracter@i:
   493                           	callstack 0
   494   000017                     MensajeLCD_Word@i:
   495                           	callstack 0
   496                           
   497                           ; 2 bytes @ 0x16
   498   000017                     	ds	1
   499   000018                     ?___awmod:
   500                           	callstack 0
   501   000018                     ___awmod@dividend:
   502                           	callstack 0
   503                           
   504                           ; 2 bytes @ 0x17
   505   000018                     	ds	1
   506   000019                     Password@secret:
   507                           	callstack 0
   508                           
   509                           ; 4 bytes @ 0x18
   510   000019                     	ds	1
   511   00001A                     ___awmod@divisor:
   512                           	callstack 0
   513                           
   514                           ; 2 bytes @ 0x19
   515   00001A                     	ds	2
   516   00001C                     ___awmod@counter:
   517                           	callstack 0
   518                           
   519                           ; 1 bytes @ 0x1B
   520   00001C                     	ds	1
   521   00001D                     ___awmod@sign:
   522                           	callstack 0
   523   00001D                     Password@access:
   524                           	callstack 0
   525                           
   526                           ; 2 bytes @ 0x1C
   527   00001D                     	ds	1
   528   00001E                     TransmitirDatos@Ent1:
   529                           	callstack 0
   530                           
   531                           ; 2 bytes @ 0x1D
   532   00001E                     	ds	1
   533   00001F                     Password@i:
   534                           	callstack 0
   535                           
   536                           ; 2 bytes @ 0x1E
   537   00001F                     	ds	1
   538   000020                     TransmitirDatos@Ent2:
   539                           	callstack 0
   540                           
   541                           ; 2 bytes @ 0x1F
   542   000020                     	ds	2
   543   000022                     _TransmitirDatos$226:
   544                           	callstack 0
   545                           
   546                           ; 2 bytes @ 0x21
   547   000022                     	ds	2
   548   000024                     _TransmitirDatos$227:
   549                           	callstack 0
   550                           
   551                           ; 2 bytes @ 0x23
   552   000024                     	ds	2
   553   000026                     _TransmitirDatos$229:
   554                           	callstack 0
   555                           
   556                           ; 2 bytes @ 0x25
   557   000026                     	ds	2
   558   000028                     _TransmitirDatos$230:
   559                           	callstack 0
   560                           
   561                           ; 2 bytes @ 0x27
   562   000028                     	ds	2
   563   00002A                     _TransmitirDatos$869:
   564                           	callstack 0
   565                           
   566                           ; 2 bytes @ 0x29
   567   00002A                     	ds	2
   568   00002C                     TransmitirDatos@TempC:
   569                           	callstack 0
   570                           
   571                           ; 2 bytes @ 0x2B
   572   00002C                     	ds	2
   573   00002E                     ??_main:
   574                           
   575                           ; 1 bytes @ 0x2D
   576   00002E                     	ds	2
   577   000030                     main@i:
   578                           	callstack 0
   579                           
   580                           ; 2 bytes @ 0x2F
   581   000030                     	ds	2
   582                           
   583 ;;
   584 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   585 ;;
   586 ;; *************** function _main *****************
   587 ;; Defined at:
   588 ;;		line 59 in file "Proyecto.c"
   589 ;; Parameters:    Size  Location     Type
   590 ;;		None
   591 ;; Auto vars:     Size  Location     Type
   592 ;;  i               2   47[COMRAM] int 
   593 ;; Return value:  Size  Location     Type
   594 ;;                  1    wreg      void 
   595 ;; Registers used:
   596 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   597 ;; Tracked objects:
   598 ;;		On entry : 0/0
   599 ;;		On exit  : 0/0
   600 ;;		Unchanged: 0/0
   601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   602 ;;      Params:         0       0       0       0       0       0       0       0       0
   603 ;;      Locals:         2       0       0       0       0       0       0       0       0
   604 ;;      Temps:          2       0       0       0       0       0       0       0       0
   605 ;;      Totals:         4       0       0       0       0       0       0       0       0
   606 ;;Total ram usage:        4 bytes
   607 ;; Hardware stack levels required when called: 10
   608 ;; This function calls:
   609 ;;		_BorraLCD
   610 ;;		_ConvertirUnidades
   611 ;;		_DireccionaLCD
   612 ;;		_EscribeLCD_c
   613 ;;		_InicializaLCD
   614 ;;		_LeerHT11
   615 ;;		_MensajeLCD_Word
   616 ;;		_Movimiento
   617 ;;		_NuevoCaracter
   618 ;;		_Password
   619 ;;		_TransmitirDatos
   620 ;;		_Velocidad
   621 ;; This function is called by:
   622 ;;		Startup code after reset
   623 ;; This function uses a non-reentrant model
   624 ;;
   625                           
   626                           	psect	text0
   627   000B4A                     __ptext0:
   628                           	callstack 0
   629   000B4A                     _main:
   630                           	callstack 21
   631                           
   632                           ;Proyecto.c: 61: TRISC = 0;
   633                           
   634                           ;incstack = 0
   635   000B4A  0E00               	movlw	0
   636   000B4C  6E94               	movwf	148,c	;volatile
   637                           
   638                           ;Proyecto.c: 62: OSCCON = 0b11110110;
   639   000B4E  0EF6               	movlw	246
   640   000B50  6ED3               	movwf	211,c	;volatile
   641                           
   642                           ;Proyecto.c: 64: TRISD = 0;
   643   000B52  0E00               	movlw	0
   644   000B54  6E95               	movwf	149,c	;volatile
   645                           
   646                           ;Proyecto.c: 65: TRISE0 = 1;
   647   000B56  8096               	bsf	3990,0,c	;volatile
   648                           
   649                           ;Proyecto.c: 66: TRISE2 = 0;
   650   000B58  9496               	bcf	3990,2,c	;volatile
   651                           
   652                           ;Proyecto.c: 67: TRISE1 = 0;
   653   000B5A  9296               	bcf	3990,1,c	;volatile
   654                           
   655                           ;Proyecto.c: 68: InicializaLCD();
   656   000B5C  ECAE  F008         	call	_InicializaLCD	;wreg free
   657                           
   658                           ;Proyecto.c: 69: BorraLCD();
   659   000B60  ECC1  F00B         	call	_BorraLCD	;wreg free
   660                           
   661                           ;Proyecto.c: 72: TRISA = 0b00100010;
   662   000B64  0E22               	movlw	34
   663   000B66  6E92               	movwf	146,c	;volatile
   664                           
   665                           ;Proyecto.c: 73: ADCON0 = 0b00000001;
   666   000B68  0E01               	movlw	1
   667   000B6A  6EC2               	movwf	194,c	;volatile
   668                           
   669                           ;Proyecto.c: 74: ADCON1 = 0b00001100;
   670   000B6C  0E0C               	movlw	12
   671   000B6E  6EC1               	movwf	193,c	;volatile
   672                           
   673                           ;Proyecto.c: 75: ADCON2 = 0b00001000;
   674   000B70  0E08               	movlw	8
   675   000B72  6EC0               	movwf	192,c	;volatile
   676                           
   677                           ;Proyecto.c: 78: TRISB=0b11110000;
   678   000B74  0EF0               	movlw	240
   679   000B76  6E93               	movwf	147,c	;volatile
   680                           
   681                           ;Proyecto.c: 79: RBPU=0;
   682   000B78  9EF1               	bcf	4081,7,c	;volatile
   683                           
   684                           ;Proyecto.c: 80: RBIF=0;
   685   000B7A  90F2               	bcf	4082,0,c	;volatile
   686                           
   687                           ;Proyecto.c: 81: RBIE=1;
   688   000B7C  86F2               	bsf	4082,3,c	;volatile
   689                           
   690                           ;Proyecto.c: 84: T0CON=0b00000011;
   691   000B7E  0E03               	movlw	3
   692   000B80  6ED5               	movwf	213,c	;volatile
   693                           
   694                           ;Proyecto.c: 85: TMR0IF=0;
   695   000B82  94F2               	bcf	4082,2,c	;volatile
   696                           
   697                           ;Proyecto.c: 86: TMR0=64286;
   698   000B84  0EFB               	movlw	251
   699   000B86  6ED7               	movwf	215,c	;volatile
   700   000B88  0E1E               	movlw	30
   701   000B8A  6ED6               	movwf	214,c	;volatile
   702                           
   703                           ;Proyecto.c: 87: TMR0IE=1;
   704   000B8C  8AF2               	bsf	4082,5,c	;volatile
   705                           
   706                           ;Proyecto.c: 88: TMR0ON=1;
   707   000B8E  8ED5               	bsf	4053,7,c	;volatile
   708                           
   709                           ;Proyecto.c: 91: TRISC2 = 0;
   710   000B90  9494               	bcf	3988,2,c	;volatile
   711                           
   712                           ;Proyecto.c: 92: PR2 = 125;
   713   000B92  0E7D               	movlw	125
   714   000B94  6ECB               	movwf	203,c	;volatile
   715                           
   716                           ;Proyecto.c: 93: CCPR1L = 0;
   717   000B96  0E00               	movlw	0
   718   000B98  6EBE               	movwf	190,c	;volatile
   719                           
   720                           ;Proyecto.c: 94: T2CON = 0b00000010;
   721   000B9A  0E02               	movlw	2
   722   000B9C  6ECA               	movwf	202,c	;volatile
   723                           
   724                           ;Proyecto.c: 95: CCP1CON = 0b00001100;
   725   000B9E  0E0C               	movlw	12
   726   000BA0  6EBD               	movwf	189,c	;volatile
   727                           
   728                           ;Proyecto.c: 96: TMR2 = 0;
   729   000BA2  0E00               	movlw	0
   730   000BA4  6ECC               	movwf	204,c	;volatile
   731                           
   732                           ;Proyecto.c: 97: TMR2ON = 1;
   733   000BA6  84CA               	bsf	4042,2,c	;volatile
   734                           
   735                           ;Proyecto.c: 100: TRISC6 = 1;
   736   000BA8  8C94               	bsf	3988,6,c	;volatile
   737                           
   738                           ;Proyecto.c: 101: TRISC7 = 1;
   739   000BAA  8E94               	bsf	3988,7,c	;volatile
   740                           
   741                           ;Proyecto.c: 102: TXSTA = 0b00100000;
   742   000BAC  0E20               	movlw	32
   743   000BAE  6EAC               	movwf	172,c	;volatile
   744                           
   745                           ;Proyecto.c: 103: RCSTA = 0b10010000;
   746   000BB0  0E90               	movlw	144
   747   000BB2  6EAB               	movwf	171,c	;volatile
   748                           
   749                           ;Proyecto.c: 104: SPBRG = 12;
   750   000BB4  0E0C               	movlw	12
   751   000BB6  6EAF               	movwf	175,c	;volatile
   752                           
   753                           ;Proyecto.c: 107: TRISA5= 1;
   754   000BB8  8A92               	bsf	3986,5,c	;volatile
   755                           
   756                           ;Proyecto.c: 108: UTRDIS = 1;
   757   000BBA  866F               	bsf	3951,3,c	;volatile
   758                           
   759                           ;Proyecto.c: 109: USBEN = 0;
   760   000BBC  966D               	bcf	3949,3,c	;volatile
   761                           
   762                           ;Proyecto.c: 111: TRISC1=0;
   763   000BBE  9294               	bcf	3988,1,c	;volatile
   764                           
   765                           ;Proyecto.c: 112: TMR1=60536;
   766   000BC0  0EEC               	movlw	236
   767   000BC2  6ECF               	movwf	207,c	;volatile
   768   000BC4  0E78               	movlw	120
   769   000BC6  6ECE               	movwf	206,c	;volatile
   770                           
   771                           ;Proyecto.c: 113: T1CON=0b10110000;
   772   000BC8  0EB0               	movlw	176
   773   000BCA  6ECD               	movwf	205,c	;volatile
   774                           
   775                           ;Proyecto.c: 114: CCPR2=60536+125;
   776   000BCC  0EEC               	movlw	236
   777   000BCE  6EBC               	movwf	188,c	;volatile
   778   000BD0  0EF5               	movlw	245
   779   000BD2  6EBB               	movwf	187,c	;volatile
   780                           
   781                           ;Proyecto.c: 115: CCP2CON=0b00001001;
   782   000BD4  0E09               	movlw	9
   783   000BD6  6EBA               	movwf	186,c	;volatile
   784                           
   785                           ;Proyecto.c: 116: TMR1IF=0;
   786   000BD8  909E               	bcf	3998,0,c	;volatile
   787                           
   788                           ;Proyecto.c: 117: TMR1IE=1;
   789   000BDA  809D               	bsf	3997,0,c	;volatile
   790                           
   791                           ;Proyecto.c: 118: PEIE=1;
   792   000BDC  8CF2               	bsf	4082,6,c	;volatile
   793                           
   794                           ;Proyecto.c: 119: TMR1ON=1;
   795   000BDE  80CD               	bsf	4045,0,c	;volatile
   796                           
   797                           ;Proyecto.c: 120: GIE=1;
   798   000BE0  8EF2               	bsf	4082,7,c	;volatile
   799                           
   800                           ;Proyecto.c: 122: _delay((unsigned long)((1000)*(8000000/4000.0)));
   801   000BE2  0E0B               	movlw	11
   802   000BE4  6E2F               	movwf	(??_main+1)^0,c
   803   000BE6  0E26               	movlw	38
   804   000BE8  6E2E               	movwf	??_main^0,c
   805   000BEA  0E5E               	movlw	94
   806   000BEC                     u2167:
   807   000BEC  2EE8               	decfsz	wreg,f,c
   808   000BEE  D7FE               	bra	u2167
   809   000BF0  2E2E               	decfsz	??_main^0,f,c
   810   000BF2  D7FC               	bra	u2167
   811   000BF4  2E2F               	decfsz	(??_main+1)^0,f,c
   812   000BF6  D7FA               	bra	u2167
   813                           
   814                           ;Proyecto.c: 123: BorraLCD();
   815   000BF8  ECC1  F00B         	call	_BorraLCD	;wreg free
   816                           
   817                           ;Proyecto.c: 124: NuevoCaracter(0,cara);
   818   000BFC  0E3A               	movlw	low _cara
   819   000BFE  6E15               	movwf	NuevoCaracter@c^0,c
   820   000C00  0E00               	movlw	0
   821   000C02  ECF6  F00A         	call	_NuevoCaracter
   822                           
   823                           ;Proyecto.c: 125: DireccionaLCD(0x82);
   824   000C06  0E82               	movlw	130
   825   000C08  ECA0  F00B         	call	_DireccionaLCD
   826                           
   827                           ;Proyecto.c: 126: EscribeLCD_c(0);
   828   000C0C  0E00               	movlw	0
   829   000C0E  ECAB  F00B         	call	_EscribeLCD_c
   830                           
   831                           ;Proyecto.c: 127: MensajeLCD_Word("Bienvenido");
   832   000C12  0E18               	movlw	low STR_1
   833   000C14  6E15               	movwf	MensajeLCD_Word@a^0,c
   834   000C16  EC41  F00A         	call	_MensajeLCD_Word	;wreg free
   835                           
   836                           ;Proyecto.c: 128: EscribeLCD_c(0);
   837   000C1A  0E00               	movlw	0
   838   000C1C  ECAB  F00B         	call	_EscribeLCD_c
   839                           
   840                           ;Proyecto.c: 129: DireccionaLCD(0xC7);
   841   000C20  0EC7               	movlw	199
   842   000C22  ECA0  F00B         	call	_DireccionaLCD
   843                           
   844                           ;Proyecto.c: 130: _delay((unsigned long)((1500)*(8000000/4000.0)));
   845   000C26  0E10               	movlw	16
   846   000C28  6E2F               	movwf	(??_main+1)^0,c
   847   000C2A  0E39               	movlw	57
   848   000C2C  6E2E               	movwf	??_main^0,c
   849   000C2E  0E0E               	movlw	14
   850   000C30                     u2177:
   851   000C30  2EE8               	decfsz	wreg,f,c
   852   000C32  D7FE               	bra	u2177
   853   000C34  2E2E               	decfsz	??_main^0,f,c
   854   000C36  D7FC               	bra	u2177
   855   000C38  2E2F               	decfsz	(??_main+1)^0,f,c
   856   000C3A  D7FA               	bra	u2177
   857                           
   858                           ;Proyecto.c: 131: DireccionaLCD(0x80);
   859   000C3C  0E80               	movlw	128
   860   000C3E  ECA0  F00B         	call	_DireccionaLCD
   861                           
   862                           ;Proyecto.c: 132: MensajeLCD_Word("                ");
   863   000C42  0E07               	movlw	low (STR_4+6)
   864   000C44  6E15               	movwf	MensajeLCD_Word@a^0,c
   865   000C46  EC41  F00A         	call	_MensajeLCD_Word	;wreg free
   866                           
   867                           ;Proyecto.c: 133: DireccionaLCD(0x80);
   868   000C4A  0E80               	movlw	128
   869   000C4C  ECA0  F00B         	call	_DireccionaLCD
   870                           
   871                           ;Proyecto.c: 134: MensajeLCD_Word("Password:");
   872   000C50  0E2E               	movlw	low STR_3
   873   000C52  6E15               	movwf	MensajeLCD_Word@a^0,c
   874   000C54  EC41  F00A         	call	_MensajeLCD_Word	;wreg free
   875                           
   876                           ;Proyecto.c: 136: while (!Password(ing)) {
   877   000C58  D05B               	goto	l2970
   878   000C5A                     l2932:
   879                           
   880                           ;Proyecto.c: 137: teclaIf = 1;
   881   000C5A  0E00               	movlw	0
   882   000C5C  6E45               	movwf	(_teclaIf+1)^0,c
   883   000C5E  0E01               	movlw	1
   884   000C60  6E44               	movwf	_teclaIf^0,c
   885                           
   886                           ;Proyecto.c: 138: for (int i = 0; i <4; i++) {
   887   000C62  0E00               	movlw	0
   888   000C64  6E31               	movwf	(main@i+1)^0,c
   889   000C66  0E00               	movlw	0
   890   000C68  6E30               	movwf	main@i^0,c
   891   000C6A                     l2938:
   892   000C6A  5042               	movf	_teclaRecibidaIf^0,w,c
   893   000C6C  1043               	iorwf	(_teclaRecibidaIf+1)^0,w,c
   894   000C6E  B4D8               	btfsc	status,2,c
   895   000C70  D7FC               	goto	l2938
   896                           
   897                           ;Proyecto.c: 140: teclaRecibidaIf=0;
   898   000C72  0E00               	movlw	0
   899   000C74  6E43               	movwf	(_teclaRecibidaIf+1)^0,c
   900   000C76  0E00               	movlw	0
   901   000C78  6E42               	movwf	_teclaRecibidaIf^0,c
   902                           
   903                           ;Proyecto.c: 141: ing[i] = Tecla;
   904   000C7A  5030               	movf	main@i^0,w,c
   905   000C7C  0F4A               	addlw	low _ing
   906   000C7E  6ED9               	movwf	fsr2l,c
   907   000C80  6ADA               	clrf	fsr2h,c
   908   000C82  C048  FFDF         	movff	_Tecla,indf2
   909   000C86  4A30               	infsnz	main@i^0,f,c
   910   000C88  2A31               	incf	(main@i+1)^0,f,c
   911   000C8A  BE31               	btfsc	(main@i+1)^0,7,c
   912   000C8C  D7EE               	goto	l2938
   913   000C8E  5031               	movf	(main@i+1)^0,w,c
   914   000C90  E104               	bnz	u2130
   915   000C92  0E04               	movlw	4
   916   000C94  5C30               	subwf	main@i^0,w,c
   917   000C96  A0D8               	btfss	status,0,c
   918   000C98  D7E8               	goto	l2938
   919   000C9A                     u2130:
   920                           
   921                           ;Proyecto.c: 143: };Proyecto.c: 144: teclaIf = 0;
   922   000C9A  0E00               	movlw	0
   923   000C9C  6E45               	movwf	(_teclaIf+1)^0,c
   924   000C9E  0E00               	movlw	0
   925   000CA0  6E44               	movwf	_teclaIf^0,c
   926                           
   927                           ;Proyecto.c: 145: if (Password(ing)) {
   928   000CA2  0E4A               	movlw	low _ing
   929   000CA4  6E15               	movwf	Password@pass^0,c
   930   000CA6  EC3E  F009         	call	_Password	;wreg free
   931   000CAA  5015               	movf	?_Password^0,w,c
   932   000CAC  1016               	iorwf	(?_Password+1)^0,w,c
   933   000CAE  B4D8               	btfsc	status,2,c
   934   000CB0  D016               	goto	l2960
   935                           
   936                           ;Proyecto.c: 146: MensajeLCD_Word("                      ");
   937   000CB2  0E01               	movlw	low STR_4
   938   000CB4  6E15               	movwf	MensajeLCD_Word@a^0,c
   939   000CB6  EC41  F00A         	call	_MensajeLCD_Word	;wreg free
   940                           
   941                           ;Proyecto.c: 147: DireccionaLCD(0xC1);
   942   000CBA  0EC1               	movlw	193
   943   000CBC  ECA0  F00B         	call	_DireccionaLCD
   944                           
   945                           ;Proyecto.c: 148: EscribeLCD_c(0);
   946   000CC0  0E00               	movlw	0
   947   000CC2  ECAB  F00B         	call	_EscribeLCD_c
   948                           
   949                           ;Proyecto.c: 149: _delay((unsigned long)((1000)*(8000000/4000.0)));
   950   000CC6  0E0B               	movlw	11
   951   000CC8  6E2F               	movwf	(??_main+1)^0,c
   952   000CCA  0E26               	movlw	38
   953   000CCC  6E2E               	movwf	??_main^0,c
   954   000CCE  0E5E               	movlw	94
   955   000CD0                     u2187:
   956   000CD0  2EE8               	decfsz	wreg,f,c
   957   000CD2  D7FE               	bra	u2187
   958   000CD4  2E2E               	decfsz	??_main^0,f,c
   959   000CD6  D7FC               	bra	u2187
   960   000CD8  2E2F               	decfsz	(??_main+1)^0,f,c
   961   000CDA  D7FA               	bra	u2187
   962                           
   963                           ;Proyecto.c: 150: } else {
   964   000CDC  D019               	goto	l2970
   965   000CDE                     l2960:
   966                           
   967                           ;Proyecto.c: 152: DireccionaLCD(0xC1);
   968   000CDE  0EC1               	movlw	193
   969   000CE0  ECA0  F00B         	call	_DireccionaLCD
   970                           
   971                           ;Proyecto.c: 153: MensajeLCD_Word("Incorrecto");
   972   000CE4  0E23               	movlw	low STR_5
   973   000CE6  6E15               	movwf	MensajeLCD_Word@a^0,c
   974   000CE8  EC41  F00A         	call	_MensajeLCD_Word	;wreg free
   975                           
   976                           ;Proyecto.c: 154: _delay((unsigned long)((1000)*(8000000/4000.0)));
   977   000CEC  0E0B               	movlw	11
   978   000CEE  6E2F               	movwf	(??_main+1)^0,c
   979   000CF0  0E26               	movlw	38
   980   000CF2  6E2E               	movwf	??_main^0,c
   981   000CF4  0E5E               	movlw	94
   982   000CF6                     u2197:
   983   000CF6  2EE8               	decfsz	wreg,f,c
   984   000CF8  D7FE               	bra	u2197
   985   000CFA  2E2E               	decfsz	??_main^0,f,c
   986   000CFC  D7FC               	bra	u2197
   987   000CFE  2E2F               	decfsz	(??_main+1)^0,f,c
   988   000D00  D7FA               	bra	u2197
   989                           
   990                           ;Proyecto.c: 155: DireccionaLCD(0xC1);
   991   000D02  0EC1               	movlw	193
   992   000D04  ECA0  F00B         	call	_DireccionaLCD
   993                           
   994                           ;Proyecto.c: 156: MensajeLCD_Word("                      ");
   995   000D08  0E01               	movlw	low STR_4
   996   000D0A  6E15               	movwf	MensajeLCD_Word@a^0,c
   997   000D0C  EC41  F00A         	call	_MensajeLCD_Word	;wreg free
   998   000D10                     l2970:
   999   000D10  0E4A               	movlw	low _ing
  1000   000D12  6E15               	movwf	Password@pass^0,c
  1001   000D14  EC3E  F009         	call	_Password	;wreg free
  1002   000D18  5015               	movf	?_Password^0,w,c
  1003   000D1A  1016               	iorwf	(?_Password+1)^0,w,c
  1004   000D1C  B4D8               	btfsc	status,2,c
  1005   000D1E  D79D               	goto	l2932
  1006                           
  1007                           ;Proyecto.c: 157: };Proyecto.c: 158: };Proyecto.c: 159: BorraLCD();
  1008   000D20  ECC1  F00B         	call	_BorraLCD	;wreg free
  1009                           
  1010                           ;Proyecto.c: 164: _delay((unsigned long)((500)*(8000000/4000.0)));
  1011   000D24  0E06               	movlw	6
  1012   000D26  6E2F               	movwf	(??_main+1)^0,c
  1013   000D28  0E13               	movlw	19
  1014   000D2A  6E2E               	movwf	??_main^0,c
  1015   000D2C  0EAE               	movlw	174
  1016   000D2E                     u2207:
  1017   000D2E  2EE8               	decfsz	wreg,f,c
  1018   000D30  D7FE               	bra	u2207
  1019   000D32  2E2E               	decfsz	??_main^0,f,c
  1020   000D34  D7FC               	bra	u2207
  1021   000D36  2E2F               	decfsz	(??_main+1)^0,f,c
  1022   000D38  D7FA               	bra	u2207
  1023   000D3A                     l2976:
  1024                           
  1025                           ;Proyecto.c: 168: _delay((unsigned long)((500)*(8000000/4000.0)));
  1026   000D3A  0E06               	movlw	6
  1027   000D3C  6E2F               	movwf	(??_main+1)^0,c
  1028   000D3E  0E13               	movlw	19
  1029   000D40  6E2E               	movwf	??_main^0,c
  1030   000D42  0EAE               	movlw	174
  1031   000D44                     u2217:
  1032   000D44  2EE8               	decfsz	wreg,f,c
  1033   000D46  D7FE               	bra	u2217
  1034   000D48  2E2E               	decfsz	??_main^0,f,c
  1035   000D4A  D7FC               	bra	u2217
  1036   000D4C  2E2F               	decfsz	(??_main+1)^0,f,c
  1037   000D4E  D7FA               	bra	u2217
  1038                           
  1039                           ;Proyecto.c: 169: LeerHT11();
  1040   000D50  EC31  F00B         	call	_LeerHT11	;wreg free
  1041                           
  1042                           ;Proyecto.c: 170: TransmitirDatos(0, 0);
  1043   000D54  0E00               	movlw	0
  1044   000D56  6E1F               	movwf	(TransmitirDatos@Ent1+1)^0,c
  1045   000D58  0E00               	movlw	0
  1046   000D5A  6E1E               	movwf	TransmitirDatos@Ent1^0,c
  1047   000D5C  0E00               	movlw	0
  1048   000D5E  6E21               	movwf	(TransmitirDatos@Ent2+1)^0,c
  1049   000D60  0E00               	movlw	0
  1050   000D62  6E20               	movwf	TransmitirDatos@Ent2^0,c
  1051   000D64  EC26  F004         	call	_TransmitirDatos	;wreg free
  1052                           
  1053                           ;Proyecto.c: 171: Velocidad(Temp);
  1054   000D68  C049  F010         	movff	_Temp,Velocidad@val
  1055   000D6C  6A11               	clrf	(Velocidad@val+1)^0,c
  1056   000D6E  EC64  F007         	call	_Velocidad	;wreg free
  1057                           
  1058                           ;Proyecto.c: 172: ConvertirUnidades(0);
  1059   000D72  0E00               	movlw	0
  1060   000D74  ECCB  F00B         	call	_ConvertirUnidades
  1061                           
  1062                           ;Proyecto.c: 173: Movimiento();
  1063   000D78  ECDE  F007         	call	_Movimiento	;wreg free
  1064   000D7C  D7DE               	goto	l2976
  1065   000D7E                     __end_of_main:
  1066                           	callstack 0
  1067                           
  1068 ;; *************** function _Velocidad *****************
  1069 ;; Defined at:
  1070 ;;		line 189 in file "Proyecto.c"
  1071 ;; Parameters:    Size  Location     Type
  1072 ;;  val             2   15[COMRAM] unsigned int 
  1073 ;; Auto vars:     Size  Location     Type
  1074 ;;		None
  1075 ;; Return value:  Size  Location     Type
  1076 ;;                  1    wreg      void 
  1077 ;; Registers used:
  1078 ;;		wreg, status,2, status,0
  1079 ;; Tracked objects:
  1080 ;;		On entry : 0/0
  1081 ;;		On exit  : 0/0
  1082 ;;		Unchanged: 0/0
  1083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1084 ;;      Params:         2       0       0       0       0       0       0       0       0
  1085 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1086 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1087 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1088 ;;Total ram usage:        2 bytes
  1089 ;; Hardware stack levels used: 1
  1090 ;; Hardware stack levels required when called: 5
  1091 ;; This function calls:
  1092 ;;		Nothing
  1093 ;; This function is called by:
  1094 ;;		_main
  1095 ;; This function uses a non-reentrant model
  1096 ;;
  1097                           
  1098                           	psect	text1
  1099   000EC8                     __ptext1:
  1100                           	callstack 0
  1101   000EC8                     _Velocidad:
  1102                           	callstack 25
  1103                           
  1104                           ;Proyecto.c: 190: if (val <= 22) {
  1105                           
  1106                           ;incstack = 0
  1107   000EC8  5011               	movf	(Velocidad@val+1)^0,w,c
  1108   000ECA  E108               	bnz	l2538
  1109   000ECC  0E17               	movlw	23
  1110   000ECE  5C10               	subwf	Velocidad@val^0,w,c
  1111   000ED0  B0D8               	btfsc	status,0,c
  1112   000ED2  D004               	goto	l2538
  1113                           
  1114                           ;Proyecto.c: 191: CCP1CON = 0;
  1115   000ED4  0E00               	movlw	0
  1116   000ED6  6EBD               	movwf	189,c	;volatile
  1117                           
  1118                           ;Proyecto.c: 192: RC2 = 0;
  1119   000ED8  9482               	bcf	3970,2,c	;volatile
  1120                           
  1121                           ;Proyecto.c: 193: } else if (val > 22 && val < 25) {
  1122   000EDA  0012               	return	
  1123   000EDC                     l2538:
  1124   000EDC  5011               	movf	(Velocidad@val+1)^0,w,c
  1125   000EDE  E104               	bnz	u1570
  1126   000EE0  0E17               	movlw	23
  1127   000EE2  5C10               	subwf	Velocidad@val^0,w,c
  1128   000EE4  A0D8               	btfss	status,0,c
  1129   000EE6  D00B               	goto	l2544
  1130   000EE8                     u1570:
  1131   000EE8  5011               	movf	(Velocidad@val+1)^0,w,c
  1132   000EEA  E109               	bnz	l2544
  1133   000EEC  0E19               	movlw	25
  1134   000EEE  5C10               	subwf	Velocidad@val^0,w,c
  1135   000EF0  B0D8               	btfsc	status,0,c
  1136   000EF2  D005               	goto	l2544
  1137                           
  1138                           ;Proyecto.c: 194: CCP1CON = 0b00001100;
  1139   000EF4  0E0C               	movlw	12
  1140   000EF6  6EBD               	movwf	189,c	;volatile
  1141                           
  1142                           ;Proyecto.c: 195: CCPR1L = 19;
  1143   000EF8  0E13               	movlw	19
  1144   000EFA  6EBE               	movwf	190,c	;volatile
  1145                           
  1146                           ;Proyecto.c: 196: } else if (val >= 25 && val < 28) {
  1147   000EFC  0012               	return	
  1148   000EFE                     l2544:
  1149   000EFE  5011               	movf	(Velocidad@val+1)^0,w,c
  1150   000F00  E104               	bnz	u1590
  1151   000F02  0E19               	movlw	25
  1152   000F04  5C10               	subwf	Velocidad@val^0,w,c
  1153   000F06  A0D8               	btfss	status,0,c
  1154   000F08  D00B               	goto	l2550
  1155   000F0A                     u1590:
  1156   000F0A  5011               	movf	(Velocidad@val+1)^0,w,c
  1157   000F0C  E109               	bnz	l2550
  1158   000F0E  0E1C               	movlw	28
  1159   000F10  5C10               	subwf	Velocidad@val^0,w,c
  1160   000F12  B0D8               	btfsc	status,0,c
  1161   000F14  D005               	goto	l2550
  1162                           
  1163                           ;Proyecto.c: 197: CCP1CON = 0b00001100;
  1164   000F16  0E0C               	movlw	12
  1165   000F18  6EBD               	movwf	189,c	;volatile
  1166                           
  1167                           ;Proyecto.c: 198: CCPR1L = 38;
  1168   000F1A  0E26               	movlw	38
  1169   000F1C  6EBE               	movwf	190,c	;volatile
  1170                           
  1171                           ;Proyecto.c: 199: } else if (val >= 28 && val < 31) {
  1172   000F1E  0012               	return	
  1173   000F20                     l2550:
  1174   000F20  5011               	movf	(Velocidad@val+1)^0,w,c
  1175   000F22  E104               	bnz	u1610
  1176   000F24  0E1C               	movlw	28
  1177   000F26  5C10               	subwf	Velocidad@val^0,w,c
  1178   000F28  A0D8               	btfss	status,0,c
  1179   000F2A  D00B               	goto	l2556
  1180   000F2C                     u1610:
  1181   000F2C  5011               	movf	(Velocidad@val+1)^0,w,c
  1182   000F2E  E109               	bnz	l2556
  1183   000F30  0E1F               	movlw	31
  1184   000F32  5C10               	subwf	Velocidad@val^0,w,c
  1185   000F34  B0D8               	btfsc	status,0,c
  1186   000F36  D005               	goto	l2556
  1187                           
  1188                           ;Proyecto.c: 200: CCP1CON = 0b00001100;
  1189   000F38  0E0C               	movlw	12
  1190   000F3A  6EBD               	movwf	189,c	;volatile
  1191                           
  1192                           ;Proyecto.c: 201: CCPR1L = 57;
  1193   000F3C  0E39               	movlw	57
  1194   000F3E  6EBE               	movwf	190,c	;volatile
  1195                           
  1196                           ;Proyecto.c: 202: } else if (val >= 31 && val < 34) {
  1197   000F40  0012               	return	
  1198   000F42                     l2556:
  1199   000F42  5011               	movf	(Velocidad@val+1)^0,w,c
  1200   000F44  E104               	bnz	u1630
  1201   000F46  0E1F               	movlw	31
  1202   000F48  5C10               	subwf	Velocidad@val^0,w,c
  1203   000F4A  A0D8               	btfss	status,0,c
  1204   000F4C  D00B               	goto	l2562
  1205   000F4E                     u1630:
  1206   000F4E  5011               	movf	(Velocidad@val+1)^0,w,c
  1207   000F50  E109               	bnz	l2562
  1208   000F52  0E22               	movlw	34
  1209   000F54  5C10               	subwf	Velocidad@val^0,w,c
  1210   000F56  B0D8               	btfsc	status,0,c
  1211   000F58  D005               	goto	l2562
  1212                           
  1213                           ;Proyecto.c: 203: CCP1CON = 0b00001100;
  1214   000F5A  0E0C               	movlw	12
  1215   000F5C  6EBD               	movwf	189,c	;volatile
  1216                           
  1217                           ;Proyecto.c: 204: CCPR1L = 76;
  1218   000F5E  0E4C               	movlw	76
  1219   000F60  6EBE               	movwf	190,c	;volatile
  1220                           
  1221                           ;Proyecto.c: 205: } else if (val >= 34 && val < 37) {
  1222   000F62  0012               	return	
  1223   000F64                     l2562:
  1224   000F64  5011               	movf	(Velocidad@val+1)^0,w,c
  1225   000F66  E104               	bnz	u1650
  1226   000F68  0E22               	movlw	34
  1227   000F6A  5C10               	subwf	Velocidad@val^0,w,c
  1228   000F6C  A0D8               	btfss	status,0,c
  1229   000F6E  D00B               	goto	l2568
  1230   000F70                     u1650:
  1231   000F70  5011               	movf	(Velocidad@val+1)^0,w,c
  1232   000F72  E109               	bnz	l2568
  1233   000F74  0E25               	movlw	37
  1234   000F76  5C10               	subwf	Velocidad@val^0,w,c
  1235   000F78  B0D8               	btfsc	status,0,c
  1236   000F7A  D005               	goto	l2568
  1237                           
  1238                           ;Proyecto.c: 206: CCP1CON = 0b00001100;
  1239   000F7C  0E0C               	movlw	12
  1240   000F7E  6EBD               	movwf	189,c	;volatile
  1241                           
  1242                           ;Proyecto.c: 207: CCPR1L = 95;
  1243   000F80  0E5F               	movlw	95
  1244   000F82  6EBE               	movwf	190,c	;volatile
  1245                           
  1246                           ;Proyecto.c: 208: } else if (val >= 37 && val < 40) {
  1247   000F84  0012               	return	
  1248   000F86                     l2568:
  1249   000F86  5011               	movf	(Velocidad@val+1)^0,w,c
  1250   000F88  E104               	bnz	u1670
  1251   000F8A  0E25               	movlw	37
  1252   000F8C  5C10               	subwf	Velocidad@val^0,w,c
  1253   000F8E  A0D8               	btfss	status,0,c
  1254   000F90  D00B               	goto	l2574
  1255   000F92                     u1670:
  1256   000F92  5011               	movf	(Velocidad@val+1)^0,w,c
  1257   000F94  E109               	bnz	l2574
  1258   000F96  0E28               	movlw	40
  1259   000F98  5C10               	subwf	Velocidad@val^0,w,c
  1260   000F9A  B0D8               	btfsc	status,0,c
  1261   000F9C  D005               	goto	l2574
  1262                           
  1263                           ;Proyecto.c: 209: CCP1CON = 0b00001100;
  1264   000F9E  0E0C               	movlw	12
  1265   000FA0  6EBD               	movwf	189,c	;volatile
  1266                           
  1267                           ;Proyecto.c: 210: CCPR1L = 113;
  1268   000FA2  0E71               	movlw	113
  1269   000FA4  6EBE               	movwf	190,c	;volatile
  1270                           
  1271                           ;Proyecto.c: 211: } else if (val >= 40) {
  1272   000FA6  0012               	return	
  1273   000FA8                     l2574:
  1274   000FA8  5011               	movf	(Velocidad@val+1)^0,w,c
  1275   000FAA  E104               	bnz	u1690
  1276   000FAC  0E28               	movlw	40
  1277   000FAE  5C10               	subwf	Velocidad@val^0,w,c
  1278   000FB0  A0D8               	btfss	status,0,c
  1279   000FB2  0012               	return	
  1280   000FB4                     u1690:
  1281                           
  1282                           ;Proyecto.c: 212: CCP1CON = 0;
  1283   000FB4  0E00               	movlw	0
  1284   000FB6  6EBD               	movwf	189,c	;volatile
  1285                           
  1286                           ;Proyecto.c: 213: RC2 = 1;
  1287   000FB8  8482               	bsf	3970,2,c	;volatile
  1288   000FBA  0012               	return	
  1289   000FBC                     __end_of_Velocidad:
  1290                           	callstack 0
  1291                           
  1292 ;; *************** function _TransmitirDatos *****************
  1293 ;; Defined at:
  1294 ;;		line 343 in file "Proyecto.c"
  1295 ;; Parameters:    Size  Location     Type
  1296 ;;  Ent1            2   29[COMRAM] unsigned int 
  1297 ;;  Ent2            2   31[COMRAM] unsigned int 
  1298 ;; Auto vars:     Size  Location     Type
  1299 ;;  TempC           2   43[COMRAM] unsigned int 
  1300 ;;  Simb            2    0        unsigned int 
  1301 ;;  n               2    0        unsigned int 
  1302 ;; Return value:  Size  Location     Type
  1303 ;;                  1    wreg      void 
  1304 ;; Registers used:
  1305 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1306 ;; Tracked objects:
  1307 ;;		On entry : 0/0
  1308 ;;		On exit  : 0/0
  1309 ;;		Unchanged: 0/0
  1310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1311 ;;      Params:         4       0       0       0       0       0       0       0       0
  1312 ;;      Locals:        12       0       0       0       0       0       0       0       0
  1313 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1314 ;;      Totals:        16       0       0       0       0       0       0       0       0
  1315 ;;Total ram usage:       16 bytes
  1316 ;; Hardware stack levels used: 1
  1317 ;; Hardware stack levels required when called: 9
  1318 ;; This function calls:
  1319 ;;		_BorraLCD
  1320 ;;		_DireccionaLCD
  1321 ;;		_EscribeLCD_c
  1322 ;;		_MensajeLCD_Word
  1323 ;;		_Transmitir
  1324 ;;		___awdiv
  1325 ;;		___awmod
  1326 ;;		___lwdiv
  1327 ;;		___lwmod
  1328 ;;		___wmul
  1329 ;; This function is called by:
  1330 ;;		_main
  1331 ;; This function uses a non-reentrant model
  1332 ;;
  1333                           
  1334                           	psect	text2
  1335   00084C                     __ptext2:
  1336                           	callstack 0
  1337   00084C                     _TransmitirDatos:
  1338                           	callstack 21
  1339                           
  1340                           ;incstack = 0
  1341   00084C  C01E  F010         	movff	TransmitirDatos@Ent1,___wmul@multiplier
  1342   000850  C01F  F011         	movff	TransmitirDatos@Ent1+1,___wmul@multiplier+1
  1343   000854  0E00               	movlw	0
  1344   000856  6E13               	movwf	(___wmul@multiplicand+1)^0,c
  1345   000858  0E0A               	movlw	10
  1346   00085A  6E12               	movwf	___wmul@multiplicand^0,c
  1347   00085C  EC7C  F00B         	call	___wmul	;wreg free
  1348                           
  1349                           ;Proyecto.c: 346: BorraLCD();
  1350   000860  ECC1  F00B         	call	_BorraLCD	;wreg free
  1351                           
  1352                           ;Proyecto.c: 347: TempC = Temp;
  1353   000864  C049  F02C         	movff	_Temp,TransmitirDatos@TempC
  1354   000868  6A2D               	clrf	(TransmitirDatos@TempC+1)^0,c
  1355                           
  1356                           ;Proyecto.c: 349: Transmitir('T');
  1357   00086A  0E54               	movlw	84
  1358   00086C  ECF5  F00B         	call	_Transmitir
  1359                           
  1360                           ;Proyecto.c: 350: Transmitir('e');
  1361   000870  0E65               	movlw	101
  1362   000872  ECF5  F00B         	call	_Transmitir
  1363                           
  1364                           ;Proyecto.c: 351: Transmitir('m');
  1365   000876  0E6D               	movlw	109
  1366   000878  ECF5  F00B         	call	_Transmitir
  1367                           
  1368                           ;Proyecto.c: 352: Transmitir('p');
  1369   00087C  0E70               	movlw	112
  1370   00087E  ECF5  F00B         	call	_Transmitir
  1371                           
  1372                           ;Proyecto.c: 353: Transmitir(':');
  1373   000882  0E3A               	movlw	58
  1374   000884  ECF5  F00B         	call	_Transmitir
  1375                           
  1376                           ;Proyecto.c: 354: Transmitir(' ');
  1377   000888  0E20               	movlw	32
  1378   00088A  ECF5  F00B         	call	_Transmitir
  1379                           
  1380                           ;Proyecto.c: 356: MensajeLCD_Word("Temp:");
  1381   00088E  0E3F               	movlw	low STR_7
  1382   000890  6E15               	movwf	MensajeLCD_Word@a^0,c
  1383   000892  EC41  F00A         	call	_MensajeLCD_Word	;wreg free
  1384                           
  1385                           ;Proyecto.c: 357: if (TempC / 100 > 0) {
  1386   000896  C02C  F010         	movff	TransmitirDatos@TempC,___lwdiv@dividend
  1387   00089A  C02D  F011         	movff	TransmitirDatos@TempC+1,___lwdiv@dividend+1
  1388   00089E  0E00               	movlw	0
  1389   0008A0  6E13               	movwf	(___lwdiv@divisor+1)^0,c
  1390   0008A2  0E64               	movlw	100
  1391   0008A4  6E12               	movwf	___lwdiv@divisor^0,c
  1392   0008A6  EC18  F00A         	call	___lwdiv	;wreg free
  1393   0008AA  5010               	movf	?___lwdiv^0,w,c
  1394   0008AC  1011               	iorwf	(?___lwdiv+1)^0,w,c
  1395   0008AE  B4D8               	btfsc	status,2,c
  1396   0008B0  D02A               	goto	l349
  1397                           
  1398                           ;Proyecto.c: 358: Transmitir(TempC / 100 + 48);
  1399   0008B2  C02C  F010         	movff	TransmitirDatos@TempC,___lwdiv@dividend
  1400   0008B6  C02D  F011         	movff	TransmitirDatos@TempC+1,___lwdiv@dividend+1
  1401   0008BA  0E00               	movlw	0
  1402   0008BC  6E13               	movwf	(___lwdiv@divisor+1)^0,c
  1403   0008BE  0E64               	movlw	100
  1404   0008C0  6E12               	movwf	___lwdiv@divisor^0,c
  1405   0008C2  EC18  F00A         	call	___lwdiv	;wreg free
  1406   0008C6  5010               	movf	?___lwdiv^0,w,c
  1407   0008C8  0F30               	addlw	48
  1408   0008CA  ECF5  F00B         	call	_Transmitir
  1409                           
  1410                           ;Proyecto.c: 359: EscribeLCD_c(TempC / 100 + 48);
  1411   0008CE  C02C  F010         	movff	TransmitirDatos@TempC,___lwdiv@dividend
  1412   0008D2  C02D  F011         	movff	TransmitirDatos@TempC+1,___lwdiv@dividend+1
  1413   0008D6  0E00               	movlw	0
  1414   0008D8  6E13               	movwf	(___lwdiv@divisor+1)^0,c
  1415   0008DA  0E64               	movlw	100
  1416   0008DC  6E12               	movwf	___lwdiv@divisor^0,c
  1417   0008DE  EC18  F00A         	call	___lwdiv	;wreg free
  1418   0008E2  5010               	movf	?___lwdiv^0,w,c
  1419   0008E4  0F30               	addlw	48
  1420   0008E6  ECAB  F00B         	call	_EscribeLCD_c
  1421                           
  1422                           ;Proyecto.c: 360: TempC = TempC % 100;
  1423   0008EA  C02C  F010         	movff	TransmitirDatos@TempC,___lwmod@dividend
  1424   0008EE  C02D  F011         	movff	TransmitirDatos@TempC+1,___lwmod@dividend+1
  1425   0008F2  0E00               	movlw	0
  1426   0008F4  6E13               	movwf	(___lwmod@divisor+1)^0,c
  1427   0008F6  0E64               	movlw	100
  1428   0008F8  6E12               	movwf	___lwmod@divisor^0,c
  1429   0008FA  ECD5  F00A         	call	___lwmod	;wreg free
  1430   0008FE  C010  F02C         	movff	?___lwmod,TransmitirDatos@TempC
  1431   000902  C011  F02D         	movff	?___lwmod+1,TransmitirDatos@TempC+1
  1432   000906                     l349:
  1433                           
  1434                           ;Proyecto.c: 361: };Proyecto.c: 362: Transmitir(TempC / 10 + 48);
  1435   000906  C02C  F010         	movff	TransmitirDatos@TempC,___lwdiv@dividend
  1436   00090A  C02D  F011         	movff	TransmitirDatos@TempC+1,___lwdiv@dividend+1
  1437   00090E  0E00               	movlw	0
  1438   000910  6E13               	movwf	(___lwdiv@divisor+1)^0,c
  1439   000912  0E0A               	movlw	10
  1440   000914  6E12               	movwf	___lwdiv@divisor^0,c
  1441   000916  EC18  F00A         	call	___lwdiv	;wreg free
  1442   00091A  5010               	movf	?___lwdiv^0,w,c
  1443   00091C  0F30               	addlw	48
  1444   00091E  ECF5  F00B         	call	_Transmitir
  1445                           
  1446                           ;Proyecto.c: 363: Transmitir(TempC % 10 + 48);
  1447   000922  C02C  F010         	movff	TransmitirDatos@TempC,___lwmod@dividend
  1448   000926  C02D  F011         	movff	TransmitirDatos@TempC+1,___lwmod@dividend+1
  1449   00092A  0E00               	movlw	0
  1450   00092C  6E13               	movwf	(___lwmod@divisor+1)^0,c
  1451   00092E  0E0A               	movlw	10
  1452   000930  6E12               	movwf	___lwmod@divisor^0,c
  1453   000932  ECD5  F00A         	call	___lwmod	;wreg free
  1454   000936  5010               	movf	?___lwmod^0,w,c
  1455   000938  0F30               	addlw	48
  1456   00093A  ECF5  F00B         	call	_Transmitir
  1457                           
  1458                           ;Proyecto.c: 364: Transmitir(167);
  1459   00093E  0EA7               	movlw	167
  1460   000940  ECF5  F00B         	call	_Transmitir
  1461                           
  1462                           ;Proyecto.c: 365: Transmitir(Simb);
  1463   000944  0E43               	movlw	67
  1464   000946  ECF5  F00B         	call	_Transmitir
  1465                           
  1466                           ;Proyecto.c: 366: Transmitir(' ');
  1467   00094A  0E20               	movlw	32
  1468   00094C  ECF5  F00B         	call	_Transmitir
  1469                           
  1470                           ;Proyecto.c: 367: Transmitir('\n');
  1471   000950  0E0A               	movlw	10
  1472   000952  ECF5  F00B         	call	_Transmitir
  1473                           
  1474                           ;Proyecto.c: 368: Transmitir('D');
  1475   000956  0E44               	movlw	68
  1476   000958  ECF5  F00B         	call	_Transmitir
  1477                           
  1478                           ;Proyecto.c: 369: Transmitir('u');
  1479   00095C  0E75               	movlw	117
  1480   00095E  ECF5  F00B         	call	_Transmitir
  1481                           
  1482                           ;Proyecto.c: 370: Transmitir('t');
  1483   000962  0E74               	movlw	116
  1484   000964  ECF5  F00B         	call	_Transmitir
  1485                           
  1486                           ;Proyecto.c: 371: Transmitir('y');
  1487   000968  0E79               	movlw	121
  1488   00096A  ECF5  F00B         	call	_Transmitir
  1489                           
  1490                           ;Proyecto.c: 372: Transmitir(':');
  1491   00096E  0E3A               	movlw	58
  1492   000970  ECF5  F00B         	call	_Transmitir
  1493                           
  1494                           ;Proyecto.c: 373: Transmitir(' ');
  1495   000974  0E20               	movlw	32
  1496   000976  ECF5  F00B         	call	_Transmitir
  1497                           
  1498                           ;Proyecto.c: 374: if(CCP1CON==0&& RC2==1) Transmitir(1 + 48);
  1499   00097A  50BD               	movf	189,w,c	;volatile
  1500   00097C  B4D8               	btfsc	status,2,c
  1501   00097E  A482               	btfss	3970,2,c	;volatile
  1502   000980  D003               	goto	l2470
  1503   000982  0E31               	movlw	49
  1504   000984  ECF5  F00B         	call	_Transmitir
  1505   000988                     l2470:
  1506                           
  1507                           ;Proyecto.c: 375: Transmitir((CCP1CON!=0)? ((CCPR1L*100/126) / 10 + 48):0+48);
  1508   000988  50BD               	movf	189,w,c	;volatile
  1509   00098A  A4D8               	btfss	status,2,c
  1510   00098C  D005               	goto	l2474
  1511   00098E  0E00               	movlw	0
  1512   000990  6E23               	movwf	(_TransmitirDatos$226+1)^0,c
  1513   000992  0E30               	movlw	48
  1514   000994  6E22               	movwf	_TransmitirDatos$226^0,c
  1515   000996  D020               	goto	l2478
  1516   000998                     l2474:
  1517   000998  0E00               	movlw	0
  1518   00099A  6E13               	movwf	(___awdiv@divisor+1)^0,c
  1519   00099C  0E7E               	movlw	126
  1520   00099E  6E12               	movwf	___awdiv@divisor^0,c
  1521   0009A0  50BE               	movf	190,w,c	;volatile
  1522   0009A2  0D64               	mullw	100
  1523   0009A4  CFF3 F010          	movff	prodl,___awdiv@dividend
  1524   0009A8  CFF4 F011          	movff	prodh,___awdiv@dividend+1
  1525   0009AC  ECFC  F008         	call	___awdiv	;wreg free
  1526   0009B0  C010  F02A         	movff	?___awdiv,_TransmitirDatos$869
  1527   0009B4  C011  F02B         	movff	?___awdiv+1,_TransmitirDatos$869+1
  1528   0009B8  C02A  F010         	movff	_TransmitirDatos$869,___awdiv@dividend
  1529   0009BC  C02B  F011         	movff	_TransmitirDatos$869+1,___awdiv@dividend+1
  1530   0009C0  0E00               	movlw	0
  1531   0009C2  6E13               	movwf	(___awdiv@divisor+1)^0,c
  1532   0009C4  0E0A               	movlw	10
  1533   0009C6  6E12               	movwf	___awdiv@divisor^0,c
  1534   0009C8  ECFC  F008         	call	___awdiv	;wreg free
  1535   0009CC  0E30               	movlw	48
  1536   0009CE  2410               	addwf	?___awdiv^0,w,c
  1537   0009D0  6E22               	movwf	_TransmitirDatos$226^0,c
  1538   0009D2  0E00               	movlw	0
  1539   0009D4  2011               	addwfc	(?___awdiv+1)^0,w,c
  1540   0009D6  6E23               	movwf	(_TransmitirDatos$226+1)^0,c
  1541   0009D8                     l2478:
  1542   0009D8  5022               	movf	_TransmitirDatos$226^0,w,c
  1543   0009DA  ECF5  F00B         	call	_Transmitir
  1544                           
  1545                           ;Proyecto.c: 376: Transmitir((CCP1CON!=0)? ((CCPR1L*100/126) % 10 + 48):0+48);
  1546   0009DE  50BD               	movf	189,w,c	;volatile
  1547   0009E0  A4D8               	btfss	status,2,c
  1548   0009E2  D005               	goto	l2484
  1549   0009E4  0E00               	movlw	0
  1550   0009E6  6E25               	movwf	(_TransmitirDatos$227+1)^0,c
  1551   0009E8  0E30               	movlw	48
  1552   0009EA  6E24               	movwf	_TransmitirDatos$227^0,c
  1553   0009EC  D01C               	goto	l2486
  1554   0009EE                     l2484:
  1555   0009EE  0E00               	movlw	0
  1556   0009F0  6E13               	movwf	(___awdiv@divisor+1)^0,c
  1557   0009F2  0E7E               	movlw	126
  1558   0009F4  6E12               	movwf	___awdiv@divisor^0,c
  1559   0009F6  50BE               	movf	190,w,c	;volatile
  1560   0009F8  0D64               	mullw	100
  1561   0009FA  CFF3 F010          	movff	prodl,___awdiv@dividend
  1562   0009FE  CFF4 F011          	movff	prodh,___awdiv@dividend+1
  1563   000A02  ECFC  F008         	call	___awdiv	;wreg free
  1564   000A06  C010  F018         	movff	?___awdiv,___awmod@dividend
  1565   000A0A  C011  F019         	movff	?___awdiv+1,___awmod@dividend+1
  1566   000A0E  0E00               	movlw	0
  1567   000A10  6E1B               	movwf	(___awmod@divisor+1)^0,c
  1568   000A12  0E0A               	movlw	10
  1569   000A14  6E1A               	movwf	___awmod@divisor^0,c
  1570   000A16  EC7A  F009         	call	___awmod	;wreg free
  1571   000A1A  0E30               	movlw	48
  1572   000A1C  2418               	addwf	?___awmod^0,w,c
  1573   000A1E  6E24               	movwf	_TransmitirDatos$227^0,c
  1574   000A20  0E00               	movlw	0
  1575   000A22  2019               	addwfc	(?___awmod+1)^0,w,c
  1576   000A24  6E25               	movwf	(_TransmitirDatos$227+1)^0,c
  1577   000A26                     l2486:
  1578   000A26  5024               	movf	_TransmitirDatos$227^0,w,c
  1579   000A28  ECF5  F00B         	call	_Transmitir
  1580                           
  1581                           ;Proyecto.c: 377: Transmitir(' ');
  1582   000A2C  0E20               	movlw	32
  1583   000A2E  ECF5  F00B         	call	_Transmitir
  1584                           
  1585                           ;Proyecto.c: 378: Transmitir('%');
  1586   000A32  0E25               	movlw	37
  1587   000A34  ECF5  F00B         	call	_Transmitir
  1588                           
  1589                           ;Proyecto.c: 379: Transmitir('\n');
  1590   000A38  0E0A               	movlw	10
  1591   000A3A  ECF5  F00B         	call	_Transmitir
  1592                           
  1593                           ;Proyecto.c: 380: Transmitir(' ');
  1594   000A3E  0E20               	movlw	32
  1595   000A40  ECF5  F00B         	call	_Transmitir
  1596                           
  1597                           ;Proyecto.c: 382: EscribeLCD_c(TempC / 10 + 48);
  1598   000A44  C02C  F010         	movff	TransmitirDatos@TempC,___lwdiv@dividend
  1599   000A48  C02D  F011         	movff	TransmitirDatos@TempC+1,___lwdiv@dividend+1
  1600   000A4C  0E00               	movlw	0
  1601   000A4E  6E13               	movwf	(___lwdiv@divisor+1)^0,c
  1602   000A50  0E0A               	movlw	10
  1603   000A52  6E12               	movwf	___lwdiv@divisor^0,c
  1604   000A54  EC18  F00A         	call	___lwdiv	;wreg free
  1605   000A58  5010               	movf	?___lwdiv^0,w,c
  1606   000A5A  0F30               	addlw	48
  1607   000A5C  ECAB  F00B         	call	_EscribeLCD_c
  1608                           
  1609                           ;Proyecto.c: 383: EscribeLCD_c(TempC % 10 + 48);
  1610   000A60  C02C  F010         	movff	TransmitirDatos@TempC,___lwmod@dividend
  1611   000A64  C02D  F011         	movff	TransmitirDatos@TempC+1,___lwmod@dividend+1
  1612   000A68  0E00               	movlw	0
  1613   000A6A  6E13               	movwf	(___lwmod@divisor+1)^0,c
  1614   000A6C  0E0A               	movlw	10
  1615   000A6E  6E12               	movwf	___lwmod@divisor^0,c
  1616   000A70  ECD5  F00A         	call	___lwmod	;wreg free
  1617   000A74  5010               	movf	?___lwmod^0,w,c
  1618   000A76  0F30               	addlw	48
  1619   000A78  ECAB  F00B         	call	_EscribeLCD_c
  1620                           
  1621                           ;Proyecto.c: 384: EscribeLCD_c(Simb);
  1622   000A7C  0E43               	movlw	67
  1623   000A7E  ECAB  F00B         	call	_EscribeLCD_c
  1624                           
  1625                           ;Proyecto.c: 385: DireccionaLCD(192);
  1626   000A82  0EC0               	movlw	192
  1627   000A84  ECA0  F00B         	call	_DireccionaLCD
  1628                           
  1629                           ;Proyecto.c: 386: MensajeLCD_Word("Duty:");
  1630   000A88  0E45               	movlw	low STR_8
  1631   000A8A  6E15               	movwf	MensajeLCD_Word@a^0,c
  1632   000A8C  EC41  F00A         	call	_MensajeLCD_Word	;wreg free
  1633                           
  1634                           ;Proyecto.c: 387: if(CCP1CON==0 && RC2==1) EscribeLCD_c(1 + 48);
  1635   000A90  50BD               	movf	189,w,c	;volatile
  1636   000A92  B4D8               	btfsc	status,2,c
  1637   000A94  A482               	btfss	3970,2,c	;volatile
  1638   000A96  D003               	goto	l2512
  1639   000A98  0E31               	movlw	49
  1640   000A9A  ECAB  F00B         	call	_EscribeLCD_c
  1641   000A9E                     l2512:
  1642                           
  1643                           ;Proyecto.c: 388: EscribeLCD_c((CCP1CON!=0)? ((CCPR1L*100/126) / 10 + 48):0+48);
  1644   000A9E  50BD               	movf	189,w,c	;volatile
  1645   000AA0  A4D8               	btfss	status,2,c
  1646   000AA2  D005               	goto	l2516
  1647   000AA4  0E00               	movlw	0
  1648   000AA6  6E27               	movwf	(_TransmitirDatos$229+1)^0,c
  1649   000AA8  0E30               	movlw	48
  1650   000AAA  6E26               	movwf	_TransmitirDatos$229^0,c
  1651   000AAC  D020               	goto	l2520
  1652   000AAE                     l2516:
  1653   000AAE  0E00               	movlw	0
  1654   000AB0  6E13               	movwf	(___awdiv@divisor+1)^0,c
  1655   000AB2  0E7E               	movlw	126
  1656   000AB4  6E12               	movwf	___awdiv@divisor^0,c
  1657   000AB6  50BE               	movf	190,w,c	;volatile
  1658   000AB8  0D64               	mullw	100
  1659   000ABA  CFF3 F010          	movff	prodl,___awdiv@dividend
  1660   000ABE  CFF4 F011          	movff	prodh,___awdiv@dividend+1
  1661   000AC2  ECFC  F008         	call	___awdiv	;wreg free
  1662   000AC6  C010  F02A         	movff	?___awdiv,_TransmitirDatos$869
  1663   000ACA  C011  F02B         	movff	?___awdiv+1,_TransmitirDatos$869+1
  1664   000ACE  C02A  F010         	movff	_TransmitirDatos$869,___awdiv@dividend
  1665   000AD2  C02B  F011         	movff	_TransmitirDatos$869+1,___awdiv@dividend+1
  1666   000AD6  0E00               	movlw	0
  1667   000AD8  6E13               	movwf	(___awdiv@divisor+1)^0,c
  1668   000ADA  0E0A               	movlw	10
  1669   000ADC  6E12               	movwf	___awdiv@divisor^0,c
  1670   000ADE  ECFC  F008         	call	___awdiv	;wreg free
  1671   000AE2  0E30               	movlw	48
  1672   000AE4  2410               	addwf	?___awdiv^0,w,c
  1673   000AE6  6E26               	movwf	_TransmitirDatos$229^0,c
  1674   000AE8  0E00               	movlw	0
  1675   000AEA  2011               	addwfc	(?___awdiv+1)^0,w,c
  1676   000AEC  6E27               	movwf	(_TransmitirDatos$229+1)^0,c
  1677   000AEE                     l2520:
  1678   000AEE  5026               	movf	_TransmitirDatos$229^0,w,c
  1679   000AF0  ECAB  F00B         	call	_EscribeLCD_c
  1680                           
  1681                           ;Proyecto.c: 389: EscribeLCD_c((CCP1CON!=0)? ((CCPR1L*100/126) % 10 + 48):0+48);
  1682   000AF4  50BD               	movf	189,w,c	;volatile
  1683   000AF6  A4D8               	btfss	status,2,c
  1684   000AF8  D005               	goto	l2526
  1685   000AFA  0E00               	movlw	0
  1686   000AFC  6E29               	movwf	(_TransmitirDatos$230+1)^0,c
  1687   000AFE  0E30               	movlw	48
  1688   000B00  6E28               	movwf	_TransmitirDatos$230^0,c
  1689   000B02  D01C               	goto	l2528
  1690   000B04                     l2526:
  1691   000B04  0E00               	movlw	0
  1692   000B06  6E13               	movwf	(___awdiv@divisor+1)^0,c
  1693   000B08  0E7E               	movlw	126
  1694   000B0A  6E12               	movwf	___awdiv@divisor^0,c
  1695   000B0C  50BE               	movf	190,w,c	;volatile
  1696   000B0E  0D64               	mullw	100
  1697   000B10  CFF3 F010          	movff	prodl,___awdiv@dividend
  1698   000B14  CFF4 F011          	movff	prodh,___awdiv@dividend+1
  1699   000B18  ECFC  F008         	call	___awdiv	;wreg free
  1700   000B1C  C010  F018         	movff	?___awdiv,___awmod@dividend
  1701   000B20  C011  F019         	movff	?___awdiv+1,___awmod@dividend+1
  1702   000B24  0E00               	movlw	0
  1703   000B26  6E1B               	movwf	(___awmod@divisor+1)^0,c
  1704   000B28  0E0A               	movlw	10
  1705   000B2A  6E1A               	movwf	___awmod@divisor^0,c
  1706   000B2C  EC7A  F009         	call	___awmod	;wreg free
  1707   000B30  0E30               	movlw	48
  1708   000B32  2418               	addwf	?___awmod^0,w,c
  1709   000B34  6E28               	movwf	_TransmitirDatos$230^0,c
  1710   000B36  0E00               	movlw	0
  1711   000B38  2019               	addwfc	(?___awmod+1)^0,w,c
  1712   000B3A  6E29               	movwf	(_TransmitirDatos$230+1)^0,c
  1713   000B3C                     l2528:
  1714   000B3C  5028               	movf	_TransmitirDatos$230^0,w,c
  1715   000B3E  ECAB  F00B         	call	_EscribeLCD_c
  1716                           
  1717                           ;Proyecto.c: 390: EscribeLCD_c('%');
  1718   000B42  0E25               	movlw	37
  1719   000B44  ECAB  F00B         	call	_EscribeLCD_c
  1720   000B48  0012               	return		;funcret
  1721   000B4A                     __end_of_TransmitirDatos:
  1722                           	callstack 0
  1723                           
  1724 ;; *************** function ___wmul *****************
  1725 ;; Defined at:
  1726 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul16.c"
  1727 ;; Parameters:    Size  Location     Type
  1728 ;;  multiplier      2   15[COMRAM] unsigned int 
  1729 ;;  multiplicand    2   17[COMRAM] unsigned int 
  1730 ;; Auto vars:     Size  Location     Type
  1731 ;;  product         2   19[COMRAM] unsigned int 
  1732 ;; Return value:  Size  Location     Type
  1733 ;;                  2   15[COMRAM] unsigned int 
  1734 ;; Registers used:
  1735 ;;		wreg, status,2, status,0, prodl, prodh
  1736 ;; Tracked objects:
  1737 ;;		On entry : 0/0
  1738 ;;		On exit  : 0/0
  1739 ;;		Unchanged: 0/0
  1740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1741 ;;      Params:         4       0       0       0       0       0       0       0       0
  1742 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1743 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1744 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1745 ;;Total ram usage:        6 bytes
  1746 ;; Hardware stack levels used: 1
  1747 ;; Hardware stack levels required when called: 5
  1748 ;; This function calls:
  1749 ;;		Nothing
  1750 ;; This function is called by:
  1751 ;;		_TransmitirDatos
  1752 ;; This function uses a non-reentrant model
  1753 ;;
  1754                           
  1755                           	psect	text3
  1756   0016F8                     __ptext3:
  1757                           	callstack 0
  1758   0016F8                     ___wmul:
  1759                           	callstack 24
  1760                           
  1761                           ;incstack = 0
  1762   0016F8  5010               	movf	___wmul@multiplier^0,w,c
  1763   0016FA  0212               	mulwf	___wmul@multiplicand^0,c
  1764   0016FC  CFF3 F014          	movff	prodl,___wmul@product
  1765   001700  CFF4 F015          	movff	prodh,___wmul@product+1
  1766   001704  5010               	movf	___wmul@multiplier^0,w,c
  1767   001706  0213               	mulwf	(___wmul@multiplicand+1)^0,c
  1768   001708  50F3               	movf	243,w,c
  1769   00170A  2615               	addwf	(___wmul@product+1)^0,f,c
  1770   00170C  5011               	movf	(___wmul@multiplier+1)^0,w,c
  1771   00170E  0212               	mulwf	___wmul@multiplicand^0,c
  1772   001710  50F3               	movf	243,w,c
  1773   001712  2615               	addwf	(___wmul@product+1)^0,f,c
  1774   001714  C014  F010         	movff	___wmul@product,?___wmul
  1775   001718  C015  F011         	movff	___wmul@product+1,?___wmul+1
  1776   00171C  0012               	return		;funcret
  1777   00171E                     __end_of___wmul:
  1778                           	callstack 0
  1779                           
  1780 ;; *************** function ___lwmod *****************
  1781 ;; Defined at:
  1782 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwmod.c"
  1783 ;; Parameters:    Size  Location     Type
  1784 ;;  dividend        2   15[COMRAM] unsigned int 
  1785 ;;  divisor         2   17[COMRAM] unsigned int 
  1786 ;; Auto vars:     Size  Location     Type
  1787 ;;  counter         1   19[COMRAM] unsigned char 
  1788 ;; Return value:  Size  Location     Type
  1789 ;;                  2   15[COMRAM] unsigned int 
  1790 ;; Registers used:
  1791 ;;		wreg, status,2, status,0
  1792 ;; Tracked objects:
  1793 ;;		On entry : 0/0
  1794 ;;		On exit  : 0/0
  1795 ;;		Unchanged: 0/0
  1796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1797 ;;      Params:         4       0       0       0       0       0       0       0       0
  1798 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1799 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1800 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1801 ;;Total ram usage:        5 bytes
  1802 ;; Hardware stack levels used: 1
  1803 ;; Hardware stack levels required when called: 5
  1804 ;; This function calls:
  1805 ;;		Nothing
  1806 ;; This function is called by:
  1807 ;;		_TransmitirDatos
  1808 ;; This function uses a non-reentrant model
  1809 ;;
  1810                           
  1811                           	psect	text4
  1812   0015AA                     __ptext4:
  1813                           	callstack 0
  1814   0015AA                     ___lwmod:
  1815                           	callstack 24
  1816                           
  1817                           ;incstack = 0
  1818   0015AA  5012               	movf	___lwmod@divisor^0,w,c
  1819   0015AC  1013               	iorwf	(___lwmod@divisor+1)^0,w,c
  1820   0015AE  B4D8               	btfsc	status,2,c
  1821   0015B0  D018               	goto	l904
  1822   0015B2  0E01               	movlw	1
  1823   0015B4  6E14               	movwf	___lwmod@counter^0,c
  1824   0015B6  D004               	goto	l2292
  1825   0015B8                     l2290:
  1826   0015B8  90D8               	bcf	status,0,c
  1827   0015BA  3612               	rlcf	___lwmod@divisor^0,f,c
  1828   0015BC  3613               	rlcf	(___lwmod@divisor+1)^0,f,c
  1829   0015BE  2A14               	incf	___lwmod@counter^0,f,c
  1830   0015C0                     l2292:
  1831   0015C0  AE13               	btfss	(___lwmod@divisor+1)^0,7,c
  1832   0015C2  D7FA               	goto	l2290
  1833   0015C4                     u1340:
  1834   0015C4  5012               	movf	___lwmod@divisor^0,w,c
  1835   0015C6  5C10               	subwf	___lwmod@dividend^0,w,c
  1836   0015C8  5013               	movf	(___lwmod@divisor+1)^0,w,c
  1837   0015CA  5811               	subwfb	(___lwmod@dividend+1)^0,w,c
  1838   0015CC  A0D8               	btfss	status,0,c
  1839   0015CE  D004               	goto	l2298
  1840   0015D0  5012               	movf	___lwmod@divisor^0,w,c
  1841   0015D2  5E10               	subwf	___lwmod@dividend^0,f,c
  1842   0015D4  5013               	movf	(___lwmod@divisor+1)^0,w,c
  1843   0015D6  5A11               	subwfb	(___lwmod@dividend+1)^0,f,c
  1844   0015D8                     l2298:
  1845   0015D8  90D8               	bcf	status,0,c
  1846   0015DA  3213               	rrcf	(___lwmod@divisor+1)^0,f,c
  1847   0015DC  3212               	rrcf	___lwmod@divisor^0,f,c
  1848   0015DE  2E14               	decfsz	___lwmod@counter^0,f,c
  1849   0015E0  D7F1               	goto	u1340
  1850   0015E2                     l904:
  1851   0015E2  C010  F010         	movff	___lwmod@dividend,?___lwmod
  1852   0015E6  C011  F011         	movff	___lwmod@dividend+1,?___lwmod+1
  1853   0015EA  0012               	return		;funcret
  1854   0015EC                     __end_of___lwmod:
  1855                           	callstack 0
  1856                           
  1857 ;; *************** function ___lwdiv *****************
  1858 ;; Defined at:
  1859 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwdiv.c"
  1860 ;; Parameters:    Size  Location     Type
  1861 ;;  dividend        2   15[COMRAM] unsigned int 
  1862 ;;  divisor         2   17[COMRAM] unsigned int 
  1863 ;; Auto vars:     Size  Location     Type
  1864 ;;  quotient        2   19[COMRAM] unsigned int 
  1865 ;;  counter         1   21[COMRAM] unsigned char 
  1866 ;; Return value:  Size  Location     Type
  1867 ;;                  2   15[COMRAM] unsigned int 
  1868 ;; Registers used:
  1869 ;;		wreg, status,2, status,0
  1870 ;; Tracked objects:
  1871 ;;		On entry : 0/0
  1872 ;;		On exit  : 0/0
  1873 ;;		Unchanged: 0/0
  1874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1875 ;;      Params:         4       0       0       0       0       0       0       0       0
  1876 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1877 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1878 ;;      Totals:         7       0       0       0       0       0       0       0       0
  1879 ;;Total ram usage:        7 bytes
  1880 ;; Hardware stack levels used: 1
  1881 ;; Hardware stack levels required when called: 5
  1882 ;; This function calls:
  1883 ;;		Nothing
  1884 ;; This function is called by:
  1885 ;;		_TransmitirDatos
  1886 ;; This function uses a non-reentrant model
  1887 ;;
  1888                           
  1889                           	psect	text5
  1890   001430                     __ptext5:
  1891                           	callstack 0
  1892   001430                     ___lwdiv:
  1893                           	callstack 24
  1894                           
  1895                           ;incstack = 0
  1896   001430  0E00               	movlw	0
  1897   001432  6E15               	movwf	(___lwdiv@quotient+1)^0,c
  1898   001434  0E00               	movlw	0
  1899   001436  6E14               	movwf	___lwdiv@quotient^0,c
  1900   001438  5012               	movf	___lwdiv@divisor^0,w,c
  1901   00143A  1013               	iorwf	(___lwdiv@divisor+1)^0,w,c
  1902   00143C  B4D8               	btfsc	status,2,c
  1903   00143E  D01C               	goto	l894
  1904   001440  0E01               	movlw	1
  1905   001442  6E16               	movwf	___lwdiv@counter^0,c
  1906   001444  D004               	goto	l2272
  1907   001446                     l2270:
  1908   001446  90D8               	bcf	status,0,c
  1909   001448  3612               	rlcf	___lwdiv@divisor^0,f,c
  1910   00144A  3613               	rlcf	(___lwdiv@divisor+1)^0,f,c
  1911   00144C  2A16               	incf	___lwdiv@counter^0,f,c
  1912   00144E                     l2272:
  1913   00144E  AE13               	btfss	(___lwdiv@divisor+1)^0,7,c
  1914   001450  D7FA               	goto	l2270
  1915   001452                     u1310:
  1916   001452  90D8               	bcf	status,0,c
  1917   001454  3614               	rlcf	___lwdiv@quotient^0,f,c
  1918   001456  3615               	rlcf	(___lwdiv@quotient+1)^0,f,c
  1919   001458  5012               	movf	___lwdiv@divisor^0,w,c
  1920   00145A  5C10               	subwf	___lwdiv@dividend^0,w,c
  1921   00145C  5013               	movf	(___lwdiv@divisor+1)^0,w,c
  1922   00145E  5811               	subwfb	(___lwdiv@dividend+1)^0,w,c
  1923   001460  A0D8               	btfss	status,0,c
  1924   001462  D005               	goto	l2282
  1925   001464  5012               	movf	___lwdiv@divisor^0,w,c
  1926   001466  5E10               	subwf	___lwdiv@dividend^0,f,c
  1927   001468  5013               	movf	(___lwdiv@divisor+1)^0,w,c
  1928   00146A  5A11               	subwfb	(___lwdiv@dividend+1)^0,f,c
  1929   00146C  8014               	bsf	___lwdiv@quotient^0,0,c
  1930   00146E                     l2282:
  1931   00146E  90D8               	bcf	status,0,c
  1932   001470  3213               	rrcf	(___lwdiv@divisor+1)^0,f,c
  1933   001472  3212               	rrcf	___lwdiv@divisor^0,f,c
  1934   001474  2E16               	decfsz	___lwdiv@counter^0,f,c
  1935   001476  D7ED               	goto	u1310
  1936   001478                     l894:
  1937   001478  C014  F010         	movff	___lwdiv@quotient,?___lwdiv
  1938   00147C  C015  F011         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1939   001480  0012               	return		;funcret
  1940   001482                     __end_of___lwdiv:
  1941                           	callstack 0
  1942                           
  1943 ;; *************** function ___awmod *****************
  1944 ;; Defined at:
  1945 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awmod.c"
  1946 ;; Parameters:    Size  Location     Type
  1947 ;;  dividend        2   23[COMRAM] int 
  1948 ;;  divisor         2   25[COMRAM] int 
  1949 ;; Auto vars:     Size  Location     Type
  1950 ;;  sign            1   28[COMRAM] unsigned char 
  1951 ;;  counter         1   27[COMRAM] unsigned char 
  1952 ;; Return value:  Size  Location     Type
  1953 ;;                  2   23[COMRAM] int 
  1954 ;; Registers used:
  1955 ;;		wreg, status,2, status,0
  1956 ;; Tracked objects:
  1957 ;;		On entry : 0/0
  1958 ;;		On exit  : 0/0
  1959 ;;		Unchanged: 0/0
  1960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1961 ;;      Params:         4       0       0       0       0       0       0       0       0
  1962 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1963 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1964 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1965 ;;Total ram usage:        6 bytes
  1966 ;; Hardware stack levels used: 1
  1967 ;; Hardware stack levels required when called: 5
  1968 ;; This function calls:
  1969 ;;		Nothing
  1970 ;; This function is called by:
  1971 ;;		_TransmitirDatos
  1972 ;; This function uses a non-reentrant model
  1973 ;;
  1974                           
  1975                           	psect	text6
  1976   0012F4                     __ptext6:
  1977                           	callstack 0
  1978   0012F4                     ___awmod:
  1979                           	callstack 24
  1980                           
  1981                           ;incstack = 0
  1982   0012F4  0E00               	movlw	0
  1983   0012F6  6E1D               	movwf	___awmod@sign^0,c
  1984   0012F8  AE19               	btfss	(___awmod@dividend+1)^0,7,c
  1985   0012FA  D006               	goto	l2236
  1986   0012FC  6C18               	negf	___awmod@dividend^0,c
  1987   0012FE  1E19               	comf	(___awmod@dividend+1)^0,f,c
  1988   001300  B0D8               	btfsc	status,0,c
  1989   001302  2A19               	incf	(___awmod@dividend+1)^0,f,c
  1990   001304  0E01               	movlw	1
  1991   001306  6E1D               	movwf	___awmod@sign^0,c
  1992   001308                     l2236:
  1993   001308  AE1B               	btfss	(___awmod@divisor+1)^0,7,c
  1994   00130A  D004               	goto	l2240
  1995   00130C  6C1A               	negf	___awmod@divisor^0,c
  1996   00130E  1E1B               	comf	(___awmod@divisor+1)^0,f,c
  1997   001310  B0D8               	btfsc	status,0,c
  1998   001312  2A1B               	incf	(___awmod@divisor+1)^0,f,c
  1999   001314                     l2240:
  2000   001314  501A               	movf	___awmod@divisor^0,w,c
  2001   001316  101B               	iorwf	(___awmod@divisor+1)^0,w,c
  2002   001318  B4D8               	btfsc	status,2,c
  2003   00131A  D018               	goto	l2256
  2004   00131C  0E01               	movlw	1
  2005   00131E  6E1C               	movwf	___awmod@counter^0,c
  2006   001320  D004               	goto	l2246
  2007   001322                     l2244:
  2008   001322  90D8               	bcf	status,0,c
  2009   001324  361A               	rlcf	___awmod@divisor^0,f,c
  2010   001326  361B               	rlcf	(___awmod@divisor+1)^0,f,c
  2011   001328  2A1C               	incf	___awmod@counter^0,f,c
  2012   00132A                     l2246:
  2013   00132A  AE1B               	btfss	(___awmod@divisor+1)^0,7,c
  2014   00132C  D7FA               	goto	l2244
  2015   00132E                     u1270:
  2016   00132E  501A               	movf	___awmod@divisor^0,w,c
  2017   001330  5C18               	subwf	___awmod@dividend^0,w,c
  2018   001332  501B               	movf	(___awmod@divisor+1)^0,w,c
  2019   001334  5819               	subwfb	(___awmod@dividend+1)^0,w,c
  2020   001336  A0D8               	btfss	status,0,c
  2021   001338  D004               	goto	l2252
  2022   00133A  501A               	movf	___awmod@divisor^0,w,c
  2023   00133C  5E18               	subwf	___awmod@dividend^0,f,c
  2024   00133E  501B               	movf	(___awmod@divisor+1)^0,w,c
  2025   001340  5A19               	subwfb	(___awmod@dividend+1)^0,f,c
  2026   001342                     l2252:
  2027   001342  90D8               	bcf	status,0,c
  2028   001344  321B               	rrcf	(___awmod@divisor+1)^0,f,c
  2029   001346  321A               	rrcf	___awmod@divisor^0,f,c
  2030   001348  2E1C               	decfsz	___awmod@counter^0,f,c
  2031   00134A  D7F1               	goto	u1270
  2032   00134C                     l2256:
  2033   00134C  501D               	movf	___awmod@sign^0,w,c
  2034   00134E  B4D8               	btfsc	status,2,c
  2035   001350  D004               	goto	l2260
  2036   001352  6C18               	negf	___awmod@dividend^0,c
  2037   001354  1E19               	comf	(___awmod@dividend+1)^0,f,c
  2038   001356  B0D8               	btfsc	status,0,c
  2039   001358  2A19               	incf	(___awmod@dividend+1)^0,f,c
  2040   00135A                     l2260:
  2041   00135A  C018  F018         	movff	___awmod@dividend,?___awmod
  2042   00135E  C019  F019         	movff	___awmod@dividend+1,?___awmod+1
  2043   001362  0012               	return		;funcret
  2044   001364                     __end_of___awmod:
  2045                           	callstack 0
  2046                           
  2047 ;; *************** function ___awdiv *****************
  2048 ;; Defined at:
  2049 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awdiv.c"
  2050 ;; Parameters:    Size  Location     Type
  2051 ;;  dividend        2   15[COMRAM] int 
  2052 ;;  divisor         2   17[COMRAM] int 
  2053 ;; Auto vars:     Size  Location     Type
  2054 ;;  quotient        2   21[COMRAM] int 
  2055 ;;  sign            1   20[COMRAM] unsigned char 
  2056 ;;  counter         1   19[COMRAM] unsigned char 
  2057 ;; Return value:  Size  Location     Type
  2058 ;;                  2   15[COMRAM] int 
  2059 ;; Registers used:
  2060 ;;		wreg, status,2, status,0
  2061 ;; Tracked objects:
  2062 ;;		On entry : 0/0
  2063 ;;		On exit  : 0/0
  2064 ;;		Unchanged: 0/0
  2065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2066 ;;      Params:         4       0       0       0       0       0       0       0       0
  2067 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2068 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2069 ;;      Totals:         8       0       0       0       0       0       0       0       0
  2070 ;;Total ram usage:        8 bytes
  2071 ;; Hardware stack levels used: 1
  2072 ;; Hardware stack levels required when called: 5
  2073 ;; This function calls:
  2074 ;;		Nothing
  2075 ;; This function is called by:
  2076 ;;		_TransmitirDatos
  2077 ;; This function uses a non-reentrant model
  2078 ;;
  2079                           
  2080                           	psect	text7
  2081   0011F8                     __ptext7:
  2082                           	callstack 0
  2083   0011F8                     ___awdiv:
  2084                           	callstack 24
  2085                           
  2086                           ;incstack = 0
  2087   0011F8  0E00               	movlw	0
  2088   0011FA  6E15               	movwf	___awdiv@sign^0,c
  2089   0011FC  AE13               	btfss	(___awdiv@divisor+1)^0,7,c
  2090   0011FE  D006               	goto	l2192
  2091   001200  6C12               	negf	___awdiv@divisor^0,c
  2092   001202  1E13               	comf	(___awdiv@divisor+1)^0,f,c
  2093   001204  B0D8               	btfsc	status,0,c
  2094   001206  2A13               	incf	(___awdiv@divisor+1)^0,f,c
  2095   001208  0E01               	movlw	1
  2096   00120A  6E15               	movwf	___awdiv@sign^0,c
  2097   00120C                     l2192:
  2098   00120C  AE11               	btfss	(___awdiv@dividend+1)^0,7,c
  2099   00120E  D006               	goto	l2198
  2100   001210  6C10               	negf	___awdiv@dividend^0,c
  2101   001212  1E11               	comf	(___awdiv@dividend+1)^0,f,c
  2102   001214  B0D8               	btfsc	status,0,c
  2103   001216  2A11               	incf	(___awdiv@dividend+1)^0,f,c
  2104   001218  0E01               	movlw	1
  2105   00121A  1A15               	xorwf	___awdiv@sign^0,f,c
  2106   00121C                     l2198:
  2107   00121C  0E00               	movlw	0
  2108   00121E  6E17               	movwf	(___awdiv@quotient+1)^0,c
  2109   001220  0E00               	movlw	0
  2110   001222  6E16               	movwf	___awdiv@quotient^0,c
  2111   001224  5012               	movf	___awdiv@divisor^0,w,c
  2112   001226  1013               	iorwf	(___awdiv@divisor+1)^0,w,c
  2113   001228  B4D8               	btfsc	status,2,c
  2114   00122A  D01C               	goto	l2220
  2115   00122C  0E01               	movlw	1
  2116   00122E  6E14               	movwf	___awdiv@counter^0,c
  2117   001230  D004               	goto	l2206
  2118   001232                     l2204:
  2119   001232  90D8               	bcf	status,0,c
  2120   001234  3612               	rlcf	___awdiv@divisor^0,f,c
  2121   001236  3613               	rlcf	(___awdiv@divisor+1)^0,f,c
  2122   001238  2A14               	incf	___awdiv@counter^0,f,c
  2123   00123A                     l2206:
  2124   00123A  AE13               	btfss	(___awdiv@divisor+1)^0,7,c
  2125   00123C  D7FA               	goto	l2204
  2126   00123E                     u1210:
  2127   00123E  90D8               	bcf	status,0,c
  2128   001240  3616               	rlcf	___awdiv@quotient^0,f,c
  2129   001242  3617               	rlcf	(___awdiv@quotient+1)^0,f,c
  2130   001244  5012               	movf	___awdiv@divisor^0,w,c
  2131   001246  5C10               	subwf	___awdiv@dividend^0,w,c
  2132   001248  5013               	movf	(___awdiv@divisor+1)^0,w,c
  2133   00124A  5811               	subwfb	(___awdiv@dividend+1)^0,w,c
  2134   00124C  A0D8               	btfss	status,0,c
  2135   00124E  D005               	goto	l2216
  2136   001250  5012               	movf	___awdiv@divisor^0,w,c
  2137   001252  5E10               	subwf	___awdiv@dividend^0,f,c
  2138   001254  5013               	movf	(___awdiv@divisor+1)^0,w,c
  2139   001256  5A11               	subwfb	(___awdiv@dividend+1)^0,f,c
  2140   001258  8016               	bsf	___awdiv@quotient^0,0,c
  2141   00125A                     l2216:
  2142   00125A  90D8               	bcf	status,0,c
  2143   00125C  3213               	rrcf	(___awdiv@divisor+1)^0,f,c
  2144   00125E  3212               	rrcf	___awdiv@divisor^0,f,c
  2145   001260  2E14               	decfsz	___awdiv@counter^0,f,c
  2146   001262  D7ED               	goto	u1210
  2147   001264                     l2220:
  2148   001264  5015               	movf	___awdiv@sign^0,w,c
  2149   001266  B4D8               	btfsc	status,2,c
  2150   001268  D004               	goto	l2224
  2151   00126A  6C16               	negf	___awdiv@quotient^0,c
  2152   00126C  1E17               	comf	(___awdiv@quotient+1)^0,f,c
  2153   00126E  B0D8               	btfsc	status,0,c
  2154   001270  2A17               	incf	(___awdiv@quotient+1)^0,f,c
  2155   001272                     l2224:
  2156   001272  C016  F010         	movff	___awdiv@quotient,?___awdiv
  2157   001276  C017  F011         	movff	___awdiv@quotient+1,?___awdiv+1
  2158   00127A  0012               	return		;funcret
  2159   00127C                     __end_of___awdiv:
  2160                           	callstack 0
  2161                           
  2162 ;; *************** function _Transmitir *****************
  2163 ;; Defined at:
  2164 ;;		line 326 in file "Proyecto.c"
  2165 ;; Parameters:    Size  Location     Type
  2166 ;;  BufferT         1    wreg     unsigned char 
  2167 ;; Auto vars:     Size  Location     Type
  2168 ;;  BufferT         1   15[COMRAM] unsigned char 
  2169 ;; Return value:  Size  Location     Type
  2170 ;;                  1    wreg      void 
  2171 ;; Registers used:
  2172 ;;		wreg
  2173 ;; Tracked objects:
  2174 ;;		On entry : 0/0
  2175 ;;		On exit  : 0/0
  2176 ;;		Unchanged: 0/0
  2177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2178 ;;      Params:         0       0       0       0       0       0       0       0       0
  2179 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2180 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2181 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2182 ;;Total ram usage:        1 bytes
  2183 ;; Hardware stack levels used: 1
  2184 ;; Hardware stack levels required when called: 5
  2185 ;; This function calls:
  2186 ;;		Nothing
  2187 ;; This function is called by:
  2188 ;;		_TransmitirDatos
  2189 ;; This function uses a non-reentrant model
  2190 ;;
  2191                           
  2192                           	psect	text8
  2193   0017EA                     __ptext8:
  2194                           	callstack 0
  2195   0017EA                     _Transmitir:
  2196                           	callstack 24
  2197                           
  2198                           ;incstack = 0
  2199                           ;Transmitir@BufferT stored from wreg
  2200   0017EA  6E10               	movwf	Transmitir@BufferT^0,c
  2201   0017EC                     
  2202                           ;Proyecto.c: 327: while (TRMT == 0);
  2203   0017EC  A2AC               	btfss	4012,1,c	;volatile
  2204   0017EE  D7FE               	goto	l2174
  2205                           
  2206                           ;Proyecto.c: 328: TXREG = BufferT;
  2207   0017F0  C010  FFAD         	movff	Transmitir@BufferT,4013	;volatile
  2208   0017F4  0012               	return		;funcret
  2209   0017F6                     __end_of_Transmitir:
  2210                           	callstack 0
  2211                           
  2212 ;; *************** function _MensajeLCD_Word *****************
  2213 ;; Defined at:
  2214 ;;		line 247 in file "LibLCDXC8.h"
  2215 ;; Parameters:    Size  Location     Type
  2216 ;;  a               1   20[COMRAM] PTR unsigned char 
  2217 ;;		 -> STR_9(7), STR_8(6), STR_7(6), STR_6(23), 
  2218 ;;		 -> STR_5(11), STR_4(23), STR_3(10), STR_2(17), 
  2219 ;;		 -> STR_1(11), 
  2220 ;; Auto vars:     Size  Location     Type
  2221 ;;  i               2   22[COMRAM] int 
  2222 ;; Return value:  Size  Location     Type
  2223 ;;                  1    wreg      void 
  2224 ;; Registers used:
  2225 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2226 ;; Tracked objects:
  2227 ;;		On entry : 0/0
  2228 ;;		On exit  : 0/0
  2229 ;;		Unchanged: 0/0
  2230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2231 ;;      Params:         1       0       0       0       0       0       0       0       0
  2232 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2233 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2234 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2235 ;;Total ram usage:        4 bytes
  2236 ;; Hardware stack levels used: 1
  2237 ;; Hardware stack levels required when called: 8
  2238 ;; This function calls:
  2239 ;;		_EscribeLCD_c
  2240 ;; This function is called by:
  2241 ;;		_main
  2242 ;;		_TransmitirDatos
  2243 ;; This function uses a non-reentrant model
  2244 ;;
  2245                           
  2246                           	psect	text9
  2247   001482                     __ptext9:
  2248                           	callstack 0
  2249   001482                     _MensajeLCD_Word:
  2250                           	callstack 21
  2251                           
  2252                           ;LibLCDXC8.h: 251: for(int i = 0; i<16; i++){
  2253                           
  2254                           ;incstack = 0
  2255   001482  0E00               	movlw	0
  2256   001484  6E18               	movwf	(MensajeLCD_Word@i+1)^0,c
  2257   001486  0E00               	movlw	0
  2258   001488  6E17               	movwf	MensajeLCD_Word@i^0,c
  2259   00148A                     l2142:
  2260                           
  2261                           ;LibLCDXC8.h: 252: if(a[i] == (0)){
  2262   00148A  5015               	movf	MensajeLCD_Word@a^0,w,c
  2263   00148C  2417               	addwf	MensajeLCD_Word@i^0,w,c
  2264   00148E  6E16               	movwf	??_MensajeLCD_Word^0,c
  2265   001490  C016  FFF6         	movff	??_MensajeLCD_Word,tblptrl
  2266   001494                     	if	1	;There is more than 1 active tblptr byte
  2267   001494  0E08               	movlw	high __smallconst
  2268   001496  6EF7               	movwf	tblptrh,c
  2269   001498                     	endif
  2270   001498                     	if	0	;tblptru may be non-zero
  2271   001498                     	endif
  2272   001498                     	if	0	;tblptru may be non-zero
  2273   001498                     	endif
  2274   001498  0008               	tblrd		*
  2275   00149A  50F5               	movf	tablat,w,c
  2276   00149C  0900               	iorlw	0
  2277   00149E  B4D8               	btfsc	status,2,c
  2278   0014A0  0012               	return	
  2279                           
  2280                           ;LibLCDXC8.h: 254: };LibLCDXC8.h: 255: EscribeLCD_c(a[i]);
  2281   0014A2  5015               	movf	MensajeLCD_Word@a^0,w,c
  2282   0014A4  2417               	addwf	MensajeLCD_Word@i^0,w,c
  2283   0014A6  6E16               	movwf	??_MensajeLCD_Word^0,c
  2284   0014A8  C016  FFF6         	movff	??_MensajeLCD_Word,tblptrl
  2285   0014AC                     	if	1	;There is more than 1 active tblptr byte
  2286   0014AC  0E08               	movlw	high __smallconst
  2287   0014AE  6EF7               	movwf	tblptrh,c
  2288   0014B0                     	endif
  2289   0014B0                     	if	0	;tblptru may be non-zero
  2290   0014B0                     	endif
  2291   0014B0                     	if	0	;tblptru may be non-zero
  2292   0014B0                     	endif
  2293   0014B0  0008               	tblrd		*
  2294   0014B2  50F5               	movf	tablat,w,c
  2295   0014B4  ECAB  F00B         	call	_EscribeLCD_c
  2296   0014B8  4A17               	infsnz	MensajeLCD_Word@i^0,f,c
  2297   0014BA  2A18               	incf	(MensajeLCD_Word@i+1)^0,f,c
  2298   0014BC  BE18               	btfsc	(MensajeLCD_Word@i+1)^0,7,c
  2299   0014BE  D7E5               	goto	l2142
  2300   0014C0  5018               	movf	(MensajeLCD_Word@i+1)^0,w,c
  2301   0014C2  E105               	bnz	u1150
  2302   0014C4  0E10               	movlw	16
  2303   0014C6  5C17               	subwf	MensajeLCD_Word@i^0,w,c
  2304   0014C8  B0D8               	btfsc	status,0,c
  2305   0014CA  0012               	return	
  2306   0014CC  D7DE               	goto	l2142
  2307   0014CE                     u1150:
  2308   0014CE  0012               	return		;funcret
  2309   0014D0                     __end_of_MensajeLCD_Word:
  2310                           	callstack 0
  2311                           
  2312 ;; *************** function _Password *****************
  2313 ;; Defined at:
  2314 ;;		line 217 in file "Proyecto.c"
  2315 ;; Parameters:    Size  Location     Type
  2316 ;;  pass            1   20[COMRAM] PTR unsigned char 
  2317 ;;		 -> ing(4), 
  2318 ;; Auto vars:     Size  Location     Type
  2319 ;;  i               2   30[COMRAM] int 
  2320 ;;  secret          4   24[COMRAM] unsigned char [4]
  2321 ;;  access          2   28[COMRAM] unsigned int 
  2322 ;; Return value:  Size  Location     Type
  2323 ;;                  2   20[COMRAM] int 
  2324 ;; Registers used:
  2325 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2326 ;; Tracked objects:
  2327 ;;		On entry : 0/0
  2328 ;;		On exit  : 0/0
  2329 ;;		Unchanged: 0/0
  2330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2331 ;;      Params:         2       0       0       0       0       0       0       0       0
  2332 ;;      Locals:         8       0       0       0       0       0       0       0       0
  2333 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2334 ;;      Totals:        12       0       0       0       0       0       0       0       0
  2335 ;;Total ram usage:       12 bytes
  2336 ;; Hardware stack levels used: 1
  2337 ;; Hardware stack levels required when called: 8
  2338 ;; This function calls:
  2339 ;;		_DireccionaLCD
  2340 ;;		_EscribeLCD_c
  2341 ;; This function is called by:
  2342 ;;		_main
  2343 ;; This function uses a non-reentrant model
  2344 ;;
  2345                           
  2346                           	psect	text10
  2347   00127C                     __ptext10:
  2348                           	callstack 0
  2349   00127C                     _Password:
  2350                           	callstack 22
  2351                           
  2352                           ;Proyecto.c: 218: unsigned char secret[] = {'0','1','2','3'};
  2353                           
  2354                           ;incstack = 0
  2355   00127C  C032  F019         	movff	Password@F3203,Password@secret
  2356   001280  C033  F01A         	movff	Password@F3203+1,Password@secret+1
  2357   001284  C034  F01B         	movff	Password@F3203+2,Password@secret+2
  2358   001288  C035  F01C         	movff	Password@F3203+3,Password@secret+3
  2359                           
  2360                           ;Proyecto.c: 219: unsigned int access = 0;
  2361   00128C  0E00               	movlw	0
  2362   00128E  6E1E               	movwf	(Password@access+1)^0,c
  2363   001290  0E00               	movlw	0
  2364   001292  6E1D               	movwf	Password@access^0,c
  2365                           
  2366                           ;Proyecto.c: 220: DireccionaLCD(0xC1);
  2367   001294  0EC1               	movlw	193
  2368   001296  ECA0  F00B         	call	_DireccionaLCD
  2369                           
  2370                           ;Proyecto.c: 221: for(int i=0; i<4; i++){
  2371   00129A  0E00               	movlw	0
  2372   00129C  6E20               	movwf	(Password@i+1)^0,c
  2373   00129E  0E00               	movlw	0
  2374   0012A0  6E1F               	movwf	Password@i^0,c
  2375   0012A2                     l2390:
  2376                           
  2377                           ;Proyecto.c: 223: EscribeLCD_c('*');
  2378   0012A2  0E2A               	movlw	42
  2379   0012A4  ECAB  F00B         	call	_EscribeLCD_c
  2380                           
  2381                           ;Proyecto.c: 224: if(pass[i] == secret[i]){
  2382   0012A8  501F               	movf	Password@i^0,w,c
  2383   0012AA  0F19               	addlw	low Password@secret
  2384   0012AC  6ED9               	movwf	fsr2l,c
  2385   0012AE  6ADA               	clrf	fsr2h,c
  2386   0012B0  5015               	movf	Password@pass^0,w,c
  2387   0012B2  241F               	addwf	Password@i^0,w,c
  2388   0012B4  6EE1               	movwf	fsr1l,c
  2389   0012B6  6AE2               	clrf	fsr1h,c
  2390   0012B8  50DE               	movf	postinc2,w,c
  2391   0012BA  18E6               	xorwf	postinc1,w,c
  2392   0012BC  A4D8               	btfss	status,2,c
  2393   0012BE  D002               	goto	l281
  2394                           
  2395                           ;Proyecto.c: 225: access++;
  2396   0012C0  4A1D               	infsnz	Password@access^0,f,c
  2397   0012C2  2A1E               	incf	(Password@access+1)^0,f,c
  2398   0012C4                     l281:
  2399   0012C4  4A1F               	infsnz	Password@i^0,f,c
  2400   0012C6  2A20               	incf	(Password@i+1)^0,f,c
  2401   0012C8  BE20               	btfsc	(Password@i+1)^0,7,c
  2402   0012CA  D7EB               	goto	l2390
  2403   0012CC  5020               	movf	(Password@i+1)^0,w,c
  2404   0012CE  E104               	bnz	u1420
  2405   0012D0  0E04               	movlw	4
  2406   0012D2  5C1F               	subwf	Password@i^0,w,c
  2407   0012D4  A0D8               	btfss	status,0,c
  2408   0012D6  D7E5               	goto	l2390
  2409   0012D8                     u1420:
  2410                           
  2411                           ;Proyecto.c: 226: };Proyecto.c: 227: };Proyecto.c: 228: DireccionaLCD(0xC1);
  2412   0012D8  0EC1               	movlw	193
  2413   0012DA  ECA0  F00B         	call	_DireccionaLCD
  2414                           
  2415                           ;Proyecto.c: 229: return (access==4)? 1:0;
  2416   0012DE  0E04               	movlw	4
  2417   0012E0  181D               	xorwf	Password@access^0,w,c
  2418   0012E2  101E               	iorwf	(Password@access+1)^0,w,c
  2419   0012E4  A4D8               	btfss	status,2,c
  2420   0012E6  D002               	goto	u1430
  2421   0012E8  0E01               	movlw	1
  2422   0012EA  D001               	goto	u1440
  2423   0012EC                     u1430:
  2424   0012EC  0E00               	movlw	0
  2425   0012EE                     u1440:
  2426   0012EE  6E15               	movwf	?_Password^0,c
  2427   0012F0  6A16               	clrf	(?_Password+1)^0,c
  2428   0012F2  0012               	return		;funcret
  2429   0012F4                     __end_of_Password:
  2430                           	callstack 0
  2431                           
  2432 ;; *************** function _DireccionaLCD *****************
  2433 ;; Defined at:
  2434 ;;		line 259 in file "LibLCDXC8.h"
  2435 ;; Parameters:    Size  Location     Type
  2436 ;;  a               1    wreg     unsigned char 
  2437 ;; Auto vars:     Size  Location     Type
  2438 ;;  a               1   19[COMRAM] unsigned char 
  2439 ;; Return value:  Size  Location     Type
  2440 ;;                  1    wreg      void 
  2441 ;; Registers used:
  2442 ;;		wreg, status,2, status,0, cstack
  2443 ;; Tracked objects:
  2444 ;;		On entry : 0/0
  2445 ;;		On exit  : 0/0
  2446 ;;		Unchanged: 0/0
  2447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2448 ;;      Params:         0       0       0       0       0       0       0       0       0
  2449 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2450 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2451 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2452 ;;Total ram usage:        1 bytes
  2453 ;; Hardware stack levels used: 1
  2454 ;; Hardware stack levels required when called: 7
  2455 ;; This function calls:
  2456 ;;		_EnviaDato
  2457 ;;		_HabilitaLCD
  2458 ;;		_RetardoLCD
  2459 ;; This function is called by:
  2460 ;;		_main
  2461 ;;		_Password
  2462 ;;		_TransmitirDatos
  2463 ;; This function uses a non-reentrant model
  2464 ;;
  2465                           
  2466                           	psect	text11
  2467   001740                     __ptext11:
  2468                           	callstack 0
  2469   001740                     _DireccionaLCD:
  2470                           	callstack 22
  2471                           
  2472                           ;incstack = 0
  2473                           ;DireccionaLCD@a stored from wreg
  2474   001740  6E14               	movwf	DireccionaLCD@a^0,c
  2475                           
  2476                           ;LibLCDXC8.h: 262: LATE1=0;
  2477   001742  928D               	bcf	3981,1,c	;volatile
  2478                           
  2479                           ;LibLCDXC8.h: 263: EnviaDato(a);
  2480   001744  5014               	movf	DireccionaLCD@a^0,w,c
  2481   001746  EC8F  F00A         	call	_EnviaDato
  2482                           
  2483                           ;LibLCDXC8.h: 264: HabilitaLCD();
  2484   00174A  ECE7  F00B         	call	_HabilitaLCD	;wreg free
  2485                           
  2486                           ;LibLCDXC8.h: 265: RetardoLCD(4);
  2487   00174E  0E04               	movlw	4
  2488   001750  ECB2  F009         	call	_RetardoLCD
  2489   001754  0012               	return		;funcret
  2490   001756                     __end_of_DireccionaLCD:
  2491                           	callstack 0
  2492                           
  2493 ;; *************** function _NuevoCaracter *****************
  2494 ;; Defined at:
  2495 ;;		line 140 in file "LibLCDXC8.h"
  2496 ;; Parameters:    Size  Location     Type
  2497 ;;  addr            1    wreg     unsigned char 
  2498 ;;  c               1   20[COMRAM] PTR unsigned char 
  2499 ;;		 -> cara(8), 
  2500 ;; Auto vars:     Size  Location     Type
  2501 ;;  addr            1   21[COMRAM] unsigned char 
  2502 ;;  i               2   22[COMRAM] int 
  2503 ;; Return value:  Size  Location     Type
  2504 ;;                  1    wreg      void 
  2505 ;; Registers used:
  2506 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2507 ;; Tracked objects:
  2508 ;;		On entry : 0/0
  2509 ;;		On exit  : 0/0
  2510 ;;		Unchanged: 0/0
  2511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2512 ;;      Params:         1       0       0       0       0       0       0       0       0
  2513 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2514 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2515 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2516 ;;Total ram usage:        4 bytes
  2517 ;; Hardware stack levels used: 1
  2518 ;; Hardware stack levels required when called: 8
  2519 ;; This function calls:
  2520 ;;		_ComandoLCD
  2521 ;;		_EscribeLCD_c
  2522 ;; This function is called by:
  2523 ;;		_main
  2524 ;; This function uses a non-reentrant model
  2525 ;;
  2526                           
  2527                           	psect	text12
  2528   0015EC                     __ptext12:
  2529                           	callstack 0
  2530   0015EC                     _NuevoCaracter:
  2531                           	callstack 22
  2532                           
  2533                           ;incstack = 0
  2534                           ;NuevoCaracter@addr stored from wreg
  2535   0015EC  6E16               	movwf	NuevoCaracter@addr^0,c
  2536                           
  2537                           ;LibLCDXC8.h: 141: int i;;LibLCDXC8.h: 142: ComandoLCD(0x40 + (addr * 8));
  2538   0015EE  5016               	movf	NuevoCaracter@addr^0,w,c
  2539   0015F0  0D08               	mullw	8
  2540   0015F2  50F3               	movf	243,w,c
  2541   0015F4  0F40               	addlw	64
  2542   0015F6  EC65  F00B         	call	_ComandoLCD
  2543                           
  2544                           ;LibLCDXC8.h: 143: for (i = 0; i < 8; i++) {
  2545   0015FA  0E00               	movlw	0
  2546   0015FC  6E18               	movwf	(NuevoCaracter@i+1)^0,c
  2547   0015FE  0E00               	movlw	0
  2548   001600  6E17               	movwf	NuevoCaracter@i^0,c
  2549   001602                     l2850:
  2550                           
  2551                           ;LibLCDXC8.h: 144: EscribeLCD_c(c[i]);
  2552   001602  5015               	movf	NuevoCaracter@c^0,w,c
  2553   001604  2417               	addwf	NuevoCaracter@i^0,w,c
  2554   001606  6ED9               	movwf	fsr2l,c
  2555   001608  6ADA               	clrf	fsr2h,c
  2556   00160A  50DF               	movf	indf2,w,c
  2557   00160C  ECAB  F00B         	call	_EscribeLCD_c
  2558   001610  4A17               	infsnz	NuevoCaracter@i^0,f,c
  2559   001612  2A18               	incf	(NuevoCaracter@i+1)^0,f,c
  2560   001614  BE18               	btfsc	(NuevoCaracter@i+1)^0,7,c
  2561   001616  D7F5               	goto	l2850
  2562   001618  5018               	movf	(NuevoCaracter@i+1)^0,w,c
  2563   00161A  E105               	bnz	u2110
  2564   00161C  0E08               	movlw	8
  2565   00161E  5C17               	subwf	NuevoCaracter@i^0,w,c
  2566   001620  B0D8               	btfsc	status,0,c
  2567   001622  0012               	return	
  2568   001624  D7EE               	goto	l2850
  2569   001626                     u2110:
  2570   001626  0012               	return		;funcret
  2571   001628                     __end_of_NuevoCaracter:
  2572                           	callstack 0
  2573                           
  2574 ;; *************** function _EscribeLCD_c *****************
  2575 ;; Defined at:
  2576 ;;		line 148 in file "LibLCDXC8.h"
  2577 ;; Parameters:    Size  Location     Type
  2578 ;;  a               1    wreg     unsigned char 
  2579 ;; Auto vars:     Size  Location     Type
  2580 ;;  a               1   19[COMRAM] unsigned char 
  2581 ;; Return value:  Size  Location     Type
  2582 ;;                  1    wreg      void 
  2583 ;; Registers used:
  2584 ;;		wreg, status,2, status,0, cstack
  2585 ;; Tracked objects:
  2586 ;;		On entry : 0/0
  2587 ;;		On exit  : 0/0
  2588 ;;		Unchanged: 0/0
  2589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2590 ;;      Params:         0       0       0       0       0       0       0       0       0
  2591 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2592 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2593 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2594 ;;Total ram usage:        1 bytes
  2595 ;; Hardware stack levels used: 1
  2596 ;; Hardware stack levels required when called: 7
  2597 ;; This function calls:
  2598 ;;		_EnviaDato
  2599 ;;		_HabilitaLCD
  2600 ;;		_RetardoLCD
  2601 ;; This function is called by:
  2602 ;;		_NuevoCaracter
  2603 ;;		_MensajeLCD_Word
  2604 ;;		_main
  2605 ;;		_Password
  2606 ;;		_TransmitirDatos
  2607 ;; This function uses a non-reentrant model
  2608 ;;
  2609                           
  2610                           	psect	text13
  2611   001756                     __ptext13:
  2612                           	callstack 0
  2613   001756                     _EscribeLCD_c:
  2614                           	callstack 21
  2615                           
  2616                           ;incstack = 0
  2617                           ;EscribeLCD_c@a stored from wreg
  2618   001756  6E14               	movwf	EscribeLCD_c@a^0,c
  2619                           
  2620                           ;LibLCDXC8.h: 152: LATE1=1;
  2621   001758  828D               	bsf	3981,1,c	;volatile
  2622                           
  2623                           ;LibLCDXC8.h: 153: EnviaDato(a);
  2624   00175A  5014               	movf	EscribeLCD_c@a^0,w,c
  2625   00175C  EC8F  F00A         	call	_EnviaDato
  2626                           
  2627                           ;LibLCDXC8.h: 154: HabilitaLCD();
  2628   001760  ECE7  F00B         	call	_HabilitaLCD	;wreg free
  2629                           
  2630                           ;LibLCDXC8.h: 155: RetardoLCD(4);
  2631   001764  0E04               	movlw	4
  2632   001766  ECB2  F009         	call	_RetardoLCD
  2633   00176A  0012               	return		;funcret
  2634   00176C                     __end_of_EscribeLCD_c:
  2635                           	callstack 0
  2636                           
  2637 ;; *************** function _ComandoLCD *****************
  2638 ;; Defined at:
  2639 ;;		line 129 in file "LibLCDXC8.h"
  2640 ;; Parameters:    Size  Location     Type
  2641 ;;  data            1    wreg     unsigned char 
  2642 ;; Auto vars:     Size  Location     Type
  2643 ;;  data            1   16[COMRAM] unsigned char 
  2644 ;; Return value:  Size  Location     Type
  2645 ;;                  1    wreg      void 
  2646 ;; Registers used:
  2647 ;;		wreg, status,2, cstack
  2648 ;; Tracked objects:
  2649 ;;		On entry : 0/0
  2650 ;;		On exit  : 0/0
  2651 ;;		Unchanged: 0/0
  2652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2653 ;;      Params:         0       0       0       0       0       0       0       0       0
  2654 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2655 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2656 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2657 ;;Total ram usage:        2 bytes
  2658 ;; Hardware stack levels used: 1
  2659 ;; Hardware stack levels required when called: 5
  2660 ;; This function calls:
  2661 ;;		Nothing
  2662 ;; This function is called by:
  2663 ;;		_NuevoCaracter
  2664 ;; This function uses a non-reentrant model
  2665 ;;
  2666                           
  2667                           	psect	text14
  2668   0016CA                     __ptext14:
  2669                           	callstack 0
  2670   0016CA                     _ComandoLCD:
  2671                           	callstack 24
  2672                           
  2673                           ;incstack = 0
  2674                           ;ComandoLCD@data stored from wreg
  2675   0016CA  6E11               	movwf	ComandoLCD@data^0,c
  2676                           
  2677                           ;LibLCDXC8.h: 131: LATE1 = 0;
  2678   0016CC  928D               	bcf	3981,1,c	;volatile
  2679                           
  2680                           ;LibLCDXC8.h: 132: LATD = data;
  2681   0016CE  C011  FF8C         	movff	ComandoLCD@data,3980	;volatile
  2682                           
  2683                           ;LibLCDXC8.h: 133: LATE2 = 1;
  2684   0016D2  848D               	bsf	3981,2,c	;volatile
  2685                           
  2686                           ;LibLCDXC8.h: 134: _delay((unsigned long)((5)*(8000000/4000000.0)));
  2687   0016D4  0E03               	movlw	3
  2688   0016D6                     u2227:
  2689   0016D6  2EE8               	decfsz	wreg,f,c
  2690   0016D8  D7FE               	bra	u2227
  2691   0016DA  F000               	nop	
  2692                           
  2693                           ;LibLCDXC8.h: 135: LATE2 = 0;
  2694   0016DC  948D               	bcf	3981,2,c	;volatile
  2695                           
  2696                           ;LibLCDXC8.h: 136: _delay((unsigned long)((5)*(8000000/4000000.0)));
  2697   0016DE  0E03               	movlw	3
  2698   0016E0                     u2237:
  2699   0016E0  2EE8               	decfsz	wreg,f,c
  2700   0016E2  D7FE               	bra	u2237
  2701   0016E4  F000               	nop	
  2702                           
  2703                           ;LibLCDXC8.h: 137: _delay((unsigned long)((2)*(8000000/4000.0)));
  2704   0016E6  0E06               	movlw	6
  2705   0016E8  6E10               	movwf	??_ComandoLCD^0,c
  2706   0016EA  0E30               	movlw	48
  2707   0016EC                     u2247:
  2708   0016EC  2EE8               	decfsz	wreg,f,c
  2709   0016EE  D7FE               	bra	u2247
  2710   0016F0  2E10               	decfsz	??_ComandoLCD^0,f,c
  2711   0016F2  D7FC               	bra	u2247
  2712   0016F4  D000               	nop2	
  2713   0016F6  0012               	return		;funcret
  2714   0016F8                     __end_of_ComandoLCD:
  2715                           	callstack 0
  2716                           
  2717 ;; *************** function _Movimiento *****************
  2718 ;; Defined at:
  2719 ;;		line 177 in file "Proyecto.c"
  2720 ;; Parameters:    Size  Location     Type
  2721 ;;		None
  2722 ;; Auto vars:     Size  Location     Type
  2723 ;;		None
  2724 ;; Return value:  Size  Location     Type
  2725 ;;                  1    wreg      void 
  2726 ;; Registers used:
  2727 ;;		wreg, status,2, status,0
  2728 ;; Tracked objects:
  2729 ;;		On entry : 0/0
  2730 ;;		On exit  : 0/0
  2731 ;;		Unchanged: 0/0
  2732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2733 ;;      Params:         0       0       0       0       0       0       0       0       0
  2734 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2735 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2736 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2737 ;;Total ram usage:        1 bytes
  2738 ;; Hardware stack levels used: 1
  2739 ;; Hardware stack levels required when called: 5
  2740 ;; This function calls:
  2741 ;;		Nothing
  2742 ;; This function is called by:
  2743 ;;		_main
  2744 ;; This function uses a non-reentrant model
  2745 ;;
  2746                           
  2747                           	psect	text15
  2748   000FBC                     __ptext15:
  2749                           	callstack 0
  2750   000FBC                     _Movimiento:
  2751                           	callstack 25
  2752                           
  2753                           ;Proyecto.c: 178: if(ADRES>0 & ADRES<=255){
  2754                           
  2755                           ;incstack = 0
  2756   000FBC  0E00               	movlw	0
  2757   000FBE  5CC3               	subwf	195,w,c	;volatile
  2758   000FC0  0E01               	movlw	1
  2759   000FC2  58C4               	subwfb	196,w,c	;volatile
  2760   000FC4  B0D8               	btfsc	status,0,c
  2761   000FC6  D002               	goto	u1710
  2762   000FC8  0E01               	movlw	1
  2763   000FCA  D001               	goto	u1712
  2764   000FCC                     u1710:
  2765   000FCC  0E00               	movlw	0
  2766   000FCE                     u1712:
  2767   000FCE  6E10               	movwf	??_Movimiento^0,c
  2768   000FD0  50C3               	movf	195,w,c	;volatile
  2769   000FD2  10C4               	iorwf	196,w,c	;volatile
  2770   000FD4  B4D8               	btfsc	status,2,c
  2771   000FD6  D002               	goto	u1720
  2772   000FD8  0E01               	movlw	1
  2773   000FDA  D001               	goto	u1722
  2774   000FDC                     u1720:
  2775   000FDC  0E00               	movlw	0
  2776   000FDE                     u1722:
  2777   000FDE  1410               	andwf	??_Movimiento^0,w,c
  2778   000FE0  A0E8               	btfss	wreg,0,c
  2779   000FE2  D005               	goto	l2588
  2780                           
  2781                           ;Proyecto.c: 179: a = 125;
  2782   000FE4  0E00               	movlw	0
  2783   000FE6  6E37               	movwf	(_a+1)^0,c
  2784   000FE8  0E7D               	movlw	125
  2785   000FEA  6E36               	movwf	_a^0,c
  2786                           
  2787                           ;Proyecto.c: 180: }else if(ADRES>255 & ADRES<=511){
  2788   000FEC  0012               	return	
  2789   000FEE                     l2588:
  2790   000FEE  0E00               	movlw	0
  2791   000FF0  5CC3               	subwf	195,w,c	;volatile
  2792   000FF2  0E02               	movlw	2
  2793   000FF4  58C4               	subwfb	196,w,c	;volatile
  2794   000FF6  B0D8               	btfsc	status,0,c
  2795   000FF8  D002               	goto	u1740
  2796   000FFA  0E01               	movlw	1
  2797   000FFC  D001               	goto	u1742
  2798   000FFE                     u1740:
  2799   000FFE  0E00               	movlw	0
  2800   001000                     u1742:
  2801   001000  6E10               	movwf	??_Movimiento^0,c
  2802   001002  0E00               	movlw	0
  2803   001004  5CC3               	subwf	195,w,c	;volatile
  2804   001006  0E01               	movlw	1
  2805   001008  58C4               	subwfb	196,w,c	;volatile
  2806   00100A  A0D8               	btfss	status,0,c
  2807   00100C  D002               	goto	u1750
  2808   00100E  0E01               	movlw	1
  2809   001010  D001               	goto	u1752
  2810   001012                     u1750:
  2811   001012  0E00               	movlw	0
  2812   001014                     u1752:
  2813   001014  1410               	andwf	??_Movimiento^0,w,c
  2814   001016  A0E8               	btfss	wreg,0,c
  2815   001018  D005               	goto	l2592
  2816                           
  2817                           ;Proyecto.c: 181: a = 292;
  2818   00101A  0E01               	movlw	1
  2819   00101C  6E37               	movwf	(_a+1)^0,c
  2820   00101E  0E24               	movlw	36
  2821   001020  6E36               	movwf	_a^0,c
  2822                           
  2823                           ;Proyecto.c: 182: }else if(ADRES>511 & ADRES<=767){
  2824   001022  0012               	return	
  2825   001024                     l2592:
  2826   001024  0E00               	movlw	0
  2827   001026  5CC3               	subwf	195,w,c	;volatile
  2828   001028  0E03               	movlw	3
  2829   00102A  58C4               	subwfb	196,w,c	;volatile
  2830   00102C  B0D8               	btfsc	status,0,c
  2831   00102E  D002               	goto	u1770
  2832   001030  0E01               	movlw	1
  2833   001032  D001               	goto	u1772
  2834   001034                     u1770:
  2835   001034  0E00               	movlw	0
  2836   001036                     u1772:
  2837   001036  6E10               	movwf	??_Movimiento^0,c
  2838   001038  0E00               	movlw	0
  2839   00103A  5CC3               	subwf	195,w,c	;volatile
  2840   00103C  0E02               	movlw	2
  2841   00103E  58C4               	subwfb	196,w,c	;volatile
  2842   001040  A0D8               	btfss	status,0,c
  2843   001042  D002               	goto	u1780
  2844   001044  0E01               	movlw	1
  2845   001046  D001               	goto	u1782
  2846   001048                     u1780:
  2847   001048  0E00               	movlw	0
  2848   00104A                     u1782:
  2849   00104A  1410               	andwf	??_Movimiento^0,w,c
  2850   00104C  A0E8               	btfss	wreg,0,c
  2851   00104E  D005               	goto	l2596
  2852                           
  2853                           ;Proyecto.c: 183: a = 458;
  2854   001050  0E01               	movlw	1
  2855   001052  6E37               	movwf	(_a+1)^0,c
  2856   001054  0ECA               	movlw	202
  2857   001056  6E36               	movwf	_a^0,c
  2858                           
  2859                           ;Proyecto.c: 184: }else if(ADRES>767 & ADRES<=1024){
  2860   001058  0012               	return	
  2861   00105A                     l2596:
  2862   00105A  04C3               	decf	195,w,c	;volatile
  2863   00105C  0E04               	movlw	4
  2864   00105E  58C4               	subwfb	196,w,c	;volatile
  2865   001060  B0D8               	btfsc	status,0,c
  2866   001062  D002               	goto	u1800
  2867   001064  0E01               	movlw	1
  2868   001066  D001               	goto	u1802
  2869   001068                     u1800:
  2870   001068  0E00               	movlw	0
  2871   00106A                     u1802:
  2872   00106A  6E10               	movwf	??_Movimiento^0,c
  2873   00106C  0E00               	movlw	0
  2874   00106E  5CC3               	subwf	195,w,c	;volatile
  2875   001070  0E03               	movlw	3
  2876   001072  58C4               	subwfb	196,w,c	;volatile
  2877   001074  A0D8               	btfss	status,0,c
  2878   001076  D002               	goto	u1810
  2879   001078  0E01               	movlw	1
  2880   00107A  D001               	goto	u1812
  2881   00107C                     u1810:
  2882   00107C  0E00               	movlw	0
  2883   00107E                     u1812:
  2884   00107E  1410               	andwf	??_Movimiento^0,w,c
  2885   001080  A0E8               	btfss	wreg,0,c
  2886   001082  0012               	return	
  2887                           
  2888                           ;Proyecto.c: 185: a = 625;
  2889   001084  0E02               	movlw	2
  2890   001086  6E37               	movwf	(_a+1)^0,c
  2891   001088  0E71               	movlw	113
  2892   00108A  6E36               	movwf	_a^0,c
  2893   00108C  0012               	return	
  2894   00108E                     __end_of_Movimiento:
  2895                           	callstack 0
  2896                           
  2897 ;; *************** function _LeerHT11 *****************
  2898 ;; Defined at:
  2899 ;;		line 233 in file "Proyecto.c"
  2900 ;; Parameters:    Size  Location     Type
  2901 ;;		None
  2902 ;; Auto vars:     Size  Location     Type
  2903 ;;		None
  2904 ;; Return value:  Size  Location     Type
  2905 ;;                  1    wreg      void 
  2906 ;; Registers used:
  2907 ;;		wreg, status,2, status,0, cstack
  2908 ;; Tracked objects:
  2909 ;;		On entry : 0/0
  2910 ;;		On exit  : 0/0
  2911 ;;		Unchanged: 0/0
  2912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2913 ;;      Params:         0       0       0       0       0       0       0       0       0
  2914 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2915 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2916 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2917 ;;Total ram usage:        1 bytes
  2918 ;; Hardware stack levels used: 1
  2919 ;; Hardware stack levels required when called: 7
  2920 ;; This function calls:
  2921 ;;		_LeerByte
  2922 ;; This function is called by:
  2923 ;;		_main
  2924 ;; This function uses a non-reentrant model
  2925 ;;
  2926                           
  2927                           	psect	text16
  2928   001662                     __ptext16:
  2929                           	callstack 0
  2930   001662                     _LeerHT11:
  2931                           	callstack 23
  2932                           
  2933                           ;Proyecto.c: 235: TRISA5 = 0;
  2934                           
  2935                           ;incstack = 0
  2936   001662  9A92               	bcf	3986,5,c	;volatile
  2937                           
  2938                           ;Proyecto.c: 236: _delay((unsigned long)((18)*(8000000/4000.0)));
  2939   001664  0E2F               	movlw	47
  2940   001666  6E14               	movwf	??_LeerHT11^0,c
  2941   001668  0EC0               	movlw	192
  2942   00166A                     u2257:
  2943   00166A  2EE8               	decfsz	wreg,f,c
  2944   00166C  D7FE               	bra	u2257
  2945   00166E  2E14               	decfsz	??_LeerHT11^0,f,c
  2946   001670  D7FC               	bra	u2257
  2947                           
  2948                           ;Proyecto.c: 237: TRISA5 = 1;
  2949   001672  8A92               	bsf	3986,5,c	;volatile
  2950   001674                     l285:
  2951   001674  BA80               	btfsc	3968,5,c	;volatile
  2952   001676  D7FE               	goto	l285
  2953                           
  2954                           ;Proyecto.c: 240: _delay((unsigned long)((120)*(8000000/4000000.0)));
  2955   001678  0E50               	movlw	80
  2956   00167A                     u2267:
  2957   00167A  2EE8               	decfsz	wreg,f,c
  2958   00167C  D7FE               	bra	u2267
  2959   00167E                     l288:
  2960   00167E  BA80               	btfsc	3968,5,c	;volatile
  2961   001680  D7FE               	goto	l288
  2962                           
  2963                           ;Proyecto.c: 243: LeerByte();
  2964   001682  EC8F  F00B         	call	_LeerByte	;wreg free
  2965                           
  2966                           ;Proyecto.c: 244: LeerByte();
  2967   001686  EC8F  F00B         	call	_LeerByte	;wreg free
  2968                           
  2969                           ;Proyecto.c: 245: Temp = LeerByte();
  2970   00168A  EC8F  F00B         	call	_LeerByte	;wreg free
  2971   00168E  6E49               	movwf	_Temp^0,c
  2972                           
  2973                           ;Proyecto.c: 246: LeerByte();
  2974   001690  EC8F  F00B         	call	_LeerByte	;wreg free
  2975                           
  2976                           ;Proyecto.c: 247: LeerByte();
  2977   001694  EC8F  F00B         	call	_LeerByte	;wreg free
  2978   001698  0012               	return		;funcret
  2979   00169A                     __end_of_LeerHT11:
  2980                           	callstack 0
  2981                           
  2982 ;; *************** function _LeerByte *****************
  2983 ;; Defined at:
  2984 ;;		line 250 in file "Proyecto.c"
  2985 ;; Parameters:    Size  Location     Type
  2986 ;;		None
  2987 ;; Auto vars:     Size  Location     Type
  2988 ;;  i               1   18[COMRAM] unsigned char 
  2989 ;;  res             1   17[COMRAM] unsigned char 
  2990 ;; Return value:  Size  Location     Type
  2991 ;;                  1    wreg      unsigned char 
  2992 ;; Registers used:
  2993 ;;		wreg, status,2, status,0, cstack
  2994 ;; Tracked objects:
  2995 ;;		On entry : 0/0
  2996 ;;		On exit  : 0/0
  2997 ;;		Unchanged: 0/0
  2998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2999 ;;      Params:         0       0       0       0       0       0       0       0       0
  3000 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3001 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3002 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3003 ;;Total ram usage:        3 bytes
  3004 ;; Hardware stack levels used: 1
  3005 ;; Hardware stack levels required when called: 6
  3006 ;; This function calls:
  3007 ;;		_LeerBit
  3008 ;; This function is called by:
  3009 ;;		_LeerHT11
  3010 ;; This function uses a non-reentrant model
  3011 ;;
  3012                           
  3013                           	psect	text17
  3014   00171E                     __ptext17:
  3015                           	callstack 0
  3016   00171E                     _LeerByte:
  3017                           	callstack 23
  3018                           
  3019                           ;Proyecto.c: 251: unsigned char res = 0, i;
  3020                           
  3021                           ;incstack = 0
  3022   00171E  0E00               	movlw	0
  3023   001720  6E12               	movwf	LeerByte@res^0,c
  3024                           
  3025                           ;Proyecto.c: 252: for (i = 8; i > 0; i--) {
  3026   001722  0E08               	movlw	8
  3027   001724  6E13               	movwf	LeerByte@i^0,c
  3028   001726                     l2164:
  3029                           
  3030                           ;Proyecto.c: 253: res = (res << 1) | LeerBit();
  3031   001726  EC4D  F00B         	call	_LeerBit	;wreg free
  3032   00172A  6E11               	movwf	??_LeerByte^0,c
  3033   00172C  5012               	movf	LeerByte@res^0,w,c
  3034   00172E  2412               	addwf	LeerByte@res^0,w,c
  3035   001730  1011               	iorwf	??_LeerByte^0,w,c
  3036   001732  6E12               	movwf	LeerByte@res^0,c
  3037   001734  0613               	decf	LeerByte@i^0,f,c
  3038   001736  5013               	movf	LeerByte@i^0,w,c
  3039   001738  A4D8               	btfss	status,2,c
  3040   00173A  D7F5               	goto	l2164
  3041                           
  3042                           ;Proyecto.c: 254: };Proyecto.c: 255: return res;
  3043   00173C  5012               	movf	LeerByte@res^0,w,c
  3044   00173E  0012               	return		;funcret
  3045   001740                     __end_of_LeerByte:
  3046                           	callstack 0
  3047                           
  3048 ;; *************** function _LeerBit *****************
  3049 ;; Defined at:
  3050 ;;		line 258 in file "Proyecto.c"
  3051 ;; Parameters:    Size  Location     Type
  3052 ;;		None
  3053 ;; Auto vars:     Size  Location     Type
  3054 ;;  res             1   15[COMRAM] unsigned char 
  3055 ;; Return value:  Size  Location     Type
  3056 ;;                  1    wreg      unsigned char 
  3057 ;; Registers used:
  3058 ;;		wreg, status,2
  3059 ;; Tracked objects:
  3060 ;;		On entry : 0/0
  3061 ;;		On exit  : 0/0
  3062 ;;		Unchanged: 0/0
  3063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3064 ;;      Params:         0       0       0       0       0       0       0       0       0
  3065 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3066 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3067 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3068 ;;Total ram usage:        1 bytes
  3069 ;; Hardware stack levels used: 1
  3070 ;; Hardware stack levels required when called: 5
  3071 ;; This function calls:
  3072 ;;		Nothing
  3073 ;; This function is called by:
  3074 ;;		_LeerByte
  3075 ;; This function uses a non-reentrant model
  3076 ;;
  3077                           
  3078                           	psect	text18
  3079   00169A                     __ptext18:
  3080                           	callstack 0
  3081   00169A                     _LeerBit:
  3082                           	callstack 23
  3083                           
  3084                           ;Proyecto.c: 259: unsigned char res = 0;
  3085                           
  3086                           ;incstack = 0
  3087   00169A  0E00               	movlw	0
  3088   00169C  6E10               	movwf	LeerBit@res^0,c
  3089   00169E                     l299:
  3090   00169E  AA80               	btfss	3968,5,c	;volatile
  3091   0016A0  D7FE               	goto	l299
  3092                           
  3093                           ;Proyecto.c: 261: _delay((unsigned long)((13)*(8000000/4000000.0)));
  3094   0016A2  0E08               	movlw	8
  3095   0016A4                     u2277:
  3096   0016A4  2EE8               	decfsz	wreg,f,c
  3097   0016A6  D7FE               	bra	u2277
  3098   0016A8  D000               	nop2	
  3099                           
  3100                           ;Proyecto.c: 262: if (RA5 == 1) res = 0;
  3101   0016AA  AA80               	btfss	3968,5,c	;volatile
  3102   0016AC  D002               	goto	l2090
  3103   0016AE  0E00               	movlw	0
  3104   0016B0  6E10               	movwf	LeerBit@res^0,c
  3105   0016B2                     l2090:
  3106                           
  3107                           ;Proyecto.c: 263: _delay((unsigned long)((22)*(8000000/4000000.0)));
  3108   0016B2  0E0E               	movlw	14
  3109   0016B4                     u2287:
  3110   0016B4  2EE8               	decfsz	wreg,f,c
  3111   0016B6  D7FE               	bra	u2287
  3112   0016B8  D000               	nop2	
  3113                           
  3114                           ;Proyecto.c: 264: if (RA5 == 1) {
  3115   0016BA  AA80               	btfss	3968,5,c	;volatile
  3116   0016BC  D004               	goto	u1110
  3117                           
  3118                           ;Proyecto.c: 265: res = 1;
  3119   0016BE  0E01               	movlw	1
  3120   0016C0  6E10               	movwf	LeerBit@res^0,c
  3121   0016C2                     l304:
  3122   0016C2  BA80               	btfsc	3968,5,c	;volatile
  3123   0016C4  D7FE               	goto	l304
  3124   0016C6                     u1110:
  3125                           
  3126                           ;Proyecto.c: 267: };Proyecto.c: 268: return res;
  3127   0016C6  5010               	movf	LeerBit@res^0,w,c
  3128   0016C8  0012               	return		;funcret
  3129   0016CA                     __end_of_LeerBit:
  3130                           	callstack 0
  3131                           
  3132 ;; *************** function _InicializaLCD *****************
  3133 ;; Defined at:
  3134 ;;		line 74 in file "LibLCDXC8.h"
  3135 ;; Parameters:    Size  Location     Type
  3136 ;;		None
  3137 ;; Auto vars:     Size  Location     Type
  3138 ;;		None
  3139 ;; Return value:  Size  Location     Type
  3140 ;;                  1    wreg      void 
  3141 ;; Registers used:
  3142 ;;		wreg, status,2, status,0, cstack
  3143 ;; Tracked objects:
  3144 ;;		On entry : 0/0
  3145 ;;		On exit  : 0/0
  3146 ;;		Unchanged: 0/0
  3147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3148 ;;      Params:         0       0       0       0       0       0       0       0       0
  3149 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3150 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3151 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3152 ;;Total ram usage:        0 bytes
  3153 ;; Hardware stack levels used: 1
  3154 ;; Hardware stack levels required when called: 8
  3155 ;; This function calls:
  3156 ;;		_BorraLCD
  3157 ;;		_EnviaDato
  3158 ;;		_HabilitaLCD
  3159 ;;		_RetardoLCD
  3160 ;; This function is called by:
  3161 ;;		_main
  3162 ;; This function uses a non-reentrant model
  3163 ;;
  3164                           
  3165                           	psect	text19
  3166   00115C                     __ptext19:
  3167                           	callstack 0
  3168   00115C                     _InicializaLCD:
  3169                           	callstack 22
  3170                           
  3171                           ;LibLCDXC8.h: 76: LATE1=0;
  3172                           
  3173                           ;incstack = 0
  3174   00115C  928D               	bcf	3981,1,c	;volatile
  3175                           
  3176                           ;LibLCDXC8.h: 77: if(interfaz==4)
  3177   00115E  0E04               	movlw	4
  3178   001160  1839               	xorwf	_interfaz^0,w,c
  3179   001162  A4D8               	btfss	status,2,c
  3180   001164  D004               	goto	l2316
  3181                           
  3182                           ;LibLCDXC8.h: 78: LATD=(LATD & 0b00001111) | 0x30;
  3183   001166  508C               	movf	140,w,c	;volatile
  3184   001168  0B0F               	andlw	15
  3185   00116A  0930               	iorlw	48
  3186   00116C  D001               	goto	L1
  3187   00116E                     l2316:
  3188                           
  3189                           ;LibLCDXC8.h: 79: else;LibLCDXC8.h: 80: LATD=0x3F;
  3190   00116E  0E3F               	movlw	63
  3191   001170                     L1:
  3192   001170  6E8C               	movwf	140,c	;volatile
  3193                           
  3194                           ;LibLCDXC8.h: 81: HabilitaLCD();
  3195   001172  ECE7  F00B         	call	_HabilitaLCD	;wreg free
  3196                           
  3197                           ;LibLCDXC8.h: 82: RetardoLCD(1);
  3198   001176  0E01               	movlw	1
  3199   001178  ECB2  F009         	call	_RetardoLCD
  3200                           
  3201                           ;LibLCDXC8.h: 83: if(interfaz==4)
  3202   00117C  0E04               	movlw	4
  3203   00117E  1839               	xorwf	_interfaz^0,w,c
  3204   001180  A4D8               	btfss	status,2,c
  3205   001182  D004               	goto	l2326
  3206                           
  3207                           ;LibLCDXC8.h: 84: LATD=(LATD & 0b00001111) | 0x30;
  3208   001184  508C               	movf	140,w,c	;volatile
  3209   001186  0B0F               	andlw	15
  3210   001188  0930               	iorlw	48
  3211   00118A  D001               	goto	L2
  3212   00118C                     l2326:
  3213                           
  3214                           ;LibLCDXC8.h: 85: else;LibLCDXC8.h: 86: LATD=0x3F;
  3215   00118C  0E3F               	movlw	63
  3216   00118E                     L2:
  3217   00118E  6E8C               	movwf	140,c	;volatile
  3218                           
  3219                           ;LibLCDXC8.h: 87: HabilitaLCD();
  3220   001190  ECE7  F00B         	call	_HabilitaLCD	;wreg free
  3221                           
  3222                           ;LibLCDXC8.h: 88: RetardoLCD(3);
  3223   001194  0E03               	movlw	3
  3224   001196  ECB2  F009         	call	_RetardoLCD
  3225                           
  3226                           ;LibLCDXC8.h: 89: if(interfaz==4)
  3227   00119A  0E04               	movlw	4
  3228   00119C  1839               	xorwf	_interfaz^0,w,c
  3229   00119E  A4D8               	btfss	status,2,c
  3230   0011A0  D004               	goto	l2336
  3231                           
  3232                           ;LibLCDXC8.h: 90: LATD=(LATD & 0b00001111) | 0x30;
  3233   0011A2  508C               	movf	140,w,c	;volatile
  3234   0011A4  0B0F               	andlw	15
  3235   0011A6  0930               	iorlw	48
  3236   0011A8  D001               	goto	L3
  3237   0011AA                     l2336:
  3238                           
  3239                           ;LibLCDXC8.h: 91: else;LibLCDXC8.h: 92: LATD=0x3F;
  3240   0011AA  0E3F               	movlw	63
  3241   0011AC                     L3:
  3242   0011AC  6E8C               	movwf	140,c	;volatile
  3243                           
  3244                           ;LibLCDXC8.h: 93: HabilitaLCD();
  3245   0011AE  ECE7  F00B         	call	_HabilitaLCD	;wreg free
  3246                           
  3247                           ;LibLCDXC8.h: 94: RetardoLCD(4);
  3248   0011B2  0E04               	movlw	4
  3249   0011B4  ECB2  F009         	call	_RetardoLCD
  3250                           
  3251                           ;LibLCDXC8.h: 95: if(interfaz==4){
  3252   0011B8  0E04               	movlw	4
  3253   0011BA  1839               	xorwf	_interfaz^0,w,c
  3254   0011BC  A4D8               	btfss	status,2,c
  3255   0011BE  D011               	goto	l2356
  3256                           
  3257                           ;LibLCDXC8.h: 96: LATD=(LATD & 0b00001111) | 0x20;
  3258   0011C0  508C               	movf	140,w,c	;volatile
  3259   0011C2  0B0F               	andlw	15
  3260   0011C4  0920               	iorlw	32
  3261   0011C6  6E8C               	movwf	140,c	;volatile
  3262                           
  3263                           ;LibLCDXC8.h: 97: HabilitaLCD();
  3264   0011C8  ECE7  F00B         	call	_HabilitaLCD	;wreg free
  3265                           
  3266                           ;LibLCDXC8.h: 98: RetardoLCD(4);
  3267   0011CC  0E04               	movlw	4
  3268   0011CE  ECB2  F009         	call	_RetardoLCD
  3269                           
  3270                           ;LibLCDXC8.h: 99: EnviaDato(0x2F);
  3271   0011D2  0E2F               	movlw	47
  3272   0011D4  EC8F  F00A         	call	_EnviaDato
  3273                           
  3274                           ;LibLCDXC8.h: 100: HabilitaLCD();
  3275   0011D8  ECE7  F00B         	call	_HabilitaLCD	;wreg free
  3276                           
  3277                           ;LibLCDXC8.h: 101: RetardoLCD(4);
  3278   0011DC  0E04               	movlw	4
  3279   0011DE  ECB2  F009         	call	_RetardoLCD
  3280   0011E2                     l2356:
  3281                           
  3282                           ;LibLCDXC8.h: 102: };LibLCDXC8.h: 103: BorraLCD();
  3283   0011E2  ECC1  F00B         	call	_BorraLCD	;wreg free
  3284                           
  3285                           ;LibLCDXC8.h: 104: EnviaDato(0xF);
  3286   0011E6  0E0F               	movlw	15
  3287   0011E8  EC8F  F00A         	call	_EnviaDato
  3288                           
  3289                           ;LibLCDXC8.h: 105: HabilitaLCD();
  3290   0011EC  ECE7  F00B         	call	_HabilitaLCD	;wreg free
  3291                           
  3292                           ;LibLCDXC8.h: 106: RetardoLCD(4);
  3293   0011F0  0E04               	movlw	4
  3294   0011F2  ECB2  F009         	call	_RetardoLCD
  3295   0011F6  0012               	return		;funcret
  3296   0011F8                     __end_of_InicializaLCD:
  3297                           	callstack 0
  3298                           
  3299 ;; *************** function _BorraLCD *****************
  3300 ;; Defined at:
  3301 ;;		line 115 in file "LibLCDXC8.h"
  3302 ;; Parameters:    Size  Location     Type
  3303 ;;		None
  3304 ;; Auto vars:     Size  Location     Type
  3305 ;;		None
  3306 ;; Return value:  Size  Location     Type
  3307 ;;                  1    wreg      void 
  3308 ;; Registers used:
  3309 ;;		wreg, status,2, status,0, cstack
  3310 ;; Tracked objects:
  3311 ;;		On entry : 0/0
  3312 ;;		On exit  : 0/0
  3313 ;;		Unchanged: 0/0
  3314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3315 ;;      Params:         0       0       0       0       0       0       0       0       0
  3316 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3317 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3318 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3319 ;;Total ram usage:        0 bytes
  3320 ;; Hardware stack levels used: 1
  3321 ;; Hardware stack levels required when called: 7
  3322 ;; This function calls:
  3323 ;;		_EnviaDato
  3324 ;;		_HabilitaLCD
  3325 ;;		_RetardoLCD
  3326 ;; This function is called by:
  3327 ;;		_InicializaLCD
  3328 ;;		_main
  3329 ;;		_TransmitirDatos
  3330 ;; This function uses a non-reentrant model
  3331 ;;
  3332                           
  3333                           	psect	text20
  3334   001782                     __ptext20:
  3335                           	callstack 0
  3336   001782                     _BorraLCD:
  3337                           	callstack 22
  3338                           
  3339                           ;LibLCDXC8.h: 117: LATE1=0;
  3340                           
  3341                           ;incstack = 0
  3342   001782  928D               	bcf	3981,1,c	;volatile
  3343                           
  3344                           ;LibLCDXC8.h: 118: EnviaDato(0x01);
  3345   001784  0E01               	movlw	1
  3346   001786  EC8F  F00A         	call	_EnviaDato
  3347                           
  3348                           ;LibLCDXC8.h: 119: HabilitaLCD();
  3349   00178A  ECE7  F00B         	call	_HabilitaLCD	;wreg free
  3350                           
  3351                           ;LibLCDXC8.h: 120: RetardoLCD(2);
  3352   00178E  0E02               	movlw	2
  3353   001790  ECB2  F009         	call	_RetardoLCD
  3354   001794  0012               	return		;funcret
  3355   001796                     __end_of_BorraLCD:
  3356                           	callstack 0
  3357                           
  3358 ;; *************** function _EnviaDato *****************
  3359 ;; Defined at:
  3360 ;;		line 62 in file "LibLCDXC8.h"
  3361 ;; Parameters:    Size  Location     Type
  3362 ;;  a               1    wreg     unsigned char 
  3363 ;; Auto vars:     Size  Location     Type
  3364 ;;  a               1   18[COMRAM] unsigned char 
  3365 ;; Return value:  Size  Location     Type
  3366 ;;                  1    wreg      void 
  3367 ;; Registers used:
  3368 ;;		wreg, status,2, status,0, cstack
  3369 ;; Tracked objects:
  3370 ;;		On entry : 0/0
  3371 ;;		On exit  : 0/0
  3372 ;;		Unchanged: 0/0
  3373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3374 ;;      Params:         0       0       0       0       0       0       0       0       0
  3375 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3376 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3377 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3378 ;;Total ram usage:        2 bytes
  3379 ;; Hardware stack levels used: 1
  3380 ;; Hardware stack levels required when called: 6
  3381 ;; This function calls:
  3382 ;;		_HabilitaLCD
  3383 ;;		_RetardoLCD
  3384 ;; This function is called by:
  3385 ;;		_InicializaLCD
  3386 ;;		_BorraLCD
  3387 ;;		_EscribeLCD_c
  3388 ;;		_DireccionaLCD
  3389 ;; This function uses a non-reentrant model
  3390 ;;
  3391                           
  3392                           	psect	text21
  3393   00151E                     __ptext21:
  3394                           	callstack 0
  3395   00151E                     _EnviaDato:
  3396                           	callstack 21
  3397                           
  3398                           ;incstack = 0
  3399                           ;EnviaDato@a stored from wreg
  3400   00151E  6E13               	movwf	EnviaDato@a^0,c
  3401                           
  3402                           ;LibLCDXC8.h: 63: if(interfaz==4){
  3403   001520  0E04               	movlw	4
  3404   001522  1839               	xorwf	_interfaz^0,w,c
  3405   001524  A4D8               	btfss	status,2,c
  3406   001526  D017               	goto	l2050
  3407                           
  3408                           ;LibLCDXC8.h: 64: LATD=(LATD & 0b00001111) | (a & 0b11110000);
  3409   001528  C013  F012         	movff	EnviaDato@a,??_EnviaDato
  3410   00152C  0EF0               	movlw	240
  3411   00152E  1612               	andwf	??_EnviaDato^0,f,c
  3412   001530  508C               	movf	140,w,c	;volatile
  3413   001532  0B0F               	andlw	15
  3414   001534  1012               	iorwf	??_EnviaDato^0,w,c
  3415   001536  6E8C               	movwf	140,c	;volatile
  3416                           
  3417                           ;LibLCDXC8.h: 65: HabilitaLCD();
  3418   001538  ECE7  F00B         	call	_HabilitaLCD	;wreg free
  3419                           
  3420                           ;LibLCDXC8.h: 66: RetardoLCD(1);
  3421   00153C  0E01               	movlw	1
  3422   00153E  ECB2  F009         	call	_RetardoLCD
  3423                           
  3424                           ;LibLCDXC8.h: 67: LATD=(LATD & 0b00001111) | (a<<4);
  3425   001542  C013  F012         	movff	EnviaDato@a,??_EnviaDato
  3426   001546  3A12               	swapf	??_EnviaDato^0,f,c
  3427   001548  0EF0               	movlw	240
  3428   00154A  1612               	andwf	??_EnviaDato^0,f,c
  3429   00154C  508C               	movf	140,w,c	;volatile
  3430   00154E  0B0F               	andlw	15
  3431   001550  1012               	iorwf	??_EnviaDato^0,w,c
  3432   001552  6E8C               	movwf	140,c	;volatile
  3433                           
  3434                           ;LibLCDXC8.h: 70: }else if(interfaz==8){
  3435   001554  0012               	return	
  3436   001556                     l2050:
  3437   001556  0E08               	movlw	8
  3438   001558  1839               	xorwf	_interfaz^0,w,c
  3439   00155A  A4D8               	btfss	status,2,c
  3440   00155C  0012               	return	
  3441                           
  3442                           ;LibLCDXC8.h: 71: LATD=a;
  3443   00155E  C013  FF8C         	movff	EnviaDato@a,3980	;volatile
  3444   001562  0012               	return		;funcret
  3445   001564                     __end_of_EnviaDato:
  3446                           	callstack 0
  3447                           
  3448 ;; *************** function _RetardoLCD *****************
  3449 ;; Defined at:
  3450 ;;		line 295 in file "LibLCDXC8.h"
  3451 ;; Parameters:    Size  Location     Type
  3452 ;;  a               1    wreg     unsigned char 
  3453 ;; Auto vars:     Size  Location     Type
  3454 ;;  a               1   16[COMRAM] unsigned char 
  3455 ;; Return value:  Size  Location     Type
  3456 ;;                  1    wreg      void 
  3457 ;; Registers used:
  3458 ;;		wreg, status,2, status,0
  3459 ;; Tracked objects:
  3460 ;;		On entry : 0/0
  3461 ;;		On exit  : 0/0
  3462 ;;		Unchanged: 0/0
  3463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3464 ;;      Params:         0       0       0       0       0       0       0       0       0
  3465 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3466 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3467 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3468 ;;Total ram usage:        2 bytes
  3469 ;; Hardware stack levels used: 1
  3470 ;; Hardware stack levels required when called: 5
  3471 ;; This function calls:
  3472 ;;		Nothing
  3473 ;; This function is called by:
  3474 ;;		_EnviaDato
  3475 ;;		_InicializaLCD
  3476 ;;		_BorraLCD
  3477 ;;		_EscribeLCD_c
  3478 ;;		_DireccionaLCD
  3479 ;; This function uses a non-reentrant model
  3480 ;;
  3481                           
  3482                           	psect	text22
  3483   001364                     __ptext22:
  3484                           	callstack 0
  3485   001364                     _RetardoLCD:
  3486                           	callstack 22
  3487                           
  3488                           ;incstack = 0
  3489                           ;RetardoLCD@a stored from wreg
  3490   001364  6E11               	movwf	RetardoLCD@a^0,c
  3491                           
  3492                           ;LibLCDXC8.h: 296: switch(a){
  3493   001366  D023               	goto	l2038
  3494   001368                     l2028:
  3495   001368  0E27               	movlw	39
  3496   00136A  6E10               	movwf	??_RetardoLCD^0,c
  3497   00136C  0EF5               	movlw	245
  3498   00136E                     u2297:
  3499   00136E  2EE8               	decfsz	wreg,f,c
  3500   001370  D7FE               	bra	u2297
  3501   001372  2E10               	decfsz	??_RetardoLCD^0,f,c
  3502   001374  D7FC               	bra	u2297
  3503   001376  F000               	nop	
  3504                           
  3505                           ;LibLCDXC8.h: 299: break;
  3506   001378  0012               	return	
  3507   00137A                     l2030:
  3508   00137A  0E03               	movlw	3
  3509   00137C  6E10               	movwf	??_RetardoLCD^0,c
  3510   00137E  0E98               	movlw	152
  3511   001380                     u2307:
  3512   001380  2EE8               	decfsz	wreg,f,c
  3513   001382  D7FE               	bra	u2307
  3514   001384  2E10               	decfsz	??_RetardoLCD^0,f,c
  3515   001386  D7FC               	bra	u2307
  3516                           
  3517                           ;LibLCDXC8.h: 301: _delay((unsigned long)((640)*(8000000/4000000.0)));
  3518   001388  0EB6               	movlw	182
  3519   00138A                     u2317:
  3520   00138A  D000               	nop2	
  3521   00138C  D000               	nop2	
  3522   00138E  2EE8               	decfsz	wreg,f,c
  3523   001390  D7FC               	bra	u2317
  3524   001392  D000               	nop2	
  3525   001394  D000               	nop2	
  3526   001396  D000               	nop2	
  3527                           
  3528                           ;LibLCDXC8.h: 303: break;
  3529   001398  0012               	return	
  3530   00139A                     l2032:
  3531   00139A  0E42               	movlw	66
  3532   00139C                     u2327:
  3533   00139C  2EE8               	decfsz	wreg,f,c
  3534   00139E  D7FE               	bra	u2327
  3535   0013A0  D000               	nop2	
  3536                           
  3537                           ;LibLCDXC8.h: 306: break;
  3538   0013A2  0012               	return	
  3539   0013A4                     l2034:
  3540   0013A4  0E1A               	movlw	26
  3541   0013A6                     u2337:
  3542   0013A6  2EE8               	decfsz	wreg,f,c
  3543   0013A8  D7FE               	bra	u2337
  3544   0013AA  D000               	nop2	
  3545                           
  3546                           ;LibLCDXC8.h: 309: break;
  3547   0013AC  0012               	return	
  3548   0013AE                     l2038:
  3549   0013AE  5011               	movf	RetardoLCD@a^0,w,c
  3550                           
  3551                           ; Switch size 1, requested type "simple"
  3552                           ; Number of cases is 4, Range of values is 1 to 4
  3553                           ; switch strategies available:
  3554                           ; Name         Instructions Cycles
  3555                           ; simple_byte           13     7 (average)
  3556                           ;	Chosen strategy is simple_byte
  3557   0013B0  0A01               	xorlw	1	; case 1
  3558   0013B2  B4D8               	btfsc	status,2,c
  3559   0013B4  D7D9               	goto	l2028
  3560   0013B6  0A03               	xorlw	3	; case 2
  3561   0013B8  B4D8               	btfsc	status,2,c
  3562   0013BA  D7DF               	goto	l2030
  3563   0013BC  0A01               	xorlw	1	; case 3
  3564   0013BE  B4D8               	btfsc	status,2,c
  3565   0013C0  D7EC               	goto	l2032
  3566   0013C2  0A07               	xorlw	7	; case 4
  3567   0013C4  A4D8               	btfss	status,2,c
  3568   0013C6  0012               	return	
  3569   0013C8  D7ED               	goto	l2034
  3570   0013CA                     __end_of_RetardoLCD:
  3571                           	callstack 0
  3572                           
  3573 ;; *************** function _HabilitaLCD *****************
  3574 ;; Defined at:
  3575 ;;		line 108 in file "LibLCDXC8.h"
  3576 ;; Parameters:    Size  Location     Type
  3577 ;;		None
  3578 ;; Auto vars:     Size  Location     Type
  3579 ;;		None
  3580 ;; Return value:  Size  Location     Type
  3581 ;;                  1    wreg      void 
  3582 ;; Registers used:
  3583 ;;		wreg
  3584 ;; Tracked objects:
  3585 ;;		On entry : 0/0
  3586 ;;		On exit  : 0/0
  3587 ;;		Unchanged: 0/0
  3588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3589 ;;      Params:         0       0       0       0       0       0       0       0       0
  3590 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3591 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3592 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3593 ;;Total ram usage:        0 bytes
  3594 ;; Hardware stack levels used: 1
  3595 ;; Hardware stack levels required when called: 5
  3596 ;; This function calls:
  3597 ;;		Nothing
  3598 ;; This function is called by:
  3599 ;;		_EnviaDato
  3600 ;;		_InicializaLCD
  3601 ;;		_BorraLCD
  3602 ;;		_EscribeLCD_c
  3603 ;;		_DireccionaLCD
  3604 ;; This function uses a non-reentrant model
  3605 ;;
  3606                           
  3607                           	psect	text23
  3608   0017CE                     __ptext23:
  3609                           	callstack 0
  3610   0017CE                     _HabilitaLCD:
  3611                           	callstack 22
  3612                           
  3613                           ;LibLCDXC8.h: 110: LATE2=1;
  3614                           
  3615                           ;incstack = 0
  3616   0017CE  848D               	bsf	3981,2,c	;volatile
  3617                           
  3618                           ;LibLCDXC8.h: 111: _delay((unsigned long)((40)*(8000000/4000000.0)));
  3619   0017D0  0E1A               	movlw	26
  3620   0017D2                     u2347:
  3621   0017D2  2EE8               	decfsz	wreg,f,c
  3622   0017D4  D7FE               	bra	u2347
  3623   0017D6  D000               	nop2	
  3624                           
  3625                           ;LibLCDXC8.h: 113: LATE2=0;
  3626   0017D8  948D               	bcf	3981,2,c	;volatile
  3627   0017DA  0012               	return		;funcret
  3628   0017DC                     __end_of_HabilitaLCD:
  3629                           	callstack 0
  3630                           
  3631 ;; *************** function _ConvertirUnidades *****************
  3632 ;; Defined at:
  3633 ;;		line 331 in file "Proyecto.c"
  3634 ;; Parameters:    Size  Location     Type
  3635 ;;  canal           1    wreg     unsigned char 
  3636 ;; Auto vars:     Size  Location     Type
  3637 ;;  canal           1   15[COMRAM] unsigned char 
  3638 ;; Return value:  Size  Location     Type
  3639 ;;                  2  114[None  ] unsigned int 
  3640 ;; Registers used:
  3641 ;;		wreg, status,2, status,0
  3642 ;; Tracked objects:
  3643 ;;		On entry : 0/0
  3644 ;;		On exit  : 0/0
  3645 ;;		Unchanged: 0/0
  3646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3647 ;;      Params:         0       0       0       0       0       0       0       0       0
  3648 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3649 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3650 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3651 ;;Total ram usage:        1 bytes
  3652 ;; Hardware stack levels used: 1
  3653 ;; Hardware stack levels required when called: 5
  3654 ;; This function calls:
  3655 ;;		Nothing
  3656 ;; This function is called by:
  3657 ;;		_main
  3658 ;; This function uses a non-reentrant model
  3659 ;;
  3660                           
  3661                           	psect	text24
  3662   001796                     __ptext24:
  3663                           	callstack 0
  3664   001796                     _ConvertirUnidades:
  3665                           	callstack 25
  3666                           
  3667                           ;incstack = 0
  3668                           ;ConvertirUnidades@canal stored from wreg
  3669   001796  6E10               	movwf	ConvertirUnidades@canal^0,c
  3670                           
  3671                           ;Proyecto.c: 332: ADCON0 = 0b00000001 | (canal << 2);
  3672   001798  4410               	rlncf	ConvertirUnidades@canal^0,w,c
  3673   00179A  46E8               	rlncf	wreg,f,c
  3674   00179C  0BFC               	andlw	252
  3675   00179E  0901               	iorlw	1
  3676   0017A0  6EC2               	movwf	194,c	;volatile
  3677                           
  3678                           ;Proyecto.c: 333: GO = 1;
  3679   0017A2  82C2               	bsf	4034,1,c	;volatile
  3680   0017A4                     l337:
  3681   0017A4  A2C2               	btfss	4034,1,c	;volatile
  3682   0017A6  0012               	return	
  3683   0017A8  D7FD               	goto	l337
  3684   0017AA                     __end_of_ConvertirUnidades:
  3685                           	callstack 0
  3686                           
  3687 ;; *************** function _ISR *****************
  3688 ;; Defined at:
  3689 ;;		line 393 in file "Proyecto.c"
  3690 ;; Parameters:    Size  Location     Type
  3691 ;;		None
  3692 ;; Auto vars:     Size  Location     Type
  3693 ;;		None
  3694 ;; Return value:  Size  Location     Type
  3695 ;;                  1    wreg      void 
  3696 ;; Registers used:
  3697 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3698 ;; Tracked objects:
  3699 ;;		On entry : 0/0
  3700 ;;		On exit  : 0/0
  3701 ;;		Unchanged: 0/0
  3702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3703 ;;      Params:         0       0       0       0       0       0       0       0       0
  3704 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3705 ;;      Temps:          6       0       0       0       0       0       0       0       0
  3706 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3707 ;;Total ram usage:        6 bytes
  3708 ;; Hardware stack levels used: 1
  3709 ;; Hardware stack levels required when called: 4
  3710 ;; This function calls:
  3711 ;;		_LeerTeclado
  3712 ;;		i2_BorraLCD
  3713 ;;		i2_EscribeLCD_c
  3714 ;;		i2_MensajeLCD_Word
  3715 ;; This function is called by:
  3716 ;;		Interrupt level 2
  3717 ;; This function uses a non-reentrant model
  3718 ;;
  3719                           
  3720                           	psect	intcode
  3721   000008                     __pintcode:
  3722                           	callstack 0
  3723   000008                     _ISR:
  3724                           	callstack 21
  3725                           
  3726                           ;incstack = 0
  3727   000008  824E               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  3728   00000A  EDBF  F006         	call	int_func,f	;refresh shadow registers
  3729                           
  3730                           	psect	intcode_body
  3731   000D7E                     __pintcode_body:
  3732                           	callstack 21
  3733   000D7E                     int_func:
  3734                           	callstack 21
  3735   000D7E  0006               	pop		; remove dummy address from shadow register refresh
  3736   000D80  CFF6 F00C          	movff	tblptrl,??_ISR+2
  3737   000D84  CFF7 F00D          	movff	tblptrh,??_ISR+3
  3738   000D88  CFF8 F00E          	movff	tblptru,??_ISR+4
  3739   000D8C  CFF5 F00F          	movff	tablat,??_ISR+5
  3740                           
  3741                           ;Proyecto.c: 394: if(TMR0IF == 1){
  3742   000D90  A4F2               	btfss	4082,2,c	;volatile
  3743   000D92  D01E               	goto	i2l373
  3744                           
  3745                           ;Proyecto.c: 395: TMR0IF = 0;
  3746   000D94  94F2               	bcf	4082,2,c	;volatile
  3747                           
  3748                           ;Proyecto.c: 396: TMR0 = 64286;
  3749   000D96  0EFB               	movlw	251
  3750   000D98  6ED7               	movwf	215,c	;volatile
  3751   000D9A  0E1E               	movlw	30
  3752   000D9C  6ED6               	movwf	214,c	;volatile
  3753                           
  3754                           ;Proyecto.c: 397: if(RE0 == 1){
  3755   000D9E  A084               	btfss	3972,0,c	;volatile
  3756   000DA0  D017               	goto	i2l373
  3757                           
  3758                           ;Proyecto.c: 398: CCP1CON = 0;
  3759   000DA2  0E00               	movlw	0
  3760   000DA4  6EBD               	movwf	189,c	;volatile
  3761                           
  3762                           ;Proyecto.c: 399: RC2 = 0;
  3763   000DA6  9482               	bcf	3970,2,c	;volatile
  3764                           
  3765                           ;Proyecto.c: 400: _delay((unsigned long)((200)*(8000000/4000.0)));
  3766   000DA8  0E03               	movlw	3
  3767   000DAA  6E0B               	movwf	(??_ISR+1)^0,c
  3768   000DAC  0E08               	movlw	8
  3769   000DAE  6E0A               	movwf	??_ISR^0,c
  3770   000DB0  0E77               	movlw	119
  3771   000DB2                     i2u235_47:
  3772   000DB2  2EE8               	decfsz	wreg,f,c
  3773   000DB4  D7FE               	bra	i2u235_47
  3774   000DB6  2E0A               	decfsz	??_ISR^0,f,c
  3775   000DB8  D7FC               	bra	i2u235_47
  3776   000DBA  2E0B               	decfsz	(??_ISR+1)^0,f,c
  3777   000DBC  D7FA               	bra	i2u235_47
  3778   000DBE  F000               	nop	
  3779                           
  3780                           ;Proyecto.c: 401: BorraLCD();
  3781   000DC0  ECD5  F00B         	call	i2_BorraLCD	;wreg free
  3782                           
  3783                           ;Proyecto.c: 402: MensajeLCD_Word("STOPED");
  3784   000DC4  0E38               	movlw	low STR_9
  3785   000DC6  6E06               	movwf	i2MensajeLCD_Word@a^0,c
  3786   000DC8  EC68  F00A         	call	i2_MensajeLCD_Word	;wreg free
  3787   000DCC  0003               	sleep		;# 
  3788   000DCE                     i2l375:
  3789   000DCE  D7FF               	goto	i2l375
  3790   000DD0                     i2l373:
  3791                           
  3792                           ;Proyecto.c: 405: };Proyecto.c: 406: };Proyecto.c: 407: if(RBIF==1){
  3793   000DD0  A0F2               	btfss	4082,0,c	;volatile
  3794   000DD2  D061               	goto	i2l2832
  3795                           
  3796                           ;Proyecto.c: 409: if(PORTB!=0b11110000 && teclaIf == 1){
  3797   000DD4  0EF0               	movlw	240
  3798   000DD6  1881               	xorwf	129,w,c	;volatile
  3799   000DD8  B4D8               	btfsc	status,2,c
  3800   000DDA  D055               	goto	i2l2828
  3801   000DDC  0444               	decf	_teclaIf^0,w,c
  3802   000DDE  1045               	iorwf	(_teclaIf+1)^0,w,c
  3803   000DE0  A4D8               	btfss	status,2,c
  3804   000DE2  D051               	goto	i2l2828
  3805                           
  3806                           ;Proyecto.c: 410: Tecla=0;
  3807   000DE4  0E00               	movlw	0
  3808   000DE6  6E48               	movwf	_Tecla^0,c
  3809                           
  3810                           ;Proyecto.c: 411: LATB=0b11111110;
  3811   000DE8  0EFE               	movlw	254
  3812   000DEA  6E8A               	movwf	138,c	;volatile
  3813                           
  3814                           ;Proyecto.c: 412: if(RB4==0) Tecla=16;
  3815   000DEC  B881               	btfsc	3969,4,c	;volatile
  3816   000DEE  D002               	goto	i2l380
  3817   000DF0  0E10               	movlw	16
  3818   000DF2  D041               	goto	L18
  3819   000DF4                     i2l380:
  3820                           
  3821                           ;Proyecto.c: 413: else if(RB5==0) Tecla=12;
  3822   000DF4  BA81               	btfsc	3969,5,c	;volatile
  3823   000DF6  D002               	goto	i2l382
  3824   000DF8  0E0C               	movlw	12
  3825   000DFA  D03D               	goto	L18
  3826   000DFC                     i2l382:
  3827                           
  3828                           ;Proyecto.c: 414: else if(RB6==0) Tecla=8;
  3829   000DFC  BC81               	btfsc	3969,6,c	;volatile
  3830   000DFE  D002               	goto	i2l384
  3831   000E00  0E08               	movlw	8
  3832   000E02  D039               	goto	L18
  3833   000E04                     i2l384:
  3834                           
  3835                           ;Proyecto.c: 415: else if(RB7==0) Tecla=4;
  3836   000E04  BE81               	btfsc	3969,7,c	;volatile
  3837   000E06  D002               	goto	i2l2788
  3838   000E08  0E04               	movlw	4
  3839   000E0A  D035               	goto	L18
  3840   000E0C                     i2l2788:
  3841                           
  3842                           ;Proyecto.c: 416: else{;Proyecto.c: 417: LATB=0b11111101;
  3843   000E0C  0EFD               	movlw	253
  3844   000E0E  6E8A               	movwf	138,c	;volatile
  3845                           
  3846                           ;Proyecto.c: 418: if(RB4==0) Tecla=15;
  3847   000E10  B881               	btfsc	3969,4,c	;volatile
  3848   000E12  D002               	goto	i2l388
  3849   000E14  0E0F               	movlw	15
  3850   000E16  D02F               	goto	L18
  3851   000E18                     i2l388:
  3852                           
  3853                           ;Proyecto.c: 419: else if(RB5==0) Tecla=11;
  3854   000E18  BA81               	btfsc	3969,5,c	;volatile
  3855   000E1A  D002               	goto	i2l390
  3856   000E1C  0E0B               	movlw	11
  3857   000E1E  D02B               	goto	L18
  3858   000E20                     i2l390:
  3859                           
  3860                           ;Proyecto.c: 420: else if(RB6==0) Tecla=7;
  3861   000E20  BC81               	btfsc	3969,6,c	;volatile
  3862   000E22  D002               	goto	i2l392
  3863   000E24  0E07               	movlw	7
  3864   000E26  D027               	goto	L18
  3865   000E28                     i2l392:
  3866                           
  3867                           ;Proyecto.c: 421: else if(RB7==0) Tecla=3;
  3868   000E28  BE81               	btfsc	3969,7,c	;volatile
  3869   000E2A  D002               	goto	i2l2800
  3870   000E2C  0E03               	movlw	3
  3871   000E2E  D023               	goto	L18
  3872   000E30                     i2l2800:
  3873                           
  3874                           ;Proyecto.c: 422: else{;Proyecto.c: 423: LATB=0b11111011;
  3875   000E30  0EFB               	movlw	251
  3876   000E32  6E8A               	movwf	138,c	;volatile
  3877                           
  3878                           ;Proyecto.c: 424: if(RB4==0) Tecla=14;
  3879   000E34  B881               	btfsc	3969,4,c	;volatile
  3880   000E36  D002               	goto	i2l396
  3881   000E38  0E0E               	movlw	14
  3882   000E3A  D01D               	goto	L18
  3883   000E3C                     i2l396:
  3884                           
  3885                           ;Proyecto.c: 425: else if(RB5==0) Tecla=10;
  3886   000E3C  BA81               	btfsc	3969,5,c	;volatile
  3887   000E3E  D002               	goto	i2l398
  3888   000E40  0E0A               	movlw	10
  3889   000E42  D019               	goto	L18
  3890   000E44                     i2l398:
  3891                           
  3892                           ;Proyecto.c: 426: else if(RB6==0) Tecla=6;
  3893   000E44  BC81               	btfsc	3969,6,c	;volatile
  3894   000E46  D002               	goto	i2l400
  3895   000E48  0E06               	movlw	6
  3896   000E4A  D015               	goto	L18
  3897   000E4C                     i2l400:
  3898                           
  3899                           ;Proyecto.c: 427: else if(RB7==0) Tecla=2;
  3900   000E4C  BE81               	btfsc	3969,7,c	;volatile
  3901   000E4E  D002               	goto	i2l2812
  3902   000E50  0E02               	movlw	2
  3903   000E52  D011               	goto	L18
  3904   000E54                     i2l2812:
  3905                           
  3906                           ;Proyecto.c: 428: else{;Proyecto.c: 429: LATB=0b11110111;
  3907   000E54  0EF7               	movlw	247
  3908   000E56  6E8A               	movwf	138,c	;volatile
  3909                           
  3910                           ;Proyecto.c: 430: if(RB4==0) Tecla=13;
  3911   000E58  B881               	btfsc	3969,4,c	;volatile
  3912   000E5A  D002               	goto	i2l404
  3913   000E5C  0E0D               	movlw	13
  3914   000E5E  D00B               	goto	L18
  3915   000E60                     i2l404:
  3916                           
  3917                           ;Proyecto.c: 431: else if(RB5==0) Tecla=9;
  3918   000E60  BA81               	btfsc	3969,5,c	;volatile
  3919   000E62  D002               	goto	i2l406
  3920   000E64  0E09               	movlw	9
  3921   000E66  D007               	goto	L18
  3922   000E68                     i2l406:
  3923                           
  3924                           ;Proyecto.c: 432: else if(RB6==0) Tecla=5;
  3925   000E68  BC81               	btfsc	3969,6,c	;volatile
  3926   000E6A  D002               	goto	i2l408
  3927   000E6C  0E05               	movlw	5
  3928   000E6E  D003               	goto	L18
  3929   000E70                     i2l408:
  3930                           
  3931                           ;Proyecto.c: 433: else if(RB7==0) Tecla=1;
  3932   000E70  BE81               	btfsc	3969,7,c	;volatile
  3933   000E72  D002               	goto	i2l405
  3934   000E74  0E01               	movlw	1
  3935   000E76                     L18:
  3936   000E76  6E48               	movwf	_Tecla^0,c
  3937   000E78                     i2l405:
  3938                           
  3939                           ;Proyecto.c: 434: };Proyecto.c: 435: };Proyecto.c: 436: };Proyecto.c: 437: LATB=0b111100
      +                          00;
  3940   000E78  0EF0               	movlw	240
  3941   000E7A  6E8A               	movwf	138,c	;volatile
  3942                           
  3943                           ;Proyecto.c: 439: LeerTeclado();
  3944   000E7C  EC47  F008         	call	_LeerTeclado	;wreg free
  3945                           
  3946                           ;Proyecto.c: 440: EscribeLCD_c(Tecla);
  3947   000E80  5048               	movf	_Tecla^0,w,c
  3948   000E82  ECB6  F00B         	call	i2_EscribeLCD_c
  3949   000E86                     i2l2828:
  3950                           
  3951                           ;Proyecto.c: 441: };Proyecto.c: 442: RBIF=0;
  3952   000E86  90F2               	bcf	4082,0,c	;volatile
  3953                           
  3954                           ;Proyecto.c: 443: _delay((unsigned long)((50)*(8000000/4000.0)));
  3955   000E88  0E82               	movlw	130
  3956   000E8A  6E0A               	movwf	??_ISR^0,c
  3957   000E8C  0EDE               	movlw	222
  3958   000E8E                     i2u236_47:
  3959   000E8E  2EE8               	decfsz	wreg,f,c
  3960   000E90  D7FE               	bra	i2u236_47
  3961   000E92  2E0A               	decfsz	??_ISR^0,f,c
  3962   000E94  D7FC               	bra	i2u236_47
  3963   000E96                     i2l2832:
  3964                           
  3965                           ;Proyecto.c: 445: };Proyecto.c: 446: if(TMR1IF==1){
  3966   000E96  A09E               	btfss	3998,0,c	;volatile
  3967   000E98  D00D               	goto	i2l412
  3968                           
  3969                           ;Proyecto.c: 447: TMR1IF=0;
  3970   000E9A  909E               	bcf	3998,0,c	;volatile
  3971                           
  3972                           ;Proyecto.c: 448: TMR1=60536;
  3973   000E9C  0EEC               	movlw	236
  3974   000E9E  6ECF               	movwf	207,c	;volatile
  3975   000EA0  0E78               	movlw	120
  3976   000EA2  6ECE               	movwf	206,c	;volatile
  3977                           
  3978                           ;Proyecto.c: 449: CCPR2=60536+a;
  3979   000EA4  0E78               	movlw	120
  3980   000EA6  2436               	addwf	_a^0,w,c
  3981   000EA8  6EBB               	movwf	187,c	;volatile
  3982   000EAA  0EEC               	movlw	236
  3983   000EAC  2037               	addwfc	(_a+1)^0,w,c
  3984   000EAE  6EBC               	movwf	188,c	;volatile
  3985                           
  3986                           ;Proyecto.c: 450: CCP2CON=0b00001001;
  3987   000EB0  0E09               	movlw	9
  3988   000EB2  6EBA               	movwf	186,c	;volatile
  3989   000EB4                     i2l412:
  3990   000EB4  C00F  FFF5         	movff	??_ISR+5,tablat
  3991   000EB8  C00E  FFF8         	movff	??_ISR+4,tblptru
  3992   000EBC  C00D  FFF7         	movff	??_ISR+3,tblptrh
  3993   000EC0  C00C  FFF6         	movff	??_ISR+2,tblptrl
  3994   000EC4  924E               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  3995   000EC6  0011               	retfie		f
  3996   000EC8                     __end_of_ISR:
  3997                           	callstack 0
  3998                           
  3999 ;; *************** function i2_MensajeLCD_Word *****************
  4000 ;; Defined at:
  4001 ;;		line 247 in file "LibLCDXC8.h"
  4002 ;; Parameters:    Size  Location     Type
  4003 ;;  a               1    5[COMRAM] PTR unsigned char 
  4004 ;;		 -> STR_9(7), STR_8(6), STR_7(6), STR_6(23), 
  4005 ;;		 -> STR_5(11), STR_4(23), STR_3(10), STR_2(17), 
  4006 ;;		 -> STR_1(11), 
  4007 ;; Auto vars:     Size  Location     Type
  4008 ;;  i               2    7[COMRAM] int 
  4009 ;; Return value:  Size  Location     Type
  4010 ;;                  1    wreg      void 
  4011 ;; Registers used:
  4012 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4013 ;; Tracked objects:
  4014 ;;		On entry : 0/0
  4015 ;;		On exit  : 0/0
  4016 ;;		Unchanged: 0/0
  4017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4018 ;;      Params:         1       0       0       0       0       0       0       0       0
  4019 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4020 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4021 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4022 ;;Total ram usage:        4 bytes
  4023 ;; Hardware stack levels used: 1
  4024 ;; Hardware stack levels required when called: 3
  4025 ;; This function calls:
  4026 ;;		i2_EscribeLCD_c
  4027 ;; This function is called by:
  4028 ;;		_ISR
  4029 ;; This function uses a non-reentrant model
  4030 ;;
  4031                           
  4032                           	psect	text26
  4033   0014D0                     __ptext26:
  4034                           	callstack 0
  4035   0014D0                     i2_MensajeLCD_Word:
  4036                           	callstack 21
  4037                           
  4038                           ;LibLCDXC8.h: 251: for(int i = 0; i<16; i++){
  4039                           
  4040                           ;incstack = 0
  4041   0014D0  0E00               	movlw	0
  4042   0014D2  6E09               	movwf	(i2MensajeLCD_Word@i+1)^0,c
  4043   0014D4  0E00               	movlw	0
  4044   0014D6  6E08               	movwf	i2MensajeLCD_Word@i^0,c
  4045   0014D8                     i2l2614:
  4046                           
  4047                           ;LibLCDXC8.h: 252: if(a[i] == (0)){
  4048   0014D8  5006               	movf	i2MensajeLCD_Word@a^0,w,c
  4049   0014DA  2408               	addwf	i2MensajeLCD_Word@i^0,w,c
  4050   0014DC  6E07               	movwf	??i2_MensajeLCD_Word^0,c
  4051   0014DE  C007  FFF6         	movff	??i2_MensajeLCD_Word,tblptrl
  4052   0014E2                     	if	1	;There is more than 1 active tblptr byte
  4053   0014E2  0E08               	movlw	high __smallconst
  4054   0014E4  6EF7               	movwf	tblptrh,c
  4055   0014E6                     	endif
  4056   0014E6                     	if	0	;tblptru may be non-zero
  4057   0014E6                     	endif
  4058   0014E6                     	if	0	;tblptru may be non-zero
  4059   0014E6                     	endif
  4060   0014E6  0008               	tblrd		*
  4061   0014E8  50F5               	movf	tablat,w,c
  4062   0014EA  0900               	iorlw	0
  4063   0014EC  B4D8               	btfsc	status,2,c
  4064   0014EE  0012               	return	
  4065                           
  4066                           ;LibLCDXC8.h: 254: };LibLCDXC8.h: 255: EscribeLCD_c(a[i]);
  4067   0014F0  5006               	movf	i2MensajeLCD_Word@a^0,w,c
  4068   0014F2  2408               	addwf	i2MensajeLCD_Word@i^0,w,c
  4069   0014F4  6E07               	movwf	??i2_MensajeLCD_Word^0,c
  4070   0014F6  C007  FFF6         	movff	??i2_MensajeLCD_Word,tblptrl
  4071   0014FA                     	if	1	;There is more than 1 active tblptr byte
  4072   0014FA  0E08               	movlw	high __smallconst
  4073   0014FC  6EF7               	movwf	tblptrh,c
  4074   0014FE                     	endif
  4075   0014FE                     	if	0	;tblptru may be non-zero
  4076   0014FE                     	endif
  4077   0014FE                     	if	0	;tblptru may be non-zero
  4078   0014FE                     	endif
  4079   0014FE  0008               	tblrd		*
  4080   001500  50F5               	movf	tablat,w,c
  4081   001502  ECB6  F00B         	call	i2_EscribeLCD_c
  4082   001506  4A08               	infsnz	i2MensajeLCD_Word@i^0,f,c
  4083   001508  2A09               	incf	(i2MensajeLCD_Word@i+1)^0,f,c
  4084   00150A  BE09               	btfsc	(i2MensajeLCD_Word@i+1)^0,7,c
  4085   00150C  D7E5               	goto	i2l2614
  4086   00150E  5009               	movf	(i2MensajeLCD_Word@i+1)^0,w,c
  4087   001510  E105               	bnz	i2u184_40
  4088   001512  0E10               	movlw	16
  4089   001514  5C08               	subwf	i2MensajeLCD_Word@i^0,w,c
  4090   001516  B0D8               	btfsc	status,0,c
  4091   001518  0012               	return	
  4092   00151A  D7DE               	goto	i2l2614
  4093   00151C                     i2u184_40:
  4094   00151C  0012               	return		;funcret
  4095   00151E                     __end_ofi2_MensajeLCD_Word:
  4096                           	callstack 0
  4097                           
  4098 ;; *************** function i2_EscribeLCD_c *****************
  4099 ;; Defined at:
  4100 ;;		line 148 in file "LibLCDXC8.h"
  4101 ;; Parameters:    Size  Location     Type
  4102 ;;  a               1    wreg     unsigned char 
  4103 ;; Auto vars:     Size  Location     Type
  4104 ;;  a               1    4[COMRAM] unsigned char 
  4105 ;; Return value:  Size  Location     Type
  4106 ;;                  1    wreg      void 
  4107 ;; Registers used:
  4108 ;;		wreg, status,2, status,0, cstack
  4109 ;; Tracked objects:
  4110 ;;		On entry : 0/0
  4111 ;;		On exit  : 0/0
  4112 ;;		Unchanged: 0/0
  4113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4114 ;;      Params:         0       0       0       0       0       0       0       0       0
  4115 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4116 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4117 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4118 ;;Total ram usage:        1 bytes
  4119 ;; Hardware stack levels used: 1
  4120 ;; Hardware stack levels required when called: 2
  4121 ;; This function calls:
  4122 ;;		i2_EnviaDato
  4123 ;;		i2_HabilitaLCD
  4124 ;;		i2_RetardoLCD
  4125 ;; This function is called by:
  4126 ;;		_ISR
  4127 ;;		i2_MensajeLCD_Word
  4128 ;; This function uses a non-reentrant model
  4129 ;;
  4130                           
  4131                           	psect	text27
  4132   00176C                     __ptext27:
  4133                           	callstack 0
  4134   00176C                     i2_EscribeLCD_c:
  4135                           	callstack 21
  4136                           
  4137                           ;incstack = 0
  4138                           ;i2EscribeLCD_c@a stored from wreg
  4139   00176C  6E05               	movwf	i2EscribeLCD_c@a^0,c
  4140                           
  4141                           ;LibLCDXC8.h: 152: LATE1=1;
  4142   00176E  828D               	bsf	3981,1,c	;volatile
  4143                           
  4144                           ;LibLCDXC8.h: 153: EnviaDato(a);
  4145   001770  5005               	movf	i2EscribeLCD_c@a^0,w,c
  4146   001772  ECB2  F00A         	call	i2_EnviaDato
  4147                           
  4148                           ;LibLCDXC8.h: 154: HabilitaLCD();
  4149   001776  ECEE  F00B         	call	i2_HabilitaLCD	;wreg free
  4150                           
  4151                           ;LibLCDXC8.h: 155: RetardoLCD(4);
  4152   00177A  0E04               	movlw	4
  4153   00177C  ECE5  F009         	call	i2_RetardoLCD
  4154   001780  0012               	return		;funcret
  4155   001782                     __end_ofi2_EscribeLCD_c:
  4156                           	callstack 0
  4157                           
  4158 ;; *************** function i2_BorraLCD *****************
  4159 ;; Defined at:
  4160 ;;		line 115 in file "LibLCDXC8.h"
  4161 ;; Parameters:    Size  Location     Type
  4162 ;;		None
  4163 ;; Auto vars:     Size  Location     Type
  4164 ;;		None
  4165 ;; Return value:  Size  Location     Type
  4166 ;;                  1    wreg      void 
  4167 ;; Registers used:
  4168 ;;		wreg, status,2, status,0, cstack
  4169 ;; Tracked objects:
  4170 ;;		On entry : 0/0
  4171 ;;		On exit  : 0/0
  4172 ;;		Unchanged: 0/0
  4173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4174 ;;      Params:         0       0       0       0       0       0       0       0       0
  4175 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4176 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4177 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4178 ;;Total ram usage:        0 bytes
  4179 ;; Hardware stack levels used: 1
  4180 ;; Hardware stack levels required when called: 2
  4181 ;; This function calls:
  4182 ;;		i2_EnviaDato
  4183 ;;		i2_HabilitaLCD
  4184 ;;		i2_RetardoLCD
  4185 ;; This function is called by:
  4186 ;;		_ISR
  4187 ;; This function uses a non-reentrant model
  4188 ;;
  4189                           
  4190                           	psect	text28
  4191   0017AA                     __ptext28:
  4192                           	callstack 0
  4193   0017AA                     i2_BorraLCD:
  4194                           	callstack 22
  4195                           
  4196                           ;LibLCDXC8.h: 117: LATE1=0;
  4197                           
  4198                           ;incstack = 0
  4199   0017AA  928D               	bcf	3981,1,c	;volatile
  4200                           
  4201                           ;LibLCDXC8.h: 118: EnviaDato(0x01);
  4202   0017AC  0E01               	movlw	1
  4203   0017AE  ECB2  F00A         	call	i2_EnviaDato
  4204                           
  4205                           ;LibLCDXC8.h: 119: HabilitaLCD();
  4206   0017B2  ECEE  F00B         	call	i2_HabilitaLCD	;wreg free
  4207                           
  4208                           ;LibLCDXC8.h: 120: RetardoLCD(2);
  4209   0017B6  0E02               	movlw	2
  4210   0017B8  ECE5  F009         	call	i2_RetardoLCD
  4211   0017BC  0012               	return		;funcret
  4212   0017BE                     __end_ofi2_BorraLCD:
  4213                           	callstack 0
  4214                           
  4215 ;; *************** function i2_EnviaDato *****************
  4216 ;; Defined at:
  4217 ;;		line 62 in file "LibLCDXC8.h"
  4218 ;; Parameters:    Size  Location     Type
  4219 ;;  a               1    wreg     unsigned char 
  4220 ;; Auto vars:     Size  Location     Type
  4221 ;;  a               1    3[COMRAM] unsigned char 
  4222 ;; Return value:  Size  Location     Type
  4223 ;;                  1    wreg      void 
  4224 ;; Registers used:
  4225 ;;		wreg, status,2, status,0, cstack
  4226 ;; Tracked objects:
  4227 ;;		On entry : 0/0
  4228 ;;		On exit  : 0/0
  4229 ;;		Unchanged: 0/0
  4230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4231 ;;      Params:         0       0       0       0       0       0       0       0       0
  4232 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4233 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4234 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4235 ;;Total ram usage:        2 bytes
  4236 ;; Hardware stack levels used: 1
  4237 ;; Hardware stack levels required when called: 1
  4238 ;; This function calls:
  4239 ;;		i2_HabilitaLCD
  4240 ;;		i2_RetardoLCD
  4241 ;; This function is called by:
  4242 ;;		i2_BorraLCD
  4243 ;;		i2_EscribeLCD_c
  4244 ;; This function uses a non-reentrant model
  4245 ;;
  4246                           
  4247                           	psect	text29
  4248   001564                     __ptext29:
  4249                           	callstack 0
  4250   001564                     i2_EnviaDato:
  4251                           	callstack 21
  4252                           
  4253                           ;incstack = 0
  4254                           ;i2EnviaDato@a stored from wreg
  4255   001564  6E04               	movwf	i2EnviaDato@a^0,c
  4256                           
  4257                           ;LibLCDXC8.h: 63: if(interfaz==4){
  4258   001566  0E04               	movlw	4
  4259   001568  1839               	xorwf	_interfaz^0,w,c
  4260   00156A  A4D8               	btfss	status,2,c
  4261   00156C  D017               	goto	i2l2110
  4262                           
  4263                           ;LibLCDXC8.h: 64: LATD=(LATD & 0b00001111) | (a & 0b11110000);
  4264   00156E  C004  F003         	movff	i2EnviaDato@a,??i2_EnviaDato
  4265   001572  0EF0               	movlw	240
  4266   001574  1603               	andwf	??i2_EnviaDato^0,f,c
  4267   001576  508C               	movf	140,w,c	;volatile
  4268   001578  0B0F               	andlw	15
  4269   00157A  1003               	iorwf	??i2_EnviaDato^0,w,c
  4270   00157C  6E8C               	movwf	140,c	;volatile
  4271                           
  4272                           ;LibLCDXC8.h: 65: HabilitaLCD();
  4273   00157E  ECEE  F00B         	call	i2_HabilitaLCD	;wreg free
  4274                           
  4275                           ;LibLCDXC8.h: 66: RetardoLCD(1);
  4276   001582  0E01               	movlw	1
  4277   001584  ECE5  F009         	call	i2_RetardoLCD
  4278                           
  4279                           ;LibLCDXC8.h: 67: LATD=(LATD & 0b00001111) | (a<<4);
  4280   001588  C004  F003         	movff	i2EnviaDato@a,??i2_EnviaDato
  4281   00158C  3A03               	swapf	??i2_EnviaDato^0,f,c
  4282   00158E  0EF0               	movlw	240
  4283   001590  1603               	andwf	??i2_EnviaDato^0,f,c
  4284   001592  508C               	movf	140,w,c	;volatile
  4285   001594  0B0F               	andlw	15
  4286   001596  1003               	iorwf	??i2_EnviaDato^0,w,c
  4287   001598  6E8C               	movwf	140,c	;volatile
  4288                           
  4289                           ;LibLCDXC8.h: 70: }else if(interfaz==8){
  4290   00159A  0012               	return	
  4291   00159C                     i2l2110:
  4292   00159C  0E08               	movlw	8
  4293   00159E  1839               	xorwf	_interfaz^0,w,c
  4294   0015A0  A4D8               	btfss	status,2,c
  4295   0015A2  0012               	return	
  4296                           
  4297                           ;LibLCDXC8.h: 71: LATD=a;
  4298   0015A4  C004  FF8C         	movff	i2EnviaDato@a,3980	;volatile
  4299   0015A8  0012               	return		;funcret
  4300   0015AA                     __end_ofi2_EnviaDato:
  4301                           	callstack 0
  4302                           
  4303 ;; *************** function i2_RetardoLCD *****************
  4304 ;; Defined at:
  4305 ;;		line 295 in file "LibLCDXC8.h"
  4306 ;; Parameters:    Size  Location     Type
  4307 ;;  a               1    wreg     unsigned char 
  4308 ;; Auto vars:     Size  Location     Type
  4309 ;;  a               1    1[COMRAM] unsigned char 
  4310 ;; Return value:  Size  Location     Type
  4311 ;;                  1    wreg      void 
  4312 ;; Registers used:
  4313 ;;		wreg, status,2, status,0
  4314 ;; Tracked objects:
  4315 ;;		On entry : 0/0
  4316 ;;		On exit  : 0/0
  4317 ;;		Unchanged: 0/0
  4318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4319 ;;      Params:         0       0       0       0       0       0       0       0       0
  4320 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4321 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4322 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4323 ;;Total ram usage:        2 bytes
  4324 ;; Hardware stack levels used: 1
  4325 ;; This function calls:
  4326 ;;		Nothing
  4327 ;; This function is called by:
  4328 ;;		i2_EnviaDato
  4329 ;;		i2_BorraLCD
  4330 ;;		i2_EscribeLCD_c
  4331 ;; This function uses a non-reentrant model
  4332 ;;
  4333                           
  4334                           	psect	text30
  4335   0013CA                     __ptext30:
  4336                           	callstack 0
  4337   0013CA                     i2_RetardoLCD:
  4338                           	callstack 22
  4339                           
  4340                           ;incstack = 0
  4341                           ;i2RetardoLCD@a stored from wreg
  4342   0013CA  6E02               	movwf	i2RetardoLCD@a^0,c
  4343                           
  4344                           ;LibLCDXC8.h: 296: switch(a){
  4345   0013CC  D023               	goto	i2l2072
  4346   0013CE                     i2l2062:
  4347   0013CE  0E27               	movlw	39
  4348   0013D0  6E01               	movwf	??i2_RetardoLCD^0,c
  4349   0013D2  0EF5               	movlw	245
  4350   0013D4                     i2u237_47:
  4351   0013D4  2EE8               	decfsz	wreg,f,c
  4352   0013D6  D7FE               	bra	i2u237_47
  4353   0013D8  2E01               	decfsz	??i2_RetardoLCD^0,f,c
  4354   0013DA  D7FC               	bra	i2u237_47
  4355   0013DC  F000               	nop	
  4356                           
  4357                           ;LibLCDXC8.h: 299: break;
  4358   0013DE  0012               	return	
  4359   0013E0                     i2l2064:
  4360   0013E0  0E03               	movlw	3
  4361   0013E2  6E01               	movwf	??i2_RetardoLCD^0,c
  4362   0013E4  0E98               	movlw	152
  4363   0013E6                     i2u238_47:
  4364   0013E6  2EE8               	decfsz	wreg,f,c
  4365   0013E8  D7FE               	bra	i2u238_47
  4366   0013EA  2E01               	decfsz	??i2_RetardoLCD^0,f,c
  4367   0013EC  D7FC               	bra	i2u238_47
  4368                           
  4369                           ;LibLCDXC8.h: 301: _delay((unsigned long)((640)*(8000000/4000000.0)));
  4370   0013EE  0EB6               	movlw	182
  4371   0013F0                     i2u239_47:
  4372   0013F0  D000               	nop2	
  4373   0013F2  D000               	nop2	
  4374   0013F4  2EE8               	decfsz	wreg,f,c
  4375   0013F6  D7FC               	bra	i2u239_47
  4376   0013F8  D000               	nop2	
  4377   0013FA  D000               	nop2	
  4378   0013FC  D000               	nop2	
  4379                           
  4380                           ;LibLCDXC8.h: 303: break;
  4381   0013FE  0012               	return	
  4382   001400                     i2l2066:
  4383   001400  0E42               	movlw	66
  4384   001402                     i2u240_47:
  4385   001402  2EE8               	decfsz	wreg,f,c
  4386   001404  D7FE               	bra	i2u240_47
  4387   001406  D000               	nop2	
  4388                           
  4389                           ;LibLCDXC8.h: 306: break;
  4390   001408  0012               	return	
  4391   00140A                     i2l2068:
  4392   00140A  0E1A               	movlw	26
  4393   00140C                     i2u241_47:
  4394   00140C  2EE8               	decfsz	wreg,f,c
  4395   00140E  D7FE               	bra	i2u241_47
  4396   001410  D000               	nop2	
  4397                           
  4398                           ;LibLCDXC8.h: 309: break;
  4399   001412  0012               	return	
  4400   001414                     i2l2072:
  4401   001414  5002               	movf	i2RetardoLCD@a^0,w,c
  4402                           
  4403                           ; Switch size 1, requested type "simple"
  4404                           ; Number of cases is 4, Range of values is 1 to 4
  4405                           ; switch strategies available:
  4406                           ; Name         Instructions Cycles
  4407                           ; simple_byte           13     7 (average)
  4408                           ;	Chosen strategy is simple_byte
  4409   001416  0A01               	xorlw	1	; case 1
  4410   001418  B4D8               	btfsc	status,2,c
  4411   00141A  D7D9               	goto	i2l2062
  4412   00141C  0A03               	xorlw	3	; case 2
  4413   00141E  B4D8               	btfsc	status,2,c
  4414   001420  D7DF               	goto	i2l2064
  4415   001422  0A01               	xorlw	1	; case 3
  4416   001424  B4D8               	btfsc	status,2,c
  4417   001426  D7EC               	goto	i2l2066
  4418   001428  0A07               	xorlw	7	; case 4
  4419   00142A  A4D8               	btfss	status,2,c
  4420   00142C  0012               	return	
  4421   00142E  D7ED               	goto	i2l2068
  4422   001430                     __end_ofi2_RetardoLCD:
  4423                           	callstack 0
  4424                           
  4425 ;; *************** function i2_HabilitaLCD *****************
  4426 ;; Defined at:
  4427 ;;		line 108 in file "LibLCDXC8.h"
  4428 ;; Parameters:    Size  Location     Type
  4429 ;;		None
  4430 ;; Auto vars:     Size  Location     Type
  4431 ;;		None
  4432 ;; Return value:  Size  Location     Type
  4433 ;;                  1    wreg      void 
  4434 ;; Registers used:
  4435 ;;		wreg
  4436 ;; Tracked objects:
  4437 ;;		On entry : 0/0
  4438 ;;		On exit  : 0/0
  4439 ;;		Unchanged: 0/0
  4440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4441 ;;      Params:         0       0       0       0       0       0       0       0       0
  4442 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4443 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4444 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4445 ;;Total ram usage:        0 bytes
  4446 ;; Hardware stack levels used: 1
  4447 ;; This function calls:
  4448 ;;		Nothing
  4449 ;; This function is called by:
  4450 ;;		i2_EnviaDato
  4451 ;;		i2_BorraLCD
  4452 ;;		i2_EscribeLCD_c
  4453 ;; This function uses a non-reentrant model
  4454 ;;
  4455                           
  4456                           	psect	text31
  4457   0017DC                     __ptext31:
  4458                           	callstack 0
  4459   0017DC                     i2_HabilitaLCD:
  4460                           	callstack 22
  4461                           
  4462                           ;LibLCDXC8.h: 110: LATE2=1;
  4463                           
  4464                           ;incstack = 0
  4465   0017DC  848D               	bsf	3981,2,c	;volatile
  4466                           
  4467                           ;LibLCDXC8.h: 111: _delay((unsigned long)((40)*(8000000/4000000.0)));
  4468   0017DE  0E1A               	movlw	26
  4469   0017E0                     i2u242_47:
  4470   0017E0  2EE8               	decfsz	wreg,f,c
  4471   0017E2  D7FE               	bra	i2u242_47
  4472   0017E4  D000               	nop2	
  4473                           
  4474                           ;LibLCDXC8.h: 113: LATE2=0;
  4475   0017E6  948D               	bcf	3981,2,c	;volatile
  4476   0017E8  0012               	return		;funcret
  4477   0017EA                     __end_ofi2_HabilitaLCD:
  4478                           	callstack 0
  4479                           
  4480 ;; *************** function _LeerTeclado *****************
  4481 ;; Defined at:
  4482 ;;		line 271 in file "Proyecto.c"
  4483 ;; Parameters:    Size  Location     Type
  4484 ;;		None
  4485 ;; Auto vars:     Size  Location     Type
  4486 ;;		None
  4487 ;; Return value:  Size  Location     Type
  4488 ;;                  1    wreg      unsigned char 
  4489 ;; Registers used:
  4490 ;;		wreg, status,2, status,0
  4491 ;; Tracked objects:
  4492 ;;		On entry : 0/0
  4493 ;;		On exit  : 0/0
  4494 ;;		Unchanged: 0/0
  4495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4496 ;;      Params:         0       0       0       0       0       0       0       0       0
  4497 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4498 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4499 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4500 ;;Total ram usage:        0 bytes
  4501 ;; Hardware stack levels used: 1
  4502 ;; This function calls:
  4503 ;;		Nothing
  4504 ;; This function is called by:
  4505 ;;		_ISR
  4506 ;; This function uses a non-reentrant model
  4507 ;;
  4508                           
  4509                           	psect	text32
  4510   00108E                     __ptext32:
  4511                           	callstack 0
  4512   00108E                     _LeerTeclado:
  4513                           	callstack 24
  4514                           
  4515                           ;Proyecto.c: 272: teclaRecibidaIf=1;
  4516                           
  4517                           ;incstack = 0
  4518   00108E  0E00               	movlw	0
  4519   001090  6E43               	movwf	(_teclaRecibidaIf+1)^0,c
  4520   001092  0E01               	movlw	1
  4521   001094  6E42               	movwf	_teclaRecibidaIf^0,c
  4522                           
  4523                           ;Proyecto.c: 273: switch (Tecla){
  4524   001096  D030               	goto	i2l1776
  4525   001098                     i2l1742:
  4526                           
  4527                           ;Proyecto.c: 275: Tecla='1';
  4528   001098  0E31               	movlw	49
  4529   00109A  6E48               	movwf	_Tecla^0,c
  4530                           
  4531                           ;Proyecto.c: 276: break;
  4532   00109C  0012               	return	
  4533   00109E                     i2l1744:
  4534                           
  4535                           ;Proyecto.c: 278: Tecla='2';
  4536   00109E  0E32               	movlw	50
  4537   0010A0  6E48               	movwf	_Tecla^0,c
  4538                           
  4539                           ;Proyecto.c: 279: break;
  4540   0010A2  0012               	return	
  4541   0010A4                     i2l1746:
  4542                           
  4543                           ;Proyecto.c: 281: Tecla='3';
  4544   0010A4  0E33               	movlw	51
  4545   0010A6  6E48               	movwf	_Tecla^0,c
  4546                           
  4547                           ;Proyecto.c: 282: break;
  4548   0010A8  0012               	return	
  4549   0010AA                     i2l1748:
  4550                           
  4551                           ;Proyecto.c: 284: Tecla='+';
  4552   0010AA  0E2B               	movlw	43
  4553   0010AC  6E48               	movwf	_Tecla^0,c
  4554                           
  4555                           ;Proyecto.c: 285: break;
  4556   0010AE  0012               	return	
  4557   0010B0                     i2l1750:
  4558                           
  4559                           ;Proyecto.c: 287: Tecla='4';
  4560   0010B0  0E34               	movlw	52
  4561   0010B2  6E48               	movwf	_Tecla^0,c
  4562                           
  4563                           ;Proyecto.c: 288: break;
  4564   0010B4  0012               	return	
  4565   0010B6                     i2l1752:
  4566                           
  4567                           ;Proyecto.c: 290: Tecla ='5';
  4568   0010B6  0E35               	movlw	53
  4569   0010B8  6E48               	movwf	_Tecla^0,c
  4570                           
  4571                           ;Proyecto.c: 291: break;
  4572   0010BA  0012               	return	
  4573   0010BC                     i2l1754:
  4574                           
  4575                           ;Proyecto.c: 293: Tecla='6';
  4576   0010BC  0E36               	movlw	54
  4577   0010BE  6E48               	movwf	_Tecla^0,c
  4578                           
  4579                           ;Proyecto.c: 294: break;
  4580   0010C0  0012               	return	
  4581   0010C2                     i2l1756:
  4582                           
  4583                           ;Proyecto.c: 296: Tecla='-';
  4584   0010C2  0E2D               	movlw	45
  4585   0010C4  6E48               	movwf	_Tecla^0,c
  4586                           
  4587                           ;Proyecto.c: 297: break;
  4588   0010C6  0012               	return	
  4589   0010C8                     i2l1758:
  4590                           
  4591                           ;Proyecto.c: 299: Tecla='7';
  4592   0010C8  0E37               	movlw	55
  4593   0010CA  6E48               	movwf	_Tecla^0,c
  4594                           
  4595                           ;Proyecto.c: 300: break;
  4596   0010CC  0012               	return	
  4597   0010CE                     i2l1760:
  4598                           
  4599                           ;Proyecto.c: 302: Tecla='8';
  4600   0010CE  0E38               	movlw	56
  4601   0010D0  6E48               	movwf	_Tecla^0,c
  4602                           
  4603                           ;Proyecto.c: 303: break;
  4604   0010D2  0012               	return	
  4605   0010D4                     i2l1762:
  4606                           
  4607                           ;Proyecto.c: 305: Tecla='9';
  4608   0010D4  0E39               	movlw	57
  4609   0010D6  6E48               	movwf	_Tecla^0,c
  4610                           
  4611                           ;Proyecto.c: 306: break;
  4612   0010D8  0012               	return	
  4613   0010DA                     i2l1764:
  4614                           
  4615                           ;Proyecto.c: 308: Tecla='X';
  4616   0010DA  0E58               	movlw	88
  4617   0010DC  6E48               	movwf	_Tecla^0,c
  4618                           
  4619                           ;Proyecto.c: 309: break;
  4620   0010DE  0012               	return	
  4621   0010E0                     i2l1766:
  4622                           
  4623                           ;Proyecto.c: 311: Tecla='B';
  4624   0010E0  0E42               	movlw	66
  4625   0010E2  6E48               	movwf	_Tecla^0,c
  4626                           
  4627                           ;Proyecto.c: 312: break;
  4628   0010E4  0012               	return	
  4629   0010E6                     i2l1768:
  4630                           
  4631                           ;Proyecto.c: 314: Tecla='0';
  4632   0010E6  0E30               	movlw	48
  4633   0010E8  6E48               	movwf	_Tecla^0,c
  4634                           
  4635                           ;Proyecto.c: 315: break;
  4636   0010EA  0012               	return	
  4637   0010EC                     i2l1770:
  4638                           
  4639                           ;Proyecto.c: 317: Tecla='=';
  4640   0010EC  0E3D               	movlw	61
  4641   0010EE  6E48               	movwf	_Tecla^0,c
  4642                           
  4643                           ;Proyecto.c: 318: break;
  4644   0010F0  0012               	return	
  4645   0010F2                     i2l1772:
  4646                           
  4647                           ;Proyecto.c: 320: Tecla='/';
  4648   0010F2  0E2F               	movlw	47
  4649   0010F4  6E48               	movwf	_Tecla^0,c
  4650                           
  4651                           ;Proyecto.c: 321: break;
  4652   0010F6  0012               	return	
  4653   0010F8                     i2l1776:
  4654   0010F8  5048               	movf	_Tecla^0,w,c
  4655                           
  4656                           ; Switch size 1, requested type "simple"
  4657                           ; Number of cases is 16, Range of values is 1 to 16
  4658                           ; switch strategies available:
  4659                           ; Name         Instructions Cycles
  4660                           ; simple_byte           49    25 (average)
  4661                           ;	Chosen strategy is simple_byte
  4662   0010FA  0A01               	xorlw	1	; case 1
  4663   0010FC  B4D8               	btfsc	status,2,c
  4664   0010FE  D7CC               	goto	i2l1742
  4665   001100  0A03               	xorlw	3	; case 2
  4666   001102  B4D8               	btfsc	status,2,c
  4667   001104  D7CC               	goto	i2l1744
  4668   001106  0A01               	xorlw	1	; case 3
  4669   001108  B4D8               	btfsc	status,2,c
  4670   00110A  D7CC               	goto	i2l1746
  4671   00110C  0A07               	xorlw	7	; case 4
  4672   00110E  B4D8               	btfsc	status,2,c
  4673   001110  D7CC               	goto	i2l1748
  4674   001112  0A01               	xorlw	1	; case 5
  4675   001114  B4D8               	btfsc	status,2,c
  4676   001116  D7CC               	goto	i2l1750
  4677   001118  0A03               	xorlw	3	; case 6
  4678   00111A  B4D8               	btfsc	status,2,c
  4679   00111C  D7CC               	goto	i2l1752
  4680   00111E  0A01               	xorlw	1	; case 7
  4681   001120  B4D8               	btfsc	status,2,c
  4682   001122  D7CC               	goto	i2l1754
  4683   001124  0A0F               	xorlw	15	; case 8
  4684   001126  B4D8               	btfsc	status,2,c
  4685   001128  D7CC               	goto	i2l1756
  4686   00112A  0A01               	xorlw	1	; case 9
  4687   00112C  B4D8               	btfsc	status,2,c
  4688   00112E  D7CC               	goto	i2l1758
  4689   001130  0A03               	xorlw	3	; case 10
  4690   001132  B4D8               	btfsc	status,2,c
  4691   001134  D7CC               	goto	i2l1760
  4692   001136  0A01               	xorlw	1	; case 11
  4693   001138  B4D8               	btfsc	status,2,c
  4694   00113A  D7CC               	goto	i2l1762
  4695   00113C  0A07               	xorlw	7	; case 12
  4696   00113E  B4D8               	btfsc	status,2,c
  4697   001140  D7CC               	goto	i2l1764
  4698   001142  0A01               	xorlw	1	; case 13
  4699   001144  B4D8               	btfsc	status,2,c
  4700   001146  D7CC               	goto	i2l1766
  4701   001148  0A03               	xorlw	3	; case 14
  4702   00114A  B4D8               	btfsc	status,2,c
  4703   00114C  D7CC               	goto	i2l1768
  4704   00114E  0A01               	xorlw	1	; case 15
  4705   001150  B4D8               	btfsc	status,2,c
  4706   001152  D7CC               	goto	i2l1770
  4707   001154  0A1F               	xorlw	31	; case 16
  4708   001156  A4D8               	btfss	status,2,c
  4709   001158  0012               	return	
  4710   00115A  D7CB               	goto	i2l1772
  4711   00115C                     __end_of_LeerTeclado:
  4712                           	callstack 0
  4713                           
  4714                           	psect	rparam
  4715   000000                     
  4716                           	psect	temp
  4717   00004E                     btemp:
  4718                           	callstack 0
  4719   00004E                     	ds	1
  4720   000000                     int$flags	set	btemp
  4721   000000                     wtemp8	set	btemp+1
  4722   000000                     ttemp5	set	btemp+1
  4723   000000                     ttemp6	set	btemp+4
  4724   000000                     ttemp7	set	btemp+8
  4725                           
  4726                           	psect	idloc
  4727                           
  4728                           ;Config register IDLOC0 @ 0x200000
  4729                           ;	unspecified, using default values
  4730   200000                     	org	2097152
  4731   200000  FF                 	db	255
  4732                           
  4733                           ;Config register IDLOC1 @ 0x200001
  4734                           ;	unspecified, using default values
  4735   200001                     	org	2097153
  4736   200001  FF                 	db	255
  4737                           
  4738                           ;Config register IDLOC2 @ 0x200002
  4739                           ;	unspecified, using default values
  4740   200002                     	org	2097154
  4741   200002  FF                 	db	255
  4742                           
  4743                           ;Config register IDLOC3 @ 0x200003
  4744                           ;	unspecified, using default values
  4745   200003                     	org	2097155
  4746   200003  FF                 	db	255
  4747                           
  4748                           ;Config register IDLOC4 @ 0x200004
  4749                           ;	unspecified, using default values
  4750   200004                     	org	2097156
  4751   200004  FF                 	db	255
  4752                           
  4753                           ;Config register IDLOC5 @ 0x200005
  4754                           ;	unspecified, using default values
  4755   200005                     	org	2097157
  4756   200005  FF                 	db	255
  4757                           
  4758                           ;Config register IDLOC6 @ 0x200006
  4759                           ;	unspecified, using default values
  4760   200006                     	org	2097158
  4761   200006  FF                 	db	255
  4762                           
  4763                           ;Config register IDLOC7 @ 0x200007
  4764                           ;	unspecified, using default values
  4765   200007                     	org	2097159
  4766   200007  FF                 	db	255
  4767                           
  4768                           	psect	config
  4769                           
  4770                           ;Config register CONFIG1L @ 0x300000
  4771                           ;	unspecified, using default values
  4772                           ;	PLL Prescaler Selection bits
  4773                           ;	PLLDIV = 0x0, unprogrammed default
  4774                           ;	System Clock Postscaler Selection bits
  4775                           ;	CPUDIV = 0x0, unprogrammed default
  4776                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  4777                           ;	USBDIV = 0x0, unprogrammed default
  4778   300000                     	org	3145728
  4779   300000  00                 	db	0
  4780                           
  4781                           ;Config register CONFIG1H @ 0x300001
  4782                           ;	Oscillator Selection bits
  4783                           ;	FOSC = INTOSC_EC, Internal oscillator, CLKO function on RA6, EC used by USB (INTCKO)
  4784                           ;	Fail-Safe Clock Monitor Enable bit
  4785                           ;	FCMEN = 0x0, unprogrammed default
  4786                           ;	Internal/External Oscillator Switchover bit
  4787                           ;	IESO = 0x0, unprogrammed default
  4788   300001                     	org	3145729
  4789   300001  09                 	db	9
  4790                           
  4791                           ;Config register CONFIG2L @ 0x300002
  4792                           ;	unspecified, using default values
  4793                           ;	Power-up Timer Enable bit
  4794                           ;	PWRT = 0x1, unprogrammed default
  4795                           ;	Brown-out Reset Enable bits
  4796                           ;	BOR = 0x3, unprogrammed default
  4797                           ;	Brown-out Reset Voltage bits
  4798                           ;	BORV = 0x3, unprogrammed default
  4799                           ;	USB Voltage Regulator Enable bit
  4800                           ;	VREGEN = 0x0, unprogrammed default
  4801   300002                     	org	3145730
  4802   300002  1F                 	db	31
  4803                           
  4804                           ;Config register CONFIG2H @ 0x300003
  4805                           ;	Watchdog Timer Enable bit
  4806                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  4807                           ;	Watchdog Timer Postscale Select bits
  4808                           ;	WDTPS = 0xF, unprogrammed default
  4809   300003                     	org	3145731
  4810   300003  1E                 	db	30
  4811                           
  4812                           ; Padding undefined space
  4813   300004                     	org	3145732
  4814   300004  FF                 	db	255
  4815                           
  4816                           ;Config register CONFIG3H @ 0x300005
  4817                           ;	CCP2 MUX bit
  4818                           ;	CCP2MX = 0x1, unprogrammed default
  4819                           ;	PORTB A/D Enable bit
  4820                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  4821                           ;	Low-Power Timer 1 Oscillator Enable bit
  4822                           ;	LPT1OSC = 0x0, unprogrammed default
  4823                           ;	MCLR Pin Enable bit
  4824                           ;	MCLRE = 0x1, unprogrammed default
  4825   300005                     	org	3145733
  4826   300005  81                 	db	129
  4827                           
  4828                           ;Config register CONFIG4L @ 0x300006
  4829                           ;	Stack Full/Underflow Reset Enable bit
  4830                           ;	STVREN = 0x1, unprogrammed default
  4831                           ;	Single-Supply ICSP Enable bit
  4832                           ;	LVP = OFF, Single-Supply ICSP disabled
  4833                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  4834                           ;	ICPRT = 0x0, unprogrammed default
  4835                           ;	Extended Instruction Set Enable bit
  4836                           ;	XINST = 0x0, unprogrammed default
  4837                           ;	Background Debugger Enable bit
  4838                           ;	DEBUG = 0x1, unprogrammed default
  4839   300006                     	org	3145734
  4840   300006  81                 	db	129
  4841                           
  4842                           ; Padding undefined space
  4843   300007                     	org	3145735
  4844   300007  FF                 	db	255
  4845                           
  4846                           ;Config register CONFIG5L @ 0x300008
  4847                           ;	unspecified, using default values
  4848                           ;	Code Protection bit
  4849                           ;	CP0 = 0x1, unprogrammed default
  4850                           ;	Code Protection bit
  4851                           ;	CP1 = 0x1, unprogrammed default
  4852                           ;	Code Protection bit
  4853                           ;	CP2 = 0x1, unprogrammed default
  4854                           ;	Code Protection bit
  4855                           ;	CP3 = 0x1, unprogrammed default
  4856   300008                     	org	3145736
  4857   300008  0F                 	db	15
  4858                           
  4859                           ;Config register CONFIG5H @ 0x300009
  4860                           ;	unspecified, using default values
  4861                           ;	Boot Block Code Protection bit
  4862                           ;	CPB = 0x1, unprogrammed default
  4863                           ;	Data EEPROM Code Protection bit
  4864                           ;	CPD = 0x1, unprogrammed default
  4865   300009                     	org	3145737
  4866   300009  C0                 	db	192
  4867                           
  4868                           ;Config register CONFIG6L @ 0x30000A
  4869                           ;	unspecified, using default values
  4870                           ;	Write Protection bit
  4871                           ;	WRT0 = 0x1, unprogrammed default
  4872                           ;	Write Protection bit
  4873                           ;	WRT1 = 0x1, unprogrammed default
  4874                           ;	Write Protection bit
  4875                           ;	WRT2 = 0x1, unprogrammed default
  4876                           ;	Write Protection bit
  4877                           ;	WRT3 = 0x1, unprogrammed default
  4878   30000A                     	org	3145738
  4879   30000A  0F                 	db	15
  4880                           
  4881                           ;Config register CONFIG6H @ 0x30000B
  4882                           ;	unspecified, using default values
  4883                           ;	Configuration Register Write Protection bit
  4884                           ;	WRTC = 0x1, unprogrammed default
  4885                           ;	Boot Block Write Protection bit
  4886                           ;	WRTB = 0x1, unprogrammed default
  4887                           ;	Data EEPROM Write Protection bit
  4888                           ;	WRTD = 0x1, unprogrammed default
  4889   30000B                     	org	3145739
  4890   30000B  E0                 	db	224
  4891                           
  4892                           ;Config register CONFIG7L @ 0x30000C
  4893                           ;	unspecified, using default values
  4894                           ;	Table Read Protection bit
  4895                           ;	EBTR0 = 0x1, unprogrammed default
  4896                           ;	Table Read Protection bit
  4897                           ;	EBTR1 = 0x1, unprogrammed default
  4898                           ;	Table Read Protection bit
  4899                           ;	EBTR2 = 0x1, unprogrammed default
  4900                           ;	Table Read Protection bit
  4901                           ;	EBTR3 = 0x1, unprogrammed default
  4902   30000C                     	org	3145740
  4903   30000C  0F                 	db	15
  4904                           
  4905                           ;Config register CONFIG7H @ 0x30000D
  4906                           ;	unspecified, using default values
  4907                           ;	Boot Block Table Read Protection bit
  4908                           ;	EBTRB = 0x1, unprogrammed default
  4909   30000D                     	org	3145741
  4910   30000D  40                 	db	64
  4911                           tosu	equ	0xFFF
  4912                           tosh	equ	0xFFE
  4913                           tosl	equ	0xFFD
  4914                           stkptr	equ	0xFFC
  4915                           pclatu	equ	0xFFB
  4916                           pclath	equ	0xFFA
  4917                           pcl	equ	0xFF9
  4918                           tblptru	equ	0xFF8
  4919                           tblptrh	equ	0xFF7
  4920                           tblptrl	equ	0xFF6
  4921                           tablat	equ	0xFF5
  4922                           prodh	equ	0xFF4
  4923                           prodl	equ	0xFF3
  4924                           indf0	equ	0xFEF
  4925                           postinc0	equ	0xFEE
  4926                           postdec0	equ	0xFED
  4927                           preinc0	equ	0xFEC
  4928                           plusw0	equ	0xFEB
  4929                           fsr0h	equ	0xFEA
  4930                           fsr0l	equ	0xFE9
  4931                           wreg	equ	0xFE8
  4932                           indf1	equ	0xFE7
  4933                           postinc1	equ	0xFE6
  4934                           postdec1	equ	0xFE5
  4935                           preinc1	equ	0xFE4
  4936                           plusw1	equ	0xFE3
  4937                           fsr1h	equ	0xFE2
  4938                           fsr1l	equ	0xFE1
  4939                           bsr	equ	0xFE0
  4940                           indf2	equ	0xFDF
  4941                           postinc2	equ	0xFDE
  4942                           postdec2	equ	0xFDD
  4943                           preinc2	equ	0xFDC
  4944                           plusw2	equ	0xFDB
  4945                           fsr2h	equ	0xFDA
  4946                           fsr2l	equ	0xFD9
  4947                           status	equ	0xFD8

Data Sizes:
    Strings     74
    Constant    0
    Data        16
    BSS         12
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     49      77
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    Password@pass	PTR unsigned char  size(1) Largest target is 4
		 -> ing(COMRAM[4]), 

    MensajeLCD_Word@a	PTR unsigned char  size(1) Largest target is 23
		 -> STR_9(CODE[7]), STR_8(CODE[6]), STR_7(CODE[6]), STR_6(CODE[23]), 
		 -> STR_5(CODE[11]), STR_4(CODE[23]), STR_3(CODE[10]), STR_2(CODE[17]), 
		 -> STR_1(CODE[11]), 

    NuevoCaracter@c	PTR unsigned char  size(1) Largest target is 8
		 -> cara(COMRAM[8]), 


Critical Paths under _main in COMRAM

    _main->_TransmitirDatos
    _TransmitirDatos->___awmod
    ___awmod->___awdiv
    _MensajeLCD_Word->_EscribeLCD_c
    _Password->_DireccionaLCD
    _Password->_EscribeLCD_c
    _DireccionaLCD->_EnviaDato
    _NuevoCaracter->_EscribeLCD_c
    _EscribeLCD_c->_EnviaDato
    _LeerHT11->_LeerByte
    _LeerByte->_LeerBit
    _InicializaLCD->_EnviaDato
    _BorraLCD->_EnviaDato
    _EnviaDato->_RetardoLCD

Critical Paths under _ISR in COMRAM

    _ISR->i2_MensajeLCD_Word
    i2_MensajeLCD_Word->i2_EscribeLCD_c
    i2_EscribeLCD_c->i2_EnviaDato
    i2_BorraLCD->i2_EnviaDato
    i2_EnviaDato->i2_RetardoLCD

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    8665
                                             45 COMRAM     4     4      0
                           _BorraLCD
                  _ConvertirUnidades
                      _DireccionaLCD
                       _EscribeLCD_c
                      _InicializaLCD
                           _LeerHT11
                    _MensajeLCD_Word
                         _Movimiento
                      _NuevoCaracter
                           _Password
                    _TransmitirDatos
                          _Velocidad
 ---------------------------------------------------------------------------------
 (1) _Velocidad                                            2     0      2     384
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _TransmitirDatos                                     20    16      4    5544
                                             29 COMRAM    16    12      4
                           _BorraLCD
                      _DireccionaLCD
                       _EscribeLCD_c
                    _MensajeLCD_Word
                         _Transmitir
                            ___awdiv
                            ___awmod
                            ___lwdiv
                            ___lwmod
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     311
                                             15 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     615
                                             15 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     922
                                             15 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     600
                                             23 COMRAM     6     2      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4    1212
                                             15 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _Transmitir                                           1     1      0      22
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _MensajeLCD_Word                                      4     3      1     924
                                             20 COMRAM     4     3      1
                       _EscribeLCD_c
 ---------------------------------------------------------------------------------
 (1) _Password                                            12    10      2     576
                                             20 COMRAM    12    10      2
                      _DireccionaLCD
                       _EscribeLCD_c
 ---------------------------------------------------------------------------------
 (2) _DireccionaLCD                                        1     1      0     132
                                             19 COMRAM     1     1      0
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (1) _NuevoCaracter                                        4     3      1     405
                                             20 COMRAM     4     3      1
                         _ComandoLCD
                       _EscribeLCD_c
 ---------------------------------------------------------------------------------
 (3) _EscribeLCD_c                                         1     1      0     132
                                             19 COMRAM     1     1      0
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (2) _ComandoLCD                                           2     2      0      22
                                             15 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Movimiento                                           1     1      0       0
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _LeerHT11                                             1     1      0     117
                                             19 COMRAM     1     1      0
                           _LeerByte
 ---------------------------------------------------------------------------------
 (2) _LeerByte                                             3     3      0     117
                                             16 COMRAM     3     3      0
                            _LeerBit
 ---------------------------------------------------------------------------------
 (3) _LeerBit                                              1     1      0      25
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _InicializaLCD                                        0     0      0     220
                           _BorraLCD
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (2) _BorraLCD                                             0     0      0     110
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (4) _EnviaDato                                            2     2      0      88
                                             17 COMRAM     2     2      0
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (4) _RetardoLCD                                           2     2      0      22
                                             15 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (4) _HabilitaLCD                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConvertirUnidades                                    1     1      0      22
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISR                                                  6     6      0     534
                                              9 COMRAM     6     6      0
                        _LeerTeclado
                         i2_BorraLCD
                     i2_EscribeLCD_c
                  i2_MensajeLCD_Word
 ---------------------------------------------------------------------------------
 (7) i2_MensajeLCD_Word                                    4     3      1     292
                                              5 COMRAM     4     3      1
                     i2_EscribeLCD_c
 ---------------------------------------------------------------------------------
 (8) i2_EscribeLCD_c                                       1     1      0     132
                                              4 COMRAM     1     1      0
                        i2_EnviaDato
                      i2_HabilitaLCD
                       i2_RetardoLCD
 ---------------------------------------------------------------------------------
 (7) i2_BorraLCD                                           0     0      0     110
                        i2_EnviaDato
                      i2_HabilitaLCD
                       i2_RetardoLCD
 ---------------------------------------------------------------------------------
 (9) i2_EnviaDato                                          2     2      0      88
                                              2 COMRAM     2     2      0
                      i2_HabilitaLCD
                       i2_RetardoLCD
 ---------------------------------------------------------------------------------
 (9) i2_RetardoLCD                                         2     2      0      22
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (9) i2_HabilitaLCD                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _LeerTeclado                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BorraLCD
     _EnviaDato
       _HabilitaLCD
       _RetardoLCD
     _HabilitaLCD
     _RetardoLCD
   _ConvertirUnidades
   _DireccionaLCD
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _EscribeLCD_c
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _InicializaLCD
     _BorraLCD
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _LeerHT11
     _LeerByte
       _LeerBit
   _MensajeLCD_Word
     _EscribeLCD_c
   _Movimiento
   _NuevoCaracter
     _ComandoLCD
     _EscribeLCD_c
   _Password
     _DireccionaLCD
     _EscribeLCD_c
   _TransmitirDatos
     _BorraLCD
     _DireccionaLCD
     _EscribeLCD_c
     _MensajeLCD_Word
     _Transmitir
     ___awdiv
     ___awmod
       ___awdiv (ARG)
     ___lwdiv
     ___lwmod
     ___wmul
   _Velocidad

 _ISR (ROOT)
   _LeerTeclado
   i2_BorraLCD
     i2_EnviaDato
       i2_HabilitaLCD
       i2_RetardoLCD
     i2_HabilitaLCD
     i2_RetardoLCD
   i2_EscribeLCD_c
     i2_EnviaDato
     i2_HabilitaLCD
     i2_RetardoLCD
   i2_MensajeLCD_Word
     i2_EscribeLCD_c

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      37        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     31      4D       1       81.9%
BITBIGSFRhhhlh      19      0       0      21        0.0%
BITBIGSFRlhll       10      0       0      33        0.0%
BITBIGSFRhhhh        D      0       0      20        0.0%
BITBIGSFRlll         D      0       0      35        0.0%
BITBIGSFRhhllll      C      0       0      27        0.0%
BITBIGSFRhhlllh      A      0       0      26        0.0%
BITBIGSFRhhllll      6      0       0      28        0.0%
BITBIGSFRlhhhl       5      0       0      31        0.0%
BITBIGSFRhhlhl       5      0       0      24        0.0%
BITBIGSFRhll         4      0       0      29        0.0%
BITBIGSFRhhlhhh      3      0       0      23        0.0%
BITBIGSFRlhhhh       1      0       0      30        0.0%
BITBIGSFRlhhl        1      0       0      32        0.0%
BITBIGSFRllh         1      0       0      34        0.0%
BITBIGSFRhhllh       1      0       0      25        0.0%
BITBIGSFRhhhll       1      0       0      22        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      4D      36        0.0%
DATA                 0      0      4D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Jun 08 12:18:26 2023

                        _a 0036                          _c 0046          Transmitir@BufferT 0010  
                       _GO 007E11               ___awdiv@sign 0015                 EnviaDato@a 0013  
      ___wmul@multiplicand 0012              ??_LeerTeclado 0001              _InicializaLCD 115C  
                      l304 16C2                        l337 17A4                        l281 12C4  
                      l285 1674                        l349 0906                        l288 167E  
                      l299 169E                        l904 15E2                        l894 1478  
                      _GIE 007F97                        _RA5 007C05                        _RC2 007C12  
                      _RB4 007C0C                        _RB5 007C0D                        _RE0 007C20  
                      _RB6 007C0E                        _RB7 007C0F                        _PR2 000FCB  
                      _ISR 0008                        _ing 004A               ___awmod@sign 001D  
                      wreg 000FE8                       ?_ISR 0001           ??i2_EscribeLCD_c 0005  
                     l2030 137A                       l2032 139A                       l2034 13A4  
                     l2050 1556                       l2028 1368                       l2204 1232  
                     l2220 1264                       l2038 13AE                       l2142 148A  
                     l2206 123A                       l2224 1272                       l2216 125A  
                     l2240 1314                       l2090 16B2                       l2316 116E  
                     l2164 1726                       l2260 135A                       l2252 1342  
                     l2244 1322                       l2236 1308                       l2326 118C  
                     l2174 17EC                       l2246 132A                       l2270 1446  
                     l2336 11AA                       l2192 120C                       l2256 134C  
                     l2272 144E                       l2520 0AEE                       l2512 0A9E  
                     l2282 146E                       l2290 15B8                       l2356 11E2  
                     l2292 15C0                       l2516 0AAE                       l2390 12A2  
                     l2198 121C                       l2526 0B04                       l2470 0988  
                     l2550 0F20                       l2528 0B3C                       l2544 0EFE  
                     l2298 15D8                       l2474 0998                       l2562 0F64  
                     l2538 0EDC                       l2484 09EE                       l2556 0F42  
                     l2486 0A26                       l2478 09D8                       l2574 0FA8  
                     l2592 1024                       l2568 0F86                       l2850 1602  
                     l2596 105A                       l2588 0FEE                       l2932 0C5A  
                     l2960 0CDE                       l2938 0C6A                       l2970 0D10  
                     l2976 0D3A                       STR_1 0818                       STR_2 0807  
                     STR_3 082E                       STR_4 0801                       STR_5 0823  
                     STR_6 0801                       STR_7 083F                       STR_8 0845  
                     STR_9 0838                       u1110 16C6                       u1210 123E  
                     u2110 1626                       u1150 14CE                       u1310 1452  
                     u2130 0C9A                       u1420 12D8                       u1340 15C4  
                     u1430 12EC                       u1270 132E                       _LATB 000F8A  
                     u2207 0D2E                       u1440 12EE                       _LATD 000F8C  
                     u2217 0D44                       u1610 0F2C                       u2307 1380  
                     u2227 16D6                       u2317 138A                       u2237 16E0  
                     u1710 0FCC                       u1630 0F4E                       u2327 139C  
                     u2247 16EC                       u2167 0BEC                       u1800 1068  
                     u1720 0FDC                       u1712 0FCE                       u2337 13A6  
                     u2257 166A                       u2177 0C30                       u1810 107C  
                     u1802 106A                       u1722 0FDE                       u1650 0F70  
                     u1570 0EE8                       u2347 17D2                       u2267 167A  
                     u2187 0CD0                       u1812 107E                       u1740 0FFE  
                     u2277 16A4                       u2197 0CF6                       u1750 1012  
                     u1742 1000                       u1670 0F92                       u1590 0F0A  
                     u2287 16B4                       u1752 1014                       u2297 136E  
                     u1770 1034                       u1690 0FB4                       u1780 1048  
                     u1772 1036                       u1782 104A                       _PEIE 007F96  
                     _RBIE 007F93                       _RBIF 007F90                       _RBPU 007F8F  
                     _TMR0 000FD6                       _TMR1 000FCE                       _TMR2 000FCC  
                     _TRMT 007D61                       _Cont 0038             ??_EscribeLCD_c 0014  
                     _Temp 0049                       _cara 003A                       _main 0B4A  
                     fsr1h 000FE2                       fsr2h 000FDA                       indf2 000FDF  
                     fsr1l 000FE1                       fsr2l 000FD9                       btemp 004E  
                     prodh 000FF4                       prodl 000FF3                       start 000E  
          __end_of_LeerBit 16CA               ___param_bank 000000                      ??_ISR 000A  
           ?_InicializaLCD 0001                      ?_main 0001            __end_of___awdiv 127C  
                    _ADRES 000FC3                      _CCPR2 000FBB            __end_of___awmod 1364  
               _ComandoLCD 16CA              EscribeLCD_c@a 0014                      _T0CON 000FD5  
          ___awdiv@divisor 0012                      _T1CON 000FCD                      _T2CON 000FCA  
                    _LATE1 007C69                      _LATE2 007C6A            __end_of___lwdiv 1482  
          __end_of___lwmod 15EC                      i2l400 0E4C                      i2l412 0EB4  
                    i2l404 0E60                      i2l405 0E78                      i2l406 0E68  
                    i2l408 0E70                      i2l380 0DF4                      i2l373 0DD0  
                    i2l390 0E20                      i2l382 0DFC                      i2l375 0DCE  
                    i2l392 0E28                      i2l384 0E04                      i2l396 0E3C  
                    i2l388 0E18                      i2l398 0E44            ___awdiv@counter 0014  
                    _RCREG 000FAE                      _RCSTA 000FAB                      _SPBRG 000FAF  
                    _PORTB 000F81                      _USBEN 007B6B                      _TRISA 000F92  
                    _TRISB 000F93                      _TRISC 000F94                      _TRISD 000F95  
                    _TXREG 000FAD                      _TXSTA 000FAC                      _Tecla 0048  
          _teclaRecibidaIf 0042        __end_of_LeerTeclado 115C                ?i2_BorraLCD 0001  
                    main@i 0030             NuevoCaracter@c 0015             NuevoCaracter@i 0017  
                    tablat 000FF5                _HabilitaLCD 17CE                      ttemp5 004F  
                    ttemp6 0052                      ttemp7 0056                      status 000FD8  
                    wtemp8 004F              Password@F3203 0032           __end_of_BorraLCD 1796  
         __end_of_LeerHT11 169A            __initialization 1628           __end_of_LeerByte 1740  
             __end_of_main 0D7E                     ??_main 002E           __end_of_Password 12F4  
            __activetblptr 000002                     _ADCON0 000FC2                     _ADCON1 000FC1  
                   _ADCON2 000FC0      __end_of_NuevoCaracter 1628             DireccionaLCD@a 0014  
                   _CCPR1L 000FBE           ___awdiv@dividend 0010                     i2l2110 159C  
                   i2l2062 13CE                     i2l2064 13E0                     i2l2072 1414  
                   i2l2066 1400                     i2l2068 140A                     i2l1750 10B0  
                   i2l1742 1098                     i2l2614 14D8                     i2l1760 10CE  
                   i2l1752 10B6                     i2l1744 109E                     i2l2800 0E30  
                   i2l1770 10EC                     i2l1762 10D4                     i2l1754 10BC  
                   i2l1746 10A4                     i2l1772 10F2                     i2l1764 10DA  
                   i2l1756 10C2                     i2l1748 10AA                     i2l2812 0E54  
                   i2l1766 10E0                     i2l1758 10C8                     i2l1768 10E6  
                   i2l1776 10F8                     i2l2832 0E96                     i2l2828 0E86  
                   i2l2788 0E0C                     _OSCCON 000FD3                     _TMR0IE 007F95  
                   _TMR0IF 007F92                     _TMR1IE 007CE8                     _TMR1IF 007CF0  
                   _TMR0ON 007EAF                     _TMR1ON 007E68                     _TMR2ON 007E52  
                   _TRISA5 007C95                     _TRISC1 007CA1                     _TRISC2 007CA2  
                   _TRISE0 007CB0                     _TRISE1 007CB1                     _TRISE2 007CB2  
                   _TRISC6 007CA6                     _TRISC7 007CA7                  ??_LeerBit 0010  
    __end_of_DireccionaLCD 1756                     _UTRDIS 007B7B                 _RetardoLCD 1364  
      TransmitirDatos@Ent1 001E        TransmitirDatos@Ent2 0020                 _Movimiento 0FBC  
                   ___wmul 16F8                  ??___awdiv 0014                  ??___awmod 001C  
                ??___lwdiv 0014                  ??___lwmod 0014            ??_InicializaLCD 0014  
                   clear_0 164E           ___awdiv@quotient 0016            ___awmod@divisor 001A  
                   isa$std 000001            ___awmod@counter 001C       __end_of_EscribeLCD_c 176C  
              ?_ComandoLCD 0001                _LeerTeclado 108E               ?i2_EnviaDato 0001  
             __pdataCOMRAM 0032               __mediumconst 0000                     tblptrh 000FF7  
                   tblptrl 000FF6                     tblptru 000FF8                 _Transmitir 17EA  
    __end_ofi2_HabilitaLCD 17EA                 __accesstop 0060    __end_of__initialization 1654  
            ___rparam_used 000001             __pcstackCOMRAM 0001          __end_of_EnviaDato 1564  
        i2_MensajeLCD_Word 14D0         ?i2_MensajeLCD_Word 0006             Password@access 001D  
                ?_BorraLCD 0001                  ?_LeerHT11 0001                  ?_LeerByte 0001  
           Password@secret 0019        ??i2_MensajeLCD_Word 0007                ?_RetardoLCD 0001  
              RetardoLCD@a 0011          __end_of_Velocidad 0FBC                  ?_Password 0015  
           ComandoLCD@data 0011                ?_Movimiento 0001                    ?___wmul 0010  
                  _CCP1CON 000FBD                    _CCP2CON 000FBA  __end_ofi2_MensajeLCD_Word 151E  
             ??i2_BorraLCD 0005                 ??_BorraLCD 0014                 ??_LeerHT11 0014  
              ?_Transmitir 0001          ??_MensajeLCD_Word 0016                 ??_LeerByte 0011  
             ?_HabilitaLCD 0001                    _LeerBit 169A                 ??_Password 0017  
                  __Hparam 0000                    __Lparam 0000       TransmitirDatos@TempC 002C  
                  ___awdiv 11F8                    ___awmod 12F4                    ___lwdiv 1430  
                  ___lwmod 15AA               __psmallconst 0800         __end_ofi2_BorraLCD 17BE  
                  __pcinit 1628                    __ramtop 0800                    __ptext0 0B4A  
                  __ptext1 0EC8                    __ptext2 084C                    __ptext3 16F8  
                  __ptext4 15AA                    __ptext5 1430                    __ptext6 12F4  
                  __ptext7 11F8                    __ptext8 17EA                    __ptext9 1482  
         ___awmod@dividend 0018                    _teclaIf 0044             __pintcode_body 0D7E  
     end_of_initialization 1654        _TransmitirDatos$230 0028        _TransmitirDatos$226 0022  
      _TransmitirDatos$227 0024        _TransmitirDatos$229 0026        _TransmitirDatos$869 002A  
            __Lmediumconst 0000                    int_func 0D7E               _EscribeLCD_c 1756  
                  postdec1 000FE5          ??_TransmitirDatos 0022                    postinc0 000FEE  
                  postinc1 000FE6                    postinc2 000FDE               ??_ComandoLCD 0010  
             ?_LeerTeclado 0001                  LeerByte@i 0013            i2EscribeLCD_c@a 0005  
            ?i2_RetardoLCD 0001         __end_of_ComandoLCD 16F8             __end_of___wmul 171E  
            __pidataCOMRAM 17BE      __end_of_InicializaLCD 11F8                  _EnviaDato 151E  
      start_initialization 1628                __end_of_ISR 0EC8                  Password@i 001F  
             Password@pass 0015             ??i2_RetardoLCD 0001               ??_RetardoLCD 0010  
             ??_Movimiento 0010                   ??___wmul 0014                  _Velocidad 0EC8  
          _MensajeLCD_Word 1482                 ?_EnviaDato 0001                __pbssCOMRAM 0042  
       __end_of_RetardoLCD 13CA           MensajeLCD_Word@a 0015           MensajeLCD_Word@i 0017  
             ??_Transmitir 0010              _NuevoCaracter 15EC         __end_of_Movimiento 108E  
                 ?_LeerBit 0001              _DireccionaLCD 1740             i2_EscribeLCD_c 176C  
         ___lwdiv@dividend 0010                  __pintcode 0008                   ?___awdiv 0010  
                 ?___awmod 0018                 ?_Velocidad 0010                   ?___lwdiv 0010  
                 ?___lwmod 0010         __end_of_Transmitir 17F6                __smallconst 0800  
         ___lwdiv@quotient 0014             ?_NuevoCaracter 0015            _TransmitirDatos 084C  
           ___wmul@product 0014              i2_HabilitaLCD 17DC             ?_DireccionaLCD 0001  
   __end_ofi2_EscribeLCD_c 1782                   i2u240_47 1402                   i2u241_47 140C  
                 i2u242_47 17E0                   i2u235_47 0DB2                   i2u236_47 0E8E  
                 i2u237_47 13D4                   i2u238_47 13E6                   i2u239_47 13F0  
                 i2u184_40 151C    __end_of_MensajeLCD_Word 14D0          ___wmul@multiplier 0010  
            ??i2_EnviaDato 0003       __end_ofi2_RetardoLCD 1430                ??_EnviaDato 0012  
        _ConvertirUnidades 1796         ?_ConvertirUnidades 0001                   _BorraLCD 1782  
                 _LeerHT11 1662                  copy_data0 163C                   _LeerByte 171E  
           ?i2_HabilitaLCD 0001        ??_ConvertirUnidades 0010            ?i2_EscribeLCD_c 0001  
                 _Password 127C                   __Hrparam 0000                   __Lrparam 0000  
              ??_Velocidad 0012               i2EnviaDato@a 0004  __end_of_ConvertirUnidades 17AA  
          ??_NuevoCaracter 0016    __end_of_TransmitirDatos 0B4A            ___lwdiv@divisor 0012  
          ___lwdiv@counter 0016                   __ptext10 127C                   __ptext11 1740  
                 __ptext20 1782                   __ptext12 15EC                   __ptext21 151E  
                 __ptext13 1756                   __ptext30 13CA                   __ptext22 1364  
                 __ptext14 16CA                   __ptext31 17DC                   __ptext23 17CE  
                 __ptext15 0FBC                   __ptext32 108E                   __ptext24 1796  
                 __ptext16 1662                   __ptext17 171E                   __ptext26 14D0  
                 __ptext18 169A                   __ptext27 176C                   __ptext19 115C  
                 __ptext28 17AA                   __ptext29 1564        __end_ofi2_EnviaDato 15AA  
          ??_DireccionaLCD 0014                   _interfaz 0039               Velocidad@val 0010  
                 isa$xinst 000000           ?_MensajeLCD_Word 0015                   int$flags 004E  
        NuevoCaracter@addr 0016            ??i2_HabilitaLCD 0001                   intlevel2 0000  
            ??_HabilitaLCD 0010           ___lwmod@dividend 0010              i2RetardoLCD@a 0002  
              i2_EnviaDato 1564            ___lwmod@divisor 0012            ___lwmod@counter 0014  
         ?_TransmitirDatos 001E                 i2_BorraLCD 17AA     ConvertirUnidades@canal 0010  
       i2MensajeLCD_Word@a 0006         i2MensajeLCD_Word@i 0008              ?_EscribeLCD_c 0001  
               LeerBit@res 0010               i2_RetardoLCD 13CA        __end_of_HabilitaLCD 17DC  
              LeerByte@res 0012  
