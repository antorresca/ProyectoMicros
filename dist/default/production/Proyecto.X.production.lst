

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Wed Jun 07 13:46:04 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og9 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1
    35                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    36                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1
    42                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    43                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    44                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    45                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    46                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    47   000000                     
    48                           ; Version 2.40
    49                           ; Generated 04/07/2022 GMT
    50                           ; 
    51                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    52                           ; All rights reserved.
    53                           ; 
    54                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    55                           ; 
    56                           ; Redistribution and use in source and binary forms, with or without modification, are
    57                           ; permitted provided that the following conditions are met:
    58                           ; 
    59                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    60                           ;        conditions and the following disclaimer.
    61                           ; 
    62                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    63                           ;        of conditions and the following disclaimer in the documentation and/or other
    64                           ;        materials provided with the distribution. Publication is not required when
    65                           ;        this file is used in an embedded application.
    66                           ; 
    67                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    68                           ;        software without specific prior written permission.
    69                           ; 
    70                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    71                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    72                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    73                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    74                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    75                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    76                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    77                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    78                           ; 
    79                           ; 
    80                           ; Code-generator required, PIC18F4550 Definitions
    81                           ; 
    82                           ; SFR Addresses
    83   000000                     
    84                           	psect	idataCOMRAM
    85   0015C6                     __pidataCOMRAM:
    86                           	callstack 0
    87                           
    88                           ;initializer for Password@F3204
    89   0015C6  30                 	db	48
    90   0015C7  31                 	db	49
    91   0015C8  32                 	db	50
    92   0015C9  33                 	db	51
    93                           
    94                           ;initializer for _a
    95   0015CA  007D               	dw	125
    96                           
    97                           ;initializer for _Cont
    98   0015CC  06                 	db	6
    99                           
   100                           ;initializer for _interfaz
   101   0015CD  08                 	db	8
   102                           
   103                           ;initializer for _cara
   104   0015CE  00                 	db	0
   105   0015CF  0A                 	db	10
   106   0015D0  0A                 	db	10
   107   0015D1  0A                 	db	10
   108   0015D2  00                 	db	0
   109   0015D3  1F                 	db	31
   110   0015D4  0E                 	db	14
   111   0015D5  00                 	db	0
   112   000000                     _TMR1	set	4046
   113   000000                     _RCREG	set	4014
   114   000000                     _TXREG	set	4013
   115   000000                     _T1CON	set	4045
   116   000000                     _SPBRG	set	4015
   117   000000                     _TMR2	set	4044
   118   000000                     _TRISB	set	3987
   119   000000                     _RB7	set	31759
   120   000000                     _RB6	set	31758
   121   000000                     _RB5	set	31757
   122   000000                     _RB4	set	31756
   123   000000                     _TRMT	set	32097
   124   000000                     _RC0	set	31760
   125   000000                     _GIE	set	32663
   126   000000                     _TMR1ON	set	32360
   127   000000                     _PEIE	set	32662
   128   000000                     _TRISC1	set	31905
   129   000000                     _TRISC0	set	31904
   130   000000                     _TRISC7	set	31911
   131   000000                     _TRISC6	set	31910
   132   000000                     _TMR2ON	set	32338
   133   000000                     _TRISC2	set	31906
   134   000000                     _TMR0ON	set	32431
   135   000000                     _TMR0IE	set	32661
   136   000000                     _TMR0IF	set	32658
   137   000000                     _RBIE	set	32659
   138   000000                     _TRISE1	set	31921
   139   000000                     _TRISE2	set	31922
   140   000000                     _LATE2	set	31850
   141   000000                     _LATD	set	3980
   142   000000                     _USBEN	set	31595
   143   000000                     _UTRDIS	set	31611
   144   000000                     _TRISA	set	3986
   145   000000                     _TRISC	set	3988
   146   000000                     _LATE1	set	31849
   147   000000                     _RCSTA	set	4011
   148   000000                     _TXSTA	set	4012
   149   000000                     _CCP1CON	set	4029
   150   000000                     _CCPR1L	set	4030
   151   000000                     _ADCON2	set	4032
   152   000000                     _ADCON1	set	4033
   153   000000                     _ADCON0	set	4034
   154   000000                     _TRISD	set	3989
   155   000000                     _OSCCON	set	4051
   156   000000                     _TMR1IE	set	31976
   157   000000                     _TMR1IF	set	31984
   158   000000                     _TRISE0	set	31920
   159   000000                     _T0CON	set	4053
   160   000000                     _RBPU	set	32655
   161   000000                     _ADRES	set	4035
   162   000000                     _T2CON	set	4042
   163   000000                     _PR2	set	4043
   164   000000                     _RBIF	set	32656
   165   000000                     _TMR0	set	4054
   166   000000                     _CCPR2	set	4027
   167   000000                     _CCP2CON	set	4026
   168   000000                     _PORTB	set	3969
   169   000000                     _RC2	set	31762
   170   000000                     _RE0	set	31776
   171   000000                     _LATB	set	3978
   172                           
   173                           	psect	smallconst
   174   000800                     __psmallconst:
   175                           	callstack 0
   176   000800  00                 	db	0
   177   000801                     STR_4:
   178   000801  20                 	db	32
   179   000802  20                 	db	32
   180   000803  20                 	db	32
   181   000804  20                 	db	32
   182   000805  20                 	db	32
   183   000806  20                 	db	32
   184   000807  20                 	db	32
   185   000808  20                 	db	32
   186   000809  20                 	db	32
   187   00080A  20                 	db	32
   188   00080B  20                 	db	32
   189   00080C  20                 	db	32
   190   00080D  20                 	db	32
   191   00080E  20                 	db	32
   192   00080F  20                 	db	32
   193   000810  20                 	db	32
   194   000811  20                 	db	32
   195   000812  20                 	db	32
   196   000813  20                 	db	32
   197   000814  20                 	db	32
   198   000815  20                 	db	32
   199   000816  20                 	db	32
   200   000817  00                 	db	0
   201   000818                     STR_1:
   202   000818  42                 	db	66	;'B'
   203   000819  69                 	db	105	;'i'
   204   00081A  65                 	db	101	;'e'
   205   00081B  6E                 	db	110	;'n'
   206   00081C  76                 	db	118	;'v'
   207   00081D  65                 	db	101	;'e'
   208   00081E  6E                 	db	110	;'n'
   209   00081F  69                 	db	105	;'i'
   210   000820  64                 	db	100	;'d'
   211   000821  6F                 	db	111	;'o'
   212   000822  00                 	db	0
   213   000823                     STR_5:
   214   000823  49                 	db	73	;'I'
   215   000824  6E                 	db	110	;'n'
   216   000825  63                 	db	99	;'c'
   217   000826  6F                 	db	111	;'o'
   218   000827  72                 	db	114	;'r'
   219   000828  72                 	db	114	;'r'
   220   000829  65                 	db	101	;'e'
   221   00082A  63                 	db	99	;'c'
   222   00082B  74                 	db	116	;'t'
   223   00082C  6F                 	db	111	;'o'
   224   00082D  00                 	db	0
   225   00082E                     STR_3:
   226   00082E  50                 	db	80	;'P'
   227   00082F  61                 	db	97	;'a'
   228   000830  73                 	db	115	;'s'
   229   000831  73                 	db	115	;'s'
   230   000832  77                 	db	119	;'w'
   231   000833  6F                 	db	111	;'o'
   232   000834  72                 	db	114	;'r'
   233   000835  64                 	db	100	;'d'
   234   000836  3A                 	db	58	;':'
   235   000837  00                 	db	0
   236   000838                     STR_7:
   237   000838  54                 	db	84	;'T'
   238   000839  65                 	db	101	;'e'
   239   00083A  6D                 	db	109	;'m'
   240   00083B  70                 	db	112	;'p'
   241   00083C  3A                 	db	58	;':'
   242   00083D  00                 	db	0
   243   00083E                     STR_8:
   244   00083E  48                 	db	72	;'H'
   245   00083F  75                 	db	117	;'u'
   246   000840  6D                 	db	109	;'m'
   247   000841  3A                 	db	58	;':'
   248   000842  00                 	db	0
   249   000843  00                 	db	0	; dummy byte at the end
   250   000000                     
   251                           ; #config settings
   252                           
   253                           	psect	cinit
   254   0013EC                     __pcinit:
   255                           	callstack 0
   256   0013EC                     start_initialization:
   257                           	callstack 0
   258   0013EC                     __initialization:
   259                           	callstack 0
   260                           
   261                           ; Initialize objects allocated to COMRAM (16 bytes)
   262                           ; load TBLPTR registers with __pidataCOMRAM
   263   0013EC  0EC6               	movlw	low __pidataCOMRAM
   264   0013EE  6EF6               	movwf	tblptrl,c
   265   0013F0  0E15               	movlw	high __pidataCOMRAM
   266   0013F2  6EF7               	movwf	tblptrh,c
   267   0013F4  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   268   0013F6  6EF8               	movwf	tblptru,c
   269   0013F8  EE00  F021         	lfsr	0,__pdataCOMRAM
   270   0013FC  EE10 F010          	lfsr	1,16
   271   001400                     copy_data0:
   272   001400  0009               	tblrd		*+
   273   001402  CFF5 FFEE          	movff	tablat,postinc0
   274   001406  50E5               	movf	postdec1,w,c
   275   001408  50E1               	movf	fsr1l,w,c
   276   00140A  E1FA               	bnz	copy_data0
   277                           
   278                           ; Clear objects allocated to COMRAM (13 bytes)
   279   00140C  EE00  F031         	lfsr	0,__pbssCOMRAM
   280   001410  0E0D               	movlw	13
   281   001412                     clear_0:
   282   001412  6AEE               	clrf	postinc0,c
   283   001414  06E8               	decf	wreg,f,c
   284   001416  E1FD               	bnz	clear_0
   285   001418                     end_of_initialization:
   286                           	callstack 0
   287   001418                     __end_of__initialization:
   288                           	callstack 0
   289   001418  903E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   290   00141A  923E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   291   00141C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   292   00141E  6EF8               	movwf	tblptru,c
   293   001420  0100               	movlb	0
   294   001422  EF6A  F005         	goto	_main	;jump to C main() function
   295                           
   296                           	psect	bssCOMRAM
   297   000031                     __pbssCOMRAM:
   298                           	callstack 0
   299   000031                     _teclaRecibidaIf:
   300                           	callstack 0
   301   000031                     	ds	2
   302   000033                     _teclaIf:
   303                           	callstack 0
   304   000033                     	ds	2
   305   000035                     _c:
   306                           	callstack 0
   307   000035                     	ds	2
   308   000037                     _Tecla:
   309                           	callstack 0
   310   000037                     	ds	1
   311   000038                     _Humedad:
   312                           	callstack 0
   313   000038                     	ds	1
   314   000039                     _Temp:
   315                           	callstack 0
   316   000039                     	ds	1
   317   00003A                     _ing:
   318                           	callstack 0
   319   00003A                     	ds	4
   320                           
   321                           	psect	dataCOMRAM
   322   000021                     __pdataCOMRAM:
   323                           	callstack 0
   324   000021                     Password@F3204:
   325                           	callstack 0
   326   000021                     	ds	4
   327   000025                     _a:
   328                           	callstack 0
   329   000025                     	ds	2
   330   000027                     _Cont:
   331                           	callstack 0
   332   000027                     	ds	1
   333   000028                     _interfaz:
   334                           	callstack 0
   335   000028                     	ds	1
   336   000029                     _cara:
   337                           	callstack 0
   338   000029                     	ds	8
   339                           
   340                           	psect	cstackCOMRAM
   341   000001                     __pcstackCOMRAM:
   342                           	callstack 0
   343   000001                     ??i2_RetardoLCD:
   344                           
   345                           ; 1 bytes @ 0x0
   346   000001                     	ds	1
   347   000002                     i2RetardoLCD@a:
   348                           	callstack 0
   349                           
   350                           ; 1 bytes @ 0x1
   351   000002                     	ds	1
   352   000003                     ??i2_EnviaDato:
   353                           
   354                           ; 1 bytes @ 0x2
   355   000003                     	ds	1
   356   000004                     i2EnviaDato@a:
   357                           	callstack 0
   358                           
   359                           ; 1 bytes @ 0x3
   360   000004                     	ds	1
   361   000005                     i2EscribeLCD_c@a:
   362                           	callstack 0
   363                           
   364                           ; 1 bytes @ 0x4
   365   000005                     	ds	1
   366   000006                     ??_ISR:
   367                           
   368                           ; 1 bytes @ 0x5
   369   000006                     	ds	2
   370   000008                     ??_RetardoLCD:
   371   000008                     ??_ComandoLCD:
   372   000008                     ?___wmul:
   373                           	callstack 0
   374   000008                     ?___awdiv:
   375                           	callstack 0
   376   000008                     ?___lwdiv:
   377                           	callstack 0
   378   000008                     ?___lwmod:
   379                           	callstack 0
   380   000008                     LeerBit@res:
   381                           	callstack 0
   382   000008                     Transmitir@BufferT:
   383                           	callstack 0
   384   000008                     ___lbdiv@divisor:
   385                           	callstack 0
   386   000008                     ___lbmod@divisor:
   387                           	callstack 0
   388   000008                     Velocidad@val:
   389                           	callstack 0
   390   000008                     ___wmul@multiplier:
   391                           	callstack 0
   392   000008                     ___awdiv@dividend:
   393                           	callstack 0
   394   000008                     ___lwdiv@dividend:
   395                           	callstack 0
   396   000008                     ___lwmod@dividend:
   397                           	callstack 0
   398                           
   399                           ; 2 bytes @ 0x7
   400   000008                     	ds	1
   401   000009                     ??_LeerByte:
   402   000009                     ComandoLCD@data:
   403                           	callstack 0
   404   000009                     RetardoLCD@a:
   405                           	callstack 0
   406   000009                     ___lbdiv@dividend:
   407                           	callstack 0
   408   000009                     ___lbmod@dividend:
   409                           	callstack 0
   410                           
   411                           ; 1 bytes @ 0x8
   412   000009                     	ds	1
   413   00000A                     ??_EnviaDato:
   414   00000A                     LeerByte@res:
   415                           	callstack 0
   416   00000A                     ___lbdiv@counter:
   417                           	callstack 0
   418   00000A                     ___lbmod@counter:
   419                           	callstack 0
   420   00000A                     ___wmul@multiplicand:
   421                           	callstack 0
   422   00000A                     ___awdiv@divisor:
   423                           	callstack 0
   424   00000A                     ___lwdiv@divisor:
   425                           	callstack 0
   426   00000A                     ___lwmod@divisor:
   427                           	callstack 0
   428                           
   429                           ; 2 bytes @ 0x9
   430   00000A                     	ds	1
   431   00000B                     EnviaDato@a:
   432                           	callstack 0
   433   00000B                     LeerByte@i:
   434                           	callstack 0
   435   00000B                     ___lbdiv@quotient:
   436                           	callstack 0
   437   00000B                     ___lbmod@rem:
   438                           	callstack 0
   439                           
   440                           ; 1 bytes @ 0xA
   441   00000B                     	ds	1
   442   00000C                     ??_LeerHT11:
   443   00000C                     EscribeLCD_c@a:
   444                           	callstack 0
   445   00000C                     DireccionaLCD@a:
   446                           	callstack 0
   447   00000C                     ___awdiv@counter:
   448                           	callstack 0
   449   00000C                     ___lwmod@counter:
   450                           	callstack 0
   451   00000C                     ___wmul@product:
   452                           	callstack 0
   453   00000C                     ___lwdiv@quotient:
   454                           	callstack 0
   455                           
   456                           ; 2 bytes @ 0xB
   457   00000C                     	ds	1
   458   00000D                     ?_Password:
   459                           	callstack 0
   460   00000D                     NuevoCaracter@c:
   461                           	callstack 0
   462   00000D                     MensajeLCD_Word@a:
   463                           	callstack 0
   464   00000D                     Password@pass:
   465                           	callstack 0
   466   00000D                     ___awdiv@sign:
   467                           	callstack 0
   468                           
   469                           ; 1 bytes @ 0xC
   470   00000D                     	ds	1
   471   00000E                     ??_MensajeLCD_Word:
   472   00000E                     NuevoCaracter@addr:
   473                           	callstack 0
   474   00000E                     ___lwdiv@counter:
   475                           	callstack 0
   476   00000E                     ___awdiv@quotient:
   477                           	callstack 0
   478                           
   479                           ; 2 bytes @ 0xD
   480   00000E                     	ds	1
   481   00000F                     NuevoCaracter@i:
   482                           	callstack 0
   483   00000F                     MensajeLCD_Word@i:
   484                           	callstack 0
   485                           
   486                           ; 2 bytes @ 0xE
   487   00000F                     	ds	2
   488   000011                     TransmitirDatos@Ent1:
   489                           	callstack 0
   490   000011                     Password@secret:
   491                           	callstack 0
   492                           
   493                           ; 4 bytes @ 0x10
   494   000011                     	ds	2
   495   000013                     TransmitirDatos@Ent2:
   496                           	callstack 0
   497                           
   498                           ; 2 bytes @ 0x12
   499   000013                     	ds	2
   500   000015                     ??_TransmitirDatos:
   501   000015                     Password@access:
   502                           	callstack 0
   503                           
   504                           ; 2 bytes @ 0x14
   505   000015                     	ds	2
   506   000017                     Password@i:
   507                           	callstack 0
   508   000017                     TransmitirDatos@n:
   509                           	callstack 0
   510                           
   511                           ; 2 bytes @ 0x16
   512   000017                     	ds	2
   513   000019                     TransmitirDatos@Simb:
   514                           	callstack 0
   515                           
   516                           ; 2 bytes @ 0x18
   517   000019                     	ds	2
   518   00001B                     TransmitirDatos@TempC:
   519                           	callstack 0
   520                           
   521                           ; 2 bytes @ 0x1A
   522   00001B                     	ds	2
   523   00001D                     ??_main:
   524                           
   525                           ; 1 bytes @ 0x1C
   526   00001D                     	ds	2
   527   00001F                     main@i:
   528                           	callstack 0
   529                           
   530                           ; 2 bytes @ 0x1E
   531   00001F                     	ds	2
   532                           
   533 ;;
   534 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   535 ;;
   536 ;; *************** function _main *****************
   537 ;; Defined at:
   538 ;;		line 59 in file "Proyecto.c"
   539 ;; Parameters:    Size  Location     Type
   540 ;;		None
   541 ;; Auto vars:     Size  Location     Type
   542 ;;  i               2   30[COMRAM] int 
   543 ;; Return value:  Size  Location     Type
   544 ;;                  1    wreg      void 
   545 ;; Registers used:
   546 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   547 ;; Tracked objects:
   548 ;;		On entry : 0/0
   549 ;;		On exit  : 0/0
   550 ;;		Unchanged: 0/0
   551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   552 ;;      Params:         0       0       0       0       0       0       0       0       0
   553 ;;      Locals:         2       0       0       0       0       0       0       0       0
   554 ;;      Temps:          2       0       0       0       0       0       0       0       0
   555 ;;      Totals:         4       0       0       0       0       0       0       0       0
   556 ;;Total ram usage:        4 bytes
   557 ;; Hardware stack levels required when called: 9
   558 ;; This function calls:
   559 ;;		_BorraLCD
   560 ;;		_DireccionaLCD
   561 ;;		_EscribeLCD_c
   562 ;;		_InicializaLCD
   563 ;;		_LeerHT11
   564 ;;		_MensajeLCD_Word
   565 ;;		_NuevoCaracter
   566 ;;		_Password
   567 ;;		_TransmitirDatos
   568 ;;		_Velocidad
   569 ;; This function is called by:
   570 ;;		Startup code after reset
   571 ;; This function uses a non-reentrant model
   572 ;;
   573                           
   574                           	psect	text0
   575   000AD4                     __ptext0:
   576                           	callstack 0
   577   000AD4                     _main:
   578                           	callstack 22
   579                           
   580                           ;Proyecto.c: 61: TRISC = 0;
   581                           
   582                           ;incstack = 0
   583   000AD4  0E00               	movlw	0
   584   000AD6  6E94               	movwf	148,c	;volatile
   585                           
   586                           ;Proyecto.c: 62: OSCCON = 0b11110110;
   587   000AD8  0EF6               	movlw	246
   588   000ADA  6ED3               	movwf	211,c	;volatile
   589                           
   590                           ;Proyecto.c: 64: TRISD = 0;
   591   000ADC  0E00               	movlw	0
   592   000ADE  6E95               	movwf	149,c	;volatile
   593                           
   594                           ;Proyecto.c: 65: TRISE0 = 1;
   595   000AE0  8096               	bsf	3990,0,c	;volatile
   596                           
   597                           ;Proyecto.c: 66: TRISE2 = 0;
   598   000AE2  9496               	bcf	3990,2,c	;volatile
   599                           
   600                           ;Proyecto.c: 67: TRISE1 = 0;
   601   000AE4  9296               	bcf	3990,1,c	;volatile
   602                           
   603                           ;Proyecto.c: 68: InicializaLCD();
   604   000AE6  ECEF  F007         	call	_InicializaLCD	;wreg free
   605                           
   606                           ;Proyecto.c: 69: BorraLCD();
   607   000AEA  ECB5  F00A         	call	_BorraLCD	;wreg free
   608                           
   609                           ;Proyecto.c: 72: TRISA = 0b00000010;
   610   000AEE  0E02               	movlw	2
   611   000AF0  6E92               	movwf	146,c	;volatile
   612                           
   613                           ;Proyecto.c: 73: ADCON0 = 0b00000001;
   614   000AF2  0E01               	movlw	1
   615   000AF4  6EC2               	movwf	194,c	;volatile
   616                           
   617                           ;Proyecto.c: 74: ADCON1 = 0b00001100;
   618   000AF6  0E0C               	movlw	12
   619   000AF8  6EC1               	movwf	193,c	;volatile
   620                           
   621                           ;Proyecto.c: 75: ADCON2 = 0b10001000;
   622   000AFA  0E88               	movlw	136
   623   000AFC  6EC0               	movwf	192,c	;volatile
   624                           
   625                           ;Proyecto.c: 78: TRISB=0b11110000;
   626   000AFE  0EF0               	movlw	240
   627   000B00  6E93               	movwf	147,c	;volatile
   628                           
   629                           ;Proyecto.c: 79: RBPU=0;
   630   000B02  9EF1               	bcf	4081,7,c	;volatile
   631                           
   632                           ;Proyecto.c: 80: RBIF=0;
   633   000B04  90F2               	bcf	4082,0,c	;volatile
   634                           
   635                           ;Proyecto.c: 81: RBIE=1;
   636   000B06  86F2               	bsf	4082,3,c	;volatile
   637                           
   638                           ;Proyecto.c: 84: T0CON=0b00000011;
   639   000B08  0E03               	movlw	3
   640   000B0A  6ED5               	movwf	213,c	;volatile
   641                           
   642                           ;Proyecto.c: 85: TMR0IF=0;
   643   000B0C  94F2               	bcf	4082,2,c	;volatile
   644                           
   645                           ;Proyecto.c: 86: TMR0=64286;
   646   000B0E  0EFB               	movlw	251
   647   000B10  6ED7               	movwf	215,c	;volatile
   648   000B12  0E1E               	movlw	30
   649   000B14  6ED6               	movwf	214,c	;volatile
   650                           
   651                           ;Proyecto.c: 87: TMR0IE=1;
   652   000B16  8AF2               	bsf	4082,5,c	;volatile
   653                           
   654                           ;Proyecto.c: 88: TMR0ON=1;
   655   000B18  8ED5               	bsf	4053,7,c	;volatile
   656                           
   657                           ;Proyecto.c: 91: TRISC2 = 0;
   658   000B1A  9494               	bcf	3988,2,c	;volatile
   659                           
   660                           ;Proyecto.c: 92: PR2 = 125;
   661   000B1C  0E7D               	movlw	125
   662   000B1E  6ECB               	movwf	203,c	;volatile
   663                           
   664                           ;Proyecto.c: 93: CCPR1L = 0;
   665   000B20  0E00               	movlw	0
   666   000B22  6EBE               	movwf	190,c	;volatile
   667                           
   668                           ;Proyecto.c: 94: T2CON = 0b00000010;
   669   000B24  0E02               	movlw	2
   670   000B26  6ECA               	movwf	202,c	;volatile
   671                           
   672                           ;Proyecto.c: 95: CCP1CON = 0b00001100;
   673   000B28  0E0C               	movlw	12
   674   000B2A  6EBD               	movwf	189,c	;volatile
   675                           
   676                           ;Proyecto.c: 96: TMR2 = 0;
   677   000B2C  0E00               	movlw	0
   678   000B2E  6ECC               	movwf	204,c	;volatile
   679                           
   680                           ;Proyecto.c: 97: TMR2ON = 1;
   681   000B30  84CA               	bsf	4042,2,c	;volatile
   682                           
   683                           ;Proyecto.c: 100: TRISC6 = 1;
   684   000B32  8C94               	bsf	3988,6,c	;volatile
   685                           
   686                           ;Proyecto.c: 101: TRISC7 = 1;
   687   000B34  8E94               	bsf	3988,7,c	;volatile
   688                           
   689                           ;Proyecto.c: 102: TXSTA = 0b00100000;
   690   000B36  0E20               	movlw	32
   691   000B38  6EAC               	movwf	172,c	;volatile
   692                           
   693                           ;Proyecto.c: 103: RCSTA = 0b10010000;
   694   000B3A  0E90               	movlw	144
   695   000B3C  6EAB               	movwf	171,c	;volatile
   696                           
   697                           ;Proyecto.c: 104: SPBRG = 12;
   698   000B3E  0E0C               	movlw	12
   699   000B40  6EAF               	movwf	175,c	;volatile
   700                           
   701                           ;Proyecto.c: 107: TRISC0= 1;
   702   000B42  8094               	bsf	3988,0,c	;volatile
   703                           
   704                           ;Proyecto.c: 108: UTRDIS = 1;
   705   000B44  866F               	bsf	3951,3,c	;volatile
   706                           
   707                           ;Proyecto.c: 109: USBEN = 0;
   708   000B46  966D               	bcf	3949,3,c	;volatile
   709                           
   710                           ;Proyecto.c: 111: TRISC1=0;
   711   000B48  9294               	bcf	3988,1,c	;volatile
   712                           
   713                           ;Proyecto.c: 112: TMR1=60536;
   714   000B4A  0EEC               	movlw	236
   715   000B4C  6ECF               	movwf	207,c	;volatile
   716   000B4E  0E78               	movlw	120
   717   000B50  6ECE               	movwf	206,c	;volatile
   718                           
   719                           ;Proyecto.c: 113: T1CON=0b10110000;
   720   000B52  0EB0               	movlw	176
   721   000B54  6ECD               	movwf	205,c	;volatile
   722                           
   723                           ;Proyecto.c: 114: CCPR2=60536+125;
   724   000B56  0EEC               	movlw	236
   725   000B58  6EBC               	movwf	188,c	;volatile
   726   000B5A  0EF5               	movlw	245
   727   000B5C  6EBB               	movwf	187,c	;volatile
   728                           
   729                           ;Proyecto.c: 115: CCP2CON=0b00001001;
   730   000B5E  0E09               	movlw	9
   731   000B60  6EBA               	movwf	186,c	;volatile
   732                           
   733                           ;Proyecto.c: 116: TMR1IF=0;
   734   000B62  909E               	bcf	3998,0,c	;volatile
   735                           
   736                           ;Proyecto.c: 117: TMR1IE=1;
   737   000B64  809D               	bsf	3997,0,c	;volatile
   738                           
   739                           ;Proyecto.c: 118: PEIE=1;
   740   000B66  8CF2               	bsf	4082,6,c	;volatile
   741                           
   742                           ;Proyecto.c: 119: TMR1ON=1;
   743   000B68  80CD               	bsf	4045,0,c	;volatile
   744                           
   745                           ;Proyecto.c: 120: GIE=1;
   746   000B6A  8EF2               	bsf	4082,7,c	;volatile
   747                           
   748                           ;Proyecto.c: 122: _delay((unsigned long)((1000)*(8000000/4000.0)));
   749   000B6C  0E0B               	movlw	11
   750   000B6E  6E1E               	movwf	(??_main+1)^0,c
   751   000B70  0E26               	movlw	38
   752   000B72  6E1D               	movwf	??_main^0,c
   753   000B74  0E5E               	movlw	94
   754   000B76                     u1667:
   755   000B76  2EE8               	decfsz	wreg,f,c
   756   000B78  D7FE               	bra	u1667
   757   000B7A  2E1D               	decfsz	??_main^0,f,c
   758   000B7C  D7FC               	bra	u1667
   759   000B7E  2E1E               	decfsz	(??_main+1)^0,f,c
   760   000B80  D7FA               	bra	u1667
   761                           
   762                           ;Proyecto.c: 123: BorraLCD();
   763   000B82  ECB5  F00A         	call	_BorraLCD	;wreg free
   764                           
   765                           ;Proyecto.c: 124: NuevoCaracter(0,cara);
   766   000B86  0E29               	movlw	low _cara
   767   000B88  6E0D               	movwf	NuevoCaracter@c^0,c
   768   000B8A  0E00               	movlw	0
   769   000B8C  ECD8  F009         	call	_NuevoCaracter
   770                           
   771                           ;Proyecto.c: 125: DireccionaLCD(0x82);
   772   000B90  0E82               	movlw	130
   773   000B92  ECCD  F00A         	call	_DireccionaLCD
   774                           
   775                           ;Proyecto.c: 126: EscribeLCD_c(0);
   776   000B96  0E00               	movlw	0
   777   000B98  ECC2  F00A         	call	_EscribeLCD_c
   778                           
   779                           ;Proyecto.c: 127: MensajeLCD_Word("Bienvenido");
   780   000B9C  0E18               	movlw	low STR_1
   781   000B9E  6E0D               	movwf	MensajeLCD_Word@a^0,c
   782   000BA0  EC4A  F009         	call	_MensajeLCD_Word	;wreg free
   783                           
   784                           ;Proyecto.c: 128: EscribeLCD_c(0);
   785   000BA4  0E00               	movlw	0
   786   000BA6  ECC2  F00A         	call	_EscribeLCD_c
   787                           
   788                           ;Proyecto.c: 129: DireccionaLCD(0xC7);
   789   000BAA  0EC7               	movlw	199
   790   000BAC  ECCD  F00A         	call	_DireccionaLCD
   791                           
   792                           ;Proyecto.c: 130: _delay((unsigned long)((1500)*(8000000/4000.0)));
   793   000BB0  0E10               	movlw	16
   794   000BB2  6E1E               	movwf	(??_main+1)^0,c
   795   000BB4  0E39               	movlw	57
   796   000BB6  6E1D               	movwf	??_main^0,c
   797   000BB8  0E0E               	movlw	14
   798   000BBA                     u1677:
   799   000BBA  2EE8               	decfsz	wreg,f,c
   800   000BBC  D7FE               	bra	u1677
   801   000BBE  2E1D               	decfsz	??_main^0,f,c
   802   000BC0  D7FC               	bra	u1677
   803   000BC2  2E1E               	decfsz	(??_main+1)^0,f,c
   804   000BC4  D7FA               	bra	u1677
   805                           
   806                           ;Proyecto.c: 131: DireccionaLCD(0x80);
   807   000BC6  0E80               	movlw	128
   808   000BC8  ECCD  F00A         	call	_DireccionaLCD
   809                           
   810                           ;Proyecto.c: 132: MensajeLCD_Word("                ");
   811   000BCC  0E07               	movlw	low (STR_4+6)
   812   000BCE  6E0D               	movwf	MensajeLCD_Word@a^0,c
   813   000BD0  EC4A  F009         	call	_MensajeLCD_Word	;wreg free
   814                           
   815                           ;Proyecto.c: 133: DireccionaLCD(0x80);
   816   000BD4  0E80               	movlw	128
   817   000BD6  ECCD  F00A         	call	_DireccionaLCD
   818                           
   819                           ;Proyecto.c: 134: MensajeLCD_Word("Password:");
   820   000BDA  0E2E               	movlw	low STR_3
   821   000BDC  6E0D               	movwf	MensajeLCD_Word@a^0,c
   822   000BDE  EC4A  F009         	call	_MensajeLCD_Word	;wreg free
   823                           
   824                           ;Proyecto.c: 136: while (!Password(ing)) {
   825   000BE2  D05B               	goto	l2814
   826   000BE4                     l2776:
   827                           
   828                           ;Proyecto.c: 137: teclaIf = 1;
   829   000BE4  0E00               	movlw	0
   830   000BE6  6E34               	movwf	(_teclaIf+1)^0,c
   831   000BE8  0E01               	movlw	1
   832   000BEA  6E33               	movwf	_teclaIf^0,c
   833                           
   834                           ;Proyecto.c: 138: for (int i = 0; i <4; i++) {
   835   000BEC  0E00               	movlw	0
   836   000BEE  6E20               	movwf	(main@i+1)^0,c
   837   000BF0  0E00               	movlw	0
   838   000BF2  6E1F               	movwf	main@i^0,c
   839   000BF4                     l2782:
   840   000BF4  5031               	movf	_teclaRecibidaIf^0,w,c
   841   000BF6  1032               	iorwf	(_teclaRecibidaIf+1)^0,w,c
   842   000BF8  B4D8               	btfsc	status,2,c
   843   000BFA  D7FC               	goto	l2782
   844                           
   845                           ;Proyecto.c: 140: teclaRecibidaIf=0;
   846   000BFC  0E00               	movlw	0
   847   000BFE  6E32               	movwf	(_teclaRecibidaIf+1)^0,c
   848   000C00  0E00               	movlw	0
   849   000C02  6E31               	movwf	_teclaRecibidaIf^0,c
   850                           
   851                           ;Proyecto.c: 141: ing[i] = Tecla;
   852   000C04  501F               	movf	main@i^0,w,c
   853   000C06  0F3A               	addlw	low _ing
   854   000C08  6ED9               	movwf	fsr2l,c
   855   000C0A  6ADA               	clrf	fsr2h,c
   856   000C0C  C037  FFDF         	movff	_Tecla,indf2
   857   000C10  4A1F               	infsnz	main@i^0,f,c
   858   000C12  2A20               	incf	(main@i+1)^0,f,c
   859   000C14  BE20               	btfsc	(main@i+1)^0,7,c
   860   000C16  D7EE               	goto	l2782
   861   000C18  5020               	movf	(main@i+1)^0,w,c
   862   000C1A  E104               	bnz	u1630
   863   000C1C  0E04               	movlw	4
   864   000C1E  5C1F               	subwf	main@i^0,w,c
   865   000C20  A0D8               	btfss	status,0,c
   866   000C22  D7E8               	goto	l2782
   867   000C24                     u1630:
   868                           
   869                           ;Proyecto.c: 143: };Proyecto.c: 144: teclaIf = 0;
   870   000C24  0E00               	movlw	0
   871   000C26  6E34               	movwf	(_teclaIf+1)^0,c
   872   000C28  0E00               	movlw	0
   873   000C2A  6E33               	movwf	_teclaIf^0,c
   874                           
   875                           ;Proyecto.c: 145: if (Password(ing)) {
   876   000C2C  0E3A               	movlw	low _ing
   877   000C2E  6E0D               	movwf	Password@pass^0,c
   878   000C30  EC7F  F008         	call	_Password	;wreg free
   879   000C34  500D               	movf	?_Password^0,w,c
   880   000C36  100E               	iorwf	(?_Password+1)^0,w,c
   881   000C38  B4D8               	btfsc	status,2,c
   882   000C3A  D016               	goto	l2804
   883                           
   884                           ;Proyecto.c: 146: MensajeLCD_Word("                      ");
   885   000C3C  0E01               	movlw	low STR_4
   886   000C3E  6E0D               	movwf	MensajeLCD_Word@a^0,c
   887   000C40  EC4A  F009         	call	_MensajeLCD_Word	;wreg free
   888                           
   889                           ;Proyecto.c: 147: DireccionaLCD(0xC1);
   890   000C44  0EC1               	movlw	193
   891   000C46  ECCD  F00A         	call	_DireccionaLCD
   892                           
   893                           ;Proyecto.c: 148: EscribeLCD_c(0);
   894   000C4A  0E00               	movlw	0
   895   000C4C  ECC2  F00A         	call	_EscribeLCD_c
   896                           
   897                           ;Proyecto.c: 149: _delay((unsigned long)((1000)*(8000000/4000.0)));
   898   000C50  0E0B               	movlw	11
   899   000C52  6E1E               	movwf	(??_main+1)^0,c
   900   000C54  0E26               	movlw	38
   901   000C56  6E1D               	movwf	??_main^0,c
   902   000C58  0E5E               	movlw	94
   903   000C5A                     u1687:
   904   000C5A  2EE8               	decfsz	wreg,f,c
   905   000C5C  D7FE               	bra	u1687
   906   000C5E  2E1D               	decfsz	??_main^0,f,c
   907   000C60  D7FC               	bra	u1687
   908   000C62  2E1E               	decfsz	(??_main+1)^0,f,c
   909   000C64  D7FA               	bra	u1687
   910                           
   911                           ;Proyecto.c: 150: } else {
   912   000C66  D019               	goto	l2814
   913   000C68                     l2804:
   914                           
   915                           ;Proyecto.c: 152: DireccionaLCD(0xC1);
   916   000C68  0EC1               	movlw	193
   917   000C6A  ECCD  F00A         	call	_DireccionaLCD
   918                           
   919                           ;Proyecto.c: 153: MensajeLCD_Word("Incorrecto");
   920   000C6E  0E23               	movlw	low STR_5
   921   000C70  6E0D               	movwf	MensajeLCD_Word@a^0,c
   922   000C72  EC4A  F009         	call	_MensajeLCD_Word	;wreg free
   923                           
   924                           ;Proyecto.c: 154: _delay((unsigned long)((1000)*(8000000/4000.0)));
   925   000C76  0E0B               	movlw	11
   926   000C78  6E1E               	movwf	(??_main+1)^0,c
   927   000C7A  0E26               	movlw	38
   928   000C7C  6E1D               	movwf	??_main^0,c
   929   000C7E  0E5E               	movlw	94
   930   000C80                     u1697:
   931   000C80  2EE8               	decfsz	wreg,f,c
   932   000C82  D7FE               	bra	u1697
   933   000C84  2E1D               	decfsz	??_main^0,f,c
   934   000C86  D7FC               	bra	u1697
   935   000C88  2E1E               	decfsz	(??_main+1)^0,f,c
   936   000C8A  D7FA               	bra	u1697
   937                           
   938                           ;Proyecto.c: 155: DireccionaLCD(0xC1);
   939   000C8C  0EC1               	movlw	193
   940   000C8E  ECCD  F00A         	call	_DireccionaLCD
   941                           
   942                           ;Proyecto.c: 156: MensajeLCD_Word("                      ");
   943   000C92  0E01               	movlw	low STR_4
   944   000C94  6E0D               	movwf	MensajeLCD_Word@a^0,c
   945   000C96  EC4A  F009         	call	_MensajeLCD_Word	;wreg free
   946   000C9A                     l2814:
   947   000C9A  0E3A               	movlw	low _ing
   948   000C9C  6E0D               	movwf	Password@pass^0,c
   949   000C9E  EC7F  F008         	call	_Password	;wreg free
   950   000CA2  500D               	movf	?_Password^0,w,c
   951   000CA4  100E               	iorwf	(?_Password+1)^0,w,c
   952   000CA6  B4D8               	btfsc	status,2,c
   953   000CA8  D79D               	goto	l2776
   954                           
   955                           ;Proyecto.c: 157: };Proyecto.c: 158: };Proyecto.c: 159: BorraLCD();
   956   000CAA  ECB5  F00A         	call	_BorraLCD	;wreg free
   957                           
   958                           ;Proyecto.c: 164: _delay((unsigned long)((500)*(8000000/4000.0)));
   959   000CAE  0E06               	movlw	6
   960   000CB0  6E1E               	movwf	(??_main+1)^0,c
   961   000CB2  0E13               	movlw	19
   962   000CB4  6E1D               	movwf	??_main^0,c
   963   000CB6  0EAE               	movlw	174
   964   000CB8                     u1707:
   965   000CB8  2EE8               	decfsz	wreg,f,c
   966   000CBA  D7FE               	bra	u1707
   967   000CBC  2E1D               	decfsz	??_main^0,f,c
   968   000CBE  D7FC               	bra	u1707
   969   000CC0  2E1E               	decfsz	(??_main+1)^0,f,c
   970   000CC2  D7FA               	bra	u1707
   971   000CC4                     l2820:
   972                           
   973                           ;Proyecto.c: 168: _delay((unsigned long)((500)*(8000000/4000.0)));
   974   000CC4  0E06               	movlw	6
   975   000CC6  6E1E               	movwf	(??_main+1)^0,c
   976   000CC8  0E13               	movlw	19
   977   000CCA  6E1D               	movwf	??_main^0,c
   978   000CCC  0EAE               	movlw	174
   979   000CCE                     u1717:
   980   000CCE  2EE8               	decfsz	wreg,f,c
   981   000CD0  D7FE               	bra	u1717
   982   000CD2  2E1D               	decfsz	??_main^0,f,c
   983   000CD4  D7FC               	bra	u1717
   984   000CD6  2E1E               	decfsz	(??_main+1)^0,f,c
   985   000CD8  D7FA               	bra	u1717
   986                           
   987                           ;Proyecto.c: 169: LeerHT11();
   988   000CDA  EC30  F00A         	call	_LeerHT11	;wreg free
   989                           
   990                           ;Proyecto.c: 170: TransmitirDatos(0, 0);
   991   000CDE  0E00               	movlw	0
   992   000CE0  6E12               	movwf	(TransmitirDatos@Ent1+1)^0,c
   993   000CE2  0E00               	movlw	0
   994   000CE4  6E11               	movwf	TransmitirDatos@Ent1^0,c
   995   000CE6  0E00               	movlw	0
   996   000CE8  6E14               	movwf	(TransmitirDatos@Ent2+1)^0,c
   997   000CEA  0E00               	movlw	0
   998   000CEC  6E13               	movwf	TransmitirDatos@Ent2^0,c
   999   000CEE  EC22  F004         	call	_TransmitirDatos	;wreg free
  1000                           
  1001                           ;Proyecto.c: 171: Velocidad(Temp);
  1002   000CF2  C039  F008         	movff	_Temp,Velocidad@val
  1003   000CF6  6A09               	clrf	(Velocidad@val+1)^0,c
  1004   000CF8  EC0E  F007         	call	_Velocidad	;wreg free
  1005   000CFC  D7E3               	goto	l2820
  1006   000CFE                     __end_of_main:
  1007                           	callstack 0
  1008                           
  1009 ;; *************** function _Velocidad *****************
  1010 ;; Defined at:
  1011 ;;		line 189 in file "Proyecto.c"
  1012 ;; Parameters:    Size  Location     Type
  1013 ;;  val             2    7[COMRAM] unsigned int 
  1014 ;; Auto vars:     Size  Location     Type
  1015 ;;		None
  1016 ;; Return value:  Size  Location     Type
  1017 ;;                  1    wreg      void 
  1018 ;; Registers used:
  1019 ;;		wreg, status,2, status,0
  1020 ;; Tracked objects:
  1021 ;;		On entry : 0/0
  1022 ;;		On exit  : 0/0
  1023 ;;		Unchanged: 0/0
  1024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1025 ;;      Params:         2       0       0       0       0       0       0       0       0
  1026 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1027 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1028 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1029 ;;Total ram usage:        2 bytes
  1030 ;; Hardware stack levels used: 1
  1031 ;; Hardware stack levels required when called: 4
  1032 ;; This function calls:
  1033 ;;		Nothing
  1034 ;; This function is called by:
  1035 ;;		_main
  1036 ;; This function uses a non-reentrant model
  1037 ;;
  1038                           
  1039                           	psect	text1
  1040   000E1C                     __ptext1:
  1041                           	callstack 0
  1042   000E1C                     _Velocidad:
  1043                           	callstack 26
  1044                           
  1045                           ;Proyecto.c: 190: if (val <= 22) {
  1046                           
  1047                           ;incstack = 0
  1048   000E1C  5009               	movf	(Velocidad@val+1)^0,w,c
  1049   000E1E  E108               	bnz	l2422
  1050   000E20  0E17               	movlw	23
  1051   000E22  5C08               	subwf	Velocidad@val^0,w,c
  1052   000E24  B0D8               	btfsc	status,0,c
  1053   000E26  D004               	goto	l2422
  1054                           
  1055                           ;Proyecto.c: 191: CCP1CON = 0;
  1056   000E28  0E00               	movlw	0
  1057   000E2A  6EBD               	movwf	189,c	;volatile
  1058                           
  1059                           ;Proyecto.c: 192: RC2 = 0;
  1060   000E2C  9482               	bcf	3970,2,c	;volatile
  1061                           
  1062                           ;Proyecto.c: 193: } else if (val > 22 && val < 25) {
  1063   000E2E  0012               	return	
  1064   000E30                     l2422:
  1065   000E30  5009               	movf	(Velocidad@val+1)^0,w,c
  1066   000E32  E104               	bnz	u1220
  1067   000E34  0E17               	movlw	23
  1068   000E36  5C08               	subwf	Velocidad@val^0,w,c
  1069   000E38  A0D8               	btfss	status,0,c
  1070   000E3A  D00B               	goto	l2428
  1071   000E3C                     u1220:
  1072   000E3C  5009               	movf	(Velocidad@val+1)^0,w,c
  1073   000E3E  E109               	bnz	l2428
  1074   000E40  0E19               	movlw	25
  1075   000E42  5C08               	subwf	Velocidad@val^0,w,c
  1076   000E44  B0D8               	btfsc	status,0,c
  1077   000E46  D005               	goto	l2428
  1078                           
  1079                           ;Proyecto.c: 194: CCP1CON = 0b00001100;
  1080   000E48  0E0C               	movlw	12
  1081   000E4A  6EBD               	movwf	189,c	;volatile
  1082                           
  1083                           ;Proyecto.c: 195: CCPR1L = 19;
  1084   000E4C  0E13               	movlw	19
  1085   000E4E  6EBE               	movwf	190,c	;volatile
  1086                           
  1087                           ;Proyecto.c: 196: } else if (val >= 25 && val < 28) {
  1088   000E50  0012               	return	
  1089   000E52                     l2428:
  1090   000E52  5009               	movf	(Velocidad@val+1)^0,w,c
  1091   000E54  E104               	bnz	u1240
  1092   000E56  0E19               	movlw	25
  1093   000E58  5C08               	subwf	Velocidad@val^0,w,c
  1094   000E5A  A0D8               	btfss	status,0,c
  1095   000E5C  D00B               	goto	l2434
  1096   000E5E                     u1240:
  1097   000E5E  5009               	movf	(Velocidad@val+1)^0,w,c
  1098   000E60  E109               	bnz	l2434
  1099   000E62  0E1C               	movlw	28
  1100   000E64  5C08               	subwf	Velocidad@val^0,w,c
  1101   000E66  B0D8               	btfsc	status,0,c
  1102   000E68  D005               	goto	l2434
  1103                           
  1104                           ;Proyecto.c: 197: CCP1CON = 0b00001100;
  1105   000E6A  0E0C               	movlw	12
  1106   000E6C  6EBD               	movwf	189,c	;volatile
  1107                           
  1108                           ;Proyecto.c: 198: CCPR1L = 38;
  1109   000E6E  0E26               	movlw	38
  1110   000E70  6EBE               	movwf	190,c	;volatile
  1111                           
  1112                           ;Proyecto.c: 199: } else if (val >= 28 && val < 31) {
  1113   000E72  0012               	return	
  1114   000E74                     l2434:
  1115   000E74  5009               	movf	(Velocidad@val+1)^0,w,c
  1116   000E76  E104               	bnz	u1260
  1117   000E78  0E1C               	movlw	28
  1118   000E7A  5C08               	subwf	Velocidad@val^0,w,c
  1119   000E7C  A0D8               	btfss	status,0,c
  1120   000E7E  D00B               	goto	l2440
  1121   000E80                     u1260:
  1122   000E80  5009               	movf	(Velocidad@val+1)^0,w,c
  1123   000E82  E109               	bnz	l2440
  1124   000E84  0E1F               	movlw	31
  1125   000E86  5C08               	subwf	Velocidad@val^0,w,c
  1126   000E88  B0D8               	btfsc	status,0,c
  1127   000E8A  D005               	goto	l2440
  1128                           
  1129                           ;Proyecto.c: 200: CCP1CON = 0b00001100;
  1130   000E8C  0E0C               	movlw	12
  1131   000E8E  6EBD               	movwf	189,c	;volatile
  1132                           
  1133                           ;Proyecto.c: 201: CCPR1L = 57;
  1134   000E90  0E39               	movlw	57
  1135   000E92  6EBE               	movwf	190,c	;volatile
  1136                           
  1137                           ;Proyecto.c: 202: } else if (val >= 31 && val < 34) {
  1138   000E94  0012               	return	
  1139   000E96                     l2440:
  1140   000E96  5009               	movf	(Velocidad@val+1)^0,w,c
  1141   000E98  E104               	bnz	u1280
  1142   000E9A  0E1F               	movlw	31
  1143   000E9C  5C08               	subwf	Velocidad@val^0,w,c
  1144   000E9E  A0D8               	btfss	status,0,c
  1145   000EA0  D00B               	goto	l2446
  1146   000EA2                     u1280:
  1147   000EA2  5009               	movf	(Velocidad@val+1)^0,w,c
  1148   000EA4  E109               	bnz	l2446
  1149   000EA6  0E22               	movlw	34
  1150   000EA8  5C08               	subwf	Velocidad@val^0,w,c
  1151   000EAA  B0D8               	btfsc	status,0,c
  1152   000EAC  D005               	goto	l2446
  1153                           
  1154                           ;Proyecto.c: 203: CCP1CON = 0b00001100;
  1155   000EAE  0E0C               	movlw	12
  1156   000EB0  6EBD               	movwf	189,c	;volatile
  1157                           
  1158                           ;Proyecto.c: 204: CCPR1L = 76;
  1159   000EB2  0E4C               	movlw	76
  1160   000EB4  6EBE               	movwf	190,c	;volatile
  1161                           
  1162                           ;Proyecto.c: 205: } else if (val >= 34 && val < 37) {
  1163   000EB6  0012               	return	
  1164   000EB8                     l2446:
  1165   000EB8  5009               	movf	(Velocidad@val+1)^0,w,c
  1166   000EBA  E104               	bnz	u1300
  1167   000EBC  0E22               	movlw	34
  1168   000EBE  5C08               	subwf	Velocidad@val^0,w,c
  1169   000EC0  A0D8               	btfss	status,0,c
  1170   000EC2  D00B               	goto	l2452
  1171   000EC4                     u1300:
  1172   000EC4  5009               	movf	(Velocidad@val+1)^0,w,c
  1173   000EC6  E109               	bnz	l2452
  1174   000EC8  0E25               	movlw	37
  1175   000ECA  5C08               	subwf	Velocidad@val^0,w,c
  1176   000ECC  B0D8               	btfsc	status,0,c
  1177   000ECE  D005               	goto	l2452
  1178                           
  1179                           ;Proyecto.c: 206: CCP1CON = 0b00001100;
  1180   000ED0  0E0C               	movlw	12
  1181   000ED2  6EBD               	movwf	189,c	;volatile
  1182                           
  1183                           ;Proyecto.c: 207: CCPR1L = 95;
  1184   000ED4  0E5F               	movlw	95
  1185   000ED6  6EBE               	movwf	190,c	;volatile
  1186                           
  1187                           ;Proyecto.c: 208: } else if (val >= 37 && val < 40) {
  1188   000ED8  0012               	return	
  1189   000EDA                     l2452:
  1190   000EDA  5009               	movf	(Velocidad@val+1)^0,w,c
  1191   000EDC  E104               	bnz	u1320
  1192   000EDE  0E25               	movlw	37
  1193   000EE0  5C08               	subwf	Velocidad@val^0,w,c
  1194   000EE2  A0D8               	btfss	status,0,c
  1195   000EE4  D00B               	goto	l2458
  1196   000EE6                     u1320:
  1197   000EE6  5009               	movf	(Velocidad@val+1)^0,w,c
  1198   000EE8  E109               	bnz	l2458
  1199   000EEA  0E28               	movlw	40
  1200   000EEC  5C08               	subwf	Velocidad@val^0,w,c
  1201   000EEE  B0D8               	btfsc	status,0,c
  1202   000EF0  D005               	goto	l2458
  1203                           
  1204                           ;Proyecto.c: 209: CCP1CON = 0b00001100;
  1205   000EF2  0E0C               	movlw	12
  1206   000EF4  6EBD               	movwf	189,c	;volatile
  1207                           
  1208                           ;Proyecto.c: 210: CCPR1L = 113;
  1209   000EF6  0E71               	movlw	113
  1210   000EF8  6EBE               	movwf	190,c	;volatile
  1211                           
  1212                           ;Proyecto.c: 211: } else if (val >= 40) {
  1213   000EFA  0012               	return	
  1214   000EFC                     l2458:
  1215   000EFC  5009               	movf	(Velocidad@val+1)^0,w,c
  1216   000EFE  E104               	bnz	u1340
  1217   000F00  0E28               	movlw	40
  1218   000F02  5C08               	subwf	Velocidad@val^0,w,c
  1219   000F04  A0D8               	btfss	status,0,c
  1220   000F06  0012               	return	
  1221   000F08                     u1340:
  1222                           
  1223                           ;Proyecto.c: 212: CCP1CON = 0;
  1224   000F08  0E00               	movlw	0
  1225   000F0A  6EBD               	movwf	189,c	;volatile
  1226                           
  1227                           ;Proyecto.c: 213: RC2 = 1;
  1228   000F0C  8482               	bsf	3970,2,c	;volatile
  1229   000F0E  0012               	return	
  1230   000F10                     __end_of_Velocidad:
  1231                           	callstack 0
  1232                           
  1233 ;; *************** function _TransmitirDatos *****************
  1234 ;; Defined at:
  1235 ;;		line 343 in file "Proyecto.c"
  1236 ;; Parameters:    Size  Location     Type
  1237 ;;  Ent1            2   16[COMRAM] unsigned int 
  1238 ;;  Ent2            2   18[COMRAM] unsigned int 
  1239 ;; Auto vars:     Size  Location     Type
  1240 ;;  TempC           2   26[COMRAM] unsigned int 
  1241 ;;  Simb            2   24[COMRAM] unsigned int 
  1242 ;;  n               2   22[COMRAM] unsigned int 
  1243 ;;  HumedadC        2    0        unsigned int 
  1244 ;; Return value:  Size  Location     Type
  1245 ;;                  1    wreg      void 
  1246 ;; Registers used:
  1247 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1248 ;; Tracked objects:
  1249 ;;		On entry : 0/0
  1250 ;;		On exit  : 0/0
  1251 ;;		Unchanged: 0/0
  1252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1253 ;;      Params:         4       0       0       0       0       0       0       0       0
  1254 ;;      Locals:         6       0       0       0       0       0       0       0       0
  1255 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1256 ;;      Totals:        12       0       0       0       0       0       0       0       0
  1257 ;;Total ram usage:       12 bytes
  1258 ;; Hardware stack levels used: 1
  1259 ;; Hardware stack levels required when called: 8
  1260 ;; This function calls:
  1261 ;;		_BorraLCD
  1262 ;;		_DireccionaLCD
  1263 ;;		_EscribeLCD_c
  1264 ;;		_MensajeLCD_Word
  1265 ;;		_Transmitir
  1266 ;;		___awdiv
  1267 ;;		___lbdiv
  1268 ;;		___lbmod
  1269 ;;		___lwdiv
  1270 ;;		___lwmod
  1271 ;;		___wmul
  1272 ;; This function is called by:
  1273 ;;		_main
  1274 ;; This function uses a non-reentrant model
  1275 ;;
  1276                           
  1277                           	psect	text2
  1278   000844                     __ptext2:
  1279                           	callstack 0
  1280   000844                     _TransmitirDatos:
  1281                           	callstack 22
  1282                           
  1283                           ;Proyecto.c: 344: unsigned int n = Ent1 * 10 + Ent2, TempC = Temp, HumedadC = Humedad;
  1284                           
  1285                           ;incstack = 0
  1286   000844  C011  F008         	movff	TransmitirDatos@Ent1,___wmul@multiplier
  1287   000848  C012  F009         	movff	TransmitirDatos@Ent1+1,___wmul@multiplier+1
  1288   00084C  0E00               	movlw	0
  1289   00084E  6E0B               	movwf	(___wmul@multiplicand+1)^0,c
  1290   000850  0E0A               	movlw	10
  1291   000852  6E0A               	movwf	___wmul@multiplicand^0,c
  1292   000854  EC91  F00A         	call	___wmul	;wreg free
  1293   000858  5013               	movf	TransmitirDatos@Ent2^0,w,c
  1294   00085A  2408               	addwf	?___wmul^0,w,c
  1295   00085C  6E17               	movwf	TransmitirDatos@n^0,c
  1296   00085E  5014               	movf	(TransmitirDatos@Ent2+1)^0,w,c
  1297   000860  2009               	addwfc	(?___wmul+1)^0,w,c
  1298   000862  6E18               	movwf	(TransmitirDatos@n+1)^0,c
  1299   000864  C039  F01B         	movff	_Temp,TransmitirDatos@TempC
  1300   000868  6A1C               	clrf	(TransmitirDatos@TempC+1)^0,c
  1301                           
  1302                           ;Proyecto.c: 345: unsigned int Simb = 67;
  1303   00086A  0E00               	movlw	0
  1304   00086C  6E1A               	movwf	(TransmitirDatos@Simb+1)^0,c
  1305   00086E  0E43               	movlw	67
  1306   000870  6E19               	movwf	TransmitirDatos@Simb^0,c
  1307                           
  1308                           ;Proyecto.c: 346: BorraLCD();
  1309   000872  ECB5  F00A         	call	_BorraLCD	;wreg free
  1310                           
  1311                           ;Proyecto.c: 347: switch (n) {
  1312   000876  D03E               	goto	l2356
  1313   000878                     l350:
  1314                           
  1315                           ;Proyecto.c: 349: TempC = Temp;
  1316   000878  C039  F01B         	movff	_Temp,TransmitirDatos@TempC
  1317   00087C  6A1C               	clrf	(TransmitirDatos@TempC+1)^0,c
  1318                           
  1319                           ;Proyecto.c: 350: Simb = 67;
  1320   00087E  0E00               	movlw	0
  1321   000880  6E1A               	movwf	(TransmitirDatos@Simb+1)^0,c
  1322   000882  0E43               	movlw	67
  1323   000884  D035               	goto	L3
  1324   000886                     l2342:
  1325                           
  1326                           ;Proyecto.c: 353: TempC = Temp + 273;
  1327   000886  0E11               	movlw	17
  1328   000888  2439               	addwf	_Temp^0,w,c
  1329   00088A  6E1B               	movwf	TransmitirDatos@TempC^0,c
  1330   00088C  6A1C               	clrf	(TransmitirDatos@TempC+1)^0,c
  1331   00088E  0E01               	movlw	1
  1332   000890  221C               	addwfc	(TransmitirDatos@TempC+1)^0,f,c
  1333                           
  1334                           ;Proyecto.c: 354: Simb = 75;
  1335   000892  0E00               	movlw	0
  1336   000894  6E1A               	movwf	(TransmitirDatos@Simb+1)^0,c
  1337   000896  0E4B               	movlw	75
  1338   000898  D02B               	goto	L3
  1339   00089A                     l2346:
  1340                           
  1341                           ;Proyecto.c: 357: TempC = Temp * 9 / 5 + 492;
  1342   00089A  5039               	movf	_Temp^0,w,c
  1343   00089C  0D09               	mullw	9
  1344   00089E  CFF3 F008          	movff	prodl,___awdiv@dividend
  1345   0008A2  CFF4 F009          	movff	prodh,___awdiv@dividend+1
  1346   0008A6  0E00               	movlw	0
  1347   0008A8  6E0B               	movwf	(___awdiv@divisor+1)^0,c
  1348   0008AA  0E05               	movlw	5
  1349   0008AC  6E0A               	movwf	___awdiv@divisor^0,c
  1350   0008AE  EC3D  F008         	call	___awdiv	;wreg free
  1351   0008B2  0EEC               	movlw	236
  1352   0008B4  2408               	addwf	?___awdiv^0,w,c
  1353   0008B6  6E1B               	movwf	TransmitirDatos@TempC^0,c
  1354   0008B8  0E01               	movlw	1
  1355   0008BA  2009               	addwfc	(?___awdiv+1)^0,w,c
  1356   0008BC  6E1C               	movwf	(TransmitirDatos@TempC+1)^0,c
  1357                           
  1358                           ;Proyecto.c: 358: Simb = 82;
  1359   0008BE  0E00               	movlw	0
  1360   0008C0  6E1A               	movwf	(TransmitirDatos@Simb+1)^0,c
  1361   0008C2  0E52               	movlw	82
  1362   0008C4  D015               	goto	L3
  1363   0008C6                     l2350:
  1364                           
  1365                           ;Proyecto.c: 361: TempC = Temp * 9 / 5 + 32;
  1366   0008C6  5039               	movf	_Temp^0,w,c
  1367   0008C8  0D09               	mullw	9
  1368   0008CA  CFF3 F008          	movff	prodl,___awdiv@dividend
  1369   0008CE  CFF4 F009          	movff	prodh,___awdiv@dividend+1
  1370   0008D2  0E00               	movlw	0
  1371   0008D4  6E0B               	movwf	(___awdiv@divisor+1)^0,c
  1372   0008D6  0E05               	movlw	5
  1373   0008D8  6E0A               	movwf	___awdiv@divisor^0,c
  1374   0008DA  EC3D  F008         	call	___awdiv	;wreg free
  1375   0008DE  0E20               	movlw	32
  1376   0008E0  2408               	addwf	?___awdiv^0,w,c
  1377   0008E2  6E1B               	movwf	TransmitirDatos@TempC^0,c
  1378   0008E4  0E00               	movlw	0
  1379   0008E6  2009               	addwfc	(?___awdiv+1)^0,w,c
  1380   0008E8  6E1C               	movwf	(TransmitirDatos@TempC+1)^0,c
  1381                           
  1382                           ;Proyecto.c: 362: Simb = 70;
  1383   0008EA  0E00               	movlw	0
  1384   0008EC  6E1A               	movwf	(TransmitirDatos@Simb+1)^0,c
  1385   0008EE  0E46               	movlw	70
  1386   0008F0                     L3:
  1387   0008F0  6E19               	movwf	TransmitirDatos@Simb^0,c
  1388                           
  1389                           ;Proyecto.c: 363: break;
  1390   0008F2  D015               	goto	l2358
  1391   0008F4                     l2356:
  1392   0008F4  C017  F015         	movff	TransmitirDatos@n,??_TransmitirDatos
  1393   0008F8  C018  F016         	movff	TransmitirDatos@n+1,??_TransmitirDatos+1
  1394                           
  1395                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1396                           ; Switch size 1, requested type "simple"
  1397                           ; Number of cases is 1, Range of values is 0 to 0
  1398                           ; switch strategies available:
  1399                           ; Name         Instructions Cycles
  1400                           ; simple_byte            4     3 (average)
  1401                           ;	Chosen strategy is simple_byte
  1402   0008FC  5016               	movf	(??_TransmitirDatos+1)^0,w,c
  1403   0008FE  0A00               	xorlw	0	; case 0
  1404   000900  A4D8               	btfss	status,2,c
  1405   000902  D00D               	goto	l2358
  1406                           
  1407                           ; Switch size 1, requested type "simple"
  1408                           ; Number of cases is 4, Range of values is 0 to 11
  1409                           ; switch strategies available:
  1410                           ; Name         Instructions Cycles
  1411                           ; simple_byte           13     7 (average)
  1412                           ;	Chosen strategy is simple_byte
  1413   000904  5015               	movf	??_TransmitirDatos^0,w,c
  1414   000906  0A00               	xorlw	0	; case 0
  1415   000908  B4D8               	btfsc	status,2,c
  1416   00090A  D7B6               	goto	l350
  1417   00090C  0A01               	xorlw	1	; case 1
  1418   00090E  B4D8               	btfsc	status,2,c
  1419   000910  D7BA               	goto	l2342
  1420   000912  0A0B               	xorlw	11	; case 10
  1421   000914  B4D8               	btfsc	status,2,c
  1422   000916  D7C1               	goto	l2346
  1423   000918  0A01               	xorlw	1	; case 11
  1424   00091A  B4D8               	btfsc	status,2,c
  1425   00091C  D7D4               	goto	l2350
  1426   00091E                     l2358:
  1427                           
  1428                           ;Proyecto.c: 365: Transmitir('T');
  1429   00091E  0E54               	movlw	84
  1430   000920  ECF9  F00A         	call	_Transmitir
  1431                           
  1432                           ;Proyecto.c: 366: Transmitir('e');
  1433   000924  0E65               	movlw	101
  1434   000926  ECF9  F00A         	call	_Transmitir
  1435                           
  1436                           ;Proyecto.c: 367: Transmitir('m');
  1437   00092A  0E6D               	movlw	109
  1438   00092C  ECF9  F00A         	call	_Transmitir
  1439                           
  1440                           ;Proyecto.c: 368: Transmitir('p');
  1441   000930  0E70               	movlw	112
  1442   000932  ECF9  F00A         	call	_Transmitir
  1443                           
  1444                           ;Proyecto.c: 369: Transmitir(':');
  1445   000936  0E3A               	movlw	58
  1446   000938  ECF9  F00A         	call	_Transmitir
  1447                           
  1448                           ;Proyecto.c: 370: Transmitir(' ');
  1449   00093C  0E20               	movlw	32
  1450   00093E  ECF9  F00A         	call	_Transmitir
  1451                           
  1452                           ;Proyecto.c: 372: MensajeLCD_Word("Temp:");
  1453   000942  0E38               	movlw	low STR_7
  1454   000944  6E0D               	movwf	MensajeLCD_Word@a^0,c
  1455   000946  EC4A  F009         	call	_MensajeLCD_Word	;wreg free
  1456                           
  1457                           ;Proyecto.c: 373: if (TempC / 100 > 0) {
  1458   00094A  C01B  F008         	movff	TransmitirDatos@TempC,___lwdiv@dividend
  1459   00094E  C01C  F009         	movff	TransmitirDatos@TempC+1,___lwdiv@dividend+1
  1460   000952  0E00               	movlw	0
  1461   000954  6E0B               	movwf	(___lwdiv@divisor+1)^0,c
  1462   000956  0E64               	movlw	100
  1463   000958  6E0A               	movwf	___lwdiv@divisor^0,c
  1464   00095A  EC21  F009         	call	___lwdiv	;wreg free
  1465   00095E  5008               	movf	?___lwdiv^0,w,c
  1466   000960  1009               	iorwf	(?___lwdiv+1)^0,w,c
  1467   000962  B4D8               	btfsc	status,2,c
  1468   000964  D02A               	goto	l355
  1469                           
  1470                           ;Proyecto.c: 374: Transmitir(TempC / 100 + 48);
  1471   000966  C01B  F008         	movff	TransmitirDatos@TempC,___lwdiv@dividend
  1472   00096A  C01C  F009         	movff	TransmitirDatos@TempC+1,___lwdiv@dividend+1
  1473   00096E  0E00               	movlw	0
  1474   000970  6E0B               	movwf	(___lwdiv@divisor+1)^0,c
  1475   000972  0E64               	movlw	100
  1476   000974  6E0A               	movwf	___lwdiv@divisor^0,c
  1477   000976  EC21  F009         	call	___lwdiv	;wreg free
  1478   00097A  5008               	movf	?___lwdiv^0,w,c
  1479   00097C  0F30               	addlw	48
  1480   00097E  ECF9  F00A         	call	_Transmitir
  1481                           
  1482                           ;Proyecto.c: 375: EscribeLCD_c(TempC / 100 + 48);
  1483   000982  C01B  F008         	movff	TransmitirDatos@TempC,___lwdiv@dividend
  1484   000986  C01C  F009         	movff	TransmitirDatos@TempC+1,___lwdiv@dividend+1
  1485   00098A  0E00               	movlw	0
  1486   00098C  6E0B               	movwf	(___lwdiv@divisor+1)^0,c
  1487   00098E  0E64               	movlw	100
  1488   000990  6E0A               	movwf	___lwdiv@divisor^0,c
  1489   000992  EC21  F009         	call	___lwdiv	;wreg free
  1490   000996  5008               	movf	?___lwdiv^0,w,c
  1491   000998  0F30               	addlw	48
  1492   00099A  ECC2  F00A         	call	_EscribeLCD_c
  1493                           
  1494                           ;Proyecto.c: 376: TempC = TempC % 100;
  1495   00099E  C01B  F008         	movff	TransmitirDatos@TempC,___lwmod@dividend
  1496   0009A2  C01C  F009         	movff	TransmitirDatos@TempC+1,___lwmod@dividend+1
  1497   0009A6  0E00               	movlw	0
  1498   0009A8  6E0B               	movwf	(___lwmod@divisor+1)^0,c
  1499   0009AA  0E64               	movlw	100
  1500   0009AC  6E0A               	movwf	___lwmod@divisor^0,c
  1501   0009AE  ECB7  F009         	call	___lwmod	;wreg free
  1502   0009B2  C008  F01B         	movff	?___lwmod,TransmitirDatos@TempC
  1503   0009B6  C009  F01C         	movff	?___lwmod+1,TransmitirDatos@TempC+1
  1504   0009BA                     l355:
  1505                           
  1506                           ;Proyecto.c: 377: };Proyecto.c: 378: Transmitir(TempC / 10 + 48);
  1507   0009BA  C01B  F008         	movff	TransmitirDatos@TempC,___lwdiv@dividend
  1508   0009BE  C01C  F009         	movff	TransmitirDatos@TempC+1,___lwdiv@dividend+1
  1509   0009C2  0E00               	movlw	0
  1510   0009C4  6E0B               	movwf	(___lwdiv@divisor+1)^0,c
  1511   0009C6  0E0A               	movlw	10
  1512   0009C8  6E0A               	movwf	___lwdiv@divisor^0,c
  1513   0009CA  EC21  F009         	call	___lwdiv	;wreg free
  1514   0009CE  5008               	movf	?___lwdiv^0,w,c
  1515   0009D0  0F30               	addlw	48
  1516   0009D2  ECF9  F00A         	call	_Transmitir
  1517                           
  1518                           ;Proyecto.c: 379: Transmitir(TempC % 10 + 48);
  1519   0009D6  C01B  F008         	movff	TransmitirDatos@TempC,___lwmod@dividend
  1520   0009DA  C01C  F009         	movff	TransmitirDatos@TempC+1,___lwmod@dividend+1
  1521   0009DE  0E00               	movlw	0
  1522   0009E0  6E0B               	movwf	(___lwmod@divisor+1)^0,c
  1523   0009E2  0E0A               	movlw	10
  1524   0009E4  6E0A               	movwf	___lwmod@divisor^0,c
  1525   0009E6  ECB7  F009         	call	___lwmod	;wreg free
  1526   0009EA  5008               	movf	?___lwmod^0,w,c
  1527   0009EC  0F30               	addlw	48
  1528   0009EE  ECF9  F00A         	call	_Transmitir
  1529                           
  1530                           ;Proyecto.c: 380: Transmitir(167);
  1531   0009F2  0EA7               	movlw	167
  1532   0009F4  ECF9  F00A         	call	_Transmitir
  1533                           
  1534                           ;Proyecto.c: 381: Transmitir(Simb);
  1535   0009F8  5019               	movf	TransmitirDatos@Simb^0,w,c
  1536   0009FA  ECF9  F00A         	call	_Transmitir
  1537                           
  1538                           ;Proyecto.c: 382: Transmitir(' ');
  1539   0009FE  0E20               	movlw	32
  1540   000A00  ECF9  F00A         	call	_Transmitir
  1541                           
  1542                           ;Proyecto.c: 383: Transmitir('\n');
  1543   000A04  0E0A               	movlw	10
  1544   000A06  ECF9  F00A         	call	_Transmitir
  1545                           
  1546                           ;Proyecto.c: 384: Transmitir('H');
  1547   000A0A  0E48               	movlw	72
  1548   000A0C  ECF9  F00A         	call	_Transmitir
  1549                           
  1550                           ;Proyecto.c: 385: Transmitir('u');
  1551   000A10  0E75               	movlw	117
  1552   000A12  ECF9  F00A         	call	_Transmitir
  1553                           
  1554                           ;Proyecto.c: 386: Transmitir('m');
  1555   000A16  0E6D               	movlw	109
  1556   000A18  ECF9  F00A         	call	_Transmitir
  1557                           
  1558                           ;Proyecto.c: 387: Transmitir(':');
  1559   000A1C  0E3A               	movlw	58
  1560   000A1E  ECF9  F00A         	call	_Transmitir
  1561                           
  1562                           ;Proyecto.c: 388: Transmitir(' ');
  1563   000A22  0E20               	movlw	32
  1564   000A24  ECF9  F00A         	call	_Transmitir
  1565                           
  1566                           ;Proyecto.c: 389: Transmitir(Humedad / 10 + 48);
  1567   000A28  0E0A               	movlw	10
  1568   000A2A  6E08               	movwf	___lbdiv@divisor^0,c
  1569   000A2C  5038               	movf	_Humedad^0,w,c
  1570   000A2E  EC13  F00A         	call	___lbdiv
  1571   000A32  0F30               	addlw	48
  1572   000A34  ECF9  F00A         	call	_Transmitir
  1573                           
  1574                           ;Proyecto.c: 390: Transmitir(Humedad % 10 + 48);
  1575   000A38  0E0A               	movlw	10
  1576   000A3A  6E08               	movwf	___lbmod@divisor^0,c
  1577   000A3C  5038               	movf	_Humedad^0,w,c
  1578   000A3E  EC7C  F00A         	call	___lbmod
  1579   000A42  0F30               	addlw	48
  1580   000A44  ECF9  F00A         	call	_Transmitir
  1581                           
  1582                           ;Proyecto.c: 391: Transmitir(' ');
  1583   000A48  0E20               	movlw	32
  1584   000A4A  ECF9  F00A         	call	_Transmitir
  1585                           
  1586                           ;Proyecto.c: 392: Transmitir('%');
  1587   000A4E  0E25               	movlw	37
  1588   000A50  ECF9  F00A         	call	_Transmitir
  1589                           
  1590                           ;Proyecto.c: 393: Transmitir('\n');
  1591   000A54  0E0A               	movlw	10
  1592   000A56  ECF9  F00A         	call	_Transmitir
  1593                           
  1594                           ;Proyecto.c: 394: Transmitir(' ');
  1595   000A5A  0E20               	movlw	32
  1596   000A5C  ECF9  F00A         	call	_Transmitir
  1597                           
  1598                           ;Proyecto.c: 396: EscribeLCD_c(TempC / 10 + 48);
  1599   000A60  C01B  F008         	movff	TransmitirDatos@TempC,___lwdiv@dividend
  1600   000A64  C01C  F009         	movff	TransmitirDatos@TempC+1,___lwdiv@dividend+1
  1601   000A68  0E00               	movlw	0
  1602   000A6A  6E0B               	movwf	(___lwdiv@divisor+1)^0,c
  1603   000A6C  0E0A               	movlw	10
  1604   000A6E  6E0A               	movwf	___lwdiv@divisor^0,c
  1605   000A70  EC21  F009         	call	___lwdiv	;wreg free
  1606   000A74  5008               	movf	?___lwdiv^0,w,c
  1607   000A76  0F30               	addlw	48
  1608   000A78  ECC2  F00A         	call	_EscribeLCD_c
  1609                           
  1610                           ;Proyecto.c: 397: EscribeLCD_c(TempC % 10 + 48);
  1611   000A7C  C01B  F008         	movff	TransmitirDatos@TempC,___lwmod@dividend
  1612   000A80  C01C  F009         	movff	TransmitirDatos@TempC+1,___lwmod@dividend+1
  1613   000A84  0E00               	movlw	0
  1614   000A86  6E0B               	movwf	(___lwmod@divisor+1)^0,c
  1615   000A88  0E0A               	movlw	10
  1616   000A8A  6E0A               	movwf	___lwmod@divisor^0,c
  1617   000A8C  ECB7  F009         	call	___lwmod	;wreg free
  1618   000A90  5008               	movf	?___lwmod^0,w,c
  1619   000A92  0F30               	addlw	48
  1620   000A94  ECC2  F00A         	call	_EscribeLCD_c
  1621                           
  1622                           ;Proyecto.c: 398: EscribeLCD_c(Simb);
  1623   000A98  5019               	movf	TransmitirDatos@Simb^0,w,c
  1624   000A9A  ECC2  F00A         	call	_EscribeLCD_c
  1625                           
  1626                           ;Proyecto.c: 399: DireccionaLCD(192);
  1627   000A9E  0EC0               	movlw	192
  1628   000AA0  ECCD  F00A         	call	_DireccionaLCD
  1629                           
  1630                           ;Proyecto.c: 400: MensajeLCD_Word("Hum:");
  1631   000AA4  0E3E               	movlw	low STR_8
  1632   000AA6  6E0D               	movwf	MensajeLCD_Word@a^0,c
  1633   000AA8  EC4A  F009         	call	_MensajeLCD_Word	;wreg free
  1634                           
  1635                           ;Proyecto.c: 401: EscribeLCD_c(Humedad / 10 + 48);
  1636   000AAC  0E0A               	movlw	10
  1637   000AAE  6E08               	movwf	___lbdiv@divisor^0,c
  1638   000AB0  5038               	movf	_Humedad^0,w,c
  1639   000AB2  EC13  F00A         	call	___lbdiv
  1640   000AB6  0F30               	addlw	48
  1641   000AB8  ECC2  F00A         	call	_EscribeLCD_c
  1642                           
  1643                           ;Proyecto.c: 402: EscribeLCD_c(Humedad % 10 + 48);
  1644   000ABC  0E0A               	movlw	10
  1645   000ABE  6E08               	movwf	___lbmod@divisor^0,c
  1646   000AC0  5038               	movf	_Humedad^0,w,c
  1647   000AC2  EC7C  F00A         	call	___lbmod
  1648   000AC6  0F30               	addlw	48
  1649   000AC8  ECC2  F00A         	call	_EscribeLCD_c
  1650                           
  1651                           ;Proyecto.c: 403: EscribeLCD_c('%');
  1652   000ACC  0E25               	movlw	37
  1653   000ACE  ECC2  F00A         	call	_EscribeLCD_c
  1654   000AD2  0012               	return		;funcret
  1655   000AD4                     __end_of_TransmitirDatos:
  1656                           	callstack 0
  1657                           
  1658 ;; *************** function ___wmul *****************
  1659 ;; Defined at:
  1660 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul16.c"
  1661 ;; Parameters:    Size  Location     Type
  1662 ;;  multiplier      2    7[COMRAM] unsigned int 
  1663 ;;  multiplicand    2    9[COMRAM] unsigned int 
  1664 ;; Auto vars:     Size  Location     Type
  1665 ;;  product         2   11[COMRAM] unsigned int 
  1666 ;; Return value:  Size  Location     Type
  1667 ;;                  2    7[COMRAM] unsigned int 
  1668 ;; Registers used:
  1669 ;;		wreg, status,2, status,0, prodl, prodh
  1670 ;; Tracked objects:
  1671 ;;		On entry : 0/0
  1672 ;;		On exit  : 0/0
  1673 ;;		Unchanged: 0/0
  1674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1675 ;;      Params:         4       0       0       0       0       0       0       0       0
  1676 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1677 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1678 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1679 ;;Total ram usage:        6 bytes
  1680 ;; Hardware stack levels used: 1
  1681 ;; Hardware stack levels required when called: 4
  1682 ;; This function calls:
  1683 ;;		Nothing
  1684 ;; This function is called by:
  1685 ;;		_TransmitirDatos
  1686 ;; This function uses a non-reentrant model
  1687 ;;
  1688                           
  1689                           	psect	text3
  1690   001522                     __ptext3:
  1691                           	callstack 0
  1692   001522                     ___wmul:
  1693                           	callstack 25
  1694                           
  1695                           ;incstack = 0
  1696   001522  5008               	movf	___wmul@multiplier^0,w,c
  1697   001524  020A               	mulwf	___wmul@multiplicand^0,c
  1698   001526  CFF3 F00C          	movff	prodl,___wmul@product
  1699   00152A  CFF4 F00D          	movff	prodh,___wmul@product+1
  1700   00152E  5008               	movf	___wmul@multiplier^0,w,c
  1701   001530  020B               	mulwf	(___wmul@multiplicand+1)^0,c
  1702   001532  50F3               	movf	243,w,c
  1703   001534  260D               	addwf	(___wmul@product+1)^0,f,c
  1704   001536  5009               	movf	(___wmul@multiplier+1)^0,w,c
  1705   001538  020A               	mulwf	___wmul@multiplicand^0,c
  1706   00153A  50F3               	movf	243,w,c
  1707   00153C  260D               	addwf	(___wmul@product+1)^0,f,c
  1708   00153E  C00C  F008         	movff	___wmul@product,?___wmul
  1709   001542  C00D  F009         	movff	___wmul@product+1,?___wmul+1
  1710   001546  0012               	return		;funcret
  1711   001548                     __end_of___wmul:
  1712                           	callstack 0
  1713                           
  1714 ;; *************** function ___lwmod *****************
  1715 ;; Defined at:
  1716 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwmod.c"
  1717 ;; Parameters:    Size  Location     Type
  1718 ;;  dividend        2    7[COMRAM] unsigned int 
  1719 ;;  divisor         2    9[COMRAM] unsigned int 
  1720 ;; Auto vars:     Size  Location     Type
  1721 ;;  counter         1   11[COMRAM] unsigned char 
  1722 ;; Return value:  Size  Location     Type
  1723 ;;                  2    7[COMRAM] unsigned int 
  1724 ;; Registers used:
  1725 ;;		wreg, status,2, status,0
  1726 ;; Tracked objects:
  1727 ;;		On entry : 0/0
  1728 ;;		On exit  : 0/0
  1729 ;;		Unchanged: 0/0
  1730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1731 ;;      Params:         4       0       0       0       0       0       0       0       0
  1732 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1733 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1734 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1735 ;;Total ram usage:        5 bytes
  1736 ;; Hardware stack levels used: 1
  1737 ;; Hardware stack levels required when called: 4
  1738 ;; This function calls:
  1739 ;;		Nothing
  1740 ;; This function is called by:
  1741 ;;		_TransmitirDatos
  1742 ;; This function uses a non-reentrant model
  1743 ;;
  1744                           
  1745                           	psect	text4
  1746   00136E                     __ptext4:
  1747                           	callstack 0
  1748   00136E                     ___lwmod:
  1749                           	callstack 25
  1750                           
  1751                           ;incstack = 0
  1752   00136E  500A               	movf	___lwmod@divisor^0,w,c
  1753   001370  100B               	iorwf	(___lwmod@divisor+1)^0,w,c
  1754   001372  B4D8               	btfsc	status,2,c
  1755   001374  D018               	goto	l892
  1756   001376  0E01               	movlw	1
  1757   001378  6E0C               	movwf	___lwmod@counter^0,c
  1758   00137A  D004               	goto	l2202
  1759   00137C                     l2200:
  1760   00137C  90D8               	bcf	status,0,c
  1761   00137E  360A               	rlcf	___lwmod@divisor^0,f,c
  1762   001380  360B               	rlcf	(___lwmod@divisor+1)^0,f,c
  1763   001382  2A0C               	incf	___lwmod@counter^0,f,c
  1764   001384                     l2202:
  1765   001384  AE0B               	btfss	(___lwmod@divisor+1)^0,7,c
  1766   001386  D7FA               	goto	l2200
  1767   001388                     u1050:
  1768   001388  500A               	movf	___lwmod@divisor^0,w,c
  1769   00138A  5C08               	subwf	___lwmod@dividend^0,w,c
  1770   00138C  500B               	movf	(___lwmod@divisor+1)^0,w,c
  1771   00138E  5809               	subwfb	(___lwmod@dividend+1)^0,w,c
  1772   001390  A0D8               	btfss	status,0,c
  1773   001392  D004               	goto	l2208
  1774   001394  500A               	movf	___lwmod@divisor^0,w,c
  1775   001396  5E08               	subwf	___lwmod@dividend^0,f,c
  1776   001398  500B               	movf	(___lwmod@divisor+1)^0,w,c
  1777   00139A  5A09               	subwfb	(___lwmod@dividend+1)^0,f,c
  1778   00139C                     l2208:
  1779   00139C  90D8               	bcf	status,0,c
  1780   00139E  320B               	rrcf	(___lwmod@divisor+1)^0,f,c
  1781   0013A0  320A               	rrcf	___lwmod@divisor^0,f,c
  1782   0013A2  2E0C               	decfsz	___lwmod@counter^0,f,c
  1783   0013A4  D7F1               	goto	u1050
  1784   0013A6                     l892:
  1785   0013A6  C008  F008         	movff	___lwmod@dividend,?___lwmod
  1786   0013AA  C009  F009         	movff	___lwmod@dividend+1,?___lwmod+1
  1787   0013AE  0012               	return		;funcret
  1788   0013B0                     __end_of___lwmod:
  1789                           	callstack 0
  1790                           
  1791 ;; *************** function ___lwdiv *****************
  1792 ;; Defined at:
  1793 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwdiv.c"
  1794 ;; Parameters:    Size  Location     Type
  1795 ;;  dividend        2    7[COMRAM] unsigned int 
  1796 ;;  divisor         2    9[COMRAM] unsigned int 
  1797 ;; Auto vars:     Size  Location     Type
  1798 ;;  quotient        2   11[COMRAM] unsigned int 
  1799 ;;  counter         1   13[COMRAM] unsigned char 
  1800 ;; Return value:  Size  Location     Type
  1801 ;;                  2    7[COMRAM] unsigned int 
  1802 ;; Registers used:
  1803 ;;		wreg, status,2, status,0
  1804 ;; Tracked objects:
  1805 ;;		On entry : 0/0
  1806 ;;		On exit  : 0/0
  1807 ;;		Unchanged: 0/0
  1808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1809 ;;      Params:         4       0       0       0       0       0       0       0       0
  1810 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1811 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1812 ;;      Totals:         7       0       0       0       0       0       0       0       0
  1813 ;;Total ram usage:        7 bytes
  1814 ;; Hardware stack levels used: 1
  1815 ;; Hardware stack levels required when called: 4
  1816 ;; This function calls:
  1817 ;;		Nothing
  1818 ;; This function is called by:
  1819 ;;		_TransmitirDatos
  1820 ;; This function uses a non-reentrant model
  1821 ;;
  1822                           
  1823                           	psect	text5
  1824   001242                     __ptext5:
  1825                           	callstack 0
  1826   001242                     ___lwdiv:
  1827                           	callstack 25
  1828                           
  1829                           ;incstack = 0
  1830   001242  0E00               	movlw	0
  1831   001244  6E0D               	movwf	(___lwdiv@quotient+1)^0,c
  1832   001246  0E00               	movlw	0
  1833   001248  6E0C               	movwf	___lwdiv@quotient^0,c
  1834   00124A  500A               	movf	___lwdiv@divisor^0,w,c
  1835   00124C  100B               	iorwf	(___lwdiv@divisor+1)^0,w,c
  1836   00124E  B4D8               	btfsc	status,2,c
  1837   001250  D01C               	goto	l882
  1838   001252  0E01               	movlw	1
  1839   001254  6E0E               	movwf	___lwdiv@counter^0,c
  1840   001256  D004               	goto	l2182
  1841   001258                     l2180:
  1842   001258  90D8               	bcf	status,0,c
  1843   00125A  360A               	rlcf	___lwdiv@divisor^0,f,c
  1844   00125C  360B               	rlcf	(___lwdiv@divisor+1)^0,f,c
  1845   00125E  2A0E               	incf	___lwdiv@counter^0,f,c
  1846   001260                     l2182:
  1847   001260  AE0B               	btfss	(___lwdiv@divisor+1)^0,7,c
  1848   001262  D7FA               	goto	l2180
  1849   001264                     u1020:
  1850   001264  90D8               	bcf	status,0,c
  1851   001266  360C               	rlcf	___lwdiv@quotient^0,f,c
  1852   001268  360D               	rlcf	(___lwdiv@quotient+1)^0,f,c
  1853   00126A  500A               	movf	___lwdiv@divisor^0,w,c
  1854   00126C  5C08               	subwf	___lwdiv@dividend^0,w,c
  1855   00126E  500B               	movf	(___lwdiv@divisor+1)^0,w,c
  1856   001270  5809               	subwfb	(___lwdiv@dividend+1)^0,w,c
  1857   001272  A0D8               	btfss	status,0,c
  1858   001274  D005               	goto	l2192
  1859   001276  500A               	movf	___lwdiv@divisor^0,w,c
  1860   001278  5E08               	subwf	___lwdiv@dividend^0,f,c
  1861   00127A  500B               	movf	(___lwdiv@divisor+1)^0,w,c
  1862   00127C  5A09               	subwfb	(___lwdiv@dividend+1)^0,f,c
  1863   00127E  800C               	bsf	___lwdiv@quotient^0,0,c
  1864   001280                     l2192:
  1865   001280  90D8               	bcf	status,0,c
  1866   001282  320B               	rrcf	(___lwdiv@divisor+1)^0,f,c
  1867   001284  320A               	rrcf	___lwdiv@divisor^0,f,c
  1868   001286  2E0E               	decfsz	___lwdiv@counter^0,f,c
  1869   001288  D7ED               	goto	u1020
  1870   00128A                     l882:
  1871   00128A  C00C  F008         	movff	___lwdiv@quotient,?___lwdiv
  1872   00128E  C00D  F009         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1873   001292  0012               	return		;funcret
  1874   001294                     __end_of___lwdiv:
  1875                           	callstack 0
  1876                           
  1877 ;; *************** function ___lbmod *****************
  1878 ;; Defined at:
  1879 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lbmod.c"
  1880 ;; Parameters:    Size  Location     Type
  1881 ;;  dividend        1    wreg     unsigned char 
  1882 ;;  divisor         1    7[COMRAM] unsigned char 
  1883 ;; Auto vars:     Size  Location     Type
  1884 ;;  dividend        1    8[COMRAM] unsigned char 
  1885 ;;  rem             1   10[COMRAM] unsigned char 
  1886 ;;  counter         1    9[COMRAM] unsigned char 
  1887 ;; Return value:  Size  Location     Type
  1888 ;;                  1    wreg      unsigned char 
  1889 ;; Registers used:
  1890 ;;		wreg, status,2, status,0
  1891 ;; Tracked objects:
  1892 ;;		On entry : 0/0
  1893 ;;		On exit  : 0/0
  1894 ;;		Unchanged: 0/0
  1895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1896 ;;      Params:         1       0       0       0       0       0       0       0       0
  1897 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1898 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1899 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1900 ;;Total ram usage:        4 bytes
  1901 ;; Hardware stack levels used: 1
  1902 ;; Hardware stack levels required when called: 4
  1903 ;; This function calls:
  1904 ;;		Nothing
  1905 ;; This function is called by:
  1906 ;;		_TransmitirDatos
  1907 ;; This function uses a non-reentrant model
  1908 ;;
  1909                           
  1910                           	psect	text6
  1911   0014F8                     __ptext6:
  1912                           	callstack 0
  1913   0014F8                     ___lbmod:
  1914                           	callstack 25
  1915                           
  1916                           ;incstack = 0
  1917                           ;___lbmod@dividend stored from wreg
  1918   0014F8  6E09               	movwf	___lbmod@dividend^0,c
  1919   0014FA  0E08               	movlw	8
  1920   0014FC  6E0A               	movwf	___lbmod@counter^0,c
  1921   0014FE  0E00               	movlw	0
  1922   001500  6E0B               	movwf	___lbmod@rem^0,c
  1923   001502                     l2160:
  1924   001502  90D8               	bcf	status,0,c
  1925   001504  3409               	rlcf	___lbmod@dividend^0,w,c
  1926   001506  340B               	rlcf	___lbmod@rem^0,w,c
  1927   001508  6E0B               	movwf	___lbmod@rem^0,c
  1928   00150A  90D8               	bcf	status,0,c
  1929   00150C  3609               	rlcf	___lbmod@dividend^0,f,c
  1930   00150E  5008               	movf	___lbmod@divisor^0,w,c
  1931   001510  5C0B               	subwf	___lbmod@rem^0,w,c
  1932   001512  A0D8               	btfss	status,0,c
  1933   001514  D002               	goto	l2168
  1934   001516  5008               	movf	___lbmod@divisor^0,w,c
  1935   001518  5E0B               	subwf	___lbmod@rem^0,f,c
  1936   00151A                     l2168:
  1937   00151A  2E0A               	decfsz	___lbmod@counter^0,f,c
  1938   00151C  D7F2               	goto	l2160
  1939   00151E  500B               	movf	___lbmod@rem^0,w,c
  1940   001520  0012               	return		;funcret
  1941   001522                     __end_of___lbmod:
  1942                           	callstack 0
  1943                           
  1944 ;; *************** function ___lbdiv *****************
  1945 ;; Defined at:
  1946 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lbdiv.c"
  1947 ;; Parameters:    Size  Location     Type
  1948 ;;  dividend        1    wreg     unsigned char 
  1949 ;;  divisor         1    7[COMRAM] unsigned char 
  1950 ;; Auto vars:     Size  Location     Type
  1951 ;;  dividend        1    8[COMRAM] unsigned char 
  1952 ;;  quotient        1   10[COMRAM] unsigned char 
  1953 ;;  counter         1    9[COMRAM] unsigned char 
  1954 ;; Return value:  Size  Location     Type
  1955 ;;                  1    wreg      unsigned char 
  1956 ;; Registers used:
  1957 ;;		wreg, status,2, status,0
  1958 ;; Tracked objects:
  1959 ;;		On entry : 0/0
  1960 ;;		On exit  : 0/0
  1961 ;;		Unchanged: 0/0
  1962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1963 ;;      Params:         1       0       0       0       0       0       0       0       0
  1964 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1965 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1966 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1967 ;;Total ram usage:        4 bytes
  1968 ;; Hardware stack levels used: 1
  1969 ;; Hardware stack levels required when called: 4
  1970 ;; This function calls:
  1971 ;;		Nothing
  1972 ;; This function is called by:
  1973 ;;		_TransmitirDatos
  1974 ;; This function uses a non-reentrant model
  1975 ;;
  1976                           
  1977                           	psect	text7
  1978   001426                     __ptext7:
  1979                           	callstack 0
  1980   001426                     ___lbdiv:
  1981                           	callstack 25
  1982                           
  1983                           ;incstack = 0
  1984                           ;___lbdiv@dividend stored from wreg
  1985   001426  6E09               	movwf	___lbdiv@dividend^0,c
  1986   001428  0E00               	movlw	0
  1987   00142A  6E0B               	movwf	___lbdiv@quotient^0,c
  1988   00142C  5008               	movf	___lbdiv@divisor^0,w,c
  1989   00142E  B4D8               	btfsc	status,2,c
  1990   001430  D015               	goto	l2154
  1991   001432  0E01               	movlw	1
  1992   001434  6E0A               	movwf	___lbdiv@counter^0,c
  1993   001436  D003               	goto	l2142
  1994   001438                     l2138:
  1995   001438  90D8               	bcf	status,0,c
  1996   00143A  3608               	rlcf	___lbdiv@divisor^0,f,c
  1997   00143C  2A0A               	incf	___lbdiv@counter^0,f,c
  1998   00143E                     l2142:
  1999   00143E  AE08               	btfss	___lbdiv@divisor^0,7,c
  2000   001440  D7FB               	goto	l2138
  2001   001442                     u980:
  2002   001442  90D8               	bcf	status,0,c
  2003   001444  360B               	rlcf	___lbdiv@quotient^0,f,c
  2004   001446  5008               	movf	___lbdiv@divisor^0,w,c
  2005   001448  5C09               	subwf	___lbdiv@dividend^0,w,c
  2006   00144A  A0D8               	btfss	status,0,c
  2007   00144C  D003               	goto	l2150
  2008   00144E  5008               	movf	___lbdiv@divisor^0,w,c
  2009   001450  5E09               	subwf	___lbdiv@dividend^0,f,c
  2010   001452  800B               	bsf	___lbdiv@quotient^0,0,c
  2011   001454                     l2150:
  2012   001454  90D8               	bcf	status,0,c
  2013   001456  3208               	rrcf	___lbdiv@divisor^0,f,c
  2014   001458  2E0A               	decfsz	___lbdiv@counter^0,f,c
  2015   00145A  D7F3               	goto	u980
  2016   00145C                     l2154:
  2017   00145C  500B               	movf	___lbdiv@quotient^0,w,c
  2018   00145E  0012               	return		;funcret
  2019   001460                     __end_of___lbdiv:
  2020                           	callstack 0
  2021                           
  2022 ;; *************** function ___awdiv *****************
  2023 ;; Defined at:
  2024 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awdiv.c"
  2025 ;; Parameters:    Size  Location     Type
  2026 ;;  dividend        2    7[COMRAM] int 
  2027 ;;  divisor         2    9[COMRAM] int 
  2028 ;; Auto vars:     Size  Location     Type
  2029 ;;  quotient        2   13[COMRAM] int 
  2030 ;;  sign            1   12[COMRAM] unsigned char 
  2031 ;;  counter         1   11[COMRAM] unsigned char 
  2032 ;; Return value:  Size  Location     Type
  2033 ;;                  2    7[COMRAM] int 
  2034 ;; Registers used:
  2035 ;;		wreg, status,2, status,0
  2036 ;; Tracked objects:
  2037 ;;		On entry : 0/0
  2038 ;;		On exit  : 0/0
  2039 ;;		Unchanged: 0/0
  2040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2041 ;;      Params:         4       0       0       0       0       0       0       0       0
  2042 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2043 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2044 ;;      Totals:         8       0       0       0       0       0       0       0       0
  2045 ;;Total ram usage:        8 bytes
  2046 ;; Hardware stack levels used: 1
  2047 ;; Hardware stack levels required when called: 4
  2048 ;; This function calls:
  2049 ;;		Nothing
  2050 ;; This function is called by:
  2051 ;;		_TransmitirDatos
  2052 ;; This function uses a non-reentrant model
  2053 ;;
  2054                           
  2055                           	psect	text8
  2056   00107A                     __ptext8:
  2057                           	callstack 0
  2058   00107A                     ___awdiv:
  2059                           	callstack 25
  2060                           
  2061                           ;incstack = 0
  2062   00107A  0E00               	movlw	0
  2063   00107C  6E0D               	movwf	___awdiv@sign^0,c
  2064   00107E  AE0B               	btfss	(___awdiv@divisor+1)^0,7,c
  2065   001080  D006               	goto	l2096
  2066   001082  6C0A               	negf	___awdiv@divisor^0,c
  2067   001084  1E0B               	comf	(___awdiv@divisor+1)^0,f,c
  2068   001086  B0D8               	btfsc	status,0,c
  2069   001088  2A0B               	incf	(___awdiv@divisor+1)^0,f,c
  2070   00108A  0E01               	movlw	1
  2071   00108C  6E0D               	movwf	___awdiv@sign^0,c
  2072   00108E                     l2096:
  2073   00108E  AE09               	btfss	(___awdiv@dividend+1)^0,7,c
  2074   001090  D006               	goto	l2102
  2075   001092  6C08               	negf	___awdiv@dividend^0,c
  2076   001094  1E09               	comf	(___awdiv@dividend+1)^0,f,c
  2077   001096  B0D8               	btfsc	status,0,c
  2078   001098  2A09               	incf	(___awdiv@dividend+1)^0,f,c
  2079   00109A  0E01               	movlw	1
  2080   00109C  1A0D               	xorwf	___awdiv@sign^0,f,c
  2081   00109E                     l2102:
  2082   00109E  0E00               	movlw	0
  2083   0010A0  6E0F               	movwf	(___awdiv@quotient+1)^0,c
  2084   0010A2  0E00               	movlw	0
  2085   0010A4  6E0E               	movwf	___awdiv@quotient^0,c
  2086   0010A6  500A               	movf	___awdiv@divisor^0,w,c
  2087   0010A8  100B               	iorwf	(___awdiv@divisor+1)^0,w,c
  2088   0010AA  B4D8               	btfsc	status,2,c
  2089   0010AC  D01C               	goto	l2124
  2090   0010AE  0E01               	movlw	1
  2091   0010B0  6E0C               	movwf	___awdiv@counter^0,c
  2092   0010B2  D004               	goto	l2110
  2093   0010B4                     l2108:
  2094   0010B4  90D8               	bcf	status,0,c
  2095   0010B6  360A               	rlcf	___awdiv@divisor^0,f,c
  2096   0010B8  360B               	rlcf	(___awdiv@divisor+1)^0,f,c
  2097   0010BA  2A0C               	incf	___awdiv@counter^0,f,c
  2098   0010BC                     l2110:
  2099   0010BC  AE0B               	btfss	(___awdiv@divisor+1)^0,7,c
  2100   0010BE  D7FA               	goto	l2108
  2101   0010C0                     u940:
  2102   0010C0  90D8               	bcf	status,0,c
  2103   0010C2  360E               	rlcf	___awdiv@quotient^0,f,c
  2104   0010C4  360F               	rlcf	(___awdiv@quotient+1)^0,f,c
  2105   0010C6  500A               	movf	___awdiv@divisor^0,w,c
  2106   0010C8  5C08               	subwf	___awdiv@dividend^0,w,c
  2107   0010CA  500B               	movf	(___awdiv@divisor+1)^0,w,c
  2108   0010CC  5809               	subwfb	(___awdiv@dividend+1)^0,w,c
  2109   0010CE  A0D8               	btfss	status,0,c
  2110   0010D0  D005               	goto	l2120
  2111   0010D2  500A               	movf	___awdiv@divisor^0,w,c
  2112   0010D4  5E08               	subwf	___awdiv@dividend^0,f,c
  2113   0010D6  500B               	movf	(___awdiv@divisor+1)^0,w,c
  2114   0010D8  5A09               	subwfb	(___awdiv@dividend+1)^0,f,c
  2115   0010DA  800E               	bsf	___awdiv@quotient^0,0,c
  2116   0010DC                     l2120:
  2117   0010DC  90D8               	bcf	status,0,c
  2118   0010DE  320B               	rrcf	(___awdiv@divisor+1)^0,f,c
  2119   0010E0  320A               	rrcf	___awdiv@divisor^0,f,c
  2120   0010E2  2E0C               	decfsz	___awdiv@counter^0,f,c
  2121   0010E4  D7ED               	goto	u940
  2122   0010E6                     l2124:
  2123   0010E6  500D               	movf	___awdiv@sign^0,w,c
  2124   0010E8  B4D8               	btfsc	status,2,c
  2125   0010EA  D004               	goto	l2128
  2126   0010EC  6C0E               	negf	___awdiv@quotient^0,c
  2127   0010EE  1E0F               	comf	(___awdiv@quotient+1)^0,f,c
  2128   0010F0  B0D8               	btfsc	status,0,c
  2129   0010F2  2A0F               	incf	(___awdiv@quotient+1)^0,f,c
  2130   0010F4                     l2128:
  2131   0010F4  C00E  F008         	movff	___awdiv@quotient,?___awdiv
  2132   0010F8  C00F  F009         	movff	___awdiv@quotient+1,?___awdiv+1
  2133   0010FC  0012               	return		;funcret
  2134   0010FE                     __end_of___awdiv:
  2135                           	callstack 0
  2136                           
  2137 ;; *************** function _Transmitir *****************
  2138 ;; Defined at:
  2139 ;;		line 326 in file "Proyecto.c"
  2140 ;; Parameters:    Size  Location     Type
  2141 ;;  BufferT         1    wreg     unsigned char 
  2142 ;; Auto vars:     Size  Location     Type
  2143 ;;  BufferT         1    7[COMRAM] unsigned char 
  2144 ;; Return value:  Size  Location     Type
  2145 ;;                  1    wreg      void 
  2146 ;; Registers used:
  2147 ;;		wreg
  2148 ;; Tracked objects:
  2149 ;;		On entry : 0/0
  2150 ;;		On exit  : 0/0
  2151 ;;		Unchanged: 0/0
  2152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2153 ;;      Params:         0       0       0       0       0       0       0       0       0
  2154 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2155 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2156 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2157 ;;Total ram usage:        1 bytes
  2158 ;; Hardware stack levels used: 1
  2159 ;; Hardware stack levels required when called: 4
  2160 ;; This function calls:
  2161 ;;		Nothing
  2162 ;; This function is called by:
  2163 ;;		_TransmitirDatos
  2164 ;; This function uses a non-reentrant model
  2165 ;;
  2166                           
  2167                           	psect	text9
  2168   0015F2                     __ptext9:
  2169                           	callstack 0
  2170   0015F2                     _Transmitir:
  2171                           	callstack 25
  2172                           
  2173                           ;incstack = 0
  2174                           ;Transmitir@BufferT stored from wreg
  2175   0015F2  6E08               	movwf	Transmitir@BufferT^0,c
  2176   0015F4                     
  2177                           ;Proyecto.c: 327: while (TRMT == 0);
  2178   0015F4  A2AC               	btfss	4012,1,c	;volatile
  2179   0015F6  D7FE               	goto	l2078
  2180                           
  2181                           ;Proyecto.c: 328: TXREG = BufferT;
  2182   0015F8  C008  FFAD         	movff	Transmitir@BufferT,4013	;volatile
  2183   0015FC  0012               	return		;funcret
  2184   0015FE                     __end_of_Transmitir:
  2185                           	callstack 0
  2186                           
  2187 ;; *************** function _MensajeLCD_Word *****************
  2188 ;; Defined at:
  2189 ;;		line 248 in file "LibLCDXC8.h"
  2190 ;; Parameters:    Size  Location     Type
  2191 ;;  a               1   12[COMRAM] PTR unsigned char 
  2192 ;;		 -> STR_8(5), STR_7(6), STR_6(23), STR_5(11), 
  2193 ;;		 -> STR_4(23), STR_3(10), STR_2(17), STR_1(11), 
  2194 ;; Auto vars:     Size  Location     Type
  2195 ;;  i               2   14[COMRAM] int 
  2196 ;; Return value:  Size  Location     Type
  2197 ;;                  1    wreg      void 
  2198 ;; Registers used:
  2199 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2200 ;; Tracked objects:
  2201 ;;		On entry : 0/0
  2202 ;;		On exit  : 0/0
  2203 ;;		Unchanged: 0/0
  2204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2205 ;;      Params:         1       0       0       0       0       0       0       0       0
  2206 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2207 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2208 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2209 ;;Total ram usage:        4 bytes
  2210 ;; Hardware stack levels used: 1
  2211 ;; Hardware stack levels required when called: 7
  2212 ;; This function calls:
  2213 ;;		_EscribeLCD_c
  2214 ;; This function is called by:
  2215 ;;		_main
  2216 ;;		_TransmitirDatos
  2217 ;; This function uses a non-reentrant model
  2218 ;;
  2219                           
  2220                           	psect	text10
  2221   001294                     __ptext10:
  2222                           	callstack 0
  2223   001294                     _MensajeLCD_Word:
  2224                           	callstack 22
  2225                           
  2226                           ;LibLCDXC8.h: 252: for(int i = 0; i<16; i++){
  2227                           
  2228                           ;incstack = 0
  2229   001294  0E00               	movlw	0
  2230   001296  6E10               	movwf	(MensajeLCD_Word@i+1)^0,c
  2231   001298  0E00               	movlw	0
  2232   00129A  6E0F               	movwf	MensajeLCD_Word@i^0,c
  2233   00129C                     l2054:
  2234                           
  2235                           ;LibLCDXC8.h: 253: if(a[i] == (0)){
  2236   00129C  500D               	movf	MensajeLCD_Word@a^0,w,c
  2237   00129E  240F               	addwf	MensajeLCD_Word@i^0,w,c
  2238   0012A0  6E0E               	movwf	??_MensajeLCD_Word^0,c
  2239   0012A2  C00E  FFF6         	movff	??_MensajeLCD_Word,tblptrl
  2240   0012A6                     	if	1	;There is more than 1 active tblptr byte
  2241   0012A6  0E08               	movlw	high __smallconst
  2242   0012A8  6EF7               	movwf	tblptrh,c
  2243   0012AA                     	endif
  2244   0012AA                     	if	0	;tblptru may be non-zero
  2245   0012AA                     	endif
  2246   0012AA                     	if	0	;tblptru may be non-zero
  2247   0012AA                     	endif
  2248   0012AA  0008               	tblrd		*
  2249   0012AC  50F5               	movf	tablat,w,c
  2250   0012AE  0900               	iorlw	0
  2251   0012B0  B4D8               	btfsc	status,2,c
  2252   0012B2  0012               	return	
  2253                           
  2254                           ;LibLCDXC8.h: 255: };LibLCDXC8.h: 256: EscribeLCD_c(a[i]);
  2255   0012B4  500D               	movf	MensajeLCD_Word@a^0,w,c
  2256   0012B6  240F               	addwf	MensajeLCD_Word@i^0,w,c
  2257   0012B8  6E0E               	movwf	??_MensajeLCD_Word^0,c
  2258   0012BA  C00E  FFF6         	movff	??_MensajeLCD_Word,tblptrl
  2259   0012BE                     	if	1	;There is more than 1 active tblptr byte
  2260   0012BE  0E08               	movlw	high __smallconst
  2261   0012C0  6EF7               	movwf	tblptrh,c
  2262   0012C2                     	endif
  2263   0012C2                     	if	0	;tblptru may be non-zero
  2264   0012C2                     	endif
  2265   0012C2                     	if	0	;tblptru may be non-zero
  2266   0012C2                     	endif
  2267   0012C2  0008               	tblrd		*
  2268   0012C4  50F5               	movf	tablat,w,c
  2269   0012C6  ECC2  F00A         	call	_EscribeLCD_c
  2270   0012CA  4A0F               	infsnz	MensajeLCD_Word@i^0,f,c
  2271   0012CC  2A10               	incf	(MensajeLCD_Word@i+1)^0,f,c
  2272   0012CE  BE10               	btfsc	(MensajeLCD_Word@i+1)^0,7,c
  2273   0012D0  D7E5               	goto	l2054
  2274   0012D2  5010               	movf	(MensajeLCD_Word@i+1)^0,w,c
  2275   0012D4  E105               	bnz	u880
  2276   0012D6  0E10               	movlw	16
  2277   0012D8  5C0F               	subwf	MensajeLCD_Word@i^0,w,c
  2278   0012DA  B0D8               	btfsc	status,0,c
  2279   0012DC  0012               	return	
  2280   0012DE  D7DE               	goto	l2054
  2281   0012E0                     u880:
  2282   0012E0  0012               	return		;funcret
  2283   0012E2                     __end_of_MensajeLCD_Word:
  2284                           	callstack 0
  2285                           
  2286 ;; *************** function _Password *****************
  2287 ;; Defined at:
  2288 ;;		line 217 in file "Proyecto.c"
  2289 ;; Parameters:    Size  Location     Type
  2290 ;;  pass            1   12[COMRAM] PTR unsigned char 
  2291 ;;		 -> ing(4), 
  2292 ;; Auto vars:     Size  Location     Type
  2293 ;;  i               2   22[COMRAM] int 
  2294 ;;  secret          4   16[COMRAM] unsigned char [4]
  2295 ;;  access          2   20[COMRAM] unsigned int 
  2296 ;; Return value:  Size  Location     Type
  2297 ;;                  2   12[COMRAM] int 
  2298 ;; Registers used:
  2299 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2300 ;; Tracked objects:
  2301 ;;		On entry : 0/0
  2302 ;;		On exit  : 0/0
  2303 ;;		Unchanged: 0/0
  2304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2305 ;;      Params:         2       0       0       0       0       0       0       0       0
  2306 ;;      Locals:         8       0       0       0       0       0       0       0       0
  2307 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2308 ;;      Totals:        12       0       0       0       0       0       0       0       0
  2309 ;;Total ram usage:       12 bytes
  2310 ;; Hardware stack levels used: 1
  2311 ;; Hardware stack levels required when called: 7
  2312 ;; This function calls:
  2313 ;;		_DireccionaLCD
  2314 ;;		_EscribeLCD_c
  2315 ;; This function is called by:
  2316 ;;		_main
  2317 ;; This function uses a non-reentrant model
  2318 ;;
  2319                           
  2320                           	psect	text11
  2321   0010FE                     __ptext11:
  2322                           	callstack 0
  2323   0010FE                     _Password:
  2324                           	callstack 23
  2325                           
  2326                           ;Proyecto.c: 218: unsigned char secret[] = {'0','1','2','3'};
  2327                           
  2328                           ;incstack = 0
  2329   0010FE  C021  F011         	movff	Password@F3204,Password@secret
  2330   001102  C022  F012         	movff	Password@F3204+1,Password@secret+1
  2331   001106  C023  F013         	movff	Password@F3204+2,Password@secret+2
  2332   00110A  C024  F014         	movff	Password@F3204+3,Password@secret+3
  2333                           
  2334                           ;Proyecto.c: 219: unsigned int access = 0;
  2335   00110E  0E00               	movlw	0
  2336   001110  6E16               	movwf	(Password@access+1)^0,c
  2337   001112  0E00               	movlw	0
  2338   001114  6E15               	movwf	Password@access^0,c
  2339                           
  2340                           ;Proyecto.c: 220: DireccionaLCD(0xC1);
  2341   001116  0EC1               	movlw	193
  2342   001118  ECCD  F00A         	call	_DireccionaLCD
  2343                           
  2344                           ;Proyecto.c: 221: for(int i=0; i<4; i++){
  2345   00111C  0E00               	movlw	0
  2346   00111E  6E18               	movwf	(Password@i+1)^0,c
  2347   001120  0E00               	movlw	0
  2348   001122  6E17               	movwf	Password@i^0,c
  2349   001124                     l2306:
  2350                           
  2351                           ;Proyecto.c: 223: EscribeLCD_c('*');
  2352   001124  0E2A               	movlw	42
  2353   001126  ECC2  F00A         	call	_EscribeLCD_c
  2354                           
  2355                           ;Proyecto.c: 224: if(pass[i] == secret[i]){
  2356   00112A  5017               	movf	Password@i^0,w,c
  2357   00112C  0F11               	addlw	low Password@secret
  2358   00112E  6ED9               	movwf	fsr2l,c
  2359   001130  6ADA               	clrf	fsr2h,c
  2360   001132  500D               	movf	Password@pass^0,w,c
  2361   001134  2417               	addwf	Password@i^0,w,c
  2362   001136  6EE1               	movwf	fsr1l,c
  2363   001138  6AE2               	clrf	fsr1h,c
  2364   00113A  50DE               	movf	postinc2,w,c
  2365   00113C  18E6               	xorwf	postinc1,w,c
  2366   00113E  A4D8               	btfss	status,2,c
  2367   001140  D002               	goto	l281
  2368                           
  2369                           ;Proyecto.c: 225: access++;
  2370   001142  4A15               	infsnz	Password@access^0,f,c
  2371   001144  2A16               	incf	(Password@access+1)^0,f,c
  2372   001146                     l281:
  2373   001146  4A17               	infsnz	Password@i^0,f,c
  2374   001148  2A18               	incf	(Password@i+1)^0,f,c
  2375   00114A  BE18               	btfsc	(Password@i+1)^0,7,c
  2376   00114C  D7EB               	goto	l2306
  2377   00114E  5018               	movf	(Password@i+1)^0,w,c
  2378   001150  E104               	bnz	u1150
  2379   001152  0E04               	movlw	4
  2380   001154  5C17               	subwf	Password@i^0,w,c
  2381   001156  A0D8               	btfss	status,0,c
  2382   001158  D7E5               	goto	l2306
  2383   00115A                     u1150:
  2384                           
  2385                           ;Proyecto.c: 226: };Proyecto.c: 227: };Proyecto.c: 228: DireccionaLCD(0xC1);
  2386   00115A  0EC1               	movlw	193
  2387   00115C  ECCD  F00A         	call	_DireccionaLCD
  2388                           
  2389                           ;Proyecto.c: 229: return (access==4)? 1:0;
  2390   001160  0E04               	movlw	4
  2391   001162  1815               	xorwf	Password@access^0,w,c
  2392   001164  1016               	iorwf	(Password@access+1)^0,w,c
  2393   001166  A4D8               	btfss	status,2,c
  2394   001168  D002               	goto	u1160
  2395   00116A  0E01               	movlw	1
  2396   00116C  D001               	goto	u1170
  2397   00116E                     u1160:
  2398   00116E  0E00               	movlw	0
  2399   001170                     u1170:
  2400   001170  6E0D               	movwf	?_Password^0,c
  2401   001172  6A0E               	clrf	(?_Password+1)^0,c
  2402   001174  0012               	return		;funcret
  2403   001176                     __end_of_Password:
  2404                           	callstack 0
  2405                           
  2406 ;; *************** function _NuevoCaracter *****************
  2407 ;; Defined at:
  2408 ;;		line 141 in file "LibLCDXC8.h"
  2409 ;; Parameters:    Size  Location     Type
  2410 ;;  addr            1    wreg     unsigned char 
  2411 ;;  c               1   12[COMRAM] PTR unsigned char 
  2412 ;;		 -> cara(8), 
  2413 ;; Auto vars:     Size  Location     Type
  2414 ;;  addr            1   13[COMRAM] unsigned char 
  2415 ;;  i               2   14[COMRAM] int 
  2416 ;; Return value:  Size  Location     Type
  2417 ;;                  1    wreg      void 
  2418 ;; Registers used:
  2419 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2420 ;; Tracked objects:
  2421 ;;		On entry : 0/0
  2422 ;;		On exit  : 0/0
  2423 ;;		Unchanged: 0/0
  2424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2425 ;;      Params:         1       0       0       0       0       0       0       0       0
  2426 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2427 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2428 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2429 ;;Total ram usage:        4 bytes
  2430 ;; Hardware stack levels used: 1
  2431 ;; Hardware stack levels required when called: 7
  2432 ;; This function calls:
  2433 ;;		_ComandoLCD
  2434 ;;		_EscribeLCD_c
  2435 ;; This function is called by:
  2436 ;;		_main
  2437 ;; This function uses a non-reentrant model
  2438 ;;
  2439                           
  2440                           	psect	text12
  2441   0013B0                     __ptext12:
  2442                           	callstack 0
  2443   0013B0                     _NuevoCaracter:
  2444                           	callstack 23
  2445                           
  2446                           ;incstack = 0
  2447                           ;NuevoCaracter@addr stored from wreg
  2448   0013B0  6E0E               	movwf	NuevoCaracter@addr^0,c
  2449                           
  2450                           ;LibLCDXC8.h: 142: int i;;LibLCDXC8.h: 143: ComandoLCD(0x40 + (addr * 8));
  2451   0013B2  500E               	movf	NuevoCaracter@addr^0,w,c
  2452   0013B4  0D08               	mullw	8
  2453   0013B6  50F3               	movf	243,w,c
  2454   0013B8  0F40               	addlw	64
  2455   0013BA  EC65  F00A         	call	_ComandoLCD
  2456                           
  2457                           ;LibLCDXC8.h: 144: for (i = 0; i < 8; i++) {
  2458   0013BE  0E00               	movlw	0
  2459   0013C0  6E10               	movwf	(NuevoCaracter@i+1)^0,c
  2460   0013C2  0E00               	movlw	0
  2461   0013C4  6E0F               	movwf	NuevoCaracter@i^0,c
  2462   0013C6                     l2694:
  2463                           
  2464                           ;LibLCDXC8.h: 145: EscribeLCD_c(c[i]);
  2465   0013C6  500D               	movf	NuevoCaracter@c^0,w,c
  2466   0013C8  240F               	addwf	NuevoCaracter@i^0,w,c
  2467   0013CA  6ED9               	movwf	fsr2l,c
  2468   0013CC  6ADA               	clrf	fsr2h,c
  2469   0013CE  50DF               	movf	indf2,w,c
  2470   0013D0  ECC2  F00A         	call	_EscribeLCD_c
  2471   0013D4  4A0F               	infsnz	NuevoCaracter@i^0,f,c
  2472   0013D6  2A10               	incf	(NuevoCaracter@i+1)^0,f,c
  2473   0013D8  BE10               	btfsc	(NuevoCaracter@i+1)^0,7,c
  2474   0013DA  D7F5               	goto	l2694
  2475   0013DC  5010               	movf	(NuevoCaracter@i+1)^0,w,c
  2476   0013DE  E105               	bnz	u1610
  2477   0013E0  0E08               	movlw	8
  2478   0013E2  5C0F               	subwf	NuevoCaracter@i^0,w,c
  2479   0013E4  B0D8               	btfsc	status,0,c
  2480   0013E6  0012               	return	
  2481   0013E8  D7EE               	goto	l2694
  2482   0013EA                     u1610:
  2483   0013EA  0012               	return		;funcret
  2484   0013EC                     __end_of_NuevoCaracter:
  2485                           	callstack 0
  2486                           
  2487 ;; *************** function _EscribeLCD_c *****************
  2488 ;; Defined at:
  2489 ;;		line 149 in file "LibLCDXC8.h"
  2490 ;; Parameters:    Size  Location     Type
  2491 ;;  a               1    wreg     unsigned char 
  2492 ;; Auto vars:     Size  Location     Type
  2493 ;;  a               1   11[COMRAM] unsigned char 
  2494 ;; Return value:  Size  Location     Type
  2495 ;;                  1    wreg      void 
  2496 ;; Registers used:
  2497 ;;		wreg, status,2, status,0, cstack
  2498 ;; Tracked objects:
  2499 ;;		On entry : 0/0
  2500 ;;		On exit  : 0/0
  2501 ;;		Unchanged: 0/0
  2502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2503 ;;      Params:         0       0       0       0       0       0       0       0       0
  2504 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2505 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2506 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2507 ;;Total ram usage:        1 bytes
  2508 ;; Hardware stack levels used: 1
  2509 ;; Hardware stack levels required when called: 6
  2510 ;; This function calls:
  2511 ;;		_EnviaDato
  2512 ;;		_HabilitaLCD
  2513 ;;		_RetardoLCD
  2514 ;; This function is called by:
  2515 ;;		_NuevoCaracter
  2516 ;;		_MensajeLCD_Word
  2517 ;;		_main
  2518 ;;		_Password
  2519 ;;		_TransmitirDatos
  2520 ;; This function uses a non-reentrant model
  2521 ;;
  2522                           
  2523                           	psect	text13
  2524   001584                     __ptext13:
  2525                           	callstack 0
  2526   001584                     _EscribeLCD_c:
  2527                           	callstack 22
  2528                           
  2529                           ;incstack = 0
  2530                           ;EscribeLCD_c@a stored from wreg
  2531   001584  6E0C               	movwf	EscribeLCD_c@a^0,c
  2532                           
  2533                           ;LibLCDXC8.h: 153: LATE1=1;
  2534   001586  828D               	bsf	3981,1,c	;volatile
  2535                           
  2536                           ;LibLCDXC8.h: 154: EnviaDato(a);
  2537   001588  500C               	movf	EscribeLCD_c@a^0,w,c
  2538   00158A  EC71  F009         	call	_EnviaDato
  2539                           
  2540                           ;LibLCDXC8.h: 155: HabilitaLCD();
  2541   00158E  ECEB  F00A         	call	_HabilitaLCD	;wreg free
  2542                           
  2543                           ;LibLCDXC8.h: 156: RetardoLCD(4);
  2544   001592  0E04               	movlw	4
  2545   001594  ECBB  F008         	call	_RetardoLCD
  2546   001598  0012               	return		;funcret
  2547   00159A                     __end_of_EscribeLCD_c:
  2548                           	callstack 0
  2549                           
  2550 ;; *************** function _ComandoLCD *****************
  2551 ;; Defined at:
  2552 ;;		line 130 in file "LibLCDXC8.h"
  2553 ;; Parameters:    Size  Location     Type
  2554 ;;  data            1    wreg     unsigned char 
  2555 ;; Auto vars:     Size  Location     Type
  2556 ;;  data            1    8[COMRAM] unsigned char 
  2557 ;; Return value:  Size  Location     Type
  2558 ;;                  1    wreg      void 
  2559 ;; Registers used:
  2560 ;;		wreg, status,2, cstack
  2561 ;; Tracked objects:
  2562 ;;		On entry : 0/0
  2563 ;;		On exit  : 0/0
  2564 ;;		Unchanged: 0/0
  2565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2566 ;;      Params:         0       0       0       0       0       0       0       0       0
  2567 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2568 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2569 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2570 ;;Total ram usage:        2 bytes
  2571 ;; Hardware stack levels used: 1
  2572 ;; Hardware stack levels required when called: 4
  2573 ;; This function calls:
  2574 ;;		Nothing
  2575 ;; This function is called by:
  2576 ;;		_NuevoCaracter
  2577 ;; This function uses a non-reentrant model
  2578 ;;
  2579                           
  2580                           	psect	text14
  2581   0014CA                     __ptext14:
  2582                           	callstack 0
  2583   0014CA                     _ComandoLCD:
  2584                           	callstack 25
  2585                           
  2586                           ;incstack = 0
  2587                           ;ComandoLCD@data stored from wreg
  2588   0014CA  6E09               	movwf	ComandoLCD@data^0,c
  2589                           
  2590                           ;LibLCDXC8.h: 132: LATE1 = 0;
  2591   0014CC  928D               	bcf	3981,1,c	;volatile
  2592                           
  2593                           ;LibLCDXC8.h: 133: LATD = data;
  2594   0014CE  C009  FF8C         	movff	ComandoLCD@data,3980	;volatile
  2595                           
  2596                           ;LibLCDXC8.h: 134: LATE2 = 1;
  2597   0014D2  848D               	bsf	3981,2,c	;volatile
  2598                           
  2599                           ;LibLCDXC8.h: 135: _delay((unsigned long)((5)*(8000000/4000000.0)));
  2600   0014D4  0E03               	movlw	3
  2601   0014D6                     u1727:
  2602   0014D6  2EE8               	decfsz	wreg,f,c
  2603   0014D8  D7FE               	bra	u1727
  2604   0014DA  F000               	nop	
  2605                           
  2606                           ;LibLCDXC8.h: 136: LATE2 = 0;
  2607   0014DC  948D               	bcf	3981,2,c	;volatile
  2608                           
  2609                           ;LibLCDXC8.h: 137: _delay((unsigned long)((5)*(8000000/4000000.0)));
  2610   0014DE  0E03               	movlw	3
  2611   0014E0                     u1737:
  2612   0014E0  2EE8               	decfsz	wreg,f,c
  2613   0014E2  D7FE               	bra	u1737
  2614   0014E4  F000               	nop	
  2615                           
  2616                           ;LibLCDXC8.h: 138: _delay((unsigned long)((2)*(8000000/4000.0)));
  2617   0014E6  0E06               	movlw	6
  2618   0014E8  6E08               	movwf	??_ComandoLCD^0,c
  2619   0014EA  0E30               	movlw	48
  2620   0014EC                     u1747:
  2621   0014EC  2EE8               	decfsz	wreg,f,c
  2622   0014EE  D7FE               	bra	u1747
  2623   0014F0  2E08               	decfsz	??_ComandoLCD^0,f,c
  2624   0014F2  D7FC               	bra	u1747
  2625   0014F4  D000               	nop2	
  2626   0014F6  0012               	return		;funcret
  2627   0014F8                     __end_of_ComandoLCD:
  2628                           	callstack 0
  2629                           
  2630 ;; *************** function _LeerHT11 *****************
  2631 ;; Defined at:
  2632 ;;		line 233 in file "Proyecto.c"
  2633 ;; Parameters:    Size  Location     Type
  2634 ;;		None
  2635 ;; Auto vars:     Size  Location     Type
  2636 ;;		None
  2637 ;; Return value:  Size  Location     Type
  2638 ;;                  1    wreg      void 
  2639 ;; Registers used:
  2640 ;;		wreg, status,2, status,0, cstack
  2641 ;; Tracked objects:
  2642 ;;		On entry : 0/0
  2643 ;;		On exit  : 0/0
  2644 ;;		Unchanged: 0/0
  2645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2646 ;;      Params:         0       0       0       0       0       0       0       0       0
  2647 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2648 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2649 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2650 ;;Total ram usage:        1 bytes
  2651 ;; Hardware stack levels used: 1
  2652 ;; Hardware stack levels required when called: 6
  2653 ;; This function calls:
  2654 ;;		_LeerByte
  2655 ;; This function is called by:
  2656 ;;		_main
  2657 ;; This function uses a non-reentrant model
  2658 ;;
  2659                           
  2660                           	psect	text15
  2661   001460                     __ptext15:
  2662                           	callstack 0
  2663   001460                     _LeerHT11:
  2664                           	callstack 24
  2665                           
  2666                           ;Proyecto.c: 235: TRISC0 = 0;
  2667                           
  2668                           ;incstack = 0
  2669   001460  9094               	bcf	3988,0,c	;volatile
  2670                           
  2671                           ;Proyecto.c: 236: _delay((unsigned long)((18)*(8000000/4000.0)));
  2672   001462  0E2F               	movlw	47
  2673   001464  6E0C               	movwf	??_LeerHT11^0,c
  2674   001466  0EC0               	movlw	192
  2675   001468                     u1757:
  2676   001468  2EE8               	decfsz	wreg,f,c
  2677   00146A  D7FE               	bra	u1757
  2678   00146C  2E0C               	decfsz	??_LeerHT11^0,f,c
  2679   00146E  D7FC               	bra	u1757
  2680                           
  2681                           ;Proyecto.c: 237: TRISC0 = 1;
  2682   001470  8094               	bsf	3988,0,c	;volatile
  2683   001472                     l285:
  2684   001472  B082               	btfsc	3970,0,c	;volatile
  2685   001474  D7FE               	goto	l285
  2686                           
  2687                           ;Proyecto.c: 240: _delay((unsigned long)((120)*(8000000/4000000.0)));
  2688   001476  0E50               	movlw	80
  2689   001478                     u1767:
  2690   001478  2EE8               	decfsz	wreg,f,c
  2691   00147A  D7FE               	bra	u1767
  2692   00147C                     l288:
  2693   00147C  B082               	btfsc	3970,0,c	;volatile
  2694   00147E  D7FE               	goto	l288
  2695                           
  2696                           ;Proyecto.c: 243: Humedad = LeerByte();
  2697   001480  ECA4  F00A         	call	_LeerByte	;wreg free
  2698   001484  6E38               	movwf	_Humedad^0,c
  2699                           
  2700                           ;Proyecto.c: 244: LeerByte();
  2701   001486  ECA4  F00A         	call	_LeerByte	;wreg free
  2702                           
  2703                           ;Proyecto.c: 245: Temp = LeerByte();
  2704   00148A  ECA4  F00A         	call	_LeerByte	;wreg free
  2705   00148E  6E39               	movwf	_Temp^0,c
  2706                           
  2707                           ;Proyecto.c: 246: LeerByte();
  2708   001490  ECA4  F00A         	call	_LeerByte	;wreg free
  2709                           
  2710                           ;Proyecto.c: 247: LeerByte();
  2711   001494  ECA4  F00A         	call	_LeerByte	;wreg free
  2712   001498  0012               	return		;funcret
  2713   00149A                     __end_of_LeerHT11:
  2714                           	callstack 0
  2715                           
  2716 ;; *************** function _LeerByte *****************
  2717 ;; Defined at:
  2718 ;;		line 250 in file "Proyecto.c"
  2719 ;; Parameters:    Size  Location     Type
  2720 ;;		None
  2721 ;; Auto vars:     Size  Location     Type
  2722 ;;  i               1   10[COMRAM] unsigned char 
  2723 ;;  res             1    9[COMRAM] unsigned char 
  2724 ;; Return value:  Size  Location     Type
  2725 ;;                  1    wreg      unsigned char 
  2726 ;; Registers used:
  2727 ;;		wreg, status,2, status,0, cstack
  2728 ;; Tracked objects:
  2729 ;;		On entry : 0/0
  2730 ;;		On exit  : 0/0
  2731 ;;		Unchanged: 0/0
  2732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2733 ;;      Params:         0       0       0       0       0       0       0       0       0
  2734 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2735 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2736 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2737 ;;Total ram usage:        3 bytes
  2738 ;; Hardware stack levels used: 1
  2739 ;; Hardware stack levels required when called: 5
  2740 ;; This function calls:
  2741 ;;		_LeerBit
  2742 ;; This function is called by:
  2743 ;;		_LeerHT11
  2744 ;; This function uses a non-reentrant model
  2745 ;;
  2746                           
  2747                           	psect	text16
  2748   001548                     __ptext16:
  2749                           	callstack 0
  2750   001548                     _LeerByte:
  2751                           	callstack 24
  2752                           
  2753                           ;Proyecto.c: 251: unsigned char res = 0, i;
  2754                           
  2755                           ;incstack = 0
  2756   001548  0E00               	movlw	0
  2757   00154A  6E0A               	movwf	LeerByte@res^0,c
  2758                           
  2759                           ;Proyecto.c: 252: for (i = 8; i > 0; i--) {
  2760   00154C  0E08               	movlw	8
  2761   00154E  6E0B               	movwf	LeerByte@i^0,c
  2762   001550                     l2068:
  2763                           
  2764                           ;Proyecto.c: 253: res = (res << 1) | LeerBit();
  2765   001550  EC4D  F00A         	call	_LeerBit	;wreg free
  2766   001554  6E09               	movwf	??_LeerByte^0,c
  2767   001556  500A               	movf	LeerByte@res^0,w,c
  2768   001558  240A               	addwf	LeerByte@res^0,w,c
  2769   00155A  1009               	iorwf	??_LeerByte^0,w,c
  2770   00155C  6E0A               	movwf	LeerByte@res^0,c
  2771   00155E  060B               	decf	LeerByte@i^0,f,c
  2772   001560  500B               	movf	LeerByte@i^0,w,c
  2773   001562  A4D8               	btfss	status,2,c
  2774   001564  D7F5               	goto	l2068
  2775                           
  2776                           ;Proyecto.c: 254: };Proyecto.c: 255: return res;
  2777   001566  500A               	movf	LeerByte@res^0,w,c
  2778   001568  0012               	return		;funcret
  2779   00156A                     __end_of_LeerByte:
  2780                           	callstack 0
  2781                           
  2782 ;; *************** function _LeerBit *****************
  2783 ;; Defined at:
  2784 ;;		line 258 in file "Proyecto.c"
  2785 ;; Parameters:    Size  Location     Type
  2786 ;;		None
  2787 ;; Auto vars:     Size  Location     Type
  2788 ;;  res             1    7[COMRAM] unsigned char 
  2789 ;; Return value:  Size  Location     Type
  2790 ;;                  1    wreg      unsigned char 
  2791 ;; Registers used:
  2792 ;;		wreg, status,2
  2793 ;; Tracked objects:
  2794 ;;		On entry : 0/0
  2795 ;;		On exit  : 0/0
  2796 ;;		Unchanged: 0/0
  2797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2798 ;;      Params:         0       0       0       0       0       0       0       0       0
  2799 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2800 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2801 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2802 ;;Total ram usage:        1 bytes
  2803 ;; Hardware stack levels used: 1
  2804 ;; Hardware stack levels required when called: 4
  2805 ;; This function calls:
  2806 ;;		Nothing
  2807 ;; This function is called by:
  2808 ;;		_LeerByte
  2809 ;; This function uses a non-reentrant model
  2810 ;;
  2811                           
  2812                           	psect	text17
  2813   00149A                     __ptext17:
  2814                           	callstack 0
  2815   00149A                     _LeerBit:
  2816                           	callstack 24
  2817                           
  2818                           ;Proyecto.c: 259: unsigned char res = 0;
  2819                           
  2820                           ;incstack = 0
  2821   00149A  0E00               	movlw	0
  2822   00149C  6E08               	movwf	LeerBit@res^0,c
  2823   00149E                     l299:
  2824   00149E  A082               	btfss	3970,0,c	;volatile
  2825   0014A0  D7FE               	goto	l299
  2826                           
  2827                           ;Proyecto.c: 261: _delay((unsigned long)((13)*(8000000/4000000.0)));
  2828   0014A2  0E08               	movlw	8
  2829   0014A4                     u1777:
  2830   0014A4  2EE8               	decfsz	wreg,f,c
  2831   0014A6  D7FE               	bra	u1777
  2832   0014A8  D000               	nop2	
  2833                           
  2834                           ;Proyecto.c: 262: if (RC0 == 1) res = 0;
  2835   0014AA  A082               	btfss	3970,0,c	;volatile
  2836   0014AC  D002               	goto	l1994
  2837   0014AE  0E00               	movlw	0
  2838   0014B0  6E08               	movwf	LeerBit@res^0,c
  2839   0014B2                     l1994:
  2840                           
  2841                           ;Proyecto.c: 263: _delay((unsigned long)((22)*(8000000/4000000.0)));
  2842   0014B2  0E0E               	movlw	14
  2843   0014B4                     u1787:
  2844   0014B4  2EE8               	decfsz	wreg,f,c
  2845   0014B6  D7FE               	bra	u1787
  2846   0014B8  D000               	nop2	
  2847                           
  2848                           ;Proyecto.c: 264: if (RC0 == 1) {
  2849   0014BA  A082               	btfss	3970,0,c	;volatile
  2850   0014BC  D004               	goto	u860
  2851                           
  2852                           ;Proyecto.c: 265: res = 1;
  2853   0014BE  0E01               	movlw	1
  2854   0014C0  6E08               	movwf	LeerBit@res^0,c
  2855   0014C2                     l304:
  2856   0014C2  B082               	btfsc	3970,0,c	;volatile
  2857   0014C4  D7FE               	goto	l304
  2858   0014C6                     u860:
  2859                           
  2860                           ;Proyecto.c: 267: };Proyecto.c: 268: return res;
  2861   0014C6  5008               	movf	LeerBit@res^0,w,c
  2862   0014C8  0012               	return		;funcret
  2863   0014CA                     __end_of_LeerBit:
  2864                           	callstack 0
  2865                           
  2866 ;; *************** function _InicializaLCD *****************
  2867 ;; Defined at:
  2868 ;;		line 74 in file "LibLCDXC8.h"
  2869 ;; Parameters:    Size  Location     Type
  2870 ;;		None
  2871 ;; Auto vars:     Size  Location     Type
  2872 ;;		None
  2873 ;; Return value:  Size  Location     Type
  2874 ;;                  1    wreg      void 
  2875 ;; Registers used:
  2876 ;;		wreg, status,2, status,0, cstack
  2877 ;; Tracked objects:
  2878 ;;		On entry : 0/0
  2879 ;;		On exit  : 0/0
  2880 ;;		Unchanged: 0/0
  2881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2882 ;;      Params:         0       0       0       0       0       0       0       0       0
  2883 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2884 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2885 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2886 ;;Total ram usage:        0 bytes
  2887 ;; Hardware stack levels used: 1
  2888 ;; Hardware stack levels required when called: 8
  2889 ;; This function calls:
  2890 ;;		_BorraLCD
  2891 ;;		_EnviaDato
  2892 ;;		_HabilitaLCD
  2893 ;;		_RetardoLCD
  2894 ;; This function is called by:
  2895 ;;		_main
  2896 ;; This function uses a non-reentrant model
  2897 ;;
  2898                           
  2899                           	psect	text18
  2900   000FDE                     __ptext18:
  2901                           	callstack 0
  2902   000FDE                     _InicializaLCD:
  2903                           	callstack 22
  2904                           
  2905                           ;LibLCDXC8.h: 76: LATE1=0;
  2906                           
  2907                           ;incstack = 0
  2908   000FDE  928D               	bcf	3981,1,c	;volatile
  2909                           
  2910                           ;LibLCDXC8.h: 77: if(interfaz==4)
  2911   000FE0  0E04               	movlw	4
  2912   000FE2  1828               	xorwf	_interfaz^0,w,c
  2913   000FE4  A4D8               	btfss	status,2,c
  2914   000FE6  D004               	goto	l2232
  2915                           
  2916                           ;LibLCDXC8.h: 78: LATD=(LATD & 0b00001111) | 0x30;
  2917   000FE8  508C               	movf	140,w,c	;volatile
  2918   000FEA  0B0F               	andlw	15
  2919   000FEC  0930               	iorlw	48
  2920   000FEE  D001               	goto	L4
  2921   000FF0                     l2232:
  2922                           
  2923                           ;LibLCDXC8.h: 79: else;LibLCDXC8.h: 80: LATD=0x3F;
  2924   000FF0  0E3F               	movlw	63
  2925   000FF2                     L4:
  2926   000FF2  6E8C               	movwf	140,c	;volatile
  2927                           
  2928                           ;LibLCDXC8.h: 81: HabilitaLCD();
  2929   000FF4  ECEB  F00A         	call	_HabilitaLCD	;wreg free
  2930                           
  2931                           ;LibLCDXC8.h: 82: RetardoLCD(1);
  2932   000FF8  0E01               	movlw	1
  2933   000FFA  ECBB  F008         	call	_RetardoLCD
  2934                           
  2935                           ;LibLCDXC8.h: 83: if(interfaz==4)
  2936   000FFE  0E04               	movlw	4
  2937   001000  1828               	xorwf	_interfaz^0,w,c
  2938   001002  A4D8               	btfss	status,2,c
  2939   001004  D004               	goto	l2242
  2940                           
  2941                           ;LibLCDXC8.h: 84: LATD=(LATD & 0b00001111) | 0x30;
  2942   001006  508C               	movf	140,w,c	;volatile
  2943   001008  0B0F               	andlw	15
  2944   00100A  0930               	iorlw	48
  2945   00100C  D001               	goto	L5
  2946   00100E                     l2242:
  2947                           
  2948                           ;LibLCDXC8.h: 85: else;LibLCDXC8.h: 86: LATD=0x3F;
  2949   00100E  0E3F               	movlw	63
  2950   001010                     L5:
  2951   001010  6E8C               	movwf	140,c	;volatile
  2952                           
  2953                           ;LibLCDXC8.h: 87: HabilitaLCD();
  2954   001012  ECEB  F00A         	call	_HabilitaLCD	;wreg free
  2955                           
  2956                           ;LibLCDXC8.h: 88: RetardoLCD(3);
  2957   001016  0E03               	movlw	3
  2958   001018  ECBB  F008         	call	_RetardoLCD
  2959                           
  2960                           ;LibLCDXC8.h: 89: if(interfaz==4)
  2961   00101C  0E04               	movlw	4
  2962   00101E  1828               	xorwf	_interfaz^0,w,c
  2963   001020  A4D8               	btfss	status,2,c
  2964   001022  D004               	goto	l2252
  2965                           
  2966                           ;LibLCDXC8.h: 90: LATD=(LATD & 0b00001111) | 0x30;
  2967   001024  508C               	movf	140,w,c	;volatile
  2968   001026  0B0F               	andlw	15
  2969   001028  0930               	iorlw	48
  2970   00102A  D001               	goto	L6
  2971   00102C                     l2252:
  2972                           
  2973                           ;LibLCDXC8.h: 91: else;LibLCDXC8.h: 92: LATD=0x3F;
  2974   00102C  0E3F               	movlw	63
  2975   00102E                     L6:
  2976   00102E  6E8C               	movwf	140,c	;volatile
  2977                           
  2978                           ;LibLCDXC8.h: 93: HabilitaLCD();
  2979   001030  ECEB  F00A         	call	_HabilitaLCD	;wreg free
  2980                           
  2981                           ;LibLCDXC8.h: 94: RetardoLCD(4);
  2982   001034  0E04               	movlw	4
  2983   001036  ECBB  F008         	call	_RetardoLCD
  2984                           
  2985                           ;LibLCDXC8.h: 95: if(interfaz==4){
  2986   00103A  0E04               	movlw	4
  2987   00103C  1828               	xorwf	_interfaz^0,w,c
  2988   00103E  A4D8               	btfss	status,2,c
  2989   001040  D011               	goto	l2272
  2990                           
  2991                           ;LibLCDXC8.h: 96: LATD=(LATD & 0b00001111) | 0x20;
  2992   001042  508C               	movf	140,w,c	;volatile
  2993   001044  0B0F               	andlw	15
  2994   001046  0920               	iorlw	32
  2995   001048  6E8C               	movwf	140,c	;volatile
  2996                           
  2997                           ;LibLCDXC8.h: 97: HabilitaLCD();
  2998   00104A  ECEB  F00A         	call	_HabilitaLCD	;wreg free
  2999                           
  3000                           ;LibLCDXC8.h: 98: RetardoLCD(4);
  3001   00104E  0E04               	movlw	4
  3002   001050  ECBB  F008         	call	_RetardoLCD
  3003                           
  3004                           ;LibLCDXC8.h: 99: EnviaDato(0x2F);
  3005   001054  0E2F               	movlw	47
  3006   001056  EC71  F009         	call	_EnviaDato
  3007                           
  3008                           ;LibLCDXC8.h: 100: HabilitaLCD();
  3009   00105A  ECEB  F00A         	call	_HabilitaLCD	;wreg free
  3010                           
  3011                           ;LibLCDXC8.h: 101: RetardoLCD(4);
  3012   00105E  0E04               	movlw	4
  3013   001060  ECBB  F008         	call	_RetardoLCD
  3014   001064                     l2272:
  3015                           
  3016                           ;LibLCDXC8.h: 102: };LibLCDXC8.h: 103: BorraLCD();
  3017   001064  ECB5  F00A         	call	_BorraLCD	;wreg free
  3018                           
  3019                           ;LibLCDXC8.h: 104: EnviaDato(0xF);
  3020   001068  0E0F               	movlw	15
  3021   00106A  EC71  F009         	call	_EnviaDato
  3022                           
  3023                           ;LibLCDXC8.h: 105: HabilitaLCD();
  3024   00106E  ECEB  F00A         	call	_HabilitaLCD	;wreg free
  3025                           
  3026                           ;LibLCDXC8.h: 106: RetardoLCD(4);
  3027   001072  0E04               	movlw	4
  3028   001074  ECBB  F008         	call	_RetardoLCD
  3029   001078  0012               	return		;funcret
  3030   00107A                     __end_of_InicializaLCD:
  3031                           	callstack 0
  3032                           
  3033 ;; *************** function _BorraLCD *****************
  3034 ;; Defined at:
  3035 ;;		line 115 in file "LibLCDXC8.h"
  3036 ;; Parameters:    Size  Location     Type
  3037 ;;		None
  3038 ;; Auto vars:     Size  Location     Type
  3039 ;;		None
  3040 ;; Return value:  Size  Location     Type
  3041 ;;                  1    wreg      void 
  3042 ;; Registers used:
  3043 ;;		wreg, status,2, status,0, cstack
  3044 ;; Tracked objects:
  3045 ;;		On entry : 0/0
  3046 ;;		On exit  : 0/0
  3047 ;;		Unchanged: 0/0
  3048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3049 ;;      Params:         0       0       0       0       0       0       0       0       0
  3050 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3051 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3052 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3053 ;;Total ram usage:        0 bytes
  3054 ;; Hardware stack levels used: 1
  3055 ;; Hardware stack levels required when called: 7
  3056 ;; This function calls:
  3057 ;;		_DireccionaLCD
  3058 ;;		_EnviaDato
  3059 ;;		_HabilitaLCD
  3060 ;;		_RetardoLCD
  3061 ;; This function is called by:
  3062 ;;		_InicializaLCD
  3063 ;;		_main
  3064 ;;		_TransmitirDatos
  3065 ;; This function uses a non-reentrant model
  3066 ;;
  3067                           
  3068                           	psect	text19
  3069   00156A                     __ptext19:
  3070                           	callstack 0
  3071   00156A                     _BorraLCD:
  3072                           	callstack 22
  3073                           
  3074                           ;LibLCDXC8.h: 117: LATE1=0;
  3075                           
  3076                           ;incstack = 0
  3077   00156A  928D               	bcf	3981,1,c	;volatile
  3078                           
  3079                           ;LibLCDXC8.h: 118: EnviaDato(0x01);
  3080   00156C  0E01               	movlw	1
  3081   00156E  EC71  F009         	call	_EnviaDato
  3082                           
  3083                           ;LibLCDXC8.h: 119: HabilitaLCD();
  3084   001572  ECEB  F00A         	call	_HabilitaLCD	;wreg free
  3085                           
  3086                           ;LibLCDXC8.h: 120: RetardoLCD(2);
  3087   001576  0E02               	movlw	2
  3088   001578  ECBB  F008         	call	_RetardoLCD
  3089                           
  3090                           ;LibLCDXC8.h: 121: DireccionaLCD(0x80);
  3091   00157C  0E80               	movlw	128
  3092   00157E  ECCD  F00A         	call	_DireccionaLCD
  3093   001582  0012               	return		;funcret
  3094   001584                     __end_of_BorraLCD:
  3095                           	callstack 0
  3096                           
  3097 ;; *************** function _DireccionaLCD *****************
  3098 ;; Defined at:
  3099 ;;		line 260 in file "LibLCDXC8.h"
  3100 ;; Parameters:    Size  Location     Type
  3101 ;;  a               1    wreg     unsigned char 
  3102 ;; Auto vars:     Size  Location     Type
  3103 ;;  a               1   11[COMRAM] unsigned char 
  3104 ;; Return value:  Size  Location     Type
  3105 ;;                  1    wreg      void 
  3106 ;; Registers used:
  3107 ;;		wreg, status,2, status,0, cstack
  3108 ;; Tracked objects:
  3109 ;;		On entry : 0/0
  3110 ;;		On exit  : 0/0
  3111 ;;		Unchanged: 0/0
  3112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3113 ;;      Params:         0       0       0       0       0       0       0       0       0
  3114 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3115 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3116 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3117 ;;Total ram usage:        1 bytes
  3118 ;; Hardware stack levels used: 1
  3119 ;; Hardware stack levels required when called: 6
  3120 ;; This function calls:
  3121 ;;		_EnviaDato
  3122 ;;		_HabilitaLCD
  3123 ;;		_RetardoLCD
  3124 ;; This function is called by:
  3125 ;;		_BorraLCD
  3126 ;;		_main
  3127 ;;		_Password
  3128 ;;		_TransmitirDatos
  3129 ;; This function uses a non-reentrant model
  3130 ;;
  3131                           
  3132                           	psect	text20
  3133   00159A                     __ptext20:
  3134                           	callstack 0
  3135   00159A                     _DireccionaLCD:
  3136                           	callstack 23
  3137                           
  3138                           ;incstack = 0
  3139                           ;DireccionaLCD@a stored from wreg
  3140   00159A  6E0C               	movwf	DireccionaLCD@a^0,c
  3141                           
  3142                           ;LibLCDXC8.h: 263: LATE1=0;
  3143   00159C  928D               	bcf	3981,1,c	;volatile
  3144                           
  3145                           ;LibLCDXC8.h: 264: EnviaDato(a);
  3146   00159E  500C               	movf	DireccionaLCD@a^0,w,c
  3147   0015A0  EC71  F009         	call	_EnviaDato
  3148                           
  3149                           ;LibLCDXC8.h: 265: HabilitaLCD();
  3150   0015A4  ECEB  F00A         	call	_HabilitaLCD	;wreg free
  3151                           
  3152                           ;LibLCDXC8.h: 266: RetardoLCD(4);
  3153   0015A8  0E04               	movlw	4
  3154   0015AA  ECBB  F008         	call	_RetardoLCD
  3155   0015AE  0012               	return		;funcret
  3156   0015B0                     __end_of_DireccionaLCD:
  3157                           	callstack 0
  3158                           
  3159 ;; *************** function _EnviaDato *****************
  3160 ;; Defined at:
  3161 ;;		line 62 in file "LibLCDXC8.h"
  3162 ;; Parameters:    Size  Location     Type
  3163 ;;  a               1    wreg     unsigned char 
  3164 ;; Auto vars:     Size  Location     Type
  3165 ;;  a               1   10[COMRAM] unsigned char 
  3166 ;; Return value:  Size  Location     Type
  3167 ;;                  1    wreg      void 
  3168 ;; Registers used:
  3169 ;;		wreg, status,2, status,0, cstack
  3170 ;; Tracked objects:
  3171 ;;		On entry : 0/0
  3172 ;;		On exit  : 0/0
  3173 ;;		Unchanged: 0/0
  3174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3175 ;;      Params:         0       0       0       0       0       0       0       0       0
  3176 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3177 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3178 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3179 ;;Total ram usage:        2 bytes
  3180 ;; Hardware stack levels used: 1
  3181 ;; Hardware stack levels required when called: 5
  3182 ;; This function calls:
  3183 ;;		_HabilitaLCD
  3184 ;;		_RetardoLCD
  3185 ;; This function is called by:
  3186 ;;		_InicializaLCD
  3187 ;;		_BorraLCD
  3188 ;;		_EscribeLCD_c
  3189 ;;		_DireccionaLCD
  3190 ;; This function uses a non-reentrant model
  3191 ;;
  3192                           
  3193                           	psect	text21
  3194   0012E2                     __ptext21:
  3195                           	callstack 0
  3196   0012E2                     _EnviaDato:
  3197                           	callstack 22
  3198                           
  3199                           ;incstack = 0
  3200                           ;EnviaDato@a stored from wreg
  3201   0012E2  6E0B               	movwf	EnviaDato@a^0,c
  3202                           
  3203                           ;LibLCDXC8.h: 63: if(interfaz==4){
  3204   0012E4  0E04               	movlw	4
  3205   0012E6  1828               	xorwf	_interfaz^0,w,c
  3206   0012E8  A4D8               	btfss	status,2,c
  3207   0012EA  D017               	goto	l1966
  3208                           
  3209                           ;LibLCDXC8.h: 64: LATD=(LATD & 0b00001111) | (a & 0b11110000);
  3210   0012EC  C00B  F00A         	movff	EnviaDato@a,??_EnviaDato
  3211   0012F0  0EF0               	movlw	240
  3212   0012F2  160A               	andwf	??_EnviaDato^0,f,c
  3213   0012F4  508C               	movf	140,w,c	;volatile
  3214   0012F6  0B0F               	andlw	15
  3215   0012F8  100A               	iorwf	??_EnviaDato^0,w,c
  3216   0012FA  6E8C               	movwf	140,c	;volatile
  3217                           
  3218                           ;LibLCDXC8.h: 65: HabilitaLCD();
  3219   0012FC  ECEB  F00A         	call	_HabilitaLCD	;wreg free
  3220                           
  3221                           ;LibLCDXC8.h: 66: RetardoLCD(1);
  3222   001300  0E01               	movlw	1
  3223   001302  ECBB  F008         	call	_RetardoLCD
  3224                           
  3225                           ;LibLCDXC8.h: 67: LATD=(LATD & 0b00001111) | (a<<4);
  3226   001306  C00B  F00A         	movff	EnviaDato@a,??_EnviaDato
  3227   00130A  3A0A               	swapf	??_EnviaDato^0,f,c
  3228   00130C  0EF0               	movlw	240
  3229   00130E  160A               	andwf	??_EnviaDato^0,f,c
  3230   001310  508C               	movf	140,w,c	;volatile
  3231   001312  0B0F               	andlw	15
  3232   001314  100A               	iorwf	??_EnviaDato^0,w,c
  3233   001316  6E8C               	movwf	140,c	;volatile
  3234                           
  3235                           ;LibLCDXC8.h: 70: }else if(interfaz==8){
  3236   001318  0012               	return	
  3237   00131A                     l1966:
  3238   00131A  0E08               	movlw	8
  3239   00131C  1828               	xorwf	_interfaz^0,w,c
  3240   00131E  A4D8               	btfss	status,2,c
  3241   001320  0012               	return	
  3242                           
  3243                           ;LibLCDXC8.h: 71: LATD=a;
  3244   001322  C00B  FF8C         	movff	EnviaDato@a,3980	;volatile
  3245   001326  0012               	return		;funcret
  3246   001328                     __end_of_EnviaDato:
  3247                           	callstack 0
  3248                           
  3249 ;; *************** function _RetardoLCD *****************
  3250 ;; Defined at:
  3251 ;;		line 296 in file "LibLCDXC8.h"
  3252 ;; Parameters:    Size  Location     Type
  3253 ;;  a               1    wreg     unsigned char 
  3254 ;; Auto vars:     Size  Location     Type
  3255 ;;  a               1    8[COMRAM] unsigned char 
  3256 ;; Return value:  Size  Location     Type
  3257 ;;                  1    wreg      void 
  3258 ;; Registers used:
  3259 ;;		wreg, status,2, status,0
  3260 ;; Tracked objects:
  3261 ;;		On entry : 0/0
  3262 ;;		On exit  : 0/0
  3263 ;;		Unchanged: 0/0
  3264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3265 ;;      Params:         0       0       0       0       0       0       0       0       0
  3266 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3267 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3268 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3269 ;;Total ram usage:        2 bytes
  3270 ;; Hardware stack levels used: 1
  3271 ;; Hardware stack levels required when called: 4
  3272 ;; This function calls:
  3273 ;;		Nothing
  3274 ;; This function is called by:
  3275 ;;		_EnviaDato
  3276 ;;		_InicializaLCD
  3277 ;;		_BorraLCD
  3278 ;;		_EscribeLCD_c
  3279 ;;		_DireccionaLCD
  3280 ;; This function uses a non-reentrant model
  3281 ;;
  3282                           
  3283                           	psect	text22
  3284   001176                     __ptext22:
  3285                           	callstack 0
  3286   001176                     _RetardoLCD:
  3287                           	callstack 23
  3288                           
  3289                           ;incstack = 0
  3290                           ;RetardoLCD@a stored from wreg
  3291   001176  6E09               	movwf	RetardoLCD@a^0,c
  3292                           
  3293                           ;LibLCDXC8.h: 297: switch(a){
  3294   001178  D023               	goto	l1954
  3295   00117A                     l1944:
  3296   00117A  0E27               	movlw	39
  3297   00117C  6E08               	movwf	??_RetardoLCD^0,c
  3298   00117E  0EF5               	movlw	245
  3299   001180                     u1797:
  3300   001180  2EE8               	decfsz	wreg,f,c
  3301   001182  D7FE               	bra	u1797
  3302   001184  2E08               	decfsz	??_RetardoLCD^0,f,c
  3303   001186  D7FC               	bra	u1797
  3304   001188  F000               	nop	
  3305                           
  3306                           ;LibLCDXC8.h: 300: break;
  3307   00118A  0012               	return	
  3308   00118C                     l1946:
  3309   00118C  0E03               	movlw	3
  3310   00118E  6E08               	movwf	??_RetardoLCD^0,c
  3311   001190  0E98               	movlw	152
  3312   001192                     u1807:
  3313   001192  2EE8               	decfsz	wreg,f,c
  3314   001194  D7FE               	bra	u1807
  3315   001196  2E08               	decfsz	??_RetardoLCD^0,f,c
  3316   001198  D7FC               	bra	u1807
  3317                           
  3318                           ;LibLCDXC8.h: 302: _delay((unsigned long)((640)*(8000000/4000000.0)));
  3319   00119A  0EB6               	movlw	182
  3320   00119C                     u1817:
  3321   00119C  D000               	nop2	
  3322   00119E  D000               	nop2	
  3323   0011A0  2EE8               	decfsz	wreg,f,c
  3324   0011A2  D7FC               	bra	u1817
  3325   0011A4  D000               	nop2	
  3326   0011A6  D000               	nop2	
  3327   0011A8  D000               	nop2	
  3328                           
  3329                           ;LibLCDXC8.h: 304: break;
  3330   0011AA  0012               	return	
  3331   0011AC                     l1948:
  3332   0011AC  0E42               	movlw	66
  3333   0011AE                     u1827:
  3334   0011AE  2EE8               	decfsz	wreg,f,c
  3335   0011B0  D7FE               	bra	u1827
  3336   0011B2  D000               	nop2	
  3337                           
  3338                           ;LibLCDXC8.h: 307: break;
  3339   0011B4  0012               	return	
  3340   0011B6                     l1950:
  3341   0011B6  0E1A               	movlw	26
  3342   0011B8                     u1837:
  3343   0011B8  2EE8               	decfsz	wreg,f,c
  3344   0011BA  D7FE               	bra	u1837
  3345   0011BC  D000               	nop2	
  3346                           
  3347                           ;LibLCDXC8.h: 310: break;
  3348   0011BE  0012               	return	
  3349   0011C0                     l1954:
  3350   0011C0  5009               	movf	RetardoLCD@a^0,w,c
  3351                           
  3352                           ; Switch size 1, requested type "simple"
  3353                           ; Number of cases is 4, Range of values is 1 to 4
  3354                           ; switch strategies available:
  3355                           ; Name         Instructions Cycles
  3356                           ; simple_byte           13     7 (average)
  3357                           ;	Chosen strategy is simple_byte
  3358   0011C2  0A01               	xorlw	1	; case 1
  3359   0011C4  B4D8               	btfsc	status,2,c
  3360   0011C6  D7D9               	goto	l1944
  3361   0011C8  0A03               	xorlw	3	; case 2
  3362   0011CA  B4D8               	btfsc	status,2,c
  3363   0011CC  D7DF               	goto	l1946
  3364   0011CE  0A01               	xorlw	1	; case 3
  3365   0011D0  B4D8               	btfsc	status,2,c
  3366   0011D2  D7EC               	goto	l1948
  3367   0011D4  0A07               	xorlw	7	; case 4
  3368   0011D6  A4D8               	btfss	status,2,c
  3369   0011D8  0012               	return	
  3370   0011DA  D7ED               	goto	l1950
  3371   0011DC                     __end_of_RetardoLCD:
  3372                           	callstack 0
  3373                           
  3374 ;; *************** function _HabilitaLCD *****************
  3375 ;; Defined at:
  3376 ;;		line 108 in file "LibLCDXC8.h"
  3377 ;; Parameters:    Size  Location     Type
  3378 ;;		None
  3379 ;; Auto vars:     Size  Location     Type
  3380 ;;		None
  3381 ;; Return value:  Size  Location     Type
  3382 ;;                  1    wreg      void 
  3383 ;; Registers used:
  3384 ;;		wreg
  3385 ;; Tracked objects:
  3386 ;;		On entry : 0/0
  3387 ;;		On exit  : 0/0
  3388 ;;		Unchanged: 0/0
  3389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3390 ;;      Params:         0       0       0       0       0       0       0       0       0
  3391 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3392 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3393 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3394 ;;Total ram usage:        0 bytes
  3395 ;; Hardware stack levels used: 1
  3396 ;; Hardware stack levels required when called: 4
  3397 ;; This function calls:
  3398 ;;		Nothing
  3399 ;; This function is called by:
  3400 ;;		_EnviaDato
  3401 ;;		_InicializaLCD
  3402 ;;		_BorraLCD
  3403 ;;		_EscribeLCD_c
  3404 ;;		_DireccionaLCD
  3405 ;; This function uses a non-reentrant model
  3406 ;;
  3407                           
  3408                           	psect	text23
  3409   0015D6                     __ptext23:
  3410                           	callstack 0
  3411   0015D6                     _HabilitaLCD:
  3412                           	callstack 23
  3413                           
  3414                           ;LibLCDXC8.h: 110: LATE2=1;
  3415                           
  3416                           ;incstack = 0
  3417   0015D6  848D               	bsf	3981,2,c	;volatile
  3418                           
  3419                           ;LibLCDXC8.h: 111: _delay((unsigned long)((40)*(8000000/4000000.0)));
  3420   0015D8  0E1A               	movlw	26
  3421   0015DA                     u1847:
  3422   0015DA  2EE8               	decfsz	wreg,f,c
  3423   0015DC  D7FE               	bra	u1847
  3424   0015DE  D000               	nop2	
  3425                           
  3426                           ;LibLCDXC8.h: 113: LATE2=0;
  3427   0015E0  948D               	bcf	3981,2,c	;volatile
  3428   0015E2  0012               	return		;funcret
  3429   0015E4                     __end_of_HabilitaLCD:
  3430                           	callstack 0
  3431                           
  3432 ;; *************** function _ISR *****************
  3433 ;; Defined at:
  3434 ;;		line 407 in file "Proyecto.c"
  3435 ;; Parameters:    Size  Location     Type
  3436 ;;		None
  3437 ;; Auto vars:     Size  Location     Type
  3438 ;;		None
  3439 ;; Return value:  Size  Location     Type
  3440 ;;                  1    wreg      void 
  3441 ;; Registers used:
  3442 ;;		wreg, status,2, status,0, cstack
  3443 ;; Tracked objects:
  3444 ;;		On entry : 0/0
  3445 ;;		On exit  : 0/0
  3446 ;;		Unchanged: 0/0
  3447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3448 ;;      Params:         0       0       0       0       0       0       0       0       0
  3449 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3450 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3451 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3452 ;;Total ram usage:        2 bytes
  3453 ;; Hardware stack levels used: 1
  3454 ;; Hardware stack levels required when called: 3
  3455 ;; This function calls:
  3456 ;;		_LeerTeclado
  3457 ;;		i2_EscribeLCD_c
  3458 ;; This function is called by:
  3459 ;;		Interrupt level 2
  3460 ;; This function uses a non-reentrant model
  3461 ;;
  3462                           
  3463                           	psect	intcode
  3464   000008                     __pintcode:
  3465                           	callstack 0
  3466   000008                     _ISR:
  3467                           	callstack 22
  3468                           
  3469                           ;incstack = 0
  3470   000008  823E               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  3471   00000A  ED7F  F006         	call	int_func,f	;refresh shadow registers
  3472                           
  3473                           	psect	intcode_body
  3474   000CFE                     __pintcode_body:
  3475                           	callstack 22
  3476   000CFE                     int_func:
  3477                           	callstack 22
  3478   000CFE  0006               	pop		; remove dummy address from shadow register refresh
  3479                           
  3480                           ;Proyecto.c: 408: if(TMR0IF == 1){
  3481   000D00  A4F2               	btfss	4082,2,c	;volatile
  3482   000D02  D018               	goto	i2l361
  3483                           
  3484                           ;Proyecto.c: 409: TMR0IF = 0;
  3485   000D04  94F2               	bcf	4082,2,c	;volatile
  3486                           
  3487                           ;Proyecto.c: 410: TMR0 = 64286;
  3488   000D06  0EFB               	movlw	251
  3489   000D08  6ED7               	movwf	215,c	;volatile
  3490   000D0A  0E1E               	movlw	30
  3491   000D0C  6ED6               	movwf	214,c	;volatile
  3492                           
  3493                           ;Proyecto.c: 411: if(RE0 == 1){
  3494   000D0E  A084               	btfss	3972,0,c	;volatile
  3495   000D10  D011               	goto	i2l361
  3496                           
  3497                           ;Proyecto.c: 412: CCP1CON = 0;
  3498   000D12  0E00               	movlw	0
  3499   000D14  6EBD               	movwf	189,c	;volatile
  3500                           
  3501                           ;Proyecto.c: 413: RC2 = 0;
  3502   000D16  9482               	bcf	3970,2,c	;volatile
  3503                           
  3504                           ;Proyecto.c: 414: _delay((unsigned long)((200)*(8000000/4000.0)));
  3505   000D18  0E03               	movlw	3
  3506   000D1A  6E07               	movwf	(??_ISR+1)^0,c
  3507   000D1C  0E08               	movlw	8
  3508   000D1E  6E06               	movwf	??_ISR^0,c
  3509   000D20  0E77               	movlw	119
  3510   000D22                     i2u185_47:
  3511   000D22  2EE8               	decfsz	wreg,f,c
  3512   000D24  D7FE               	bra	i2u185_47
  3513   000D26  2E06               	decfsz	??_ISR^0,f,c
  3514   000D28  D7FC               	bra	i2u185_47
  3515   000D2A  2E07               	decfsz	(??_ISR+1)^0,f,c
  3516   000D2C  D7FA               	bra	i2u185_47
  3517   000D2E  F000               	nop	
  3518   000D30  0003               	sleep		;# 
  3519   000D32                     i2l363:
  3520   000D32  D7FF               	goto	i2l363
  3521   000D34                     i2l361:
  3522                           
  3523                           ;Proyecto.c: 417: };Proyecto.c: 418: };Proyecto.c: 419: if(RBIF==1){
  3524   000D34  A0F2               	btfss	4082,0,c	;volatile
  3525   000D36  D061               	goto	i2l2672
  3526                           
  3527                           ;Proyecto.c: 421: if(PORTB!=0b11110000 && teclaIf == 1){
  3528   000D38  0EF0               	movlw	240
  3529   000D3A  1881               	xorwf	129,w,c	;volatile
  3530   000D3C  B4D8               	btfsc	status,2,c
  3531   000D3E  D055               	goto	i2l2668
  3532   000D40  0433               	decf	_teclaIf^0,w,c
  3533   000D42  1034               	iorwf	(_teclaIf+1)^0,w,c
  3534   000D44  A4D8               	btfss	status,2,c
  3535   000D46  D051               	goto	i2l2668
  3536                           
  3537                           ;Proyecto.c: 422: Tecla=0;
  3538   000D48  0E00               	movlw	0
  3539   000D4A  6E37               	movwf	_Tecla^0,c
  3540                           
  3541                           ;Proyecto.c: 423: LATB=0b11111110;
  3542   000D4C  0EFE               	movlw	254
  3543   000D4E  6E8A               	movwf	138,c	;volatile
  3544                           
  3545                           ;Proyecto.c: 424: if(RB4==0) Tecla=16;
  3546   000D50  B881               	btfsc	3969,4,c	;volatile
  3547   000D52  D002               	goto	i2l368
  3548   000D54  0E10               	movlw	16
  3549   000D56  D041               	goto	L21
  3550   000D58                     i2l368:
  3551                           
  3552                           ;Proyecto.c: 425: else if(RB5==0) Tecla=12;
  3553   000D58  BA81               	btfsc	3969,5,c	;volatile
  3554   000D5A  D002               	goto	i2l370
  3555   000D5C  0E0C               	movlw	12
  3556   000D5E  D03D               	goto	L21
  3557   000D60                     i2l370:
  3558                           
  3559                           ;Proyecto.c: 426: else if(RB6==0) Tecla=8;
  3560   000D60  BC81               	btfsc	3969,6,c	;volatile
  3561   000D62  D002               	goto	i2l372
  3562   000D64  0E08               	movlw	8
  3563   000D66  D039               	goto	L21
  3564   000D68                     i2l372:
  3565                           
  3566                           ;Proyecto.c: 427: else if(RB7==0) Tecla=4;
  3567   000D68  BE81               	btfsc	3969,7,c	;volatile
  3568   000D6A  D002               	goto	i2l2628
  3569   000D6C  0E04               	movlw	4
  3570   000D6E  D035               	goto	L21
  3571   000D70                     i2l2628:
  3572                           
  3573                           ;Proyecto.c: 428: else{;Proyecto.c: 429: LATB=0b11111101;
  3574   000D70  0EFD               	movlw	253
  3575   000D72  6E8A               	movwf	138,c	;volatile
  3576                           
  3577                           ;Proyecto.c: 430: if(RB4==0) Tecla=15;
  3578   000D74  B881               	btfsc	3969,4,c	;volatile
  3579   000D76  D002               	goto	i2l376
  3580   000D78  0E0F               	movlw	15
  3581   000D7A  D02F               	goto	L21
  3582   000D7C                     i2l376:
  3583                           
  3584                           ;Proyecto.c: 431: else if(RB5==0) Tecla=11;
  3585   000D7C  BA81               	btfsc	3969,5,c	;volatile
  3586   000D7E  D002               	goto	i2l378
  3587   000D80  0E0B               	movlw	11
  3588   000D82  D02B               	goto	L21
  3589   000D84                     i2l378:
  3590                           
  3591                           ;Proyecto.c: 432: else if(RB6==0) Tecla=7;
  3592   000D84  BC81               	btfsc	3969,6,c	;volatile
  3593   000D86  D002               	goto	i2l380
  3594   000D88  0E07               	movlw	7
  3595   000D8A  D027               	goto	L21
  3596   000D8C                     i2l380:
  3597                           
  3598                           ;Proyecto.c: 433: else if(RB7==0) Tecla=3;
  3599   000D8C  BE81               	btfsc	3969,7,c	;volatile
  3600   000D8E  D002               	goto	i2l2640
  3601   000D90  0E03               	movlw	3
  3602   000D92  D023               	goto	L21
  3603   000D94                     i2l2640:
  3604                           
  3605                           ;Proyecto.c: 434: else{;Proyecto.c: 435: LATB=0b11111011;
  3606   000D94  0EFB               	movlw	251
  3607   000D96  6E8A               	movwf	138,c	;volatile
  3608                           
  3609                           ;Proyecto.c: 436: if(RB4==0) Tecla=14;
  3610   000D98  B881               	btfsc	3969,4,c	;volatile
  3611   000D9A  D002               	goto	i2l384
  3612   000D9C  0E0E               	movlw	14
  3613   000D9E  D01D               	goto	L21
  3614   000DA0                     i2l384:
  3615                           
  3616                           ;Proyecto.c: 437: else if(RB5==0) Tecla=10;
  3617   000DA0  BA81               	btfsc	3969,5,c	;volatile
  3618   000DA2  D002               	goto	i2l386
  3619   000DA4  0E0A               	movlw	10
  3620   000DA6  D019               	goto	L21
  3621   000DA8                     i2l386:
  3622                           
  3623                           ;Proyecto.c: 438: else if(RB6==0) Tecla=6;
  3624   000DA8  BC81               	btfsc	3969,6,c	;volatile
  3625   000DAA  D002               	goto	i2l388
  3626   000DAC  0E06               	movlw	6
  3627   000DAE  D015               	goto	L21
  3628   000DB0                     i2l388:
  3629                           
  3630                           ;Proyecto.c: 439: else if(RB7==0) Tecla=2;
  3631   000DB0  BE81               	btfsc	3969,7,c	;volatile
  3632   000DB2  D002               	goto	i2l2652
  3633   000DB4  0E02               	movlw	2
  3634   000DB6  D011               	goto	L21
  3635   000DB8                     i2l2652:
  3636                           
  3637                           ;Proyecto.c: 440: else{;Proyecto.c: 441: LATB=0b11110111;
  3638   000DB8  0EF7               	movlw	247
  3639   000DBA  6E8A               	movwf	138,c	;volatile
  3640                           
  3641                           ;Proyecto.c: 442: if(RB4==0) Tecla=13;
  3642   000DBC  B881               	btfsc	3969,4,c	;volatile
  3643   000DBE  D002               	goto	i2l392
  3644   000DC0  0E0D               	movlw	13
  3645   000DC2  D00B               	goto	L21
  3646   000DC4                     i2l392:
  3647                           
  3648                           ;Proyecto.c: 443: else if(RB5==0) Tecla=9;
  3649   000DC4  BA81               	btfsc	3969,5,c	;volatile
  3650   000DC6  D002               	goto	i2l394
  3651   000DC8  0E09               	movlw	9
  3652   000DCA  D007               	goto	L21
  3653   000DCC                     i2l394:
  3654                           
  3655                           ;Proyecto.c: 444: else if(RB6==0) Tecla=5;
  3656   000DCC  BC81               	btfsc	3969,6,c	;volatile
  3657   000DCE  D002               	goto	i2l396
  3658   000DD0  0E05               	movlw	5
  3659   000DD2  D003               	goto	L21
  3660   000DD4                     i2l396:
  3661                           
  3662                           ;Proyecto.c: 445: else if(RB7==0) Tecla=1;
  3663   000DD4  BE81               	btfsc	3969,7,c	;volatile
  3664   000DD6  D002               	goto	i2l393
  3665   000DD8  0E01               	movlw	1
  3666   000DDA                     L21:
  3667   000DDA  6E37               	movwf	_Tecla^0,c
  3668   000DDC                     i2l393:
  3669                           
  3670                           ;Proyecto.c: 446: };Proyecto.c: 447: };Proyecto.c: 448: };Proyecto.c: 449: LATB=0b111100
      +                          00;
  3671   000DDC  0EF0               	movlw	240
  3672   000DDE  6E8A               	movwf	138,c	;volatile
  3673                           
  3674                           ;Proyecto.c: 451: LeerTeclado();
  3675   000DE0  EC88  F007         	call	_LeerTeclado	;wreg free
  3676                           
  3677                           ;Proyecto.c: 452: EscribeLCD_c(Tecla);
  3678   000DE4  5037               	movf	_Tecla^0,w,c
  3679   000DE6  ECD8  F00A         	call	i2_EscribeLCD_c
  3680   000DEA                     i2l2668:
  3681                           
  3682                           ;Proyecto.c: 453: };Proyecto.c: 454: RBIF=0;
  3683   000DEA  90F2               	bcf	4082,0,c	;volatile
  3684                           
  3685                           ;Proyecto.c: 455: _delay((unsigned long)((50)*(8000000/4000.0)));
  3686   000DEC  0E82               	movlw	130
  3687   000DEE  6E06               	movwf	??_ISR^0,c
  3688   000DF0  0EDE               	movlw	222
  3689   000DF2                     i2u186_47:
  3690   000DF2  2EE8               	decfsz	wreg,f,c
  3691   000DF4  D7FE               	bra	i2u186_47
  3692   000DF6  2E06               	decfsz	??_ISR^0,f,c
  3693   000DF8  D7FC               	bra	i2u186_47
  3694   000DFA                     i2l2672:
  3695                           
  3696                           ;Proyecto.c: 457: };Proyecto.c: 458: if(TMR1IF==1){
  3697   000DFA  A09E               	btfss	3998,0,c	;volatile
  3698   000DFC  D00D               	goto	i2l400
  3699                           
  3700                           ;Proyecto.c: 459: TMR1IF=0;
  3701   000DFE  909E               	bcf	3998,0,c	;volatile
  3702                           
  3703                           ;Proyecto.c: 460: TMR1=60536;
  3704   000E00  0EEC               	movlw	236
  3705   000E02  6ECF               	movwf	207,c	;volatile
  3706   000E04  0E78               	movlw	120
  3707   000E06  6ECE               	movwf	206,c	;volatile
  3708                           
  3709                           ;Proyecto.c: 461: CCPR2=60536+a;
  3710   000E08  0E78               	movlw	120
  3711   000E0A  2425               	addwf	_a^0,w,c
  3712   000E0C  6EBB               	movwf	187,c	;volatile
  3713   000E0E  0EEC               	movlw	236
  3714   000E10  2026               	addwfc	(_a+1)^0,w,c
  3715   000E12  6EBC               	movwf	188,c	;volatile
  3716                           
  3717                           ;Proyecto.c: 462: CCP2CON=0b00001001;
  3718   000E14  0E09               	movlw	9
  3719   000E16  6EBA               	movwf	186,c	;volatile
  3720   000E18                     i2l400:
  3721   000E18  923E               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  3722   000E1A  0011               	retfie		f
  3723   000E1C                     __end_of_ISR:
  3724                           	callstack 0
  3725                           
  3726 ;; *************** function i2_EscribeLCD_c *****************
  3727 ;; Defined at:
  3728 ;;		line 149 in file "LibLCDXC8.h"
  3729 ;; Parameters:    Size  Location     Type
  3730 ;;  a               1    wreg     unsigned char 
  3731 ;; Auto vars:     Size  Location     Type
  3732 ;;  a               1    4[COMRAM] unsigned char 
  3733 ;; Return value:  Size  Location     Type
  3734 ;;                  1    wreg      void 
  3735 ;; Registers used:
  3736 ;;		wreg, status,2, status,0, cstack
  3737 ;; Tracked objects:
  3738 ;;		On entry : 0/0
  3739 ;;		On exit  : 0/0
  3740 ;;		Unchanged: 0/0
  3741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3742 ;;      Params:         0       0       0       0       0       0       0       0       0
  3743 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3744 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3745 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3746 ;;Total ram usage:        1 bytes
  3747 ;; Hardware stack levels used: 1
  3748 ;; Hardware stack levels required when called: 2
  3749 ;; This function calls:
  3750 ;;		i2_EnviaDato
  3751 ;;		i2_HabilitaLCD
  3752 ;;		i2_RetardoLCD
  3753 ;; This function is called by:
  3754 ;;		_ISR
  3755 ;; This function uses a non-reentrant model
  3756 ;;
  3757                           
  3758                           	psect	text25
  3759   0015B0                     __ptext25:
  3760                           	callstack 0
  3761   0015B0                     i2_EscribeLCD_c:
  3762                           	callstack 22
  3763                           
  3764                           ;incstack = 0
  3765                           ;i2EscribeLCD_c@a stored from wreg
  3766   0015B0  6E05               	movwf	i2EscribeLCD_c@a^0,c
  3767                           
  3768                           ;LibLCDXC8.h: 153: LATE1=1;
  3769   0015B2  828D               	bsf	3981,1,c	;volatile
  3770                           
  3771                           ;LibLCDXC8.h: 154: EnviaDato(a);
  3772   0015B4  5005               	movf	i2EscribeLCD_c@a^0,w,c
  3773   0015B6  EC94  F009         	call	i2_EnviaDato
  3774                           
  3775                           ;LibLCDXC8.h: 155: HabilitaLCD();
  3776   0015BA  ECF2  F00A         	call	i2_HabilitaLCD	;wreg free
  3777                           
  3778                           ;LibLCDXC8.h: 156: RetardoLCD(4);
  3779   0015BE  0E04               	movlw	4
  3780   0015C0  ECEE  F008         	call	i2_RetardoLCD
  3781   0015C4  0012               	return		;funcret
  3782   0015C6                     __end_ofi2_EscribeLCD_c:
  3783                           	callstack 0
  3784                           
  3785 ;; *************** function i2_EnviaDato *****************
  3786 ;; Defined at:
  3787 ;;		line 62 in file "LibLCDXC8.h"
  3788 ;; Parameters:    Size  Location     Type
  3789 ;;  a               1    wreg     unsigned char 
  3790 ;; Auto vars:     Size  Location     Type
  3791 ;;  a               1    3[COMRAM] unsigned char 
  3792 ;; Return value:  Size  Location     Type
  3793 ;;                  1    wreg      void 
  3794 ;; Registers used:
  3795 ;;		wreg, status,2, status,0, cstack
  3796 ;; Tracked objects:
  3797 ;;		On entry : 0/0
  3798 ;;		On exit  : 0/0
  3799 ;;		Unchanged: 0/0
  3800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3801 ;;      Params:         0       0       0       0       0       0       0       0       0
  3802 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3803 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3804 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3805 ;;Total ram usage:        2 bytes
  3806 ;; Hardware stack levels used: 1
  3807 ;; Hardware stack levels required when called: 1
  3808 ;; This function calls:
  3809 ;;		i2_HabilitaLCD
  3810 ;;		i2_RetardoLCD
  3811 ;; This function is called by:
  3812 ;;		i2_EscribeLCD_c
  3813 ;; This function uses a non-reentrant model
  3814 ;;
  3815                           
  3816                           	psect	text26
  3817   001328                     __ptext26:
  3818                           	callstack 0
  3819   001328                     i2_EnviaDato:
  3820                           	callstack 22
  3821                           
  3822                           ;incstack = 0
  3823                           ;i2EnviaDato@a stored from wreg
  3824   001328  6E04               	movwf	i2EnviaDato@a^0,c
  3825                           
  3826                           ;LibLCDXC8.h: 63: if(interfaz==4){
  3827   00132A  0E04               	movlw	4
  3828   00132C  1828               	xorwf	_interfaz^0,w,c
  3829   00132E  A4D8               	btfss	status,2,c
  3830   001330  D017               	goto	i2l2222
  3831                           
  3832                           ;LibLCDXC8.h: 64: LATD=(LATD & 0b00001111) | (a & 0b11110000);
  3833   001332  C004  F003         	movff	i2EnviaDato@a,??i2_EnviaDato
  3834   001336  0EF0               	movlw	240
  3835   001338  1603               	andwf	??i2_EnviaDato^0,f,c
  3836   00133A  508C               	movf	140,w,c	;volatile
  3837   00133C  0B0F               	andlw	15
  3838   00133E  1003               	iorwf	??i2_EnviaDato^0,w,c
  3839   001340  6E8C               	movwf	140,c	;volatile
  3840                           
  3841                           ;LibLCDXC8.h: 65: HabilitaLCD();
  3842   001342  ECF2  F00A         	call	i2_HabilitaLCD	;wreg free
  3843                           
  3844                           ;LibLCDXC8.h: 66: RetardoLCD(1);
  3845   001346  0E01               	movlw	1
  3846   001348  ECEE  F008         	call	i2_RetardoLCD
  3847                           
  3848                           ;LibLCDXC8.h: 67: LATD=(LATD & 0b00001111) | (a<<4);
  3849   00134C  C004  F003         	movff	i2EnviaDato@a,??i2_EnviaDato
  3850   001350  3A03               	swapf	??i2_EnviaDato^0,f,c
  3851   001352  0EF0               	movlw	240
  3852   001354  1603               	andwf	??i2_EnviaDato^0,f,c
  3853   001356  508C               	movf	140,w,c	;volatile
  3854   001358  0B0F               	andlw	15
  3855   00135A  1003               	iorwf	??i2_EnviaDato^0,w,c
  3856   00135C  6E8C               	movwf	140,c	;volatile
  3857                           
  3858                           ;LibLCDXC8.h: 70: }else if(interfaz==8){
  3859   00135E  0012               	return	
  3860   001360                     i2l2222:
  3861   001360  0E08               	movlw	8
  3862   001362  1828               	xorwf	_interfaz^0,w,c
  3863   001364  A4D8               	btfss	status,2,c
  3864   001366  0012               	return	
  3865                           
  3866                           ;LibLCDXC8.h: 71: LATD=a;
  3867   001368  C004  FF8C         	movff	i2EnviaDato@a,3980	;volatile
  3868   00136C  0012               	return		;funcret
  3869   00136E                     __end_ofi2_EnviaDato:
  3870                           	callstack 0
  3871                           
  3872 ;; *************** function i2_RetardoLCD *****************
  3873 ;; Defined at:
  3874 ;;		line 296 in file "LibLCDXC8.h"
  3875 ;; Parameters:    Size  Location     Type
  3876 ;;  a               1    wreg     unsigned char 
  3877 ;; Auto vars:     Size  Location     Type
  3878 ;;  a               1    1[COMRAM] unsigned char 
  3879 ;; Return value:  Size  Location     Type
  3880 ;;                  1    wreg      void 
  3881 ;; Registers used:
  3882 ;;		wreg, status,2, status,0
  3883 ;; Tracked objects:
  3884 ;;		On entry : 0/0
  3885 ;;		On exit  : 0/0
  3886 ;;		Unchanged: 0/0
  3887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3888 ;;      Params:         0       0       0       0       0       0       0       0       0
  3889 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3890 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3891 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3892 ;;Total ram usage:        2 bytes
  3893 ;; Hardware stack levels used: 1
  3894 ;; This function calls:
  3895 ;;		Nothing
  3896 ;; This function is called by:
  3897 ;;		i2_EnviaDato
  3898 ;;		i2_EscribeLCD_c
  3899 ;; This function uses a non-reentrant model
  3900 ;;
  3901                           
  3902                           	psect	text27
  3903   0011DC                     __ptext27:
  3904                           	callstack 0
  3905   0011DC                     i2_RetardoLCD:
  3906                           	callstack 23
  3907                           
  3908                           ;incstack = 0
  3909                           ;i2RetardoLCD@a stored from wreg
  3910   0011DC  6E02               	movwf	i2RetardoLCD@a^0,c
  3911                           
  3912                           ;LibLCDXC8.h: 297: switch(a){
  3913   0011DE  D023               	goto	i2l2022
  3914   0011E0                     i2l2012:
  3915   0011E0  0E27               	movlw	39
  3916   0011E2  6E01               	movwf	??i2_RetardoLCD^0,c
  3917   0011E4  0EF5               	movlw	245
  3918   0011E6                     i2u187_47:
  3919   0011E6  2EE8               	decfsz	wreg,f,c
  3920   0011E8  D7FE               	bra	i2u187_47
  3921   0011EA  2E01               	decfsz	??i2_RetardoLCD^0,f,c
  3922   0011EC  D7FC               	bra	i2u187_47
  3923   0011EE  F000               	nop	
  3924                           
  3925                           ;LibLCDXC8.h: 300: break;
  3926   0011F0  0012               	return	
  3927   0011F2                     i2l2014:
  3928   0011F2  0E03               	movlw	3
  3929   0011F4  6E01               	movwf	??i2_RetardoLCD^0,c
  3930   0011F6  0E98               	movlw	152
  3931   0011F8                     i2u188_47:
  3932   0011F8  2EE8               	decfsz	wreg,f,c
  3933   0011FA  D7FE               	bra	i2u188_47
  3934   0011FC  2E01               	decfsz	??i2_RetardoLCD^0,f,c
  3935   0011FE  D7FC               	bra	i2u188_47
  3936                           
  3937                           ;LibLCDXC8.h: 302: _delay((unsigned long)((640)*(8000000/4000000.0)));
  3938   001200  0EB6               	movlw	182
  3939   001202                     i2u189_47:
  3940   001202  D000               	nop2	
  3941   001204  D000               	nop2	
  3942   001206  2EE8               	decfsz	wreg,f,c
  3943   001208  D7FC               	bra	i2u189_47
  3944   00120A  D000               	nop2	
  3945   00120C  D000               	nop2	
  3946   00120E  D000               	nop2	
  3947                           
  3948                           ;LibLCDXC8.h: 304: break;
  3949   001210  0012               	return	
  3950   001212                     i2l2016:
  3951   001212  0E42               	movlw	66
  3952   001214                     i2u190_47:
  3953   001214  2EE8               	decfsz	wreg,f,c
  3954   001216  D7FE               	bra	i2u190_47
  3955   001218  D000               	nop2	
  3956                           
  3957                           ;LibLCDXC8.h: 307: break;
  3958   00121A  0012               	return	
  3959   00121C                     i2l2018:
  3960   00121C  0E1A               	movlw	26
  3961   00121E                     i2u191_47:
  3962   00121E  2EE8               	decfsz	wreg,f,c
  3963   001220  D7FE               	bra	i2u191_47
  3964   001222  D000               	nop2	
  3965                           
  3966                           ;LibLCDXC8.h: 310: break;
  3967   001224  0012               	return	
  3968   001226                     i2l2022:
  3969   001226  5002               	movf	i2RetardoLCD@a^0,w,c
  3970                           
  3971                           ; Switch size 1, requested type "simple"
  3972                           ; Number of cases is 4, Range of values is 1 to 4
  3973                           ; switch strategies available:
  3974                           ; Name         Instructions Cycles
  3975                           ; simple_byte           13     7 (average)
  3976                           ;	Chosen strategy is simple_byte
  3977   001228  0A01               	xorlw	1	; case 1
  3978   00122A  B4D8               	btfsc	status,2,c
  3979   00122C  D7D9               	goto	i2l2012
  3980   00122E  0A03               	xorlw	3	; case 2
  3981   001230  B4D8               	btfsc	status,2,c
  3982   001232  D7DF               	goto	i2l2014
  3983   001234  0A01               	xorlw	1	; case 3
  3984   001236  B4D8               	btfsc	status,2,c
  3985   001238  D7EC               	goto	i2l2016
  3986   00123A  0A07               	xorlw	7	; case 4
  3987   00123C  A4D8               	btfss	status,2,c
  3988   00123E  0012               	return	
  3989   001240  D7ED               	goto	i2l2018
  3990   001242                     __end_ofi2_RetardoLCD:
  3991                           	callstack 0
  3992                           
  3993 ;; *************** function i2_HabilitaLCD *****************
  3994 ;; Defined at:
  3995 ;;		line 108 in file "LibLCDXC8.h"
  3996 ;; Parameters:    Size  Location     Type
  3997 ;;		None
  3998 ;; Auto vars:     Size  Location     Type
  3999 ;;		None
  4000 ;; Return value:  Size  Location     Type
  4001 ;;                  1    wreg      void 
  4002 ;; Registers used:
  4003 ;;		wreg
  4004 ;; Tracked objects:
  4005 ;;		On entry : 0/0
  4006 ;;		On exit  : 0/0
  4007 ;;		Unchanged: 0/0
  4008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4009 ;;      Params:         0       0       0       0       0       0       0       0       0
  4010 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4011 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4012 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4013 ;;Total ram usage:        0 bytes
  4014 ;; Hardware stack levels used: 1
  4015 ;; This function calls:
  4016 ;;		Nothing
  4017 ;; This function is called by:
  4018 ;;		i2_EnviaDato
  4019 ;;		i2_EscribeLCD_c
  4020 ;; This function uses a non-reentrant model
  4021 ;;
  4022                           
  4023                           	psect	text28
  4024   0015E4                     __ptext28:
  4025                           	callstack 0
  4026   0015E4                     i2_HabilitaLCD:
  4027                           	callstack 23
  4028                           
  4029                           ;LibLCDXC8.h: 110: LATE2=1;
  4030                           
  4031                           ;incstack = 0
  4032   0015E4  848D               	bsf	3981,2,c	;volatile
  4033                           
  4034                           ;LibLCDXC8.h: 111: _delay((unsigned long)((40)*(8000000/4000000.0)));
  4035   0015E6  0E1A               	movlw	26
  4036   0015E8                     i2u192_47:
  4037   0015E8  2EE8               	decfsz	wreg,f,c
  4038   0015EA  D7FE               	bra	i2u192_47
  4039   0015EC  D000               	nop2	
  4040                           
  4041                           ;LibLCDXC8.h: 113: LATE2=0;
  4042   0015EE  948D               	bcf	3981,2,c	;volatile
  4043   0015F0  0012               	return		;funcret
  4044   0015F2                     __end_ofi2_HabilitaLCD:
  4045                           	callstack 0
  4046                           
  4047 ;; *************** function _LeerTeclado *****************
  4048 ;; Defined at:
  4049 ;;		line 271 in file "Proyecto.c"
  4050 ;; Parameters:    Size  Location     Type
  4051 ;;		None
  4052 ;; Auto vars:     Size  Location     Type
  4053 ;;		None
  4054 ;; Return value:  Size  Location     Type
  4055 ;;                  1    wreg      unsigned char 
  4056 ;; Registers used:
  4057 ;;		wreg, status,2, status,0
  4058 ;; Tracked objects:
  4059 ;;		On entry : 0/0
  4060 ;;		On exit  : 0/0
  4061 ;;		Unchanged: 0/0
  4062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4063 ;;      Params:         0       0       0       0       0       0       0       0       0
  4064 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4065 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4066 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4067 ;;Total ram usage:        0 bytes
  4068 ;; Hardware stack levels used: 1
  4069 ;; This function calls:
  4070 ;;		Nothing
  4071 ;; This function is called by:
  4072 ;;		_ISR
  4073 ;; This function uses a non-reentrant model
  4074 ;;
  4075                           
  4076                           	psect	text29
  4077   000F10                     __ptext29:
  4078                           	callstack 0
  4079   000F10                     _LeerTeclado:
  4080                           	callstack 24
  4081                           
  4082                           ;Proyecto.c: 272: teclaRecibidaIf=1;
  4083                           
  4084                           ;incstack = 0
  4085   000F10  0E00               	movlw	0
  4086   000F12  6E32               	movwf	(_teclaRecibidaIf+1)^0,c
  4087   000F14  0E01               	movlw	1
  4088   000F16  6E31               	movwf	_teclaRecibidaIf^0,c
  4089                           
  4090                           ;Proyecto.c: 273: switch (Tecla){
  4091   000F18  D030               	goto	i2l1712
  4092   000F1A                     i2l1678:
  4093                           
  4094                           ;Proyecto.c: 275: Tecla='1';
  4095   000F1A  0E31               	movlw	49
  4096   000F1C  6E37               	movwf	_Tecla^0,c
  4097                           
  4098                           ;Proyecto.c: 276: break;
  4099   000F1E  0012               	return	
  4100   000F20                     i2l1680:
  4101                           
  4102                           ;Proyecto.c: 278: Tecla='2';
  4103   000F20  0E32               	movlw	50
  4104   000F22  6E37               	movwf	_Tecla^0,c
  4105                           
  4106                           ;Proyecto.c: 279: break;
  4107   000F24  0012               	return	
  4108   000F26                     i2l1682:
  4109                           
  4110                           ;Proyecto.c: 281: Tecla='3';
  4111   000F26  0E33               	movlw	51
  4112   000F28  6E37               	movwf	_Tecla^0,c
  4113                           
  4114                           ;Proyecto.c: 282: break;
  4115   000F2A  0012               	return	
  4116   000F2C                     i2l1684:
  4117                           
  4118                           ;Proyecto.c: 284: Tecla='+';
  4119   000F2C  0E2B               	movlw	43
  4120   000F2E  6E37               	movwf	_Tecla^0,c
  4121                           
  4122                           ;Proyecto.c: 285: break;
  4123   000F30  0012               	return	
  4124   000F32                     i2l1686:
  4125                           
  4126                           ;Proyecto.c: 287: Tecla='4';
  4127   000F32  0E34               	movlw	52
  4128   000F34  6E37               	movwf	_Tecla^0,c
  4129                           
  4130                           ;Proyecto.c: 288: break;
  4131   000F36  0012               	return	
  4132   000F38                     i2l1688:
  4133                           
  4134                           ;Proyecto.c: 290: Tecla ='5';
  4135   000F38  0E35               	movlw	53
  4136   000F3A  6E37               	movwf	_Tecla^0,c
  4137                           
  4138                           ;Proyecto.c: 291: break;
  4139   000F3C  0012               	return	
  4140   000F3E                     i2l1690:
  4141                           
  4142                           ;Proyecto.c: 293: Tecla='6';
  4143   000F3E  0E36               	movlw	54
  4144   000F40  6E37               	movwf	_Tecla^0,c
  4145                           
  4146                           ;Proyecto.c: 294: break;
  4147   000F42  0012               	return	
  4148   000F44                     i2l1692:
  4149                           
  4150                           ;Proyecto.c: 296: Tecla='-';
  4151   000F44  0E2D               	movlw	45
  4152   000F46  6E37               	movwf	_Tecla^0,c
  4153                           
  4154                           ;Proyecto.c: 297: break;
  4155   000F48  0012               	return	
  4156   000F4A                     i2l1694:
  4157                           
  4158                           ;Proyecto.c: 299: Tecla='7';
  4159   000F4A  0E37               	movlw	55
  4160   000F4C  6E37               	movwf	_Tecla^0,c
  4161                           
  4162                           ;Proyecto.c: 300: break;
  4163   000F4E  0012               	return	
  4164   000F50                     i2l1696:
  4165                           
  4166                           ;Proyecto.c: 302: Tecla='8';
  4167   000F50  0E38               	movlw	56
  4168   000F52  6E37               	movwf	_Tecla^0,c
  4169                           
  4170                           ;Proyecto.c: 303: break;
  4171   000F54  0012               	return	
  4172   000F56                     i2l1698:
  4173                           
  4174                           ;Proyecto.c: 305: Tecla='9';
  4175   000F56  0E39               	movlw	57
  4176   000F58  6E37               	movwf	_Tecla^0,c
  4177                           
  4178                           ;Proyecto.c: 306: break;
  4179   000F5A  0012               	return	
  4180   000F5C                     i2l1700:
  4181                           
  4182                           ;Proyecto.c: 308: Tecla='X';
  4183   000F5C  0E58               	movlw	88
  4184   000F5E  6E37               	movwf	_Tecla^0,c
  4185                           
  4186                           ;Proyecto.c: 309: break;
  4187   000F60  0012               	return	
  4188   000F62                     i2l1702:
  4189                           
  4190                           ;Proyecto.c: 311: Tecla='B';
  4191   000F62  0E42               	movlw	66
  4192   000F64  6E37               	movwf	_Tecla^0,c
  4193                           
  4194                           ;Proyecto.c: 312: break;
  4195   000F66  0012               	return	
  4196   000F68                     i2l1704:
  4197                           
  4198                           ;Proyecto.c: 314: Tecla='0';
  4199   000F68  0E30               	movlw	48
  4200   000F6A  6E37               	movwf	_Tecla^0,c
  4201                           
  4202                           ;Proyecto.c: 315: break;
  4203   000F6C  0012               	return	
  4204   000F6E                     i2l1706:
  4205                           
  4206                           ;Proyecto.c: 317: Tecla='=';
  4207   000F6E  0E3D               	movlw	61
  4208   000F70  6E37               	movwf	_Tecla^0,c
  4209                           
  4210                           ;Proyecto.c: 318: break;
  4211   000F72  0012               	return	
  4212   000F74                     i2l1708:
  4213                           
  4214                           ;Proyecto.c: 320: Tecla='/';
  4215   000F74  0E2F               	movlw	47
  4216   000F76  6E37               	movwf	_Tecla^0,c
  4217                           
  4218                           ;Proyecto.c: 321: break;
  4219   000F78  0012               	return	
  4220   000F7A                     i2l1712:
  4221   000F7A  5037               	movf	_Tecla^0,w,c
  4222                           
  4223                           ; Switch size 1, requested type "simple"
  4224                           ; Number of cases is 16, Range of values is 1 to 16
  4225                           ; switch strategies available:
  4226                           ; Name         Instructions Cycles
  4227                           ; simple_byte           49    25 (average)
  4228                           ;	Chosen strategy is simple_byte
  4229   000F7C  0A01               	xorlw	1	; case 1
  4230   000F7E  B4D8               	btfsc	status,2,c
  4231   000F80  D7CC               	goto	i2l1678
  4232   000F82  0A03               	xorlw	3	; case 2
  4233   000F84  B4D8               	btfsc	status,2,c
  4234   000F86  D7CC               	goto	i2l1680
  4235   000F88  0A01               	xorlw	1	; case 3
  4236   000F8A  B4D8               	btfsc	status,2,c
  4237   000F8C  D7CC               	goto	i2l1682
  4238   000F8E  0A07               	xorlw	7	; case 4
  4239   000F90  B4D8               	btfsc	status,2,c
  4240   000F92  D7CC               	goto	i2l1684
  4241   000F94  0A01               	xorlw	1	; case 5
  4242   000F96  B4D8               	btfsc	status,2,c
  4243   000F98  D7CC               	goto	i2l1686
  4244   000F9A  0A03               	xorlw	3	; case 6
  4245   000F9C  B4D8               	btfsc	status,2,c
  4246   000F9E  D7CC               	goto	i2l1688
  4247   000FA0  0A01               	xorlw	1	; case 7
  4248   000FA2  B4D8               	btfsc	status,2,c
  4249   000FA4  D7CC               	goto	i2l1690
  4250   000FA6  0A0F               	xorlw	15	; case 8
  4251   000FA8  B4D8               	btfsc	status,2,c
  4252   000FAA  D7CC               	goto	i2l1692
  4253   000FAC  0A01               	xorlw	1	; case 9
  4254   000FAE  B4D8               	btfsc	status,2,c
  4255   000FB0  D7CC               	goto	i2l1694
  4256   000FB2  0A03               	xorlw	3	; case 10
  4257   000FB4  B4D8               	btfsc	status,2,c
  4258   000FB6  D7CC               	goto	i2l1696
  4259   000FB8  0A01               	xorlw	1	; case 11
  4260   000FBA  B4D8               	btfsc	status,2,c
  4261   000FBC  D7CC               	goto	i2l1698
  4262   000FBE  0A07               	xorlw	7	; case 12
  4263   000FC0  B4D8               	btfsc	status,2,c
  4264   000FC2  D7CC               	goto	i2l1700
  4265   000FC4  0A01               	xorlw	1	; case 13
  4266   000FC6  B4D8               	btfsc	status,2,c
  4267   000FC8  D7CC               	goto	i2l1702
  4268   000FCA  0A03               	xorlw	3	; case 14
  4269   000FCC  B4D8               	btfsc	status,2,c
  4270   000FCE  D7CC               	goto	i2l1704
  4271   000FD0  0A01               	xorlw	1	; case 15
  4272   000FD2  B4D8               	btfsc	status,2,c
  4273   000FD4  D7CC               	goto	i2l1706
  4274   000FD6  0A1F               	xorlw	31	; case 16
  4275   000FD8  A4D8               	btfss	status,2,c
  4276   000FDA  0012               	return	
  4277   000FDC  D7CB               	goto	i2l1708
  4278   000FDE                     __end_of_LeerTeclado:
  4279                           	callstack 0
  4280                           
  4281                           	psect	rparam
  4282   000000                     
  4283                           	psect	temp
  4284   00003E                     btemp:
  4285                           	callstack 0
  4286   00003E                     	ds	1
  4287   000000                     int$flags	set	btemp
  4288   000000                     wtemp8	set	btemp+1
  4289   000000                     ttemp5	set	btemp+1
  4290   000000                     ttemp6	set	btemp+4
  4291   000000                     ttemp7	set	btemp+8
  4292                           
  4293                           	psect	idloc
  4294                           
  4295                           ;Config register IDLOC0 @ 0x200000
  4296                           ;	unspecified, using default values
  4297   200000                     	org	2097152
  4298   200000  FF                 	db	255
  4299                           
  4300                           ;Config register IDLOC1 @ 0x200001
  4301                           ;	unspecified, using default values
  4302   200001                     	org	2097153
  4303   200001  FF                 	db	255
  4304                           
  4305                           ;Config register IDLOC2 @ 0x200002
  4306                           ;	unspecified, using default values
  4307   200002                     	org	2097154
  4308   200002  FF                 	db	255
  4309                           
  4310                           ;Config register IDLOC3 @ 0x200003
  4311                           ;	unspecified, using default values
  4312   200003                     	org	2097155
  4313   200003  FF                 	db	255
  4314                           
  4315                           ;Config register IDLOC4 @ 0x200004
  4316                           ;	unspecified, using default values
  4317   200004                     	org	2097156
  4318   200004  FF                 	db	255
  4319                           
  4320                           ;Config register IDLOC5 @ 0x200005
  4321                           ;	unspecified, using default values
  4322   200005                     	org	2097157
  4323   200005  FF                 	db	255
  4324                           
  4325                           ;Config register IDLOC6 @ 0x200006
  4326                           ;	unspecified, using default values
  4327   200006                     	org	2097158
  4328   200006  FF                 	db	255
  4329                           
  4330                           ;Config register IDLOC7 @ 0x200007
  4331                           ;	unspecified, using default values
  4332   200007                     	org	2097159
  4333   200007  FF                 	db	255
  4334                           
  4335                           	psect	config
  4336                           
  4337                           ;Config register CONFIG1L @ 0x300000
  4338                           ;	unspecified, using default values
  4339                           ;	PLL Prescaler Selection bits
  4340                           ;	PLLDIV = 0x0, unprogrammed default
  4341                           ;	System Clock Postscaler Selection bits
  4342                           ;	CPUDIV = 0x0, unprogrammed default
  4343                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  4344                           ;	USBDIV = 0x0, unprogrammed default
  4345   300000                     	org	3145728
  4346   300000  00                 	db	0
  4347                           
  4348                           ;Config register CONFIG1H @ 0x300001
  4349                           ;	Oscillator Selection bits
  4350                           ;	FOSC = INTOSC_EC, Internal oscillator, CLKO function on RA6, EC used by USB (INTCKO)
  4351                           ;	Fail-Safe Clock Monitor Enable bit
  4352                           ;	FCMEN = 0x0, unprogrammed default
  4353                           ;	Internal/External Oscillator Switchover bit
  4354                           ;	IESO = 0x0, unprogrammed default
  4355   300001                     	org	3145729
  4356   300001  09                 	db	9
  4357                           
  4358                           ;Config register CONFIG2L @ 0x300002
  4359                           ;	unspecified, using default values
  4360                           ;	Power-up Timer Enable bit
  4361                           ;	PWRT = 0x1, unprogrammed default
  4362                           ;	Brown-out Reset Enable bits
  4363                           ;	BOR = 0x3, unprogrammed default
  4364                           ;	Brown-out Reset Voltage bits
  4365                           ;	BORV = 0x3, unprogrammed default
  4366                           ;	USB Voltage Regulator Enable bit
  4367                           ;	VREGEN = 0x0, unprogrammed default
  4368   300002                     	org	3145730
  4369   300002  1F                 	db	31
  4370                           
  4371                           ;Config register CONFIG2H @ 0x300003
  4372                           ;	Watchdog Timer Enable bit
  4373                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  4374                           ;	Watchdog Timer Postscale Select bits
  4375                           ;	WDTPS = 0xF, unprogrammed default
  4376   300003                     	org	3145731
  4377   300003  1E                 	db	30
  4378                           
  4379                           ; Padding undefined space
  4380   300004                     	org	3145732
  4381   300004  FF                 	db	255
  4382                           
  4383                           ;Config register CONFIG3H @ 0x300005
  4384                           ;	CCP2 MUX bit
  4385                           ;	CCP2MX = 0x1, unprogrammed default
  4386                           ;	PORTB A/D Enable bit
  4387                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  4388                           ;	Low-Power Timer 1 Oscillator Enable bit
  4389                           ;	LPT1OSC = 0x0, unprogrammed default
  4390                           ;	MCLR Pin Enable bit
  4391                           ;	MCLRE = 0x1, unprogrammed default
  4392   300005                     	org	3145733
  4393   300005  81                 	db	129
  4394                           
  4395                           ;Config register CONFIG4L @ 0x300006
  4396                           ;	Stack Full/Underflow Reset Enable bit
  4397                           ;	STVREN = 0x1, unprogrammed default
  4398                           ;	Single-Supply ICSP Enable bit
  4399                           ;	LVP = OFF, Single-Supply ICSP disabled
  4400                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  4401                           ;	ICPRT = 0x0, unprogrammed default
  4402                           ;	Extended Instruction Set Enable bit
  4403                           ;	XINST = 0x0, unprogrammed default
  4404                           ;	Background Debugger Enable bit
  4405                           ;	DEBUG = 0x1, unprogrammed default
  4406   300006                     	org	3145734
  4407   300006  81                 	db	129
  4408                           
  4409                           ; Padding undefined space
  4410   300007                     	org	3145735
  4411   300007  FF                 	db	255
  4412                           
  4413                           ;Config register CONFIG5L @ 0x300008
  4414                           ;	unspecified, using default values
  4415                           ;	Code Protection bit
  4416                           ;	CP0 = 0x1, unprogrammed default
  4417                           ;	Code Protection bit
  4418                           ;	CP1 = 0x1, unprogrammed default
  4419                           ;	Code Protection bit
  4420                           ;	CP2 = 0x1, unprogrammed default
  4421                           ;	Code Protection bit
  4422                           ;	CP3 = 0x1, unprogrammed default
  4423   300008                     	org	3145736
  4424   300008  0F                 	db	15
  4425                           
  4426                           ;Config register CONFIG5H @ 0x300009
  4427                           ;	unspecified, using default values
  4428                           ;	Boot Block Code Protection bit
  4429                           ;	CPB = 0x1, unprogrammed default
  4430                           ;	Data EEPROM Code Protection bit
  4431                           ;	CPD = 0x1, unprogrammed default
  4432   300009                     	org	3145737
  4433   300009  C0                 	db	192
  4434                           
  4435                           ;Config register CONFIG6L @ 0x30000A
  4436                           ;	unspecified, using default values
  4437                           ;	Write Protection bit
  4438                           ;	WRT0 = 0x1, unprogrammed default
  4439                           ;	Write Protection bit
  4440                           ;	WRT1 = 0x1, unprogrammed default
  4441                           ;	Write Protection bit
  4442                           ;	WRT2 = 0x1, unprogrammed default
  4443                           ;	Write Protection bit
  4444                           ;	WRT3 = 0x1, unprogrammed default
  4445   30000A                     	org	3145738
  4446   30000A  0F                 	db	15
  4447                           
  4448                           ;Config register CONFIG6H @ 0x30000B
  4449                           ;	unspecified, using default values
  4450                           ;	Configuration Register Write Protection bit
  4451                           ;	WRTC = 0x1, unprogrammed default
  4452                           ;	Boot Block Write Protection bit
  4453                           ;	WRTB = 0x1, unprogrammed default
  4454                           ;	Data EEPROM Write Protection bit
  4455                           ;	WRTD = 0x1, unprogrammed default
  4456   30000B                     	org	3145739
  4457   30000B  E0                 	db	224
  4458                           
  4459                           ;Config register CONFIG7L @ 0x30000C
  4460                           ;	unspecified, using default values
  4461                           ;	Table Read Protection bit
  4462                           ;	EBTR0 = 0x1, unprogrammed default
  4463                           ;	Table Read Protection bit
  4464                           ;	EBTR1 = 0x1, unprogrammed default
  4465                           ;	Table Read Protection bit
  4466                           ;	EBTR2 = 0x1, unprogrammed default
  4467                           ;	Table Read Protection bit
  4468                           ;	EBTR3 = 0x1, unprogrammed default
  4469   30000C                     	org	3145740
  4470   30000C  0F                 	db	15
  4471                           
  4472                           ;Config register CONFIG7H @ 0x30000D
  4473                           ;	unspecified, using default values
  4474                           ;	Boot Block Table Read Protection bit
  4475                           ;	EBTRB = 0x1, unprogrammed default
  4476   30000D                     	org	3145741
  4477   30000D  40                 	db	64
  4478                           tosu	equ	0xFFF
  4479                           tosh	equ	0xFFE
  4480                           tosl	equ	0xFFD
  4481                           stkptr	equ	0xFFC
  4482                           pclatu	equ	0xFFB
  4483                           pclath	equ	0xFFA
  4484                           pcl	equ	0xFF9
  4485                           tblptru	equ	0xFF8
  4486                           tblptrh	equ	0xFF7
  4487                           tblptrl	equ	0xFF6
  4488                           tablat	equ	0xFF5
  4489                           prodh	equ	0xFF4
  4490                           prodl	equ	0xFF3
  4491                           indf0	equ	0xFEF
  4492                           postinc0	equ	0xFEE
  4493                           postdec0	equ	0xFED
  4494                           preinc0	equ	0xFEC
  4495                           plusw0	equ	0xFEB
  4496                           fsr0h	equ	0xFEA
  4497                           fsr0l	equ	0xFE9
  4498                           wreg	equ	0xFE8
  4499                           indf1	equ	0xFE7
  4500                           postinc1	equ	0xFE6
  4501                           postdec1	equ	0xFE5
  4502                           preinc1	equ	0xFE4
  4503                           plusw1	equ	0xFE3
  4504                           fsr1h	equ	0xFE2
  4505                           fsr1l	equ	0xFE1
  4506                           bsr	equ	0xFE0
  4507                           indf2	equ	0xFDF
  4508                           postinc2	equ	0xFDE
  4509                           postdec2	equ	0xFDD
  4510                           preinc2	equ	0xFDC
  4511                           plusw2	equ	0xFDB
  4512                           fsr2h	equ	0xFDA
  4513                           fsr2l	equ	0xFD9
  4514                           status	equ	0xFD8

Data Sizes:
    Strings     66
    Constant    0
    Data        16
    BSS         13
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     32      61
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    Password@pass	PTR unsigned char  size(1) Largest target is 4
		 -> ing(COMRAM[4]), 

    MensajeLCD_Word@a	PTR unsigned char  size(1) Largest target is 23
		 -> STR_8(CODE[5]), STR_7(CODE[6]), STR_6(CODE[23]), STR_5(CODE[11]), 
		 -> STR_4(CODE[23]), STR_3(CODE[10]), STR_2(CODE[17]), STR_1(CODE[11]), 

    NuevoCaracter@c	PTR unsigned char  size(1) Largest target is 8
		 -> cara(COMRAM[8]), 


Critical Paths under _main in COMRAM

    _main->_TransmitirDatos
    _TransmitirDatos->_MensajeLCD_Word
    _MensajeLCD_Word->_EscribeLCD_c
    _Password->_DireccionaLCD
    _Password->_EscribeLCD_c
    _NuevoCaracter->_EscribeLCD_c
    _EscribeLCD_c->_EnviaDato
    _LeerHT11->_LeerByte
    _LeerByte->_LeerBit
    _BorraLCD->_DireccionaLCD
    _DireccionaLCD->_EnviaDato
    _EnviaDato->_RetardoLCD

Critical Paths under _ISR in COMRAM

    _ISR->i2_EscribeLCD_c
    i2_EscribeLCD_c->i2_EnviaDato
    i2_EnviaDato->i2_RetardoLCD

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    8243
                                             28 COMRAM     4     4      0
                           _BorraLCD
                      _DireccionaLCD
                       _EscribeLCD_c
                      _InicializaLCD
                           _LeerHT11
                    _MensajeLCD_Word
                      _NuevoCaracter
                           _Password
                    _TransmitirDatos
                          _Velocidad
 ---------------------------------------------------------------------------------
 (1) _Velocidad                                            2     0      2     384
                                              7 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _TransmitirDatos                                     14    10      4    4930
                                             16 COMRAM    12     8      4
                           _BorraLCD
                      _DireccionaLCD
                       _EscribeLCD_c
                    _MensajeLCD_Word
                         _Transmitir
                            ___awdiv
                            ___lbdiv
                            ___lbmod
                            ___lwdiv
                            ___lwmod
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     311
                                              7 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     615
                                              7 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     922
                                              7 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___lbmod                                              4     3      1     311
                                              7 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (2) ___lbdiv                                              4     3      1     314
                                              7 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     604
                                              7 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _Transmitir                                           1     1      0      22
                                              7 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _MensajeLCD_Word                                      4     3      1     874
                                             12 COMRAM     4     3      1
                       _EscribeLCD_c
 ---------------------------------------------------------------------------------
 (1) _Password                                            12    10      2     576
                                             12 COMRAM    12    10      2
                      _DireccionaLCD
                       _EscribeLCD_c
 ---------------------------------------------------------------------------------
 (1) _NuevoCaracter                                        4     3      1     405
                                             12 COMRAM     4     3      1
                         _ComandoLCD
                       _EscribeLCD_c
 ---------------------------------------------------------------------------------
 (3) _EscribeLCD_c                                         1     1      0     132
                                             11 COMRAM     1     1      0
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (2) _ComandoLCD                                           2     2      0      22
                                              7 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _LeerHT11                                             1     1      0     117
                                             11 COMRAM     1     1      0
                           _LeerByte
 ---------------------------------------------------------------------------------
 (2) _LeerByte                                             3     3      0     117
                                              8 COMRAM     3     3      0
                            _LeerBit
 ---------------------------------------------------------------------------------
 (3) _LeerBit                                              1     1      0      25
                                              7 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _InicializaLCD                                        0     0      0     352
                           _BorraLCD
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (2) _BorraLCD                                             0     0      0     242
                      _DireccionaLCD
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (2) _DireccionaLCD                                        1     1      0     132
                                             11 COMRAM     1     1      0
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (4) _EnviaDato                                            2     2      0      88
                                              9 COMRAM     2     2      0
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (4) _RetardoLCD                                           2     2      0      22
                                              7 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (4) _HabilitaLCD                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISR                                                  2     2      0     132
                                              5 COMRAM     2     2      0
                        _LeerTeclado
                     i2_EscribeLCD_c
 ---------------------------------------------------------------------------------
 (7) i2_EscribeLCD_c                                       1     1      0     132
                                              4 COMRAM     1     1      0
                        i2_EnviaDato
                      i2_HabilitaLCD
                       i2_RetardoLCD
 ---------------------------------------------------------------------------------
 (8) i2_EnviaDato                                          2     2      0      88
                                              2 COMRAM     2     2      0
                      i2_HabilitaLCD
                       i2_RetardoLCD
 ---------------------------------------------------------------------------------
 (8) i2_RetardoLCD                                         2     2      0      22
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (8) i2_HabilitaLCD                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _LeerTeclado                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BorraLCD
     _DireccionaLCD
       _EnviaDato
         _HabilitaLCD
         _RetardoLCD
       _HabilitaLCD
       _RetardoLCD
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _DireccionaLCD
   _EscribeLCD_c
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _InicializaLCD
     _BorraLCD
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _LeerHT11
     _LeerByte
       _LeerBit
   _MensajeLCD_Word
     _EscribeLCD_c
   _NuevoCaracter
     _ComandoLCD
     _EscribeLCD_c
   _Password
     _DireccionaLCD
     _EscribeLCD_c
   _TransmitirDatos
     _BorraLCD
     _DireccionaLCD
     _EscribeLCD_c
     _MensajeLCD_Word
     _Transmitir
     ___awdiv
     ___lbdiv
     ___lbmod
     ___lwdiv
     ___lwmod
     ___wmul
   _Velocidad

 _ISR (ROOT)
   _LeerTeclado
   i2_EscribeLCD_c
     i2_EnviaDato
       i2_HabilitaLCD
       i2_RetardoLCD
     i2_HabilitaLCD
     i2_RetardoLCD

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      37        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     20      3D       1       64.9%
BITBIGSFRhhhlh      19      0       0      21        0.0%
BITBIGSFRlhl        11      0       0      33        0.0%
BITBIGSFRhhhh        D      0       0      20        0.0%
BITBIGSFRlll         D      0       0      35        0.0%
BITBIGSFRhhllll      C      0       0      27        0.0%
BITBIGSFRhhlllh      A      0       0      26        0.0%
BITBIGSFRhhllll      6      0       0      28        0.0%
BITBIGSFRlhhhl       5      0       0      31        0.0%
BITBIGSFRhhlhl       5      0       0      24        0.0%
BITBIGSFRhll         4      0       0      29        0.0%
BITBIGSFRhhlhhh      3      0       0      23        0.0%
BITBIGSFRlhhhh       1      0       0      30        0.0%
BITBIGSFRlhhl        1      0       0      32        0.0%
BITBIGSFRllh         1      0       0      34        0.0%
BITBIGSFRhhllh       1      0       0      25        0.0%
BITBIGSFRhhhll       1      0       0      22        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      3D      36        0.0%
DATA                 0      0      3D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Wed Jun 07 13:46:04 2023

                      _a 0025                        _c 0035        Transmitir@BufferT 0008  
           ___awdiv@sign 000D               EnviaDato@a 000B      ___wmul@multiplicand 000A  
          ??_LeerTeclado 0001            _InicializaLCD 0FDE                      l304 14C2  
                    l350 0878                      l281 1146                      l355 09BA  
                    l285 1472                      l288 147C                      l299 149E  
                    l882 128A                      l892 13A6                      _GIE 007F97  
                    _RC0 007C10                      _RC2 007C12                      _RB4 007C0C  
                    _RB5 007C0D                      _RE0 007C20                      _RB6 007C0E  
                    _RB7 007C0F                      _PR2 000FCB                      _ISR 0008  
                    u860 14C6                      u940 10C0                      u880 12E0  
                    u980 1442         TransmitirDatos@n 0017                      _ing 003A  
                    wreg 000FE8                     ?_ISR 0001         ??i2_EscribeLCD_c 0005  
                   l2110 10BC                     l2102 109E                     l2120 10DC  
                   l2200 137C                     l2202 1384                     l2108 10B4  
                   l2124 10E6                     l2054 129C                     l2150 1454  
                   l2142 143E                     l2232 0FF0                     l2128 10F4  
                   l2160 1502                     l2208 139C                     l2242 100E  
                   l2306 1124                     l2138 1438                     l2154 145C  
                   l2252 102C                     l2068 1550                     l2180 1258  
                   l2078 15F4                     l2182 1260                     l2350 08C6  
                   l2342 0886                     l2422 0E30                     l2272 1064  
                   l2096 108E                     l2168 151A                     l2192 1280  
                   l2440 0E96                     l2346 089A                     l2434 0E74  
                   l2356 08F4                     l2452 0EDA                     l2428 0E52  
                   l2358 091E                     l2446 0EB8                     l2458 0EFC  
                   l2820 0CC4                     l2804 0C68                     l1950 11B6  
                   l2814 0C9A                     l1944 117A                     l1946 118C  
                   l1954 11C0                     l1948 11AC                     l1966 131A  
                   l2694 13C6                     l2782 0BF4                     l2776 0BE4  
                   l1994 14B2                     STR_1 0818                     STR_2 0807  
                   STR_3 082E                     STR_4 0801                     STR_5 0823  
                   STR_6 0801                     STR_7 0838                     STR_8 083E  
                   u1020 1264                     u1050 1388                     u1300 0EC4  
                   u1220 0E3C                     u1150 115A                     u1160 116E  
                   u1320 0EE6                     u1240 0E5E                     u1170 1170  
                   u1340 0F08                     u1260 0E80                     _LATB 000F8A  
                   u1280 0EA2                     _LATD 000F8C                     u1610 13EA  
                   u1630 0C24                     u1707 0CB8                     u1717 0CCE  
                   u1807 1192                     u1727 14D6                     u1817 119C  
                   u1737 14E0                     u1827 11AE                     u1747 14EC  
                   u1667 0B76                     u1837 11B8                     u1757 1468  
                   u1677 0BBA                     u1847 15DA                     u1767 1478  
                   u1687 0C5A                     u1777 14A4                     u1697 0C80  
                   u1787 14B4                     _PEIE 007F96                     u1797 1180  
                   _RBIE 007F93                     _RBIF 007F90                     _RBPU 007F8F  
                   _TMR0 000FD6                     _TMR1 000FCE                     _TMR2 000FCC  
                   _TRMT 007D61                     _Cont 0027           ??_EscribeLCD_c 000C  
                   _Temp 0039                     _cara 0029                     _main 0AD4  
                   fsr1h 000FE2                     fsr2h 000FDA                     indf2 000FDF  
                   fsr1l 000FE1                     fsr2l 000FD9                     btemp 003E  
                   prodh 000FF4                     prodl 000FF3                     start 000E  
        __end_of_LeerBit 14CA             ___param_bank 000000                    ??_ISR 0006  
         ?_InicializaLCD 0001                    ?_main 0001          __end_of___awdiv 10FE  
        __end_of___lbdiv 1460                    _ADRES 000FC3                    _CCPR2 000FBB  
             _ComandoLCD 14CA            EscribeLCD_c@a 000C          __end_of___lbmod 1522  
                  _T0CON 000FD5          ___awdiv@divisor 000A                    _T1CON 000FCD  
                  _T2CON 000FCA                    _LATE1 007C69                    _LATE2 007C6A  
        __end_of___lwdiv 1294          __end_of___lwmod 13B0                    i2l400 0E18  
                  i2l361 0D34                    i2l370 0D60                    i2l363 0D32  
                  i2l380 0D8C                    i2l372 0D68                    i2l392 0DC4  
                  i2l384 0DA0                    i2l376 0D7C                    i2l368 0D58  
                  i2l393 0DDC                    i2l394 0DCC                    i2l386 0DA8  
                  i2l378 0D84                    i2l396 0DD4                    i2l388 0DB0  
        ___awdiv@counter 000C                    _RCREG 000FAE                    _RCSTA 000FAB  
                  _SPBRG 000FAF                    _PORTB 000F81                    _USBEN 007B6B  
                  _TRISA 000F92                    _TRISB 000F93                    _TRISC 000F94  
                  _TRISD 000F95                    _TXREG 000FAD                    _TXSTA 000FAC  
                  _Tecla 0037          _teclaRecibidaIf 0031      __end_of_LeerTeclado 0FDE  
                  main@i 001F           NuevoCaracter@c 000D           NuevoCaracter@i 000F  
                  tablat 000FF5              _HabilitaLCD 15D6                    ttemp5 003F  
                  ttemp6 0042                    ttemp7 0046                    status 000FD8  
                  wtemp8 003F          ___lbdiv@divisor 0008          ___lbdiv@counter 000A  
          Password@F3204 0021         __end_of_BorraLCD 1584         __end_of_LeerHT11 149A  
        __initialization 13EC         __end_of_LeerByte 156A             __end_of_main 0CFE  
                 ??_main 001D         __end_of_Password 1176            __activetblptr 000002  
                 _ADCON0 000FC2                   _ADCON1 000FC1                   _ADCON2 000FC0  
  __end_of_NuevoCaracter 13EC           DireccionaLCD@a 000C                   _CCPR1L 000FBE  
       ___awdiv@dividend 0008                   i2l2012 11E0                   i2l2014 11F2  
                 i2l2022 1226                   i2l2016 1212                   i2l2018 121C  
                 i2l2222 1360                   i2l1700 0F5C                   i2l1702 0F62  
                 i2l1704 0F68                   i2l1712 0F7A                   i2l1706 0F6E  
                 i2l1708 0F74                   i2l1680 0F20                   i2l2640 0D94  
                 i2l1690 0F3E                   i2l1682 0F26                   i2l1692 0F44  
                 i2l1684 0F2C                   i2l2652 0DB8                   i2l2628 0D70  
                 i2l1694 0F4A                   i2l1686 0F32                   i2l1678 0F1A  
                 i2l1696 0F50                   i2l1688 0F38                   i2l2672 0DFA  
                 i2l1698 0F56                   i2l2668 0DEA                   _OSCCON 000FD3  
                 _TMR0IE 007F95                   _TMR0IF 007F92                   _TMR1IE 007CE8  
                 _TMR1IF 007CF0                   _TMR0ON 007EAF                   _TMR1ON 007E68  
                 _TMR2ON 007E52                   _TRISC0 007CA0                   _TRISC1 007CA1  
                 _TRISC2 007CA2                   _TRISE0 007CB0                   _TRISE1 007CB1  
                 _TRISE2 007CB2                   _TRISC6 007CA6                   _TRISC7 007CA7  
              ??_LeerBit 0008    __end_of_DireccionaLCD 15B0                   _UTRDIS 007B7B  
             _RetardoLCD 1176      TransmitirDatos@Ent1 0011      TransmitirDatos@Ent2 0013  
    TransmitirDatos@Simb 0019                   ___wmul 1522                ??___awdiv 000C  
              ??___lbdiv 0009                ??___lbmod 0009                ??___lwdiv 000C  
              ??___lwmod 000C          ??_InicializaLCD 000D                   clear_0 1412  
       ___awdiv@quotient 000E                   isa$std 000001     __end_of_EscribeLCD_c 159A  
            ?_ComandoLCD 0001              _LeerTeclado 0F10             ?i2_EnviaDato 0001  
           __pdataCOMRAM 0021             __mediumconst 0000                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8               _Transmitir 15F2  
       ___lbdiv@dividend 0009          ___lbmod@divisor 0008    __end_ofi2_HabilitaLCD 15F2  
             __accesstop 0060  __end_of__initialization 1418          ___lbmod@counter 000A  
          ___rparam_used 000001           __pcstackCOMRAM 0001        __end_of_EnviaDato 1328  
       ___lbdiv@quotient 000B           Password@access 0015                ?_BorraLCD 0001  
              ?_LeerHT11 0001                ?_LeerByte 0001           Password@secret 0011  
            ?_RetardoLCD 0001              RetardoLCD@a 0009        __end_of_Velocidad 0F10  
              ?_Password 000D           ComandoLCD@data 0009                  ?___wmul 0008  
                _CCP1CON 000FBD                  _CCP2CON 000FBA               ??_BorraLCD 000D  
             ??_LeerHT11 000C              ?_Transmitir 0001        ??_MensajeLCD_Word 000E  
             ??_LeerByte 0009             ?_HabilitaLCD 0001                  _LeerBit 149A  
                _Humedad 0038               ??_Password 000F                  __Hparam 0000  
                __Lparam 0000     TransmitirDatos@TempC 001B                  ___awdiv 107A  
                ___lbdiv 1426                  ___lbmod 14F8                  ___lwdiv 1242  
                ___lwmod 136E             __psmallconst 0800                  __pcinit 13EC  
                __ramtop 0800                  __ptext0 0AD4                  __ptext1 0E1C  
                __ptext2 0844                  __ptext3 1522                  __ptext4 136E  
                __ptext5 1242                  __ptext6 14F8                  __ptext7 1426  
                __ptext8 107A                  __ptext9 15F2                  _teclaIf 0033  
         __pintcode_body 0CFE     end_of_initialization 1418            __Lmediumconst 0000  
                int_func 0CFE             _EscribeLCD_c 1584                  postdec1 000FE5  
      ??_TransmitirDatos 0015                  postinc0 000FEE                  postinc1 000FE6  
                postinc2 000FDE             ??_ComandoLCD 0008             ?_LeerTeclado 0001  
       ___lbmod@dividend 0009                LeerByte@i 000B          i2EscribeLCD_c@a 0005  
            ___lbmod@rem 000B            ?i2_RetardoLCD 0001       __end_of_ComandoLCD 14F8  
         __end_of___wmul 1548            __pidataCOMRAM 15C6    __end_of_InicializaLCD 107A  
              _EnviaDato 12E2      start_initialization 13EC              __end_of_ISR 0E1C  
              Password@i 0017             Password@pass 000D           ??i2_RetardoLCD 0001  
           ??_RetardoLCD 0008                 ??___wmul 000C                _Velocidad 0E1C  
        _MensajeLCD_Word 1294               ?_EnviaDato 0001              __pbssCOMRAM 0031  
     __end_of_RetardoLCD 11DC         MensajeLCD_Word@a 000D         MensajeLCD_Word@i 000F  
           ??_Transmitir 0008            _NuevoCaracter 13B0                 ?_LeerBit 0001  
          _DireccionaLCD 159A           i2_EscribeLCD_c 15B0         ___lwdiv@dividend 0008  
              __pintcode 0008                 ?___awdiv 0008                 ?___lbdiv 0008  
               ?___lbmod 0008               ?_Velocidad 0008                 ?___lwdiv 0008  
               ?___lwmod 0008       __end_of_Transmitir 15FE              __smallconst 0800  
       ___lwdiv@quotient 000C           ?_NuevoCaracter 000D          _TransmitirDatos 0844  
         ___wmul@product 000C            i2_HabilitaLCD 15E4           ?_DireccionaLCD 0001  
 __end_ofi2_EscribeLCD_c 15C6                 i2u190_47 1214                 i2u191_47 121E  
               i2u192_47 15E8                 i2u185_47 0D22                 i2u186_47 0DF2  
               i2u187_47 11E6                 i2u188_47 11F8                 i2u189_47 1202  
__end_of_MensajeLCD_Word 12E2        ___wmul@multiplier 0008            ??i2_EnviaDato 0003  
   __end_ofi2_RetardoLCD 1242              ??_EnviaDato 000A                 _BorraLCD 156A  
               _LeerHT11 1460                copy_data0 1400                 _LeerByte 1548  
         ?i2_HabilitaLCD 0001          ?i2_EscribeLCD_c 0001                 _Password 10FE  
               __Hrparam 0000                 __Lrparam 0000              ??_Velocidad 000A  
           i2EnviaDato@a 0004          ??_NuevoCaracter 000E  __end_of_TransmitirDatos 0AD4  
        ___lwdiv@divisor 000A          ___lwdiv@counter 000E                 __ptext10 1294  
               __ptext11 10FE                 __ptext20 159A                 __ptext12 13B0  
               __ptext21 12E2                 __ptext13 1584                 __ptext22 1176  
               __ptext14 14CA                 __ptext23 15D6                 __ptext15 1460  
               __ptext16 1548                 __ptext25 15B0                 __ptext17 149A  
               __ptext26 1328                 __ptext18 0FDE                 __ptext27 11DC  
               __ptext19 156A                 __ptext28 15E4                 __ptext29 0F10  
    __end_ofi2_EnviaDato 136E          ??_DireccionaLCD 000C                 _interfaz 0028  
           Velocidad@val 0008                 isa$xinst 000000         ?_MensajeLCD_Word 000D  
               int$flags 003E        NuevoCaracter@addr 000E          ??i2_HabilitaLCD 0001  
               intlevel2 0000            ??_HabilitaLCD 0008         ___lwmod@dividend 0008  
          i2RetardoLCD@a 0002              i2_EnviaDato 1328          ___lwmod@divisor 000A  
        ___lwmod@counter 000C         ?_TransmitirDatos 0011            ?_EscribeLCD_c 0001  
             LeerBit@res 0008             i2_RetardoLCD 11DC      __end_of_HabilitaLCD 15E4  
            LeerByte@res 000A  
