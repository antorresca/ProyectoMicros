

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Tue Jun 06 17:13:37 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og9 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    35                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    42                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    43                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    44                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    45                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    46   000000                     
    47                           ; Version 2.40
    48                           ; Generated 04/07/2022 GMT
    49                           ; 
    50                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    51                           ; All rights reserved.
    52                           ; 
    53                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    54                           ; 
    55                           ; Redistribution and use in source and binary forms, with or without modification, are
    56                           ; permitted provided that the following conditions are met:
    57                           ; 
    58                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    59                           ;        conditions and the following disclaimer.
    60                           ; 
    61                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    62                           ;        of conditions and the following disclaimer in the documentation and/or other
    63                           ;        materials provided with the distribution. Publication is not required when
    64                           ;        this file is used in an embedded application.
    65                           ; 
    66                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    67                           ;        software without specific prior written permission.
    68                           ; 
    69                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    70                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    71                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    72                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    73                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    74                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    75                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    76                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    77                           ; 
    78                           ; 
    79                           ; Code-generator required, PIC18F4550 Definitions
    80                           ; 
    81                           ; SFR Addresses
    82   000000                     
    83                           	psect	idataCOMRAM
    84   001450                     __pidataCOMRAM:
    85                           	callstack 0
    86                           
    87                           ;initializer for _c
    88   001450  4240               	dw	16960
    89                           
    90                           ;initializer for _Cont
    91   001452  06                 	db	6
    92                           
    93                           ;initializer for _interfaz
    94   001453  08                 	db	8
    95                           
    96                           ;initializer for _cara
    97   001454  00                 	db	0
    98   001455  0A                 	db	10
    99   001456  0A                 	db	10
   100   001457  0A                 	db	10
   101   001458  00                 	db	0
   102   001459  1F                 	db	31
   103   00145A  0E                 	db	14
   104   00145B  00                 	db	0
   105   000000                     _RCREG	set	4014
   106   000000                     _TXREG	set	4013
   107   000000                     _SPBRG	set	4015
   108   000000                     _RB7	set	31759
   109   000000                     _RB6	set	31758
   110   000000                     _RB5	set	31757
   111   000000                     _RB4	set	31756
   112   000000                     _TRMT	set	32097
   113   000000                     _TRISC0	set	31904
   114   000000                     _TRISC7	set	31911
   115   000000                     _TRISC6	set	31910
   116   000000                     _TMR2ON	set	32338
   117   000000                     _TRISC2	set	31906
   118   000000                     _TMR0ON	set	32431
   119   000000                     _GIE	set	32663
   120   000000                     _TMR0IE	set	32661
   121   000000                     _TMR0IF	set	32658
   122   000000                     _RBIE	set	32659
   123   000000                     _TRISE1	set	31921
   124   000000                     _TRISE2	set	31922
   125   000000                     _LATE2	set	31850
   126   000000                     _PORTB	set	3969
   127   000000                     _LATD	set	3980
   128   000000                     _RC0	set	31760
   129   000000                     _TRISB	set	3987
   130   000000                     _TRISC	set	3988
   131   000000                     _LATE1	set	31849
   132   000000                     _RCSTA	set	4011
   133   000000                     _TXSTA	set	4012
   134   000000                     _CCP1CON	set	4029
   135   000000                     _CCPR1L	set	4030
   136   000000                     _ADCON2	set	4032
   137   000000                     _ADCON1	set	4033
   138   000000                     _ADCON0	set	4034
   139   000000                     _TRISD	set	3989
   140   000000                     _OSCCON	set	4051
   141   000000                     _RCIF	set	31989
   142   000000                     _TRISE0	set	31920
   143   000000                     _T0CON	set	4053
   144   000000                     _RBPU	set	32655
   145   000000                     _T2CON	set	4042
   146   000000                     _PR2	set	4043
   147   000000                     _RBIF	set	32656
   148   000000                     _TMR0	set	4054
   149   000000                     _TMR2	set	4044
   150   000000                     _RE0	set	31776
   151   000000                     _LATB	set	3978
   152                           
   153                           	psect	smallconst
   154   000800                     __psmallconst:
   155                           	callstack 0
   156   000800  00                 	db	0
   157   000801                     STR_2:
   158   000801  20                 	db	32
   159   000802  20                 	db	32
   160   000803  20                 	db	32
   161   000804  20                 	db	32
   162   000805  20                 	db	32
   163   000806  20                 	db	32
   164   000807  20                 	db	32
   165   000808  20                 	db	32
   166   000809  20                 	db	32
   167   00080A  20                 	db	32
   168   00080B  20                 	db	32
   169   00080C  20                 	db	32
   170   00080D  20                 	db	32
   171   00080E  20                 	db	32
   172   00080F  20                 	db	32
   173   000810  20                 	db	32
   174   000811  00                 	db	0
   175   000812                     STR_1:
   176   000812  42                 	db	66	;'B'
   177   000813  69                 	db	105	;'i'
   178   000814  65                 	db	101	;'e'
   179   000815  6E                 	db	110	;'n'
   180   000816  76                 	db	118	;'v'
   181   000817  65                 	db	101	;'e'
   182   000818  6E                 	db	110	;'n'
   183   000819  69                 	db	105	;'i'
   184   00081A  64                 	db	100	;'d'
   185   00081B  6F                 	db	111	;'o'
   186   00081C  00                 	db	0
   187   00081D                     STR_3:
   188   00081D  50                 	db	80	;'P'
   189   00081E  61                 	db	97	;'a'
   190   00081F  73                 	db	115	;'s'
   191   000820  73                 	db	115	;'s'
   192   000821  77                 	db	119	;'w'
   193   000822  6F                 	db	111	;'o'
   194   000823  72                 	db	114	;'r'
   195   000824  64                 	db	100	;'d'
   196   000825  3A                 	db	58	;':'
   197   000826  00                 	db	0
   198   000827                     STR_7:
   199   000827  54                 	db	84	;'T'
   200   000828  65                 	db	101	;'e'
   201   000829  6D                 	db	109	;'m'
   202   00082A  70                 	db	112	;'p'
   203   00082B  3A                 	db	58	;':'
   204   00082C  00                 	db	0
   205   00082D                     STR_8:
   206   00082D  48                 	db	72	;'H'
   207   00082E  75                 	db	117	;'u'
   208   00082F  6D                 	db	109	;'m'
   209   000830  3A                 	db	58	;':'
   210   000831  00                 	db	0
   211   000832  00                 	db	0	; dummy byte at the end
   212   000000                     
   213                           ; #config settings
   214                           
   215                           	psect	cinit
   216   001260                     __pcinit:
   217                           	callstack 0
   218   001260                     start_initialization:
   219                           	callstack 0
   220   001260                     __initialization:
   221                           	callstack 0
   222                           
   223                           ; Initialize objects allocated to COMRAM (12 bytes)
   224                           ; load TBLPTR registers with __pidataCOMRAM
   225   001260  0E50               	movlw	low __pidataCOMRAM
   226   001262  6EF6               	movwf	tblptrl,c
   227   001264  0E14               	movlw	high __pidataCOMRAM
   228   001266  6EF7               	movwf	tblptrh,c
   229   001268  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   230   00126A  6EF8               	movwf	tblptru,c
   231   00126C  EE00  F01F         	lfsr	0,__pdataCOMRAM
   232   001270  EE10 F00C          	lfsr	1,12
   233   001274                     copy_data0:
   234   001274  0009               	tblrd		*+
   235   001276  CFF5 FFEE          	movff	tablat,postinc0
   236   00127A  50E5               	movf	postdec1,w,c
   237   00127C  50E1               	movf	fsr1l,w,c
   238   00127E  E1FA               	bnz	copy_data0
   239                           
   240                           ; Clear objects allocated to COMRAM (8 bytes)
   241   001280  EE00  F02B         	lfsr	0,__pbssCOMRAM
   242   001284  0E08               	movlw	8
   243   001286                     clear_0:
   244   001286  6AEE               	clrf	postinc0,c
   245   001288  06E8               	decf	wreg,f,c
   246   00128A  E1FD               	bnz	clear_0
   247   00128C                     end_of_initialization:
   248                           	callstack 0
   249   00128C                     __end_of__initialization:
   250                           	callstack 0
   251   00128C  9033               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   252   00128E  9233               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   253   001290  0E00               	movlw	low (__Lmediumconst shr (0+16))
   254   001292  6EF8               	movwf	tblptru,c
   255   001294  0100               	movlb	0
   256   001296  EF62  F005         	goto	_main	;jump to C main() function
   257                           
   258                           	psect	bssCOMRAM
   259   00002B                     __pbssCOMRAM:
   260                           	callstack 0
   261   00002B                     _duty:
   262                           	callstack 0
   263   00002B                     	ds	2
   264   00002D                     _contador:
   265                           	callstack 0
   266   00002D                     	ds	2
   267   00002F                     _ing:
   268                           	callstack 0
   269   00002F                     	ds	1
   270   000030                     _Tecla:
   271                           	callstack 0
   272   000030                     	ds	1
   273   000031                     _Humedad:
   274                           	callstack 0
   275   000031                     	ds	1
   276   000032                     _Temp:
   277                           	callstack 0
   278   000032                     	ds	1
   279                           
   280                           	psect	dataCOMRAM
   281   00001F                     __pdataCOMRAM:
   282                           	callstack 0
   283   00001F                     _c:
   284                           	callstack 0
   285   00001F                     	ds	2
   286   000021                     _Cont:
   287                           	callstack 0
   288   000021                     	ds	1
   289   000022                     _interfaz:
   290                           	callstack 0
   291   000022                     	ds	1
   292   000023                     _cara:
   293                           	callstack 0
   294   000023                     	ds	8
   295                           
   296                           	psect	cstackCOMRAM
   297   000001                     __pcstackCOMRAM:
   298                           	callstack 0
   299   000001                     ??i2_RetardoLCD:
   300                           
   301                           ; 1 bytes @ 0x0
   302   000001                     	ds	1
   303   000002                     i2RetardoLCD@a:
   304                           	callstack 0
   305                           
   306                           ; 1 bytes @ 0x1
   307   000002                     	ds	1
   308   000003                     ??i2_EnviaDato:
   309                           
   310                           ; 1 bytes @ 0x2
   311   000003                     	ds	1
   312   000004                     i2EnviaDato@a:
   313                           	callstack 0
   314                           
   315                           ; 1 bytes @ 0x3
   316   000004                     	ds	1
   317   000005                     i2EscribeLCD_c@a:
   318                           	callstack 0
   319                           
   320                           ; 1 bytes @ 0x4
   321   000005                     	ds	1
   322   000006                     ??_ISR:
   323                           
   324                           ; 1 bytes @ 0x5
   325   000006                     	ds	2
   326   000008                     ??_RetardoLCD:
   327   000008                     ??_ComandoLCD:
   328   000008                     ?___wmul:
   329                           	callstack 0
   330   000008                     ?___awdiv:
   331                           	callstack 0
   332   000008                     ?___lwdiv:
   333                           	callstack 0
   334   000008                     ?___lwmod:
   335                           	callstack 0
   336   000008                     LeerBit@res:
   337                           	callstack 0
   338   000008                     Transmitir@BufferT:
   339                           	callstack 0
   340   000008                     ___lbdiv@divisor:
   341                           	callstack 0
   342   000008                     ___lbmod@divisor:
   343                           	callstack 0
   344   000008                     Velocidad@val:
   345                           	callstack 0
   346   000008                     ___wmul@multiplier:
   347                           	callstack 0
   348   000008                     ___awdiv@dividend:
   349                           	callstack 0
   350   000008                     ___lwdiv@dividend:
   351                           	callstack 0
   352   000008                     ___lwmod@dividend:
   353                           	callstack 0
   354                           
   355                           ; 2 bytes @ 0x7
   356   000008                     	ds	1
   357   000009                     ??_LeerByte:
   358   000009                     ComandoLCD@data:
   359                           	callstack 0
   360   000009                     RetardoLCD@a:
   361                           	callstack 0
   362   000009                     ___lbdiv@dividend:
   363                           	callstack 0
   364   000009                     ___lbmod@dividend:
   365                           	callstack 0
   366                           
   367                           ; 1 bytes @ 0x8
   368   000009                     	ds	1
   369   00000A                     ??_EnviaDato:
   370   00000A                     LeerByte@res:
   371                           	callstack 0
   372   00000A                     ___lbdiv@counter:
   373                           	callstack 0
   374   00000A                     ___lbmod@counter:
   375                           	callstack 0
   376   00000A                     ___wmul@multiplicand:
   377                           	callstack 0
   378   00000A                     ___awdiv@divisor:
   379                           	callstack 0
   380   00000A                     ___lwdiv@divisor:
   381                           	callstack 0
   382   00000A                     ___lwmod@divisor:
   383                           	callstack 0
   384                           
   385                           ; 2 bytes @ 0x9
   386   00000A                     	ds	1
   387   00000B                     EnviaDato@a:
   388                           	callstack 0
   389   00000B                     LeerByte@i:
   390                           	callstack 0
   391   00000B                     ___lbdiv@quotient:
   392                           	callstack 0
   393   00000B                     ___lbmod@rem:
   394                           	callstack 0
   395                           
   396                           ; 1 bytes @ 0xA
   397   00000B                     	ds	1
   398   00000C                     ??_LeerHT11:
   399   00000C                     EscribeLCD_c@a:
   400                           	callstack 0
   401   00000C                     DireccionaLCD@a:
   402                           	callstack 0
   403   00000C                     ___awdiv@counter:
   404                           	callstack 0
   405   00000C                     ___lwmod@counter:
   406                           	callstack 0
   407   00000C                     ___wmul@product:
   408                           	callstack 0
   409   00000C                     ___lwdiv@quotient:
   410                           	callstack 0
   411                           
   412                           ; 2 bytes @ 0xB
   413   00000C                     	ds	1
   414   00000D                     NuevoCaracter@c:
   415                           	callstack 0
   416   00000D                     MensajeLCD_Word@a:
   417                           	callstack 0
   418   00000D                     ___awdiv@sign:
   419                           	callstack 0
   420                           
   421                           ; 1 bytes @ 0xC
   422   00000D                     	ds	1
   423   00000E                     ??_MensajeLCD_Word:
   424   00000E                     NuevoCaracter@addr:
   425                           	callstack 0
   426   00000E                     ___lwdiv@counter:
   427                           	callstack 0
   428   00000E                     ___awdiv@quotient:
   429                           	callstack 0
   430                           
   431                           ; 2 bytes @ 0xD
   432   00000E                     	ds	1
   433   00000F                     NuevoCaracter@i:
   434                           	callstack 0
   435   00000F                     MensajeLCD_Word@i:
   436                           	callstack 0
   437                           
   438                           ; 2 bytes @ 0xE
   439   00000F                     	ds	2
   440   000011                     TransmitirDatos@Ent1:
   441                           	callstack 0
   442                           
   443                           ; 2 bytes @ 0x10
   444   000011                     	ds	2
   445   000013                     TransmitirDatos@Ent2:
   446                           	callstack 0
   447                           
   448                           ; 2 bytes @ 0x12
   449   000013                     	ds	2
   450   000015                     ??_TransmitirDatos:
   451                           
   452                           ; 1 bytes @ 0x14
   453   000015                     	ds	2
   454   000017                     TransmitirDatos@n:
   455                           	callstack 0
   456                           
   457                           ; 2 bytes @ 0x16
   458   000017                     	ds	2
   459   000019                     TransmitirDatos@Simb:
   460                           	callstack 0
   461                           
   462                           ; 2 bytes @ 0x18
   463   000019                     	ds	2
   464   00001B                     TransmitirDatos@TempC:
   465                           	callstack 0
   466                           
   467                           ; 2 bytes @ 0x1A
   468   00001B                     	ds	2
   469   00001D                     ??_main:
   470                           
   471                           ; 1 bytes @ 0x1C
   472   00001D                     	ds	2
   473                           
   474 ;;
   475 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   476 ;;
   477 ;; *************** function _main *****************
   478 ;; Defined at:
   479 ;;		line 55 in file "Proyecto.c"
   480 ;; Parameters:    Size  Location     Type
   481 ;;		None
   482 ;; Auto vars:     Size  Location     Type
   483 ;;		None
   484 ;; Return value:  Size  Location     Type
   485 ;;                  1    wreg      void 
   486 ;; Registers used:
   487 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   488 ;; Tracked objects:
   489 ;;		On entry : 0/0
   490 ;;		On exit  : 0/0
   491 ;;		Unchanged: 0/0
   492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   493 ;;      Params:         0       0       0       0       0       0       0       0       0
   494 ;;      Locals:         0       0       0       0       0       0       0       0       0
   495 ;;      Temps:          2       0       0       0       0       0       0       0       0
   496 ;;      Totals:         2       0       0       0       0       0       0       0       0
   497 ;;Total ram usage:        2 bytes
   498 ;; Hardware stack levels required when called: 9
   499 ;; This function calls:
   500 ;;		_BorraLCD
   501 ;;		_DireccionaLCD
   502 ;;		_EscribeLCD_c
   503 ;;		_InicializaLCD
   504 ;;		_LeerHT11
   505 ;;		_MensajeLCD_Word
   506 ;;		_NuevoCaracter
   507 ;;		_TransmitirDatos
   508 ;;		_Velocidad
   509 ;; This function is called by:
   510 ;;		Startup code after reset
   511 ;; This function uses a non-reentrant model
   512 ;;
   513                           
   514                           	psect	text0
   515   000AC4                     __ptext0:
   516                           	callstack 0
   517   000AC4                     _main:
   518                           	callstack 22
   519                           
   520                           ;Proyecto.c: 57: TRISC = 0;
   521                           
   522                           ;incstack = 0
   523   000AC4  0E00               	movlw	0
   524   000AC6  6E94               	movwf	148,c	;volatile
   525                           
   526                           ;Proyecto.c: 58: OSCCON = 0b11110110;
   527   000AC8  0EF6               	movlw	246
   528   000ACA  6ED3               	movwf	211,c	;volatile
   529                           
   530                           ;Proyecto.c: 60: TRISD = 0;
   531   000ACC  0E00               	movlw	0
   532   000ACE  6E95               	movwf	149,c	;volatile
   533                           
   534                           ;Proyecto.c: 61: TRISE0 = 1;
   535   000AD0  8096               	bsf	3990,0,c	;volatile
   536                           
   537                           ;Proyecto.c: 62: TRISE2 = 0;
   538   000AD2  9496               	bcf	3990,2,c	;volatile
   539                           
   540                           ;Proyecto.c: 63: TRISE1 = 0;
   541   000AD4  9296               	bcf	3990,1,c	;volatile
   542                           
   543                           ;Proyecto.c: 64: InicializaLCD();
   544   000AD6  EC65  F007         	call	_InicializaLCD	;wreg free
   545                           
   546                           ;Proyecto.c: 65: BorraLCD();
   547   000ADA  EC10  F00A         	call	_BorraLCD	;wreg free
   548                           
   549                           ;Proyecto.c: 68: ADCON0 = 0b00000001;
   550   000ADE  0E01               	movlw	1
   551   000AE0  6EC2               	movwf	194,c	;volatile
   552                           
   553                           ;Proyecto.c: 69: ADCON1 = 0b00001100;
   554   000AE2  0E0C               	movlw	12
   555   000AE4  6EC1               	movwf	193,c	;volatile
   556                           
   557                           ;Proyecto.c: 70: ADCON2 = 0b10001000;
   558   000AE6  0E88               	movlw	136
   559   000AE8  6EC0               	movwf	192,c	;volatile
   560                           
   561                           ;Proyecto.c: 73: TRISB=0b11110000;
   562   000AEA  0EF0               	movlw	240
   563   000AEC  6E93               	movwf	147,c	;volatile
   564                           
   565                           ;Proyecto.c: 74: RBPU=0;
   566   000AEE  9EF1               	bcf	4081,7,c	;volatile
   567                           
   568                           ;Proyecto.c: 75: RBIF=0;
   569   000AF0  90F2               	bcf	4082,0,c	;volatile
   570                           
   571                           ;Proyecto.c: 76: RBIE=1;
   572   000AF2  86F2               	bsf	4082,3,c	;volatile
   573                           
   574                           ;Proyecto.c: 79: T0CON=0b00000011;
   575   000AF4  0E03               	movlw	3
   576   000AF6  6ED5               	movwf	213,c	;volatile
   577                           
   578                           ;Proyecto.c: 80: TMR0IF=0;
   579   000AF8  94F2               	bcf	4082,2,c	;volatile
   580                           
   581                           ;Proyecto.c: 81: TMR0=64911;
   582   000AFA  0EFD               	movlw	253
   583   000AFC  6ED7               	movwf	215,c	;volatile
   584   000AFE  0E8F               	movlw	143
   585   000B00  6ED6               	movwf	214,c	;volatile
   586                           
   587                           ;Proyecto.c: 82: TMR0IE=1;
   588   000B02  8AF2               	bsf	4082,5,c	;volatile
   589                           
   590                           ;Proyecto.c: 83: GIE=1;
   591   000B04  8EF2               	bsf	4082,7,c	;volatile
   592                           
   593                           ;Proyecto.c: 84: TMR0ON=1;
   594   000B06  8ED5               	bsf	4053,7,c	;volatile
   595                           
   596                           ;Proyecto.c: 87: TRISC2 = 0;
   597   000B08  9494               	bcf	3988,2,c	;volatile
   598                           
   599                           ;Proyecto.c: 88: PR2 = 125;
   600   000B0A  0E7D               	movlw	125
   601   000B0C  6ECB               	movwf	203,c	;volatile
   602                           
   603                           ;Proyecto.c: 89: CCPR1L = 0;
   604   000B0E  0E00               	movlw	0
   605   000B10  6EBE               	movwf	190,c	;volatile
   606                           
   607                           ;Proyecto.c: 90: T2CON = 0b00000010;
   608   000B12  0E02               	movlw	2
   609   000B14  6ECA               	movwf	202,c	;volatile
   610                           
   611                           ;Proyecto.c: 91: CCP1CON = 0b00001100;
   612   000B16  0E0C               	movlw	12
   613   000B18  6EBD               	movwf	189,c	;volatile
   614                           
   615                           ;Proyecto.c: 92: TMR2 = 0;
   616   000B1A  0E00               	movlw	0
   617   000B1C  6ECC               	movwf	204,c	;volatile
   618                           
   619                           ;Proyecto.c: 93: TMR2ON = 1;
   620   000B1E  84CA               	bsf	4042,2,c	;volatile
   621                           
   622                           ;Proyecto.c: 96: TRISC6 = 1;
   623   000B20  8C94               	bsf	3988,6,c	;volatile
   624                           
   625                           ;Proyecto.c: 97: TRISC7 = 1;
   626   000B22  8E94               	bsf	3988,7,c	;volatile
   627                           
   628                           ;Proyecto.c: 98: TXSTA = 0b00100000;
   629   000B24  0E20               	movlw	32
   630   000B26  6EAC               	movwf	172,c	;volatile
   631                           
   632                           ;Proyecto.c: 99: RCSTA = 0b10010000;
   633   000B28  0E90               	movlw	144
   634   000B2A  6EAB               	movwf	171,c	;volatile
   635                           
   636                           ;Proyecto.c: 100: SPBRG = 12;
   637   000B2C  0E0C               	movlw	12
   638   000B2E  6EAF               	movwf	175,c	;volatile
   639                           
   640                           ;Proyecto.c: 103: _delay((unsigned long)((1000)*(8000000/4000.0)));
   641   000B30  0E0B               	movlw	11
   642   000B32  6E1E               	movwf	(??_main+1)^0,c
   643   000B34  0E26               	movlw	38
   644   000B36  6E1D               	movwf	??_main^0,c
   645   000B38  0E5E               	movlw	94
   646   000B3A                     u1477:
   647   000B3A  2EE8               	decfsz	wreg,f,c
   648   000B3C  D7FE               	bra	u1477
   649   000B3E  2E1D               	decfsz	??_main^0,f,c
   650   000B40  D7FC               	bra	u1477
   651   000B42  2E1E               	decfsz	(??_main+1)^0,f,c
   652   000B44  D7FA               	bra	u1477
   653                           
   654                           ;Proyecto.c: 104: BorraLCD();
   655   000B46  EC10  F00A         	call	_BorraLCD	;wreg free
   656                           
   657                           ;Proyecto.c: 105: NuevoCaracter(0,cara);
   658   000B4A  0E23               	movlw	low _cara
   659   000B4C  6E0D               	movwf	NuevoCaracter@c^0,c
   660   000B4E  0E00               	movlw	0
   661   000B50  EC12  F009         	call	_NuevoCaracter
   662                           
   663                           ;Proyecto.c: 106: DireccionaLCD(0x82);
   664   000B54  0E82               	movlw	130
   665   000B56  ECEF  F009         	call	_DireccionaLCD
   666                           
   667                           ;Proyecto.c: 107: EscribeLCD_c(0);
   668   000B5A  0E00               	movlw	0
   669   000B5C  ECFA  F009         	call	_EscribeLCD_c
   670                           
   671                           ;Proyecto.c: 108: MensajeLCD_Word("Bienvenido");
   672   000B60  0E12               	movlw	low STR_1
   673   000B62  6E0D               	movwf	MensajeLCD_Word@a^0,c
   674   000B64  EC84  F008         	call	_MensajeLCD_Word	;wreg free
   675                           
   676                           ;Proyecto.c: 109: EscribeLCD_c(0);
   677   000B68  0E00               	movlw	0
   678   000B6A  ECFA  F009         	call	_EscribeLCD_c
   679                           
   680                           ;Proyecto.c: 110: DireccionaLCD(0xC7);
   681   000B6E  0EC7               	movlw	199
   682   000B70  ECEF  F009         	call	_DireccionaLCD
   683                           
   684                           ;Proyecto.c: 111: _delay((unsigned long)((1500)*(8000000/4000.0)));
   685   000B74  0E10               	movlw	16
   686   000B76  6E1E               	movwf	(??_main+1)^0,c
   687   000B78  0E39               	movlw	57
   688   000B7A  6E1D               	movwf	??_main^0,c
   689   000B7C  0E0E               	movlw	14
   690   000B7E                     u1487:
   691   000B7E  2EE8               	decfsz	wreg,f,c
   692   000B80  D7FE               	bra	u1487
   693   000B82  2E1D               	decfsz	??_main^0,f,c
   694   000B84  D7FC               	bra	u1487
   695   000B86  2E1E               	decfsz	(??_main+1)^0,f,c
   696   000B88  D7FA               	bra	u1487
   697                           
   698                           ;Proyecto.c: 112: DireccionaLCD(0x80);
   699   000B8A  0E80               	movlw	128
   700   000B8C  ECEF  F009         	call	_DireccionaLCD
   701                           
   702                           ;Proyecto.c: 113: MensajeLCD_Word("                ");
   703   000B90  0E01               	movlw	low STR_2
   704   000B92  6E0D               	movwf	MensajeLCD_Word@a^0,c
   705   000B94  EC84  F008         	call	_MensajeLCD_Word	;wreg free
   706                           
   707                           ;Proyecto.c: 114: DireccionaLCD(0x80);
   708   000B98  0E80               	movlw	128
   709   000B9A  ECEF  F009         	call	_DireccionaLCD
   710                           
   711                           ;Proyecto.c: 115: MensajeLCD_Word("Password:");
   712   000B9E  0E1D               	movlw	low STR_3
   713   000BA0  6E0D               	movwf	MensajeLCD_Word@a^0,c
   714   000BA2  EC84  F008         	call	_MensajeLCD_Word	;wreg free
   715                           
   716                           ;Proyecto.c: 116: while(ing!=Cont){
   717   000BA6  D007               	goto	l2528
   718   000BA8                     l2524:
   719                           
   720                           ;Proyecto.c: 117: DireccionaLCD(0xC1);
   721   000BA8  0EC1               	movlw	193
   722   000BAA  ECEF  F009         	call	_DireccionaLCD
   723                           
   724                           ;Proyecto.c: 118: MensajeLCD_Word("                ");
   725   000BAE  0E01               	movlw	low STR_2
   726   000BB0  6E0D               	movwf	MensajeLCD_Word@a^0,c
   727   000BB2  EC84  F008         	call	_MensajeLCD_Word	;wreg free
   728   000BB6                     l2528:
   729   000BB6  0E06               	movlw	6
   730   000BB8  182F               	xorwf	_ing^0,w,c
   731   000BBA  A4D8               	btfss	status,2,c
   732   000BBC  D7F5               	goto	l2524
   733                           
   734                           ;Proyecto.c: 119: };Proyecto.c: 120: DireccionaLCD(0x80);
   735   000BBE  0E80               	movlw	128
   736   000BC0  ECEF  F009         	call	_DireccionaLCD
   737                           
   738                           ;Proyecto.c: 121: MensajeLCD_Word("                ");
   739   000BC4  0E01               	movlw	low STR_2
   740   000BC6  6E0D               	movwf	MensajeLCD_Word@a^0,c
   741   000BC8  EC84  F008         	call	_MensajeLCD_Word	;wreg free
   742                           
   743                           ;Proyecto.c: 122: DireccionaLCD(0xC1);
   744   000BCC  0EC1               	movlw	193
   745   000BCE  ECEF  F009         	call	_DireccionaLCD
   746                           
   747                           ;Proyecto.c: 123: MensajeLCD_Word("                ");
   748   000BD2  0E01               	movlw	low STR_2
   749   000BD4  6E0D               	movwf	MensajeLCD_Word@a^0,c
   750   000BD6  EC84  F008         	call	_MensajeLCD_Word	;wreg free
   751   000BDA                     l2536:
   752                           
   753                           ;Proyecto.c: 125: _delay((unsigned long)((500)*(8000000/4000.0)));
   754   000BDA  0E06               	movlw	6
   755   000BDC  6E1E               	movwf	(??_main+1)^0,c
   756   000BDE  0E13               	movlw	19
   757   000BE0  6E1D               	movwf	??_main^0,c
   758   000BE2  0EAE               	movlw	174
   759   000BE4                     u1497:
   760   000BE4  2EE8               	decfsz	wreg,f,c
   761   000BE6  D7FE               	bra	u1497
   762   000BE8  2E1D               	decfsz	??_main^0,f,c
   763   000BEA  D7FC               	bra	u1497
   764   000BEC  2E1E               	decfsz	(??_main+1)^0,f,c
   765   000BEE  D7FA               	bra	u1497
   766                           
   767                           ;Proyecto.c: 126: LeerHT11();
   768   000BF0  EC6A  F009         	call	_LeerHT11	;wreg free
   769                           
   770                           ;Proyecto.c: 127: TransmitirDatos(0, 0);
   771   000BF4  0E00               	movlw	0
   772   000BF6  6E12               	movwf	(TransmitirDatos@Ent1+1)^0,c
   773   000BF8  0E00               	movlw	0
   774   000BFA  6E11               	movwf	TransmitirDatos@Ent1^0,c
   775   000BFC  0E00               	movlw	0
   776   000BFE  6E14               	movwf	(TransmitirDatos@Ent2+1)^0,c
   777   000C00  0E00               	movlw	0
   778   000C02  6E13               	movwf	TransmitirDatos@Ent2^0,c
   779   000C04  EC1A  F004         	call	_TransmitirDatos	;wreg free
   780                           
   781                           ;Proyecto.c: 128: Velocidad(Temp);
   782   000C08  C032  F008         	movff	_Temp,Velocidad@val
   783   000C0C  6A09               	clrf	(Velocidad@val+1)^0,c
   784   000C0E  EC96  F006         	call	_Velocidad	;wreg free
   785   000C12  D7E3               	goto	l2536
   786   000C14                     __end_of_main:
   787                           	callstack 0
   788                           
   789 ;; *************** function _Velocidad *****************
   790 ;; Defined at:
   791 ;;		line 132 in file "Proyecto.c"
   792 ;; Parameters:    Size  Location     Type
   793 ;;  val             2    7[COMRAM] unsigned int 
   794 ;; Auto vars:     Size  Location     Type
   795 ;;		None
   796 ;; Return value:  Size  Location     Type
   797 ;;                  1    wreg      void 
   798 ;; Registers used:
   799 ;;		wreg, status,2, status,0
   800 ;; Tracked objects:
   801 ;;		On entry : 0/0
   802 ;;		On exit  : 0/0
   803 ;;		Unchanged: 0/0
   804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   805 ;;      Params:         2       0       0       0       0       0       0       0       0
   806 ;;      Locals:         0       0       0       0       0       0       0       0       0
   807 ;;      Temps:          0       0       0       0       0       0       0       0       0
   808 ;;      Totals:         2       0       0       0       0       0       0       0       0
   809 ;;Total ram usage:        2 bytes
   810 ;; Hardware stack levels used: 1
   811 ;; Hardware stack levels required when called: 4
   812 ;; This function calls:
   813 ;;		Nothing
   814 ;; This function is called by:
   815 ;;		_main
   816 ;; This function uses a non-reentrant model
   817 ;;
   818                           
   819                           	psect	text1
   820   000D2C                     __ptext1:
   821                           	callstack 0
   822   000D2C                     _Velocidad:
   823                           	callstack 26
   824                           
   825                           ;Proyecto.c: 133: if (val < 22) {
   826                           
   827                           ;incstack = 0
   828   000D2C  5009               	movf	(Velocidad@val+1)^0,w,c
   829   000D2E  E107               	bnz	l2242
   830   000D30  0E16               	movlw	22
   831   000D32  5C08               	subwf	Velocidad@val^0,w,c
   832   000D34  B0D8               	btfsc	status,0,c
   833   000D36  D003               	goto	l2242
   834                           
   835                           ;Proyecto.c: 134: CCPR1L = 0;
   836   000D38  0E00               	movlw	0
   837   000D3A  6EBE               	movwf	190,c	;volatile
   838                           
   839                           ;Proyecto.c: 135: } else if (val >= 22 && val < 25) {
   840   000D3C  0012               	return	
   841   000D3E                     l2242:
   842   000D3E  5009               	movf	(Velocidad@val+1)^0,w,c
   843   000D40  E104               	bnz	u1100
   844   000D42  0E16               	movlw	22
   845   000D44  5C08               	subwf	Velocidad@val^0,w,c
   846   000D46  A0D8               	btfss	status,0,c
   847   000D48  D009               	goto	l2248
   848   000D4A                     u1100:
   849   000D4A  5009               	movf	(Velocidad@val+1)^0,w,c
   850   000D4C  E107               	bnz	l2248
   851   000D4E  0E19               	movlw	25
   852   000D50  5C08               	subwf	Velocidad@val^0,w,c
   853   000D52  B0D8               	btfsc	status,0,c
   854   000D54  D003               	goto	l2248
   855                           
   856                           ;Proyecto.c: 136: CCPR1L = 19;
   857   000D56  0E13               	movlw	19
   858   000D58  6EBE               	movwf	190,c	;volatile
   859                           
   860                           ;Proyecto.c: 137: } else if (val >= 25 && val < 28) {
   861   000D5A  0012               	return	
   862   000D5C                     l2248:
   863   000D5C  5009               	movf	(Velocidad@val+1)^0,w,c
   864   000D5E  E104               	bnz	u1120
   865   000D60  0E19               	movlw	25
   866   000D62  5C08               	subwf	Velocidad@val^0,w,c
   867   000D64  A0D8               	btfss	status,0,c
   868   000D66  D009               	goto	l2254
   869   000D68                     u1120:
   870   000D68  5009               	movf	(Velocidad@val+1)^0,w,c
   871   000D6A  E107               	bnz	l2254
   872   000D6C  0E1C               	movlw	28
   873   000D6E  5C08               	subwf	Velocidad@val^0,w,c
   874   000D70  B0D8               	btfsc	status,0,c
   875   000D72  D003               	goto	l2254
   876                           
   877                           ;Proyecto.c: 138: CCPR1L = 38;
   878   000D74  0E26               	movlw	38
   879   000D76  6EBE               	movwf	190,c	;volatile
   880                           
   881                           ;Proyecto.c: 139: } else if (val >= 28 && val < 31) {
   882   000D78  0012               	return	
   883   000D7A                     l2254:
   884   000D7A  5009               	movf	(Velocidad@val+1)^0,w,c
   885   000D7C  E104               	bnz	u1140
   886   000D7E  0E1C               	movlw	28
   887   000D80  5C08               	subwf	Velocidad@val^0,w,c
   888   000D82  A0D8               	btfss	status,0,c
   889   000D84  D009               	goto	l2260
   890   000D86                     u1140:
   891   000D86  5009               	movf	(Velocidad@val+1)^0,w,c
   892   000D88  E107               	bnz	l2260
   893   000D8A  0E1F               	movlw	31
   894   000D8C  5C08               	subwf	Velocidad@val^0,w,c
   895   000D8E  B0D8               	btfsc	status,0,c
   896   000D90  D003               	goto	l2260
   897                           
   898                           ;Proyecto.c: 140: CCPR1L = 57;
   899   000D92  0E39               	movlw	57
   900   000D94  6EBE               	movwf	190,c	;volatile
   901                           
   902                           ;Proyecto.c: 141: } else if (val >= 31 && val < 34) {
   903   000D96  0012               	return	
   904   000D98                     l2260:
   905   000D98  5009               	movf	(Velocidad@val+1)^0,w,c
   906   000D9A  E104               	bnz	u1160
   907   000D9C  0E1F               	movlw	31
   908   000D9E  5C08               	subwf	Velocidad@val^0,w,c
   909   000DA0  A0D8               	btfss	status,0,c
   910   000DA2  D009               	goto	l2266
   911   000DA4                     u1160:
   912   000DA4  5009               	movf	(Velocidad@val+1)^0,w,c
   913   000DA6  E107               	bnz	l2266
   914   000DA8  0E22               	movlw	34
   915   000DAA  5C08               	subwf	Velocidad@val^0,w,c
   916   000DAC  B0D8               	btfsc	status,0,c
   917   000DAE  D003               	goto	l2266
   918                           
   919                           ;Proyecto.c: 142: CCPR1L = 76;
   920   000DB0  0E4C               	movlw	76
   921   000DB2  6EBE               	movwf	190,c	;volatile
   922                           
   923                           ;Proyecto.c: 143: } else if (val >= 34 && val < 37) {
   924   000DB4  0012               	return	
   925   000DB6                     l2266:
   926   000DB6  5009               	movf	(Velocidad@val+1)^0,w,c
   927   000DB8  E104               	bnz	u1180
   928   000DBA  0E22               	movlw	34
   929   000DBC  5C08               	subwf	Velocidad@val^0,w,c
   930   000DBE  A0D8               	btfss	status,0,c
   931   000DC0  D009               	goto	l2272
   932   000DC2                     u1180:
   933   000DC2  5009               	movf	(Velocidad@val+1)^0,w,c
   934   000DC4  E107               	bnz	l2272
   935   000DC6  0E25               	movlw	37
   936   000DC8  5C08               	subwf	Velocidad@val^0,w,c
   937   000DCA  B0D8               	btfsc	status,0,c
   938   000DCC  D003               	goto	l2272
   939                           
   940                           ;Proyecto.c: 144: CCPR1L = 95;
   941   000DCE  0E5F               	movlw	95
   942   000DD0  6EBE               	movwf	190,c	;volatile
   943                           
   944                           ;Proyecto.c: 145: } else if (val >= 37 && val < 40) {
   945   000DD2  0012               	return	
   946   000DD4                     l2272:
   947   000DD4  5009               	movf	(Velocidad@val+1)^0,w,c
   948   000DD6  E104               	bnz	u1200
   949   000DD8  0E25               	movlw	37
   950   000DDA  5C08               	subwf	Velocidad@val^0,w,c
   951   000DDC  A0D8               	btfss	status,0,c
   952   000DDE  D009               	goto	l2278
   953   000DE0                     u1200:
   954   000DE0  5009               	movf	(Velocidad@val+1)^0,w,c
   955   000DE2  E107               	bnz	l2278
   956   000DE4  0E28               	movlw	40
   957   000DE6  5C08               	subwf	Velocidad@val^0,w,c
   958   000DE8  B0D8               	btfsc	status,0,c
   959   000DEA  D003               	goto	l2278
   960                           
   961                           ;Proyecto.c: 146: CCPR1L = 113;
   962   000DEC  0E71               	movlw	113
   963   000DEE  6EBE               	movwf	190,c	;volatile
   964                           
   965                           ;Proyecto.c: 147: } else if (val >= 40) {
   966   000DF0  0012               	return	
   967   000DF2                     l2278:
   968   000DF2  5009               	movf	(Velocidad@val+1)^0,w,c
   969   000DF4  E104               	bnz	u1220
   970   000DF6  0E28               	movlw	40
   971   000DF8  5C08               	subwf	Velocidad@val^0,w,c
   972   000DFA  A0D8               	btfss	status,0,c
   973   000DFC  0012               	return	
   974   000DFE                     u1220:
   975                           
   976                           ;Proyecto.c: 148: CCPR1L = 126;
   977   000DFE  0E7E               	movlw	126
   978   000E00  6EBE               	movwf	190,c	;volatile
   979   000E02  0012               	return	
   980   000E04                     __end_of_Velocidad:
   981                           	callstack 0
   982                           
   983 ;; *************** function _TransmitirDatos *****************
   984 ;; Defined at:
   985 ;;		line 255 in file "Proyecto.c"
   986 ;; Parameters:    Size  Location     Type
   987 ;;  Ent1            2   16[COMRAM] unsigned int 
   988 ;;  Ent2            2   18[COMRAM] unsigned int 
   989 ;; Auto vars:     Size  Location     Type
   990 ;;  TempC           2   26[COMRAM] unsigned int 
   991 ;;  Simb            2   24[COMRAM] unsigned int 
   992 ;;  n               2   22[COMRAM] unsigned int 
   993 ;;  HumedadC        2    0        unsigned int 
   994 ;; Return value:  Size  Location     Type
   995 ;;                  1    wreg      void 
   996 ;; Registers used:
   997 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   998 ;; Tracked objects:
   999 ;;		On entry : 0/0
  1000 ;;		On exit  : 0/0
  1001 ;;		Unchanged: 0/0
  1002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1003 ;;      Params:         4       0       0       0       0       0       0       0       0
  1004 ;;      Locals:         6       0       0       0       0       0       0       0       0
  1005 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1006 ;;      Totals:        12       0       0       0       0       0       0       0       0
  1007 ;;Total ram usage:       12 bytes
  1008 ;; Hardware stack levels used: 1
  1009 ;; Hardware stack levels required when called: 8
  1010 ;; This function calls:
  1011 ;;		_BorraLCD
  1012 ;;		_DireccionaLCD
  1013 ;;		_EscribeLCD_c
  1014 ;;		_MensajeLCD_Word
  1015 ;;		_Transmitir
  1016 ;;		___awdiv
  1017 ;;		___lbdiv
  1018 ;;		___lbmod
  1019 ;;		___lwdiv
  1020 ;;		___lwmod
  1021 ;;		___wmul
  1022 ;; This function is called by:
  1023 ;;		_main
  1024 ;; This function uses a non-reentrant model
  1025 ;;
  1026                           
  1027                           	psect	text2
  1028   000834                     __ptext2:
  1029                           	callstack 0
  1030   000834                     _TransmitirDatos:
  1031                           	callstack 22
  1032                           
  1033                           ;Proyecto.c: 256: unsigned int n = Ent1 * 10 + Ent2, TempC = Temp, HumedadC = Humedad;
  1034                           
  1035                           ;incstack = 0
  1036   000834  C011  F008         	movff	TransmitirDatos@Ent1,___wmul@multiplier
  1037   000838  C012  F009         	movff	TransmitirDatos@Ent1+1,___wmul@multiplier+1
  1038   00083C  0E00               	movlw	0
  1039   00083E  6E0B               	movwf	(___wmul@multiplicand+1)^0,c
  1040   000840  0E0A               	movlw	10
  1041   000842  6E0A               	movwf	___wmul@multiplicand^0,c
  1042   000844  ECCB  F009         	call	___wmul	;wreg free
  1043   000848  5013               	movf	TransmitirDatos@Ent2^0,w,c
  1044   00084A  2408               	addwf	?___wmul^0,w,c
  1045   00084C  6E17               	movwf	TransmitirDatos@n^0,c
  1046   00084E  5014               	movf	(TransmitirDatos@Ent2+1)^0,w,c
  1047   000850  2009               	addwfc	(?___wmul+1)^0,w,c
  1048   000852  6E18               	movwf	(TransmitirDatos@n+1)^0,c
  1049   000854  C032  F01B         	movff	_Temp,TransmitirDatos@TempC
  1050   000858  6A1C               	clrf	(TransmitirDatos@TempC+1)^0,c
  1051                           
  1052                           ;Proyecto.c: 257: unsigned int Simb = 67;
  1053   00085A  0E00               	movlw	0
  1054   00085C  6E1A               	movwf	(TransmitirDatos@Simb+1)^0,c
  1055   00085E  0E43               	movlw	67
  1056   000860  6E19               	movwf	TransmitirDatos@Simb^0,c
  1057                           
  1058                           ;Proyecto.c: 258: BorraLCD();
  1059   000862  EC10  F00A         	call	_BorraLCD	;wreg free
  1060                           
  1061                           ;Proyecto.c: 259: switch (n) {
  1062   000866  D03E               	goto	l2178
  1063   000868                     l283:
  1064                           
  1065                           ;Proyecto.c: 261: TempC = Temp;
  1066   000868  C032  F01B         	movff	_Temp,TransmitirDatos@TempC
  1067   00086C  6A1C               	clrf	(TransmitirDatos@TempC+1)^0,c
  1068                           
  1069                           ;Proyecto.c: 262: Simb = 67;
  1070   00086E  0E00               	movlw	0
  1071   000870  6E1A               	movwf	(TransmitirDatos@Simb+1)^0,c
  1072   000872  0E43               	movlw	67
  1073   000874  D035               	goto	L3
  1074   000876                     l2164:
  1075                           
  1076                           ;Proyecto.c: 265: TempC = Temp + 273;
  1077   000876  0E11               	movlw	17
  1078   000878  2432               	addwf	_Temp^0,w,c
  1079   00087A  6E1B               	movwf	TransmitirDatos@TempC^0,c
  1080   00087C  6A1C               	clrf	(TransmitirDatos@TempC+1)^0,c
  1081   00087E  0E01               	movlw	1
  1082   000880  221C               	addwfc	(TransmitirDatos@TempC+1)^0,f,c
  1083                           
  1084                           ;Proyecto.c: 266: Simb = 75;
  1085   000882  0E00               	movlw	0
  1086   000884  6E1A               	movwf	(TransmitirDatos@Simb+1)^0,c
  1087   000886  0E4B               	movlw	75
  1088   000888  D02B               	goto	L3
  1089   00088A                     l2168:
  1090                           
  1091                           ;Proyecto.c: 269: TempC = Temp * 9 / 5 + 492;
  1092   00088A  5032               	movf	_Temp^0,w,c
  1093   00088C  0D09               	mullw	9
  1094   00088E  CFF3 F008          	movff	prodl,___awdiv@dividend
  1095   000892  CFF4 F009          	movff	prodh,___awdiv@dividend+1
  1096   000896  0E00               	movlw	0
  1097   000898  6E0B               	movwf	(___awdiv@divisor+1)^0,c
  1098   00089A  0E05               	movlw	5
  1099   00089C  6E0A               	movwf	___awdiv@divisor^0,c
  1100   00089E  ECB3  F007         	call	___awdiv	;wreg free
  1101   0008A2  0EEC               	movlw	236
  1102   0008A4  2408               	addwf	?___awdiv^0,w,c
  1103   0008A6  6E1B               	movwf	TransmitirDatos@TempC^0,c
  1104   0008A8  0E01               	movlw	1
  1105   0008AA  2009               	addwfc	(?___awdiv+1)^0,w,c
  1106   0008AC  6E1C               	movwf	(TransmitirDatos@TempC+1)^0,c
  1107                           
  1108                           ;Proyecto.c: 270: Simb = 82;
  1109   0008AE  0E00               	movlw	0
  1110   0008B0  6E1A               	movwf	(TransmitirDatos@Simb+1)^0,c
  1111   0008B2  0E52               	movlw	82
  1112   0008B4  D015               	goto	L3
  1113   0008B6                     l2172:
  1114                           
  1115                           ;Proyecto.c: 273: TempC = Temp * 9 / 5 + 32;
  1116   0008B6  5032               	movf	_Temp^0,w,c
  1117   0008B8  0D09               	mullw	9
  1118   0008BA  CFF3 F008          	movff	prodl,___awdiv@dividend
  1119   0008BE  CFF4 F009          	movff	prodh,___awdiv@dividend+1
  1120   0008C2  0E00               	movlw	0
  1121   0008C4  6E0B               	movwf	(___awdiv@divisor+1)^0,c
  1122   0008C6  0E05               	movlw	5
  1123   0008C8  6E0A               	movwf	___awdiv@divisor^0,c
  1124   0008CA  ECB3  F007         	call	___awdiv	;wreg free
  1125   0008CE  0E20               	movlw	32
  1126   0008D0  2408               	addwf	?___awdiv^0,w,c
  1127   0008D2  6E1B               	movwf	TransmitirDatos@TempC^0,c
  1128   0008D4  0E00               	movlw	0
  1129   0008D6  2009               	addwfc	(?___awdiv+1)^0,w,c
  1130   0008D8  6E1C               	movwf	(TransmitirDatos@TempC+1)^0,c
  1131                           
  1132                           ;Proyecto.c: 274: Simb = 70;
  1133   0008DA  0E00               	movlw	0
  1134   0008DC  6E1A               	movwf	(TransmitirDatos@Simb+1)^0,c
  1135   0008DE  0E46               	movlw	70
  1136   0008E0                     L3:
  1137   0008E0  6E19               	movwf	TransmitirDatos@Simb^0,c
  1138                           
  1139                           ;Proyecto.c: 275: break;
  1140   0008E2  D015               	goto	l2180
  1141   0008E4                     l2178:
  1142   0008E4  C017  F015         	movff	TransmitirDatos@n,??_TransmitirDatos
  1143   0008E8  C018  F016         	movff	TransmitirDatos@n+1,??_TransmitirDatos+1
  1144                           
  1145                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1146                           ; Switch size 1, requested type "simple"
  1147                           ; Number of cases is 1, Range of values is 0 to 0
  1148                           ; switch strategies available:
  1149                           ; Name         Instructions Cycles
  1150                           ; simple_byte            4     3 (average)
  1151                           ;	Chosen strategy is simple_byte
  1152   0008EC  5016               	movf	(??_TransmitirDatos+1)^0,w,c
  1153   0008EE  0A00               	xorlw	0	; case 0
  1154   0008F0  A4D8               	btfss	status,2,c
  1155   0008F2  D00D               	goto	l2180
  1156                           
  1157                           ; Switch size 1, requested type "simple"
  1158                           ; Number of cases is 4, Range of values is 0 to 11
  1159                           ; switch strategies available:
  1160                           ; Name         Instructions Cycles
  1161                           ; simple_byte           13     7 (average)
  1162                           ;	Chosen strategy is simple_byte
  1163   0008F4  5015               	movf	??_TransmitirDatos^0,w,c
  1164   0008F6  0A00               	xorlw	0	; case 0
  1165   0008F8  B4D8               	btfsc	status,2,c
  1166   0008FA  D7B6               	goto	l283
  1167   0008FC  0A01               	xorlw	1	; case 1
  1168   0008FE  B4D8               	btfsc	status,2,c
  1169   000900  D7BA               	goto	l2164
  1170   000902  0A0B               	xorlw	11	; case 10
  1171   000904  B4D8               	btfsc	status,2,c
  1172   000906  D7C1               	goto	l2168
  1173   000908  0A01               	xorlw	1	; case 11
  1174   00090A  B4D8               	btfsc	status,2,c
  1175   00090C  D7D4               	goto	l2172
  1176   00090E                     l2180:
  1177                           
  1178                           ;Proyecto.c: 277: Transmitir('T');
  1179   00090E  0E54               	movlw	84
  1180   000910  EC2E  F00A         	call	_Transmitir
  1181                           
  1182                           ;Proyecto.c: 278: Transmitir('e');
  1183   000914  0E65               	movlw	101
  1184   000916  EC2E  F00A         	call	_Transmitir
  1185                           
  1186                           ;Proyecto.c: 279: Transmitir('m');
  1187   00091A  0E6D               	movlw	109
  1188   00091C  EC2E  F00A         	call	_Transmitir
  1189                           
  1190                           ;Proyecto.c: 280: Transmitir('p');
  1191   000920  0E70               	movlw	112
  1192   000922  EC2E  F00A         	call	_Transmitir
  1193                           
  1194                           ;Proyecto.c: 281: Transmitir(':');
  1195   000926  0E3A               	movlw	58
  1196   000928  EC2E  F00A         	call	_Transmitir
  1197                           
  1198                           ;Proyecto.c: 282: Transmitir(' ');
  1199   00092C  0E20               	movlw	32
  1200   00092E  EC2E  F00A         	call	_Transmitir
  1201                           
  1202                           ;Proyecto.c: 284: MensajeLCD_Word("Temp:");
  1203   000932  0E27               	movlw	low STR_7
  1204   000934  6E0D               	movwf	MensajeLCD_Word@a^0,c
  1205   000936  EC84  F008         	call	_MensajeLCD_Word	;wreg free
  1206                           
  1207                           ;Proyecto.c: 285: if (TempC / 100 > 0) {
  1208   00093A  C01B  F008         	movff	TransmitirDatos@TempC,___lwdiv@dividend
  1209   00093E  C01C  F009         	movff	TransmitirDatos@TempC+1,___lwdiv@dividend+1
  1210   000942  0E00               	movlw	0
  1211   000944  6E0B               	movwf	(___lwdiv@divisor+1)^0,c
  1212   000946  0E64               	movlw	100
  1213   000948  6E0A               	movwf	___lwdiv@divisor^0,c
  1214   00094A  EC5B  F008         	call	___lwdiv	;wreg free
  1215   00094E  5008               	movf	?___lwdiv^0,w,c
  1216   000950  1009               	iorwf	(?___lwdiv+1)^0,w,c
  1217   000952  B4D8               	btfsc	status,2,c
  1218   000954  D02A               	goto	l288
  1219                           
  1220                           ;Proyecto.c: 286: Transmitir(TempC / 100 + 48);
  1221   000956  C01B  F008         	movff	TransmitirDatos@TempC,___lwdiv@dividend
  1222   00095A  C01C  F009         	movff	TransmitirDatos@TempC+1,___lwdiv@dividend+1
  1223   00095E  0E00               	movlw	0
  1224   000960  6E0B               	movwf	(___lwdiv@divisor+1)^0,c
  1225   000962  0E64               	movlw	100
  1226   000964  6E0A               	movwf	___lwdiv@divisor^0,c
  1227   000966  EC5B  F008         	call	___lwdiv	;wreg free
  1228   00096A  5008               	movf	?___lwdiv^0,w,c
  1229   00096C  0F30               	addlw	48
  1230   00096E  EC2E  F00A         	call	_Transmitir
  1231                           
  1232                           ;Proyecto.c: 287: EscribeLCD_c(TempC / 100 + 48);
  1233   000972  C01B  F008         	movff	TransmitirDatos@TempC,___lwdiv@dividend
  1234   000976  C01C  F009         	movff	TransmitirDatos@TempC+1,___lwdiv@dividend+1
  1235   00097A  0E00               	movlw	0
  1236   00097C  6E0B               	movwf	(___lwdiv@divisor+1)^0,c
  1237   00097E  0E64               	movlw	100
  1238   000980  6E0A               	movwf	___lwdiv@divisor^0,c
  1239   000982  EC5B  F008         	call	___lwdiv	;wreg free
  1240   000986  5008               	movf	?___lwdiv^0,w,c
  1241   000988  0F30               	addlw	48
  1242   00098A  ECFA  F009         	call	_EscribeLCD_c
  1243                           
  1244                           ;Proyecto.c: 288: TempC = TempC % 100;
  1245   00098E  C01B  F008         	movff	TransmitirDatos@TempC,___lwmod@dividend
  1246   000992  C01C  F009         	movff	TransmitirDatos@TempC+1,___lwmod@dividend+1
  1247   000996  0E00               	movlw	0
  1248   000998  6E0B               	movwf	(___lwmod@divisor+1)^0,c
  1249   00099A  0E64               	movlw	100
  1250   00099C  6E0A               	movwf	___lwmod@divisor^0,c
  1251   00099E  ECF1  F008         	call	___lwmod	;wreg free
  1252   0009A2  C008  F01B         	movff	?___lwmod,TransmitirDatos@TempC
  1253   0009A6  C009  F01C         	movff	?___lwmod+1,TransmitirDatos@TempC+1
  1254   0009AA                     l288:
  1255                           
  1256                           ;Proyecto.c: 289: };Proyecto.c: 290: Transmitir(TempC / 10 + 48);
  1257   0009AA  C01B  F008         	movff	TransmitirDatos@TempC,___lwdiv@dividend
  1258   0009AE  C01C  F009         	movff	TransmitirDatos@TempC+1,___lwdiv@dividend+1
  1259   0009B2  0E00               	movlw	0
  1260   0009B4  6E0B               	movwf	(___lwdiv@divisor+1)^0,c
  1261   0009B6  0E0A               	movlw	10
  1262   0009B8  6E0A               	movwf	___lwdiv@divisor^0,c
  1263   0009BA  EC5B  F008         	call	___lwdiv	;wreg free
  1264   0009BE  5008               	movf	?___lwdiv^0,w,c
  1265   0009C0  0F30               	addlw	48
  1266   0009C2  EC2E  F00A         	call	_Transmitir
  1267                           
  1268                           ;Proyecto.c: 291: Transmitir(TempC % 10 + 48);
  1269   0009C6  C01B  F008         	movff	TransmitirDatos@TempC,___lwmod@dividend
  1270   0009CA  C01C  F009         	movff	TransmitirDatos@TempC+1,___lwmod@dividend+1
  1271   0009CE  0E00               	movlw	0
  1272   0009D0  6E0B               	movwf	(___lwmod@divisor+1)^0,c
  1273   0009D2  0E0A               	movlw	10
  1274   0009D4  6E0A               	movwf	___lwmod@divisor^0,c
  1275   0009D6  ECF1  F008         	call	___lwmod	;wreg free
  1276   0009DA  5008               	movf	?___lwmod^0,w,c
  1277   0009DC  0F30               	addlw	48
  1278   0009DE  EC2E  F00A         	call	_Transmitir
  1279                           
  1280                           ;Proyecto.c: 292: Transmitir(167);
  1281   0009E2  0EA7               	movlw	167
  1282   0009E4  EC2E  F00A         	call	_Transmitir
  1283                           
  1284                           ;Proyecto.c: 293: Transmitir(Simb);
  1285   0009E8  5019               	movf	TransmitirDatos@Simb^0,w,c
  1286   0009EA  EC2E  F00A         	call	_Transmitir
  1287                           
  1288                           ;Proyecto.c: 294: Transmitir(' ');
  1289   0009EE  0E20               	movlw	32
  1290   0009F0  EC2E  F00A         	call	_Transmitir
  1291                           
  1292                           ;Proyecto.c: 295: Transmitir('\n');
  1293   0009F4  0E0A               	movlw	10
  1294   0009F6  EC2E  F00A         	call	_Transmitir
  1295                           
  1296                           ;Proyecto.c: 296: Transmitir('H');
  1297   0009FA  0E48               	movlw	72
  1298   0009FC  EC2E  F00A         	call	_Transmitir
  1299                           
  1300                           ;Proyecto.c: 297: Transmitir('u');
  1301   000A00  0E75               	movlw	117
  1302   000A02  EC2E  F00A         	call	_Transmitir
  1303                           
  1304                           ;Proyecto.c: 298: Transmitir('m');
  1305   000A06  0E6D               	movlw	109
  1306   000A08  EC2E  F00A         	call	_Transmitir
  1307                           
  1308                           ;Proyecto.c: 299: Transmitir(':');
  1309   000A0C  0E3A               	movlw	58
  1310   000A0E  EC2E  F00A         	call	_Transmitir
  1311                           
  1312                           ;Proyecto.c: 300: Transmitir(' ');
  1313   000A12  0E20               	movlw	32
  1314   000A14  EC2E  F00A         	call	_Transmitir
  1315                           
  1316                           ;Proyecto.c: 301: Transmitir(Humedad / 10 + 48);
  1317   000A18  0E0A               	movlw	10
  1318   000A1A  6E08               	movwf	___lbdiv@divisor^0,c
  1319   000A1C  5031               	movf	_Humedad^0,w,c
  1320   000A1E  EC4D  F009         	call	___lbdiv
  1321   000A22  0F30               	addlw	48
  1322   000A24  EC2E  F00A         	call	_Transmitir
  1323                           
  1324                           ;Proyecto.c: 302: Transmitir(Humedad % 10 + 48);
  1325   000A28  0E0A               	movlw	10
  1326   000A2A  6E08               	movwf	___lbmod@divisor^0,c
  1327   000A2C  5031               	movf	_Humedad^0,w,c
  1328   000A2E  ECB6  F009         	call	___lbmod
  1329   000A32  0F30               	addlw	48
  1330   000A34  EC2E  F00A         	call	_Transmitir
  1331                           
  1332                           ;Proyecto.c: 303: Transmitir(' ');
  1333   000A38  0E20               	movlw	32
  1334   000A3A  EC2E  F00A         	call	_Transmitir
  1335                           
  1336                           ;Proyecto.c: 304: Transmitir('%');
  1337   000A3E  0E25               	movlw	37
  1338   000A40  EC2E  F00A         	call	_Transmitir
  1339                           
  1340                           ;Proyecto.c: 305: Transmitir('\n');
  1341   000A44  0E0A               	movlw	10
  1342   000A46  EC2E  F00A         	call	_Transmitir
  1343                           
  1344                           ;Proyecto.c: 306: Transmitir(' ');
  1345   000A4A  0E20               	movlw	32
  1346   000A4C  EC2E  F00A         	call	_Transmitir
  1347                           
  1348                           ;Proyecto.c: 308: EscribeLCD_c(TempC / 10 + 48);
  1349   000A50  C01B  F008         	movff	TransmitirDatos@TempC,___lwdiv@dividend
  1350   000A54  C01C  F009         	movff	TransmitirDatos@TempC+1,___lwdiv@dividend+1
  1351   000A58  0E00               	movlw	0
  1352   000A5A  6E0B               	movwf	(___lwdiv@divisor+1)^0,c
  1353   000A5C  0E0A               	movlw	10
  1354   000A5E  6E0A               	movwf	___lwdiv@divisor^0,c
  1355   000A60  EC5B  F008         	call	___lwdiv	;wreg free
  1356   000A64  5008               	movf	?___lwdiv^0,w,c
  1357   000A66  0F30               	addlw	48
  1358   000A68  ECFA  F009         	call	_EscribeLCD_c
  1359                           
  1360                           ;Proyecto.c: 309: EscribeLCD_c(TempC % 10 + 48);
  1361   000A6C  C01B  F008         	movff	TransmitirDatos@TempC,___lwmod@dividend
  1362   000A70  C01C  F009         	movff	TransmitirDatos@TempC+1,___lwmod@dividend+1
  1363   000A74  0E00               	movlw	0
  1364   000A76  6E0B               	movwf	(___lwmod@divisor+1)^0,c
  1365   000A78  0E0A               	movlw	10
  1366   000A7A  6E0A               	movwf	___lwmod@divisor^0,c
  1367   000A7C  ECF1  F008         	call	___lwmod	;wreg free
  1368   000A80  5008               	movf	?___lwmod^0,w,c
  1369   000A82  0F30               	addlw	48
  1370   000A84  ECFA  F009         	call	_EscribeLCD_c
  1371                           
  1372                           ;Proyecto.c: 310: EscribeLCD_c(Simb);
  1373   000A88  5019               	movf	TransmitirDatos@Simb^0,w,c
  1374   000A8A  ECFA  F009         	call	_EscribeLCD_c
  1375                           
  1376                           ;Proyecto.c: 311: DireccionaLCD(192);
  1377   000A8E  0EC0               	movlw	192
  1378   000A90  ECEF  F009         	call	_DireccionaLCD
  1379                           
  1380                           ;Proyecto.c: 312: MensajeLCD_Word("Hum:");
  1381   000A94  0E2D               	movlw	low STR_8
  1382   000A96  6E0D               	movwf	MensajeLCD_Word@a^0,c
  1383   000A98  EC84  F008         	call	_MensajeLCD_Word	;wreg free
  1384                           
  1385                           ;Proyecto.c: 313: EscribeLCD_c(Humedad / 10 + 48);
  1386   000A9C  0E0A               	movlw	10
  1387   000A9E  6E08               	movwf	___lbdiv@divisor^0,c
  1388   000AA0  5031               	movf	_Humedad^0,w,c
  1389   000AA2  EC4D  F009         	call	___lbdiv
  1390   000AA6  0F30               	addlw	48
  1391   000AA8  ECFA  F009         	call	_EscribeLCD_c
  1392                           
  1393                           ;Proyecto.c: 314: EscribeLCD_c(Humedad % 10 + 48);
  1394   000AAC  0E0A               	movlw	10
  1395   000AAE  6E08               	movwf	___lbmod@divisor^0,c
  1396   000AB0  5031               	movf	_Humedad^0,w,c
  1397   000AB2  ECB6  F009         	call	___lbmod
  1398   000AB6  0F30               	addlw	48
  1399   000AB8  ECFA  F009         	call	_EscribeLCD_c
  1400                           
  1401                           ;Proyecto.c: 315: EscribeLCD_c('%');
  1402   000ABC  0E25               	movlw	37
  1403   000ABE  ECFA  F009         	call	_EscribeLCD_c
  1404   000AC2  0012               	return		;funcret
  1405   000AC4                     __end_of_TransmitirDatos:
  1406                           	callstack 0
  1407                           
  1408 ;; *************** function ___wmul *****************
  1409 ;; Defined at:
  1410 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul16.c"
  1411 ;; Parameters:    Size  Location     Type
  1412 ;;  multiplier      2    7[COMRAM] unsigned int 
  1413 ;;  multiplicand    2    9[COMRAM] unsigned int 
  1414 ;; Auto vars:     Size  Location     Type
  1415 ;;  product         2   11[COMRAM] unsigned int 
  1416 ;; Return value:  Size  Location     Type
  1417 ;;                  2    7[COMRAM] unsigned int 
  1418 ;; Registers used:
  1419 ;;		wreg, status,2, status,0, prodl, prodh
  1420 ;; Tracked objects:
  1421 ;;		On entry : 0/0
  1422 ;;		On exit  : 0/0
  1423 ;;		Unchanged: 0/0
  1424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1425 ;;      Params:         4       0       0       0       0       0       0       0       0
  1426 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1427 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1428 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1429 ;;Total ram usage:        6 bytes
  1430 ;; Hardware stack levels used: 1
  1431 ;; Hardware stack levels required when called: 4
  1432 ;; This function calls:
  1433 ;;		Nothing
  1434 ;; This function is called by:
  1435 ;;		_TransmitirDatos
  1436 ;; This function uses a non-reentrant model
  1437 ;;
  1438                           
  1439                           	psect	text3
  1440   001396                     __ptext3:
  1441                           	callstack 0
  1442   001396                     ___wmul:
  1443                           	callstack 25
  1444                           
  1445                           ;incstack = 0
  1446   001396  5008               	movf	___wmul@multiplier^0,w,c
  1447   001398  020A               	mulwf	___wmul@multiplicand^0,c
  1448   00139A  CFF3 F00C          	movff	prodl,___wmul@product
  1449   00139E  CFF4 F00D          	movff	prodh,___wmul@product+1
  1450   0013A2  5008               	movf	___wmul@multiplier^0,w,c
  1451   0013A4  020B               	mulwf	(___wmul@multiplicand+1)^0,c
  1452   0013A6  50F3               	movf	243,w,c
  1453   0013A8  260D               	addwf	(___wmul@product+1)^0,f,c
  1454   0013AA  5009               	movf	(___wmul@multiplier+1)^0,w,c
  1455   0013AC  020A               	mulwf	___wmul@multiplicand^0,c
  1456   0013AE  50F3               	movf	243,w,c
  1457   0013B0  260D               	addwf	(___wmul@product+1)^0,f,c
  1458   0013B2  C00C  F008         	movff	___wmul@product,?___wmul
  1459   0013B6  C00D  F009         	movff	___wmul@product+1,?___wmul+1
  1460   0013BA  0012               	return		;funcret
  1461   0013BC                     __end_of___wmul:
  1462                           	callstack 0
  1463                           
  1464 ;; *************** function ___lwmod *****************
  1465 ;; Defined at:
  1466 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwmod.c"
  1467 ;; Parameters:    Size  Location     Type
  1468 ;;  dividend        2    7[COMRAM] unsigned int 
  1469 ;;  divisor         2    9[COMRAM] unsigned int 
  1470 ;; Auto vars:     Size  Location     Type
  1471 ;;  counter         1   11[COMRAM] unsigned char 
  1472 ;; Return value:  Size  Location     Type
  1473 ;;                  2    7[COMRAM] unsigned int 
  1474 ;; Registers used:
  1475 ;;		wreg, status,2, status,0
  1476 ;; Tracked objects:
  1477 ;;		On entry : 0/0
  1478 ;;		On exit  : 0/0
  1479 ;;		Unchanged: 0/0
  1480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1481 ;;      Params:         4       0       0       0       0       0       0       0       0
  1482 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1483 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1484 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1485 ;;Total ram usage:        5 bytes
  1486 ;; Hardware stack levels used: 1
  1487 ;; Hardware stack levels required when called: 4
  1488 ;; This function calls:
  1489 ;;		Nothing
  1490 ;; This function is called by:
  1491 ;;		_TransmitirDatos
  1492 ;; This function uses a non-reentrant model
  1493 ;;
  1494                           
  1495                           	psect	text4
  1496   0011E2                     __ptext4:
  1497                           	callstack 0
  1498   0011E2                     ___lwmod:
  1499                           	callstack 25
  1500                           
  1501                           ;incstack = 0
  1502   0011E2  500A               	movf	___lwmod@divisor^0,w,c
  1503   0011E4  100B               	iorwf	(___lwmod@divisor+1)^0,w,c
  1504   0011E6  B4D8               	btfsc	status,2,c
  1505   0011E8  D018               	goto	l828
  1506   0011EA  0E01               	movlw	1
  1507   0011EC  6E0C               	movwf	___lwmod@counter^0,c
  1508   0011EE  D004               	goto	l2050
  1509   0011F0                     l2048:
  1510   0011F0  90D8               	bcf	status,0,c
  1511   0011F2  360A               	rlcf	___lwmod@divisor^0,f,c
  1512   0011F4  360B               	rlcf	(___lwmod@divisor+1)^0,f,c
  1513   0011F6  2A0C               	incf	___lwmod@counter^0,f,c
  1514   0011F8                     l2050:
  1515   0011F8  AE0B               	btfss	(___lwmod@divisor+1)^0,7,c
  1516   0011FA  D7FA               	goto	l2048
  1517   0011FC                     u970:
  1518   0011FC  500A               	movf	___lwmod@divisor^0,w,c
  1519   0011FE  5C08               	subwf	___lwmod@dividend^0,w,c
  1520   001200  500B               	movf	(___lwmod@divisor+1)^0,w,c
  1521   001202  5809               	subwfb	(___lwmod@dividend+1)^0,w,c
  1522   001204  A0D8               	btfss	status,0,c
  1523   001206  D004               	goto	l2056
  1524   001208  500A               	movf	___lwmod@divisor^0,w,c
  1525   00120A  5E08               	subwf	___lwmod@dividend^0,f,c
  1526   00120C  500B               	movf	(___lwmod@divisor+1)^0,w,c
  1527   00120E  5A09               	subwfb	(___lwmod@dividend+1)^0,f,c
  1528   001210                     l2056:
  1529   001210  90D8               	bcf	status,0,c
  1530   001212  320B               	rrcf	(___lwmod@divisor+1)^0,f,c
  1531   001214  320A               	rrcf	___lwmod@divisor^0,f,c
  1532   001216  2E0C               	decfsz	___lwmod@counter^0,f,c
  1533   001218  D7F1               	goto	u970
  1534   00121A                     l828:
  1535   00121A  C008  F008         	movff	___lwmod@dividend,?___lwmod
  1536   00121E  C009  F009         	movff	___lwmod@dividend+1,?___lwmod+1
  1537   001222  0012               	return		;funcret
  1538   001224                     __end_of___lwmod:
  1539                           	callstack 0
  1540                           
  1541 ;; *************** function ___lwdiv *****************
  1542 ;; Defined at:
  1543 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwdiv.c"
  1544 ;; Parameters:    Size  Location     Type
  1545 ;;  dividend        2    7[COMRAM] unsigned int 
  1546 ;;  divisor         2    9[COMRAM] unsigned int 
  1547 ;; Auto vars:     Size  Location     Type
  1548 ;;  quotient        2   11[COMRAM] unsigned int 
  1549 ;;  counter         1   13[COMRAM] unsigned char 
  1550 ;; Return value:  Size  Location     Type
  1551 ;;                  2    7[COMRAM] unsigned int 
  1552 ;; Registers used:
  1553 ;;		wreg, status,2, status,0
  1554 ;; Tracked objects:
  1555 ;;		On entry : 0/0
  1556 ;;		On exit  : 0/0
  1557 ;;		Unchanged: 0/0
  1558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1559 ;;      Params:         4       0       0       0       0       0       0       0       0
  1560 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1561 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1562 ;;      Totals:         7       0       0       0       0       0       0       0       0
  1563 ;;Total ram usage:        7 bytes
  1564 ;; Hardware stack levels used: 1
  1565 ;; Hardware stack levels required when called: 4
  1566 ;; This function calls:
  1567 ;;		Nothing
  1568 ;; This function is called by:
  1569 ;;		_TransmitirDatos
  1570 ;; This function uses a non-reentrant model
  1571 ;;
  1572                           
  1573                           	psect	text5
  1574   0010B6                     __ptext5:
  1575                           	callstack 0
  1576   0010B6                     ___lwdiv:
  1577                           	callstack 25
  1578                           
  1579                           ;incstack = 0
  1580   0010B6  0E00               	movlw	0
  1581   0010B8  6E0D               	movwf	(___lwdiv@quotient+1)^0,c
  1582   0010BA  0E00               	movlw	0
  1583   0010BC  6E0C               	movwf	___lwdiv@quotient^0,c
  1584   0010BE  500A               	movf	___lwdiv@divisor^0,w,c
  1585   0010C0  100B               	iorwf	(___lwdiv@divisor+1)^0,w,c
  1586   0010C2  B4D8               	btfsc	status,2,c
  1587   0010C4  D01C               	goto	l818
  1588   0010C6  0E01               	movlw	1
  1589   0010C8  6E0E               	movwf	___lwdiv@counter^0,c
  1590   0010CA  D004               	goto	l2030
  1591   0010CC                     l2028:
  1592   0010CC  90D8               	bcf	status,0,c
  1593   0010CE  360A               	rlcf	___lwdiv@divisor^0,f,c
  1594   0010D0  360B               	rlcf	(___lwdiv@divisor+1)^0,f,c
  1595   0010D2  2A0E               	incf	___lwdiv@counter^0,f,c
  1596   0010D4                     l2030:
  1597   0010D4  AE0B               	btfss	(___lwdiv@divisor+1)^0,7,c
  1598   0010D6  D7FA               	goto	l2028
  1599   0010D8                     u940:
  1600   0010D8  90D8               	bcf	status,0,c
  1601   0010DA  360C               	rlcf	___lwdiv@quotient^0,f,c
  1602   0010DC  360D               	rlcf	(___lwdiv@quotient+1)^0,f,c
  1603   0010DE  500A               	movf	___lwdiv@divisor^0,w,c
  1604   0010E0  5C08               	subwf	___lwdiv@dividend^0,w,c
  1605   0010E2  500B               	movf	(___lwdiv@divisor+1)^0,w,c
  1606   0010E4  5809               	subwfb	(___lwdiv@dividend+1)^0,w,c
  1607   0010E6  A0D8               	btfss	status,0,c
  1608   0010E8  D005               	goto	l2040
  1609   0010EA  500A               	movf	___lwdiv@divisor^0,w,c
  1610   0010EC  5E08               	subwf	___lwdiv@dividend^0,f,c
  1611   0010EE  500B               	movf	(___lwdiv@divisor+1)^0,w,c
  1612   0010F0  5A09               	subwfb	(___lwdiv@dividend+1)^0,f,c
  1613   0010F2  800C               	bsf	___lwdiv@quotient^0,0,c
  1614   0010F4                     l2040:
  1615   0010F4  90D8               	bcf	status,0,c
  1616   0010F6  320B               	rrcf	(___lwdiv@divisor+1)^0,f,c
  1617   0010F8  320A               	rrcf	___lwdiv@divisor^0,f,c
  1618   0010FA  2E0E               	decfsz	___lwdiv@counter^0,f,c
  1619   0010FC  D7ED               	goto	u940
  1620   0010FE                     l818:
  1621   0010FE  C00C  F008         	movff	___lwdiv@quotient,?___lwdiv
  1622   001102  C00D  F009         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1623   001106  0012               	return		;funcret
  1624   001108                     __end_of___lwdiv:
  1625                           	callstack 0
  1626                           
  1627 ;; *************** function ___lbmod *****************
  1628 ;; Defined at:
  1629 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lbmod.c"
  1630 ;; Parameters:    Size  Location     Type
  1631 ;;  dividend        1    wreg     unsigned char 
  1632 ;;  divisor         1    7[COMRAM] unsigned char 
  1633 ;; Auto vars:     Size  Location     Type
  1634 ;;  dividend        1    8[COMRAM] unsigned char 
  1635 ;;  rem             1   10[COMRAM] unsigned char 
  1636 ;;  counter         1    9[COMRAM] unsigned char 
  1637 ;; Return value:  Size  Location     Type
  1638 ;;                  1    wreg      unsigned char 
  1639 ;; Registers used:
  1640 ;;		wreg, status,2, status,0
  1641 ;; Tracked objects:
  1642 ;;		On entry : 0/0
  1643 ;;		On exit  : 0/0
  1644 ;;		Unchanged: 0/0
  1645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1646 ;;      Params:         1       0       0       0       0       0       0       0       0
  1647 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1648 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1649 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1650 ;;Total ram usage:        4 bytes
  1651 ;; Hardware stack levels used: 1
  1652 ;; Hardware stack levels required when called: 4
  1653 ;; This function calls:
  1654 ;;		Nothing
  1655 ;; This function is called by:
  1656 ;;		_TransmitirDatos
  1657 ;; This function uses a non-reentrant model
  1658 ;;
  1659                           
  1660                           	psect	text6
  1661   00136C                     __ptext6:
  1662                           	callstack 0
  1663   00136C                     ___lbmod:
  1664                           	callstack 25
  1665                           
  1666                           ;incstack = 0
  1667                           ;___lbmod@dividend stored from wreg
  1668   00136C  6E09               	movwf	___lbmod@dividend^0,c
  1669   00136E  0E08               	movlw	8
  1670   001370  6E0A               	movwf	___lbmod@counter^0,c
  1671   001372  0E00               	movlw	0
  1672   001374  6E0B               	movwf	___lbmod@rem^0,c
  1673   001376                     l2008:
  1674   001376  90D8               	bcf	status,0,c
  1675   001378  3409               	rlcf	___lbmod@dividend^0,w,c
  1676   00137A  340B               	rlcf	___lbmod@rem^0,w,c
  1677   00137C  6E0B               	movwf	___lbmod@rem^0,c
  1678   00137E  90D8               	bcf	status,0,c
  1679   001380  3609               	rlcf	___lbmod@dividend^0,f,c
  1680   001382  5008               	movf	___lbmod@divisor^0,w,c
  1681   001384  5C0B               	subwf	___lbmod@rem^0,w,c
  1682   001386  A0D8               	btfss	status,0,c
  1683   001388  D002               	goto	l2016
  1684   00138A  5008               	movf	___lbmod@divisor^0,w,c
  1685   00138C  5E0B               	subwf	___lbmod@rem^0,f,c
  1686   00138E                     l2016:
  1687   00138E  2E0A               	decfsz	___lbmod@counter^0,f,c
  1688   001390  D7F2               	goto	l2008
  1689   001392  500B               	movf	___lbmod@rem^0,w,c
  1690   001394  0012               	return		;funcret
  1691   001396                     __end_of___lbmod:
  1692                           	callstack 0
  1693                           
  1694 ;; *************** function ___lbdiv *****************
  1695 ;; Defined at:
  1696 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lbdiv.c"
  1697 ;; Parameters:    Size  Location     Type
  1698 ;;  dividend        1    wreg     unsigned char 
  1699 ;;  divisor         1    7[COMRAM] unsigned char 
  1700 ;; Auto vars:     Size  Location     Type
  1701 ;;  dividend        1    8[COMRAM] unsigned char 
  1702 ;;  quotient        1   10[COMRAM] unsigned char 
  1703 ;;  counter         1    9[COMRAM] unsigned char 
  1704 ;; Return value:  Size  Location     Type
  1705 ;;                  1    wreg      unsigned char 
  1706 ;; Registers used:
  1707 ;;		wreg, status,2, status,0
  1708 ;; Tracked objects:
  1709 ;;		On entry : 0/0
  1710 ;;		On exit  : 0/0
  1711 ;;		Unchanged: 0/0
  1712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1713 ;;      Params:         1       0       0       0       0       0       0       0       0
  1714 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1715 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1716 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1717 ;;Total ram usage:        4 bytes
  1718 ;; Hardware stack levels used: 1
  1719 ;; Hardware stack levels required when called: 4
  1720 ;; This function calls:
  1721 ;;		Nothing
  1722 ;; This function is called by:
  1723 ;;		_TransmitirDatos
  1724 ;; This function uses a non-reentrant model
  1725 ;;
  1726                           
  1727                           	psect	text7
  1728   00129A                     __ptext7:
  1729                           	callstack 0
  1730   00129A                     ___lbdiv:
  1731                           	callstack 25
  1732                           
  1733                           ;incstack = 0
  1734                           ;___lbdiv@dividend stored from wreg
  1735   00129A  6E09               	movwf	___lbdiv@dividend^0,c
  1736   00129C  0E00               	movlw	0
  1737   00129E  6E0B               	movwf	___lbdiv@quotient^0,c
  1738   0012A0  5008               	movf	___lbdiv@divisor^0,w,c
  1739   0012A2  B4D8               	btfsc	status,2,c
  1740   0012A4  D015               	goto	l2002
  1741   0012A6  0E01               	movlw	1
  1742   0012A8  6E0A               	movwf	___lbdiv@counter^0,c
  1743   0012AA  D003               	goto	l1990
  1744   0012AC                     l1986:
  1745   0012AC  90D8               	bcf	status,0,c
  1746   0012AE  3608               	rlcf	___lbdiv@divisor^0,f,c
  1747   0012B0  2A0A               	incf	___lbdiv@counter^0,f,c
  1748   0012B2                     l1990:
  1749   0012B2  AE08               	btfss	___lbdiv@divisor^0,7,c
  1750   0012B4  D7FB               	goto	l1986
  1751   0012B6                     u900:
  1752   0012B6  90D8               	bcf	status,0,c
  1753   0012B8  360B               	rlcf	___lbdiv@quotient^0,f,c
  1754   0012BA  5008               	movf	___lbdiv@divisor^0,w,c
  1755   0012BC  5C09               	subwf	___lbdiv@dividend^0,w,c
  1756   0012BE  A0D8               	btfss	status,0,c
  1757   0012C0  D003               	goto	l1998
  1758   0012C2  5008               	movf	___lbdiv@divisor^0,w,c
  1759   0012C4  5E09               	subwf	___lbdiv@dividend^0,f,c
  1760   0012C6  800B               	bsf	___lbdiv@quotient^0,0,c
  1761   0012C8                     l1998:
  1762   0012C8  90D8               	bcf	status,0,c
  1763   0012CA  3208               	rrcf	___lbdiv@divisor^0,f,c
  1764   0012CC  2E0A               	decfsz	___lbdiv@counter^0,f,c
  1765   0012CE  D7F3               	goto	u900
  1766   0012D0                     l2002:
  1767   0012D0  500B               	movf	___lbdiv@quotient^0,w,c
  1768   0012D2  0012               	return		;funcret
  1769   0012D4                     __end_of___lbdiv:
  1770                           	callstack 0
  1771                           
  1772 ;; *************** function ___awdiv *****************
  1773 ;; Defined at:
  1774 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awdiv.c"
  1775 ;; Parameters:    Size  Location     Type
  1776 ;;  dividend        2    7[COMRAM] int 
  1777 ;;  divisor         2    9[COMRAM] int 
  1778 ;; Auto vars:     Size  Location     Type
  1779 ;;  quotient        2   13[COMRAM] int 
  1780 ;;  sign            1   12[COMRAM] unsigned char 
  1781 ;;  counter         1   11[COMRAM] unsigned char 
  1782 ;; Return value:  Size  Location     Type
  1783 ;;                  2    7[COMRAM] int 
  1784 ;; Registers used:
  1785 ;;		wreg, status,2, status,0
  1786 ;; Tracked objects:
  1787 ;;		On entry : 0/0
  1788 ;;		On exit  : 0/0
  1789 ;;		Unchanged: 0/0
  1790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1791 ;;      Params:         4       0       0       0       0       0       0       0       0
  1792 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1793 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1794 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1795 ;;Total ram usage:        8 bytes
  1796 ;; Hardware stack levels used: 1
  1797 ;; Hardware stack levels required when called: 4
  1798 ;; This function calls:
  1799 ;;		Nothing
  1800 ;; This function is called by:
  1801 ;;		_TransmitirDatos
  1802 ;; This function uses a non-reentrant model
  1803 ;;
  1804                           
  1805                           	psect	text8
  1806   000F66                     __ptext8:
  1807                           	callstack 0
  1808   000F66                     ___awdiv:
  1809                           	callstack 25
  1810                           
  1811                           ;incstack = 0
  1812   000F66  0E00               	movlw	0
  1813   000F68  6E0D               	movwf	___awdiv@sign^0,c
  1814   000F6A  AE0B               	btfss	(___awdiv@divisor+1)^0,7,c
  1815   000F6C  D006               	goto	l1944
  1816   000F6E  6C0A               	negf	___awdiv@divisor^0,c
  1817   000F70  1E0B               	comf	(___awdiv@divisor+1)^0,f,c
  1818   000F72  B0D8               	btfsc	status,0,c
  1819   000F74  2A0B               	incf	(___awdiv@divisor+1)^0,f,c
  1820   000F76  0E01               	movlw	1
  1821   000F78  6E0D               	movwf	___awdiv@sign^0,c
  1822   000F7A                     l1944:
  1823   000F7A  AE09               	btfss	(___awdiv@dividend+1)^0,7,c
  1824   000F7C  D006               	goto	l1950
  1825   000F7E  6C08               	negf	___awdiv@dividend^0,c
  1826   000F80  1E09               	comf	(___awdiv@dividend+1)^0,f,c
  1827   000F82  B0D8               	btfsc	status,0,c
  1828   000F84  2A09               	incf	(___awdiv@dividend+1)^0,f,c
  1829   000F86  0E01               	movlw	1
  1830   000F88  1A0D               	xorwf	___awdiv@sign^0,f,c
  1831   000F8A                     l1950:
  1832   000F8A  0E00               	movlw	0
  1833   000F8C  6E0F               	movwf	(___awdiv@quotient+1)^0,c
  1834   000F8E  0E00               	movlw	0
  1835   000F90  6E0E               	movwf	___awdiv@quotient^0,c
  1836   000F92  500A               	movf	___awdiv@divisor^0,w,c
  1837   000F94  100B               	iorwf	(___awdiv@divisor+1)^0,w,c
  1838   000F96  B4D8               	btfsc	status,2,c
  1839   000F98  D01C               	goto	l1972
  1840   000F9A  0E01               	movlw	1
  1841   000F9C  6E0C               	movwf	___awdiv@counter^0,c
  1842   000F9E  D004               	goto	l1958
  1843   000FA0                     l1956:
  1844   000FA0  90D8               	bcf	status,0,c
  1845   000FA2  360A               	rlcf	___awdiv@divisor^0,f,c
  1846   000FA4  360B               	rlcf	(___awdiv@divisor+1)^0,f,c
  1847   000FA6  2A0C               	incf	___awdiv@counter^0,f,c
  1848   000FA8                     l1958:
  1849   000FA8  AE0B               	btfss	(___awdiv@divisor+1)^0,7,c
  1850   000FAA  D7FA               	goto	l1956
  1851   000FAC                     u860:
  1852   000FAC  90D8               	bcf	status,0,c
  1853   000FAE  360E               	rlcf	___awdiv@quotient^0,f,c
  1854   000FB0  360F               	rlcf	(___awdiv@quotient+1)^0,f,c
  1855   000FB2  500A               	movf	___awdiv@divisor^0,w,c
  1856   000FB4  5C08               	subwf	___awdiv@dividend^0,w,c
  1857   000FB6  500B               	movf	(___awdiv@divisor+1)^0,w,c
  1858   000FB8  5809               	subwfb	(___awdiv@dividend+1)^0,w,c
  1859   000FBA  A0D8               	btfss	status,0,c
  1860   000FBC  D005               	goto	l1968
  1861   000FBE  500A               	movf	___awdiv@divisor^0,w,c
  1862   000FC0  5E08               	subwf	___awdiv@dividend^0,f,c
  1863   000FC2  500B               	movf	(___awdiv@divisor+1)^0,w,c
  1864   000FC4  5A09               	subwfb	(___awdiv@dividend+1)^0,f,c
  1865   000FC6  800E               	bsf	___awdiv@quotient^0,0,c
  1866   000FC8                     l1968:
  1867   000FC8  90D8               	bcf	status,0,c
  1868   000FCA  320B               	rrcf	(___awdiv@divisor+1)^0,f,c
  1869   000FCC  320A               	rrcf	___awdiv@divisor^0,f,c
  1870   000FCE  2E0C               	decfsz	___awdiv@counter^0,f,c
  1871   000FD0  D7ED               	goto	u860
  1872   000FD2                     l1972:
  1873   000FD2  500D               	movf	___awdiv@sign^0,w,c
  1874   000FD4  B4D8               	btfsc	status,2,c
  1875   000FD6  D004               	goto	l1976
  1876   000FD8  6C0E               	negf	___awdiv@quotient^0,c
  1877   000FDA  1E0F               	comf	(___awdiv@quotient+1)^0,f,c
  1878   000FDC  B0D8               	btfsc	status,0,c
  1879   000FDE  2A0F               	incf	(___awdiv@quotient+1)^0,f,c
  1880   000FE0                     l1976:
  1881   000FE0  C00E  F008         	movff	___awdiv@quotient,?___awdiv
  1882   000FE4  C00F  F009         	movff	___awdiv@quotient+1,?___awdiv+1
  1883   000FE8  0012               	return		;funcret
  1884   000FEA                     __end_of___awdiv:
  1885                           	callstack 0
  1886                           
  1887 ;; *************** function _Transmitir *****************
  1888 ;; Defined at:
  1889 ;;		line 245 in file "Proyecto.c"
  1890 ;; Parameters:    Size  Location     Type
  1891 ;;  BufferT         1    wreg     unsigned char 
  1892 ;; Auto vars:     Size  Location     Type
  1893 ;;  BufferT         1    7[COMRAM] unsigned char 
  1894 ;; Return value:  Size  Location     Type
  1895 ;;                  1    wreg      void 
  1896 ;; Registers used:
  1897 ;;		wreg
  1898 ;; Tracked objects:
  1899 ;;		On entry : 0/0
  1900 ;;		On exit  : 0/0
  1901 ;;		Unchanged: 0/0
  1902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1903 ;;      Params:         0       0       0       0       0       0       0       0       0
  1904 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1905 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1906 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1907 ;;Total ram usage:        1 bytes
  1908 ;; Hardware stack levels used: 1
  1909 ;; Hardware stack levels required when called: 4
  1910 ;; This function calls:
  1911 ;;		Nothing
  1912 ;; This function is called by:
  1913 ;;		_TransmitirDatos
  1914 ;; This function uses a non-reentrant model
  1915 ;;
  1916                           
  1917                           	psect	text9
  1918   00145C                     __ptext9:
  1919                           	callstack 0
  1920   00145C                     _Transmitir:
  1921                           	callstack 25
  1922                           
  1923                           ;incstack = 0
  1924                           ;Transmitir@BufferT stored from wreg
  1925   00145C  6E08               	movwf	Transmitir@BufferT^0,c
  1926   00145E                     
  1927                           ;Proyecto.c: 246: while (TRMT == 0);
  1928   00145E  A2AC               	btfss	4012,1,c	;volatile
  1929   001460  D7FE               	goto	l1926
  1930                           
  1931                           ;Proyecto.c: 247: TXREG = BufferT;
  1932   001462  C008  FFAD         	movff	Transmitir@BufferT,4013	;volatile
  1933   001466  0012               	return		;funcret
  1934   001468                     __end_of_Transmitir:
  1935                           	callstack 0
  1936                           
  1937 ;; *************** function _MensajeLCD_Word *****************
  1938 ;; Defined at:
  1939 ;;		line 247 in file "LibLCDXC8.h"
  1940 ;; Parameters:    Size  Location     Type
  1941 ;;  a               1   12[COMRAM] PTR unsigned char 
  1942 ;;		 -> STR_8(5), STR_7(6), STR_6(17), STR_5(17), 
  1943 ;;		 -> STR_4(17), STR_3(10), STR_2(17), STR_1(11), 
  1944 ;; Auto vars:     Size  Location     Type
  1945 ;;  i               2   14[COMRAM] int 
  1946 ;; Return value:  Size  Location     Type
  1947 ;;                  1    wreg      void 
  1948 ;; Registers used:
  1949 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1950 ;; Tracked objects:
  1951 ;;		On entry : 0/0
  1952 ;;		On exit  : 0/0
  1953 ;;		Unchanged: 0/0
  1954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1955 ;;      Params:         1       0       0       0       0       0       0       0       0
  1956 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1957 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1958 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1959 ;;Total ram usage:        4 bytes
  1960 ;; Hardware stack levels used: 1
  1961 ;; Hardware stack levels required when called: 7
  1962 ;; This function calls:
  1963 ;;		_EscribeLCD_c
  1964 ;; This function is called by:
  1965 ;;		_main
  1966 ;;		_TransmitirDatos
  1967 ;; This function uses a non-reentrant model
  1968 ;;
  1969                           
  1970                           	psect	text10
  1971   001108                     __ptext10:
  1972                           	callstack 0
  1973   001108                     _MensajeLCD_Word:
  1974                           	callstack 22
  1975                           
  1976                           ;LibLCDXC8.h: 251: for(int i = 0; i<16; i++){
  1977                           
  1978                           ;incstack = 0
  1979   001108  0E00               	movlw	0
  1980   00110A  6E10               	movwf	(MensajeLCD_Word@i+1)^0,c
  1981   00110C  0E00               	movlw	0
  1982   00110E  6E0F               	movwf	MensajeLCD_Word@i^0,c
  1983   001110                     l1894:
  1984                           
  1985                           ;LibLCDXC8.h: 252: if(a[i] == (0)){
  1986   001110  500D               	movf	MensajeLCD_Word@a^0,w,c
  1987   001112  240F               	addwf	MensajeLCD_Word@i^0,w,c
  1988   001114  6E0E               	movwf	??_MensajeLCD_Word^0,c
  1989   001116  C00E  FFF6         	movff	??_MensajeLCD_Word,tblptrl
  1990   00111A                     	if	1	;There is more than 1 active tblptr byte
  1991   00111A  0E08               	movlw	high __smallconst
  1992   00111C  6EF7               	movwf	tblptrh,c
  1993   00111E                     	endif
  1994   00111E                     	if	0	;tblptru may be non-zero
  1995   00111E                     	endif
  1996   00111E                     	if	0	;tblptru may be non-zero
  1997   00111E                     	endif
  1998   00111E  0008               	tblrd		*
  1999   001120  50F5               	movf	tablat,w,c
  2000   001122  0900               	iorlw	0
  2001   001124  B4D8               	btfsc	status,2,c
  2002   001126  0012               	return	
  2003                           
  2004                           ;LibLCDXC8.h: 254: };LibLCDXC8.h: 255: EscribeLCD_c(a[i]);
  2005   001128  500D               	movf	MensajeLCD_Word@a^0,w,c
  2006   00112A  240F               	addwf	MensajeLCD_Word@i^0,w,c
  2007   00112C  6E0E               	movwf	??_MensajeLCD_Word^0,c
  2008   00112E  C00E  FFF6         	movff	??_MensajeLCD_Word,tblptrl
  2009   001132                     	if	1	;There is more than 1 active tblptr byte
  2010   001132  0E08               	movlw	high __smallconst
  2011   001134  6EF7               	movwf	tblptrh,c
  2012   001136                     	endif
  2013   001136                     	if	0	;tblptru may be non-zero
  2014   001136                     	endif
  2015   001136                     	if	0	;tblptru may be non-zero
  2016   001136                     	endif
  2017   001136  0008               	tblrd		*
  2018   001138  50F5               	movf	tablat,w,c
  2019   00113A  ECFA  F009         	call	_EscribeLCD_c
  2020   00113E  4A0F               	infsnz	MensajeLCD_Word@i^0,f,c
  2021   001140  2A10               	incf	(MensajeLCD_Word@i+1)^0,f,c
  2022   001142  BE10               	btfsc	(MensajeLCD_Word@i+1)^0,7,c
  2023   001144  D7E5               	goto	l1894
  2024   001146  5010               	movf	(MensajeLCD_Word@i+1)^0,w,c
  2025   001148  E105               	bnz	u800
  2026   00114A  0E10               	movlw	16
  2027   00114C  5C0F               	subwf	MensajeLCD_Word@i^0,w,c
  2028   00114E  B0D8               	btfsc	status,0,c
  2029   001150  0012               	return	
  2030   001152  D7DE               	goto	l1894
  2031   001154                     u800:
  2032   001154  0012               	return		;funcret
  2033   001156                     __end_of_MensajeLCD_Word:
  2034                           	callstack 0
  2035                           
  2036 ;; *************** function _DireccionaLCD *****************
  2037 ;; Defined at:
  2038 ;;		line 259 in file "LibLCDXC8.h"
  2039 ;; Parameters:    Size  Location     Type
  2040 ;;  a               1    wreg     unsigned char 
  2041 ;; Auto vars:     Size  Location     Type
  2042 ;;  a               1   11[COMRAM] unsigned char 
  2043 ;; Return value:  Size  Location     Type
  2044 ;;                  1    wreg      void 
  2045 ;; Registers used:
  2046 ;;		wreg, status,2, status,0, cstack
  2047 ;; Tracked objects:
  2048 ;;		On entry : 0/0
  2049 ;;		On exit  : 0/0
  2050 ;;		Unchanged: 0/0
  2051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2052 ;;      Params:         0       0       0       0       0       0       0       0       0
  2053 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2054 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2055 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2056 ;;Total ram usage:        1 bytes
  2057 ;; Hardware stack levels used: 1
  2058 ;; Hardware stack levels required when called: 6
  2059 ;; This function calls:
  2060 ;;		_EnviaDato
  2061 ;;		_HabilitaLCD
  2062 ;;		_RetardoLCD
  2063 ;; This function is called by:
  2064 ;;		_main
  2065 ;;		_TransmitirDatos
  2066 ;; This function uses a non-reentrant model
  2067 ;;
  2068                           
  2069                           	psect	text11
  2070   0013DE                     __ptext11:
  2071                           	callstack 0
  2072   0013DE                     _DireccionaLCD:
  2073                           	callstack 23
  2074                           
  2075                           ;incstack = 0
  2076                           ;DireccionaLCD@a stored from wreg
  2077   0013DE  6E0C               	movwf	DireccionaLCD@a^0,c
  2078                           
  2079                           ;LibLCDXC8.h: 262: LATE1=0;
  2080   0013E0  928D               	bcf	3981,1,c	;volatile
  2081                           
  2082                           ;LibLCDXC8.h: 263: EnviaDato(a);
  2083   0013E2  500C               	movf	DireccionaLCD@a^0,w,c
  2084   0013E4  ECAB  F008         	call	_EnviaDato
  2085                           
  2086                           ;LibLCDXC8.h: 264: HabilitaLCD();
  2087   0013E8  EC1A  F00A         	call	_HabilitaLCD	;wreg free
  2088                           
  2089                           ;LibLCDXC8.h: 265: RetardoLCD(4);
  2090   0013EC  0E04               	movlw	4
  2091   0013EE  ECF5  F007         	call	_RetardoLCD
  2092   0013F2  0012               	return		;funcret
  2093   0013F4                     __end_of_DireccionaLCD:
  2094                           	callstack 0
  2095                           
  2096 ;; *************** function _NuevoCaracter *****************
  2097 ;; Defined at:
  2098 ;;		line 140 in file "LibLCDXC8.h"
  2099 ;; Parameters:    Size  Location     Type
  2100 ;;  addr            1    wreg     unsigned char 
  2101 ;;  c               1   12[COMRAM] PTR unsigned char 
  2102 ;;		 -> cara(8), 
  2103 ;; Auto vars:     Size  Location     Type
  2104 ;;  addr            1   13[COMRAM] unsigned char 
  2105 ;;  i               2   14[COMRAM] int 
  2106 ;; Return value:  Size  Location     Type
  2107 ;;                  1    wreg      void 
  2108 ;; Registers used:
  2109 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2110 ;; Tracked objects:
  2111 ;;		On entry : 0/0
  2112 ;;		On exit  : 0/0
  2113 ;;		Unchanged: 0/0
  2114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2115 ;;      Params:         1       0       0       0       0       0       0       0       0
  2116 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2117 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2118 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2119 ;;Total ram usage:        4 bytes
  2120 ;; Hardware stack levels used: 1
  2121 ;; Hardware stack levels required when called: 7
  2122 ;; This function calls:
  2123 ;;		_ComandoLCD
  2124 ;;		_EscribeLCD_c
  2125 ;; This function is called by:
  2126 ;;		_main
  2127 ;; This function uses a non-reentrant model
  2128 ;;
  2129                           
  2130                           	psect	text12
  2131   001224                     __ptext12:
  2132                           	callstack 0
  2133   001224                     _NuevoCaracter:
  2134                           	callstack 23
  2135                           
  2136                           ;incstack = 0
  2137                           ;NuevoCaracter@addr stored from wreg
  2138   001224  6E0E               	movwf	NuevoCaracter@addr^0,c
  2139                           
  2140                           ;LibLCDXC8.h: 141: int i;;LibLCDXC8.h: 142: ComandoLCD(0x40 + (addr * 8));
  2141   001226  500E               	movf	NuevoCaracter@addr^0,w,c
  2142   001228  0D08               	mullw	8
  2143   00122A  50F3               	movf	243,w,c
  2144   00122C  0F40               	addlw	64
  2145   00122E  EC9F  F009         	call	_ComandoLCD
  2146                           
  2147                           ;LibLCDXC8.h: 143: for (i = 0; i < 8; i++) {
  2148   001232  0E00               	movlw	0
  2149   001234  6E10               	movwf	(NuevoCaracter@i+1)^0,c
  2150   001236  0E00               	movlw	0
  2151   001238  6E0F               	movwf	NuevoCaracter@i^0,c
  2152   00123A                     l2458:
  2153                           
  2154                           ;LibLCDXC8.h: 144: EscribeLCD_c(c[i]);
  2155   00123A  500D               	movf	NuevoCaracter@c^0,w,c
  2156   00123C  240F               	addwf	NuevoCaracter@i^0,w,c
  2157   00123E  6ED9               	movwf	fsr2l,c
  2158   001240  6ADA               	clrf	fsr2h,c
  2159   001242  50DF               	movf	indf2,w,c
  2160   001244  ECFA  F009         	call	_EscribeLCD_c
  2161   001248  4A0F               	infsnz	NuevoCaracter@i^0,f,c
  2162   00124A  2A10               	incf	(NuevoCaracter@i+1)^0,f,c
  2163   00124C  BE10               	btfsc	(NuevoCaracter@i+1)^0,7,c
  2164   00124E  D7F5               	goto	l2458
  2165   001250  5010               	movf	(NuevoCaracter@i+1)^0,w,c
  2166   001252  E105               	bnz	u1450
  2167   001254  0E08               	movlw	8
  2168   001256  5C0F               	subwf	NuevoCaracter@i^0,w,c
  2169   001258  B0D8               	btfsc	status,0,c
  2170   00125A  0012               	return	
  2171   00125C  D7EE               	goto	l2458
  2172   00125E                     u1450:
  2173   00125E  0012               	return		;funcret
  2174   001260                     __end_of_NuevoCaracter:
  2175                           	callstack 0
  2176                           
  2177 ;; *************** function _EscribeLCD_c *****************
  2178 ;; Defined at:
  2179 ;;		line 148 in file "LibLCDXC8.h"
  2180 ;; Parameters:    Size  Location     Type
  2181 ;;  a               1    wreg     unsigned char 
  2182 ;; Auto vars:     Size  Location     Type
  2183 ;;  a               1   11[COMRAM] unsigned char 
  2184 ;; Return value:  Size  Location     Type
  2185 ;;                  1    wreg      void 
  2186 ;; Registers used:
  2187 ;;		wreg, status,2, status,0, cstack
  2188 ;; Tracked objects:
  2189 ;;		On entry : 0/0
  2190 ;;		On exit  : 0/0
  2191 ;;		Unchanged: 0/0
  2192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2193 ;;      Params:         0       0       0       0       0       0       0       0       0
  2194 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2195 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2196 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2197 ;;Total ram usage:        1 bytes
  2198 ;; Hardware stack levels used: 1
  2199 ;; Hardware stack levels required when called: 6
  2200 ;; This function calls:
  2201 ;;		_EnviaDato
  2202 ;;		_HabilitaLCD
  2203 ;;		_RetardoLCD
  2204 ;; This function is called by:
  2205 ;;		_NuevoCaracter
  2206 ;;		_MensajeLCD_Word
  2207 ;;		_main
  2208 ;;		_TransmitirDatos
  2209 ;; This function uses a non-reentrant model
  2210 ;;
  2211                           
  2212                           	psect	text13
  2213   0013F4                     __ptext13:
  2214                           	callstack 0
  2215   0013F4                     _EscribeLCD_c:
  2216                           	callstack 22
  2217                           
  2218                           ;incstack = 0
  2219                           ;EscribeLCD_c@a stored from wreg
  2220   0013F4  6E0C               	movwf	EscribeLCD_c@a^0,c
  2221                           
  2222                           ;LibLCDXC8.h: 152: LATE1=1;
  2223   0013F6  828D               	bsf	3981,1,c	;volatile
  2224                           
  2225                           ;LibLCDXC8.h: 153: EnviaDato(a);
  2226   0013F8  500C               	movf	EscribeLCD_c@a^0,w,c
  2227   0013FA  ECAB  F008         	call	_EnviaDato
  2228                           
  2229                           ;LibLCDXC8.h: 154: HabilitaLCD();
  2230   0013FE  EC1A  F00A         	call	_HabilitaLCD	;wreg free
  2231                           
  2232                           ;LibLCDXC8.h: 155: RetardoLCD(4);
  2233   001402  0E04               	movlw	4
  2234   001404  ECF5  F007         	call	_RetardoLCD
  2235   001408  0012               	return		;funcret
  2236   00140A                     __end_of_EscribeLCD_c:
  2237                           	callstack 0
  2238                           
  2239 ;; *************** function _ComandoLCD *****************
  2240 ;; Defined at:
  2241 ;;		line 129 in file "LibLCDXC8.h"
  2242 ;; Parameters:    Size  Location     Type
  2243 ;;  data            1    wreg     unsigned char 
  2244 ;; Auto vars:     Size  Location     Type
  2245 ;;  data            1    8[COMRAM] unsigned char 
  2246 ;; Return value:  Size  Location     Type
  2247 ;;                  1    wreg      void 
  2248 ;; Registers used:
  2249 ;;		wreg, status,2, cstack
  2250 ;; Tracked objects:
  2251 ;;		On entry : 0/0
  2252 ;;		On exit  : 0/0
  2253 ;;		Unchanged: 0/0
  2254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2255 ;;      Params:         0       0       0       0       0       0       0       0       0
  2256 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2257 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2258 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2259 ;;Total ram usage:        2 bytes
  2260 ;; Hardware stack levels used: 1
  2261 ;; Hardware stack levels required when called: 4
  2262 ;; This function calls:
  2263 ;;		Nothing
  2264 ;; This function is called by:
  2265 ;;		_NuevoCaracter
  2266 ;; This function uses a non-reentrant model
  2267 ;;
  2268                           
  2269                           	psect	text14
  2270   00133E                     __ptext14:
  2271                           	callstack 0
  2272   00133E                     _ComandoLCD:
  2273                           	callstack 25
  2274                           
  2275                           ;incstack = 0
  2276                           ;ComandoLCD@data stored from wreg
  2277   00133E  6E09               	movwf	ComandoLCD@data^0,c
  2278                           
  2279                           ;LibLCDXC8.h: 131: LATE1 = 0;
  2280   001340  928D               	bcf	3981,1,c	;volatile
  2281                           
  2282                           ;LibLCDXC8.h: 132: LATD = data;
  2283   001342  C009  FF8C         	movff	ComandoLCD@data,3980	;volatile
  2284                           
  2285                           ;LibLCDXC8.h: 133: LATE2 = 1;
  2286   001346  848D               	bsf	3981,2,c	;volatile
  2287                           
  2288                           ;LibLCDXC8.h: 134: _delay((unsigned long)((5)*(8000000/4000000.0)));
  2289   001348  0E03               	movlw	3
  2290   00134A                     u1507:
  2291   00134A  2EE8               	decfsz	wreg,f,c
  2292   00134C  D7FE               	bra	u1507
  2293   00134E  F000               	nop	
  2294                           
  2295                           ;LibLCDXC8.h: 135: LATE2 = 0;
  2296   001350  948D               	bcf	3981,2,c	;volatile
  2297                           
  2298                           ;LibLCDXC8.h: 136: _delay((unsigned long)((5)*(8000000/4000000.0)));
  2299   001352  0E03               	movlw	3
  2300   001354                     u1517:
  2301   001354  2EE8               	decfsz	wreg,f,c
  2302   001356  D7FE               	bra	u1517
  2303   001358  F000               	nop	
  2304                           
  2305                           ;LibLCDXC8.h: 137: _delay((unsigned long)((2)*(8000000/4000.0)));
  2306   00135A  0E06               	movlw	6
  2307   00135C  6E08               	movwf	??_ComandoLCD^0,c
  2308   00135E  0E30               	movlw	48
  2309   001360                     u1527:
  2310   001360  2EE8               	decfsz	wreg,f,c
  2311   001362  D7FE               	bra	u1527
  2312   001364  2E08               	decfsz	??_ComandoLCD^0,f,c
  2313   001366  D7FC               	bra	u1527
  2314   001368  D000               	nop2	
  2315   00136A  0012               	return		;funcret
  2316   00136C                     __end_of_ComandoLCD:
  2317                           	callstack 0
  2318                           
  2319 ;; *************** function _LeerHT11 *****************
  2320 ;; Defined at:
  2321 ;;		line 153 in file "Proyecto.c"
  2322 ;; Parameters:    Size  Location     Type
  2323 ;;		None
  2324 ;; Auto vars:     Size  Location     Type
  2325 ;;		None
  2326 ;; Return value:  Size  Location     Type
  2327 ;;                  1    wreg      void 
  2328 ;; Registers used:
  2329 ;;		wreg, status,2, status,0, cstack
  2330 ;; Tracked objects:
  2331 ;;		On entry : 0/0
  2332 ;;		On exit  : 0/0
  2333 ;;		Unchanged: 0/0
  2334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2335 ;;      Params:         0       0       0       0       0       0       0       0       0
  2336 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2337 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2338 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2339 ;;Total ram usage:        1 bytes
  2340 ;; Hardware stack levels used: 1
  2341 ;; Hardware stack levels required when called: 6
  2342 ;; This function calls:
  2343 ;;		_LeerByte
  2344 ;; This function is called by:
  2345 ;;		_main
  2346 ;; This function uses a non-reentrant model
  2347 ;;
  2348                           
  2349                           	psect	text15
  2350   0012D4                     __ptext15:
  2351                           	callstack 0
  2352   0012D4                     _LeerHT11:
  2353                           	callstack 24
  2354                           
  2355                           ;Proyecto.c: 155: TRISC0 = 0;
  2356                           
  2357                           ;incstack = 0
  2358   0012D4  9094               	bcf	3988,0,c	;volatile
  2359                           
  2360                           ;Proyecto.c: 156: _delay((unsigned long)((18)*(8000000/4000.0)));
  2361   0012D6  0E2F               	movlw	47
  2362   0012D8  6E0C               	movwf	??_LeerHT11^0,c
  2363   0012DA  0EC0               	movlw	192
  2364   0012DC                     u1537:
  2365   0012DC  2EE8               	decfsz	wreg,f,c
  2366   0012DE  D7FE               	bra	u1537
  2367   0012E0  2E0C               	decfsz	??_LeerHT11^0,f,c
  2368   0012E2  D7FC               	bra	u1537
  2369                           
  2370                           ;Proyecto.c: 157: TRISC0 = 1;
  2371   0012E4  8094               	bsf	3988,0,c	;volatile
  2372   0012E6                     l224:
  2373   0012E6  B082               	btfsc	3970,0,c	;volatile
  2374   0012E8  D7FE               	goto	l224
  2375                           
  2376                           ;Proyecto.c: 160: _delay((unsigned long)((120)*(8000000/4000000.0)));
  2377   0012EA  0E50               	movlw	80
  2378   0012EC                     u1547:
  2379   0012EC  2EE8               	decfsz	wreg,f,c
  2380   0012EE  D7FE               	bra	u1547
  2381   0012F0                     l227:
  2382   0012F0  B082               	btfsc	3970,0,c	;volatile
  2383   0012F2  D7FE               	goto	l227
  2384                           
  2385                           ;Proyecto.c: 163: Humedad = LeerByte();
  2386   0012F4  ECDE  F009         	call	_LeerByte	;wreg free
  2387   0012F8  6E31               	movwf	_Humedad^0,c
  2388                           
  2389                           ;Proyecto.c: 164: LeerByte();
  2390   0012FA  ECDE  F009         	call	_LeerByte	;wreg free
  2391                           
  2392                           ;Proyecto.c: 165: Temp = LeerByte();
  2393   0012FE  ECDE  F009         	call	_LeerByte	;wreg free
  2394   001302  6E32               	movwf	_Temp^0,c
  2395                           
  2396                           ;Proyecto.c: 166: LeerByte();
  2397   001304  ECDE  F009         	call	_LeerByte	;wreg free
  2398                           
  2399                           ;Proyecto.c: 167: LeerByte();
  2400   001308  ECDE  F009         	call	_LeerByte	;wreg free
  2401   00130C  0012               	return		;funcret
  2402   00130E                     __end_of_LeerHT11:
  2403                           	callstack 0
  2404                           
  2405 ;; *************** function _LeerByte *****************
  2406 ;; Defined at:
  2407 ;;		line 170 in file "Proyecto.c"
  2408 ;; Parameters:    Size  Location     Type
  2409 ;;		None
  2410 ;; Auto vars:     Size  Location     Type
  2411 ;;  i               1   10[COMRAM] unsigned char 
  2412 ;;  res             1    9[COMRAM] unsigned char 
  2413 ;; Return value:  Size  Location     Type
  2414 ;;                  1    wreg      unsigned char 
  2415 ;; Registers used:
  2416 ;;		wreg, status,2, status,0, cstack
  2417 ;; Tracked objects:
  2418 ;;		On entry : 0/0
  2419 ;;		On exit  : 0/0
  2420 ;;		Unchanged: 0/0
  2421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2422 ;;      Params:         0       0       0       0       0       0       0       0       0
  2423 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2424 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2425 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2426 ;;Total ram usage:        3 bytes
  2427 ;; Hardware stack levels used: 1
  2428 ;; Hardware stack levels required when called: 5
  2429 ;; This function calls:
  2430 ;;		_LeerBit
  2431 ;; This function is called by:
  2432 ;;		_LeerHT11
  2433 ;; This function uses a non-reentrant model
  2434 ;;
  2435                           
  2436                           	psect	text16
  2437   0013BC                     __ptext16:
  2438                           	callstack 0
  2439   0013BC                     _LeerByte:
  2440                           	callstack 24
  2441                           
  2442                           ;Proyecto.c: 171: unsigned char res = 0, i;
  2443                           
  2444                           ;incstack = 0
  2445   0013BC  0E00               	movlw	0
  2446   0013BE  6E0A               	movwf	LeerByte@res^0,c
  2447                           
  2448                           ;Proyecto.c: 172: for (i = 8; i > 0; i--) {
  2449   0013C0  0E08               	movlw	8
  2450   0013C2  6E0B               	movwf	LeerByte@i^0,c
  2451   0013C4                     l1916:
  2452                           
  2453                           ;Proyecto.c: 173: res = (res << 1) | LeerBit();
  2454   0013C4  EC87  F009         	call	_LeerBit	;wreg free
  2455   0013C8  6E09               	movwf	??_LeerByte^0,c
  2456   0013CA  500A               	movf	LeerByte@res^0,w,c
  2457   0013CC  240A               	addwf	LeerByte@res^0,w,c
  2458   0013CE  1009               	iorwf	??_LeerByte^0,w,c
  2459   0013D0  6E0A               	movwf	LeerByte@res^0,c
  2460   0013D2  060B               	decf	LeerByte@i^0,f,c
  2461   0013D4  500B               	movf	LeerByte@i^0,w,c
  2462   0013D6  A4D8               	btfss	status,2,c
  2463   0013D8  D7F5               	goto	l1916
  2464                           
  2465                           ;Proyecto.c: 174: };Proyecto.c: 175: return res;
  2466   0013DA  500A               	movf	LeerByte@res^0,w,c
  2467   0013DC  0012               	return		;funcret
  2468   0013DE                     __end_of_LeerByte:
  2469                           	callstack 0
  2470                           
  2471 ;; *************** function _LeerBit *****************
  2472 ;; Defined at:
  2473 ;;		line 178 in file "Proyecto.c"
  2474 ;; Parameters:    Size  Location     Type
  2475 ;;		None
  2476 ;; Auto vars:     Size  Location     Type
  2477 ;;  res             1    7[COMRAM] unsigned char 
  2478 ;; Return value:  Size  Location     Type
  2479 ;;                  1    wreg      unsigned char 
  2480 ;; Registers used:
  2481 ;;		wreg, status,2
  2482 ;; Tracked objects:
  2483 ;;		On entry : 0/0
  2484 ;;		On exit  : 0/0
  2485 ;;		Unchanged: 0/0
  2486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2487 ;;      Params:         0       0       0       0       0       0       0       0       0
  2488 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2489 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2490 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2491 ;;Total ram usage:        1 bytes
  2492 ;; Hardware stack levels used: 1
  2493 ;; Hardware stack levels required when called: 4
  2494 ;; This function calls:
  2495 ;;		Nothing
  2496 ;; This function is called by:
  2497 ;;		_LeerByte
  2498 ;; This function uses a non-reentrant model
  2499 ;;
  2500                           
  2501                           	psect	text17
  2502   00130E                     __ptext17:
  2503                           	callstack 0
  2504   00130E                     _LeerBit:
  2505                           	callstack 24
  2506                           
  2507                           ;Proyecto.c: 179: unsigned char res = 0;
  2508                           
  2509                           ;incstack = 0
  2510   00130E  0E00               	movlw	0
  2511   001310  6E08               	movwf	LeerBit@res^0,c
  2512   001312                     l238:
  2513   001312  A082               	btfss	3970,0,c	;volatile
  2514   001314  D7FE               	goto	l238
  2515                           
  2516                           ;Proyecto.c: 181: _delay((unsigned long)((13)*(8000000/4000000.0)));
  2517   001316  0E08               	movlw	8
  2518   001318                     u1557:
  2519   001318  2EE8               	decfsz	wreg,f,c
  2520   00131A  D7FE               	bra	u1557
  2521   00131C  D000               	nop2	
  2522                           
  2523                           ;Proyecto.c: 182: if (RC0 == 1) res = 0;
  2524   00131E  A082               	btfss	3970,0,c	;volatile
  2525   001320  D002               	goto	l1836
  2526   001322  0E00               	movlw	0
  2527   001324  6E08               	movwf	LeerBit@res^0,c
  2528   001326                     l1836:
  2529                           
  2530                           ;Proyecto.c: 183: _delay((unsigned long)((22)*(8000000/4000000.0)));
  2531   001326  0E0E               	movlw	14
  2532   001328                     u1567:
  2533   001328  2EE8               	decfsz	wreg,f,c
  2534   00132A  D7FE               	bra	u1567
  2535   00132C  D000               	nop2	
  2536                           
  2537                           ;Proyecto.c: 184: if (RC0 == 1) {
  2538   00132E  A082               	btfss	3970,0,c	;volatile
  2539   001330  D004               	goto	u780
  2540                           
  2541                           ;Proyecto.c: 185: res = 1;
  2542   001332  0E01               	movlw	1
  2543   001334  6E08               	movwf	LeerBit@res^0,c
  2544   001336                     l243:
  2545   001336  B082               	btfsc	3970,0,c	;volatile
  2546   001338  D7FE               	goto	l243
  2547   00133A                     u780:
  2548                           
  2549                           ;Proyecto.c: 187: };Proyecto.c: 188: return res;
  2550   00133A  5008               	movf	LeerBit@res^0,w,c
  2551   00133C  0012               	return		;funcret
  2552   00133E                     __end_of_LeerBit:
  2553                           	callstack 0
  2554                           
  2555 ;; *************** function _InicializaLCD *****************
  2556 ;; Defined at:
  2557 ;;		line 74 in file "LibLCDXC8.h"
  2558 ;; Parameters:    Size  Location     Type
  2559 ;;		None
  2560 ;; Auto vars:     Size  Location     Type
  2561 ;;		None
  2562 ;; Return value:  Size  Location     Type
  2563 ;;                  1    wreg      void 
  2564 ;; Registers used:
  2565 ;;		wreg, status,2, status,0, cstack
  2566 ;; Tracked objects:
  2567 ;;		On entry : 0/0
  2568 ;;		On exit  : 0/0
  2569 ;;		Unchanged: 0/0
  2570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2571 ;;      Params:         0       0       0       0       0       0       0       0       0
  2572 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2573 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2574 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2575 ;;Total ram usage:        0 bytes
  2576 ;; Hardware stack levels used: 1
  2577 ;; Hardware stack levels required when called: 7
  2578 ;; This function calls:
  2579 ;;		_BorraLCD
  2580 ;;		_EnviaDato
  2581 ;;		_HabilitaLCD
  2582 ;;		_RetardoLCD
  2583 ;; This function is called by:
  2584 ;;		_main
  2585 ;; This function uses a non-reentrant model
  2586 ;;
  2587                           
  2588                           	psect	text18
  2589   000ECA                     __ptext18:
  2590                           	callstack 0
  2591   000ECA                     _InicializaLCD:
  2592                           	callstack 23
  2593                           
  2594                           ;LibLCDXC8.h: 76: LATE1=0;
  2595                           
  2596                           ;incstack = 0
  2597   000ECA  928D               	bcf	3981,1,c	;volatile
  2598                           
  2599                           ;LibLCDXC8.h: 77: if(interfaz==4)
  2600   000ECC  0E04               	movlw	4
  2601   000ECE  1822               	xorwf	_interfaz^0,w,c
  2602   000ED0  A4D8               	btfss	status,2,c
  2603   000ED2  D004               	goto	l2080
  2604                           
  2605                           ;LibLCDXC8.h: 78: LATD=(LATD & 0b00001111) | 0x30;
  2606   000ED4  508C               	movf	140,w,c	;volatile
  2607   000ED6  0B0F               	andlw	15
  2608   000ED8  0930               	iorlw	48
  2609   000EDA  D001               	goto	L4
  2610   000EDC                     l2080:
  2611                           
  2612                           ;LibLCDXC8.h: 79: else;LibLCDXC8.h: 80: LATD=0x3F;
  2613   000EDC  0E3F               	movlw	63
  2614   000EDE                     L4:
  2615   000EDE  6E8C               	movwf	140,c	;volatile
  2616                           
  2617                           ;LibLCDXC8.h: 81: HabilitaLCD();
  2618   000EE0  EC1A  F00A         	call	_HabilitaLCD	;wreg free
  2619                           
  2620                           ;LibLCDXC8.h: 82: RetardoLCD(1);
  2621   000EE4  0E01               	movlw	1
  2622   000EE6  ECF5  F007         	call	_RetardoLCD
  2623                           
  2624                           ;LibLCDXC8.h: 83: if(interfaz==4)
  2625   000EEA  0E04               	movlw	4
  2626   000EEC  1822               	xorwf	_interfaz^0,w,c
  2627   000EEE  A4D8               	btfss	status,2,c
  2628   000EF0  D004               	goto	l2090
  2629                           
  2630                           ;LibLCDXC8.h: 84: LATD=(LATD & 0b00001111) | 0x30;
  2631   000EF2  508C               	movf	140,w,c	;volatile
  2632   000EF4  0B0F               	andlw	15
  2633   000EF6  0930               	iorlw	48
  2634   000EF8  D001               	goto	L5
  2635   000EFA                     l2090:
  2636                           
  2637                           ;LibLCDXC8.h: 85: else;LibLCDXC8.h: 86: LATD=0x3F;
  2638   000EFA  0E3F               	movlw	63
  2639   000EFC                     L5:
  2640   000EFC  6E8C               	movwf	140,c	;volatile
  2641                           
  2642                           ;LibLCDXC8.h: 87: HabilitaLCD();
  2643   000EFE  EC1A  F00A         	call	_HabilitaLCD	;wreg free
  2644                           
  2645                           ;LibLCDXC8.h: 88: RetardoLCD(3);
  2646   000F02  0E03               	movlw	3
  2647   000F04  ECF5  F007         	call	_RetardoLCD
  2648                           
  2649                           ;LibLCDXC8.h: 89: if(interfaz==4)
  2650   000F08  0E04               	movlw	4
  2651   000F0A  1822               	xorwf	_interfaz^0,w,c
  2652   000F0C  A4D8               	btfss	status,2,c
  2653   000F0E  D004               	goto	l2100
  2654                           
  2655                           ;LibLCDXC8.h: 90: LATD=(LATD & 0b00001111) | 0x30;
  2656   000F10  508C               	movf	140,w,c	;volatile
  2657   000F12  0B0F               	andlw	15
  2658   000F14  0930               	iorlw	48
  2659   000F16  D001               	goto	L6
  2660   000F18                     l2100:
  2661                           
  2662                           ;LibLCDXC8.h: 91: else;LibLCDXC8.h: 92: LATD=0x3F;
  2663   000F18  0E3F               	movlw	63
  2664   000F1A                     L6:
  2665   000F1A  6E8C               	movwf	140,c	;volatile
  2666                           
  2667                           ;LibLCDXC8.h: 93: HabilitaLCD();
  2668   000F1C  EC1A  F00A         	call	_HabilitaLCD	;wreg free
  2669                           
  2670                           ;LibLCDXC8.h: 94: RetardoLCD(4);
  2671   000F20  0E04               	movlw	4
  2672   000F22  ECF5  F007         	call	_RetardoLCD
  2673                           
  2674                           ;LibLCDXC8.h: 95: if(interfaz==4){
  2675   000F26  0E04               	movlw	4
  2676   000F28  1822               	xorwf	_interfaz^0,w,c
  2677   000F2A  A4D8               	btfss	status,2,c
  2678   000F2C  D011               	goto	l2120
  2679                           
  2680                           ;LibLCDXC8.h: 96: LATD=(LATD & 0b00001111) | 0x20;
  2681   000F2E  508C               	movf	140,w,c	;volatile
  2682   000F30  0B0F               	andlw	15
  2683   000F32  0920               	iorlw	32
  2684   000F34  6E8C               	movwf	140,c	;volatile
  2685                           
  2686                           ;LibLCDXC8.h: 97: HabilitaLCD();
  2687   000F36  EC1A  F00A         	call	_HabilitaLCD	;wreg free
  2688                           
  2689                           ;LibLCDXC8.h: 98: RetardoLCD(4);
  2690   000F3A  0E04               	movlw	4
  2691   000F3C  ECF5  F007         	call	_RetardoLCD
  2692                           
  2693                           ;LibLCDXC8.h: 99: EnviaDato(0x2F);
  2694   000F40  0E2F               	movlw	47
  2695   000F42  ECAB  F008         	call	_EnviaDato
  2696                           
  2697                           ;LibLCDXC8.h: 100: HabilitaLCD();
  2698   000F46  EC1A  F00A         	call	_HabilitaLCD	;wreg free
  2699                           
  2700                           ;LibLCDXC8.h: 101: RetardoLCD(4);
  2701   000F4A  0E04               	movlw	4
  2702   000F4C  ECF5  F007         	call	_RetardoLCD
  2703   000F50                     l2120:
  2704                           
  2705                           ;LibLCDXC8.h: 102: };LibLCDXC8.h: 103: BorraLCD();
  2706   000F50  EC10  F00A         	call	_BorraLCD	;wreg free
  2707                           
  2708                           ;LibLCDXC8.h: 104: EnviaDato(0xF);
  2709   000F54  0E0F               	movlw	15
  2710   000F56  ECAB  F008         	call	_EnviaDato
  2711                           
  2712                           ;LibLCDXC8.h: 105: HabilitaLCD();
  2713   000F5A  EC1A  F00A         	call	_HabilitaLCD	;wreg free
  2714                           
  2715                           ;LibLCDXC8.h: 106: RetardoLCD(4);
  2716   000F5E  0E04               	movlw	4
  2717   000F60  ECF5  F007         	call	_RetardoLCD
  2718   000F64  0012               	return		;funcret
  2719   000F66                     __end_of_InicializaLCD:
  2720                           	callstack 0
  2721                           
  2722 ;; *************** function _BorraLCD *****************
  2723 ;; Defined at:
  2724 ;;		line 115 in file "LibLCDXC8.h"
  2725 ;; Parameters:    Size  Location     Type
  2726 ;;		None
  2727 ;; Auto vars:     Size  Location     Type
  2728 ;;		None
  2729 ;; Return value:  Size  Location     Type
  2730 ;;                  1    wreg      void 
  2731 ;; Registers used:
  2732 ;;		wreg, status,2, status,0, cstack
  2733 ;; Tracked objects:
  2734 ;;		On entry : 0/0
  2735 ;;		On exit  : 0/0
  2736 ;;		Unchanged: 0/0
  2737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2738 ;;      Params:         0       0       0       0       0       0       0       0       0
  2739 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2740 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2741 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2742 ;;Total ram usage:        0 bytes
  2743 ;; Hardware stack levels used: 1
  2744 ;; Hardware stack levels required when called: 6
  2745 ;; This function calls:
  2746 ;;		_EnviaDato
  2747 ;;		_HabilitaLCD
  2748 ;;		_RetardoLCD
  2749 ;; This function is called by:
  2750 ;;		_InicializaLCD
  2751 ;;		_main
  2752 ;;		_TransmitirDatos
  2753 ;; This function uses a non-reentrant model
  2754 ;;
  2755                           
  2756                           	psect	text19
  2757   001420                     __ptext19:
  2758                           	callstack 0
  2759   001420                     _BorraLCD:
  2760                           	callstack 23
  2761                           
  2762                           ;LibLCDXC8.h: 117: LATE1=0;
  2763                           
  2764                           ;incstack = 0
  2765   001420  928D               	bcf	3981,1,c	;volatile
  2766                           
  2767                           ;LibLCDXC8.h: 118: EnviaDato(0x01);
  2768   001422  0E01               	movlw	1
  2769   001424  ECAB  F008         	call	_EnviaDato
  2770                           
  2771                           ;LibLCDXC8.h: 119: HabilitaLCD();
  2772   001428  EC1A  F00A         	call	_HabilitaLCD	;wreg free
  2773                           
  2774                           ;LibLCDXC8.h: 120: RetardoLCD(2);
  2775   00142C  0E02               	movlw	2
  2776   00142E  ECF5  F007         	call	_RetardoLCD
  2777   001432  0012               	return		;funcret
  2778   001434                     __end_of_BorraLCD:
  2779                           	callstack 0
  2780                           
  2781 ;; *************** function _EnviaDato *****************
  2782 ;; Defined at:
  2783 ;;		line 62 in file "LibLCDXC8.h"
  2784 ;; Parameters:    Size  Location     Type
  2785 ;;  a               1    wreg     unsigned char 
  2786 ;; Auto vars:     Size  Location     Type
  2787 ;;  a               1   10[COMRAM] unsigned char 
  2788 ;; Return value:  Size  Location     Type
  2789 ;;                  1    wreg      void 
  2790 ;; Registers used:
  2791 ;;		wreg, status,2, status,0, cstack
  2792 ;; Tracked objects:
  2793 ;;		On entry : 0/0
  2794 ;;		On exit  : 0/0
  2795 ;;		Unchanged: 0/0
  2796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2797 ;;      Params:         0       0       0       0       0       0       0       0       0
  2798 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2799 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2800 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2801 ;;Total ram usage:        2 bytes
  2802 ;; Hardware stack levels used: 1
  2803 ;; Hardware stack levels required when called: 5
  2804 ;; This function calls:
  2805 ;;		_HabilitaLCD
  2806 ;;		_RetardoLCD
  2807 ;; This function is called by:
  2808 ;;		_InicializaLCD
  2809 ;;		_BorraLCD
  2810 ;;		_EscribeLCD_c
  2811 ;;		_DireccionaLCD
  2812 ;; This function uses a non-reentrant model
  2813 ;;
  2814                           
  2815                           	psect	text20
  2816   001156                     __ptext20:
  2817                           	callstack 0
  2818   001156                     _EnviaDato:
  2819                           	callstack 22
  2820                           
  2821                           ;incstack = 0
  2822                           ;EnviaDato@a stored from wreg
  2823   001156  6E0B               	movwf	EnviaDato@a^0,c
  2824                           
  2825                           ;LibLCDXC8.h: 63: if(interfaz==4){
  2826   001158  0E04               	movlw	4
  2827   00115A  1822               	xorwf	_interfaz^0,w,c
  2828   00115C  A4D8               	btfss	status,2,c
  2829   00115E  D017               	goto	l1816
  2830                           
  2831                           ;LibLCDXC8.h: 64: LATD=(LATD & 0b00001111) | (a & 0b11110000);
  2832   001160  C00B  F00A         	movff	EnviaDato@a,??_EnviaDato
  2833   001164  0EF0               	movlw	240
  2834   001166  160A               	andwf	??_EnviaDato^0,f,c
  2835   001168  508C               	movf	140,w,c	;volatile
  2836   00116A  0B0F               	andlw	15
  2837   00116C  100A               	iorwf	??_EnviaDato^0,w,c
  2838   00116E  6E8C               	movwf	140,c	;volatile
  2839                           
  2840                           ;LibLCDXC8.h: 65: HabilitaLCD();
  2841   001170  EC1A  F00A         	call	_HabilitaLCD	;wreg free
  2842                           
  2843                           ;LibLCDXC8.h: 66: RetardoLCD(1);
  2844   001174  0E01               	movlw	1
  2845   001176  ECF5  F007         	call	_RetardoLCD
  2846                           
  2847                           ;LibLCDXC8.h: 67: LATD=(LATD & 0b00001111) | (a<<4);
  2848   00117A  C00B  F00A         	movff	EnviaDato@a,??_EnviaDato
  2849   00117E  3A0A               	swapf	??_EnviaDato^0,f,c
  2850   001180  0EF0               	movlw	240
  2851   001182  160A               	andwf	??_EnviaDato^0,f,c
  2852   001184  508C               	movf	140,w,c	;volatile
  2853   001186  0B0F               	andlw	15
  2854   001188  100A               	iorwf	??_EnviaDato^0,w,c
  2855   00118A  6E8C               	movwf	140,c	;volatile
  2856                           
  2857                           ;LibLCDXC8.h: 70: }else if(interfaz==8){
  2858   00118C  0012               	return	
  2859   00118E                     l1816:
  2860   00118E  0E08               	movlw	8
  2861   001190  1822               	xorwf	_interfaz^0,w,c
  2862   001192  A4D8               	btfss	status,2,c
  2863   001194  0012               	return	
  2864                           
  2865                           ;LibLCDXC8.h: 71: LATD=a;
  2866   001196  C00B  FF8C         	movff	EnviaDato@a,3980	;volatile
  2867   00119A  0012               	return		;funcret
  2868   00119C                     __end_of_EnviaDato:
  2869                           	callstack 0
  2870                           
  2871 ;; *************** function _RetardoLCD *****************
  2872 ;; Defined at:
  2873 ;;		line 295 in file "LibLCDXC8.h"
  2874 ;; Parameters:    Size  Location     Type
  2875 ;;  a               1    wreg     unsigned char 
  2876 ;; Auto vars:     Size  Location     Type
  2877 ;;  a               1    8[COMRAM] unsigned char 
  2878 ;; Return value:  Size  Location     Type
  2879 ;;                  1    wreg      void 
  2880 ;; Registers used:
  2881 ;;		wreg, status,2, status,0
  2882 ;; Tracked objects:
  2883 ;;		On entry : 0/0
  2884 ;;		On exit  : 0/0
  2885 ;;		Unchanged: 0/0
  2886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2887 ;;      Params:         0       0       0       0       0       0       0       0       0
  2888 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2889 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2890 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2891 ;;Total ram usage:        2 bytes
  2892 ;; Hardware stack levels used: 1
  2893 ;; Hardware stack levels required when called: 4
  2894 ;; This function calls:
  2895 ;;		Nothing
  2896 ;; This function is called by:
  2897 ;;		_EnviaDato
  2898 ;;		_InicializaLCD
  2899 ;;		_BorraLCD
  2900 ;;		_EscribeLCD_c
  2901 ;;		_DireccionaLCD
  2902 ;; This function uses a non-reentrant model
  2903 ;;
  2904                           
  2905                           	psect	text21
  2906   000FEA                     __ptext21:
  2907                           	callstack 0
  2908   000FEA                     _RetardoLCD:
  2909                           	callstack 23
  2910                           
  2911                           ;incstack = 0
  2912                           ;RetardoLCD@a stored from wreg
  2913   000FEA  6E09               	movwf	RetardoLCD@a^0,c
  2914                           
  2915                           ;LibLCDXC8.h: 296: switch(a){
  2916   000FEC  D023               	goto	l1804
  2917   000FEE                     l1794:
  2918   000FEE  0E27               	movlw	39
  2919   000FF0  6E08               	movwf	??_RetardoLCD^0,c
  2920   000FF2  0EF5               	movlw	245
  2921   000FF4                     u1577:
  2922   000FF4  2EE8               	decfsz	wreg,f,c
  2923   000FF6  D7FE               	bra	u1577
  2924   000FF8  2E08               	decfsz	??_RetardoLCD^0,f,c
  2925   000FFA  D7FC               	bra	u1577
  2926   000FFC  F000               	nop	
  2927                           
  2928                           ;LibLCDXC8.h: 299: break;
  2929   000FFE  0012               	return	
  2930   001000                     l1796:
  2931   001000  0E03               	movlw	3
  2932   001002  6E08               	movwf	??_RetardoLCD^0,c
  2933   001004  0E98               	movlw	152
  2934   001006                     u1587:
  2935   001006  2EE8               	decfsz	wreg,f,c
  2936   001008  D7FE               	bra	u1587
  2937   00100A  2E08               	decfsz	??_RetardoLCD^0,f,c
  2938   00100C  D7FC               	bra	u1587
  2939                           
  2940                           ;LibLCDXC8.h: 301: _delay((unsigned long)((640)*(8000000/4000000.0)));
  2941   00100E  0EB6               	movlw	182
  2942   001010                     u1597:
  2943   001010  D000               	nop2	
  2944   001012  D000               	nop2	
  2945   001014  2EE8               	decfsz	wreg,f,c
  2946   001016  D7FC               	bra	u1597
  2947   001018  D000               	nop2	
  2948   00101A  D000               	nop2	
  2949   00101C  D000               	nop2	
  2950                           
  2951                           ;LibLCDXC8.h: 303: break;
  2952   00101E  0012               	return	
  2953   001020                     l1798:
  2954   001020  0E42               	movlw	66
  2955   001022                     u1607:
  2956   001022  2EE8               	decfsz	wreg,f,c
  2957   001024  D7FE               	bra	u1607
  2958   001026  D000               	nop2	
  2959                           
  2960                           ;LibLCDXC8.h: 306: break;
  2961   001028  0012               	return	
  2962   00102A                     l1800:
  2963   00102A  0E1A               	movlw	26
  2964   00102C                     u1617:
  2965   00102C  2EE8               	decfsz	wreg,f,c
  2966   00102E  D7FE               	bra	u1617
  2967   001030  D000               	nop2	
  2968                           
  2969                           ;LibLCDXC8.h: 309: break;
  2970   001032  0012               	return	
  2971   001034                     l1804:
  2972   001034  5009               	movf	RetardoLCD@a^0,w,c
  2973                           
  2974                           ; Switch size 1, requested type "simple"
  2975                           ; Number of cases is 4, Range of values is 1 to 4
  2976                           ; switch strategies available:
  2977                           ; Name         Instructions Cycles
  2978                           ; simple_byte           13     7 (average)
  2979                           ;	Chosen strategy is simple_byte
  2980   001036  0A01               	xorlw	1	; case 1
  2981   001038  B4D8               	btfsc	status,2,c
  2982   00103A  D7D9               	goto	l1794
  2983   00103C  0A03               	xorlw	3	; case 2
  2984   00103E  B4D8               	btfsc	status,2,c
  2985   001040  D7DF               	goto	l1796
  2986   001042  0A01               	xorlw	1	; case 3
  2987   001044  B4D8               	btfsc	status,2,c
  2988   001046  D7EC               	goto	l1798
  2989   001048  0A07               	xorlw	7	; case 4
  2990   00104A  A4D8               	btfss	status,2,c
  2991   00104C  0012               	return	
  2992   00104E  D7ED               	goto	l1800
  2993   001050                     __end_of_RetardoLCD:
  2994                           	callstack 0
  2995                           
  2996 ;; *************** function _HabilitaLCD *****************
  2997 ;; Defined at:
  2998 ;;		line 108 in file "LibLCDXC8.h"
  2999 ;; Parameters:    Size  Location     Type
  3000 ;;		None
  3001 ;; Auto vars:     Size  Location     Type
  3002 ;;		None
  3003 ;; Return value:  Size  Location     Type
  3004 ;;                  1    wreg      void 
  3005 ;; Registers used:
  3006 ;;		wreg
  3007 ;; Tracked objects:
  3008 ;;		On entry : 0/0
  3009 ;;		On exit  : 0/0
  3010 ;;		Unchanged: 0/0
  3011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3012 ;;      Params:         0       0       0       0       0       0       0       0       0
  3013 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3014 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3015 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3016 ;;Total ram usage:        0 bytes
  3017 ;; Hardware stack levels used: 1
  3018 ;; Hardware stack levels required when called: 4
  3019 ;; This function calls:
  3020 ;;		Nothing
  3021 ;; This function is called by:
  3022 ;;		_EnviaDato
  3023 ;;		_InicializaLCD
  3024 ;;		_BorraLCD
  3025 ;;		_EscribeLCD_c
  3026 ;;		_DireccionaLCD
  3027 ;; This function uses a non-reentrant model
  3028 ;;
  3029                           
  3030                           	psect	text22
  3031   001434                     __ptext22:
  3032                           	callstack 0
  3033   001434                     _HabilitaLCD:
  3034                           	callstack 23
  3035                           
  3036                           ;LibLCDXC8.h: 110: LATE2=1;
  3037                           
  3038                           ;incstack = 0
  3039   001434  848D               	bsf	3981,2,c	;volatile
  3040                           
  3041                           ;LibLCDXC8.h: 111: _delay((unsigned long)((40)*(8000000/4000000.0)));
  3042   001436  0E1A               	movlw	26
  3043   001438                     u1627:
  3044   001438  2EE8               	decfsz	wreg,f,c
  3045   00143A  D7FE               	bra	u1627
  3046   00143C  D000               	nop2	
  3047                           
  3048                           ;LibLCDXC8.h: 113: LATE2=0;
  3049   00143E  948D               	bcf	3981,2,c	;volatile
  3050   001440  0012               	return		;funcret
  3051   001442                     __end_of_HabilitaLCD:
  3052                           	callstack 0
  3053                           
  3054 ;; *************** function _ISR *****************
  3055 ;; Defined at:
  3056 ;;		line 319 in file "Proyecto.c"
  3057 ;; Parameters:    Size  Location     Type
  3058 ;;		None
  3059 ;; Auto vars:     Size  Location     Type
  3060 ;;		None
  3061 ;; Return value:  Size  Location     Type
  3062 ;;                  1    wreg      void 
  3063 ;; Registers used:
  3064 ;;		wreg, status,2, status,0, cstack
  3065 ;; Tracked objects:
  3066 ;;		On entry : 0/0
  3067 ;;		On exit  : 0/0
  3068 ;;		Unchanged: 0/0
  3069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3070 ;;      Params:         0       0       0       0       0       0       0       0       0
  3071 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3072 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3073 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3074 ;;Total ram usage:        2 bytes
  3075 ;; Hardware stack levels used: 1
  3076 ;; Hardware stack levels required when called: 3
  3077 ;; This function calls:
  3078 ;;		_LeerTeclado
  3079 ;;		i2_EscribeLCD_c
  3080 ;; This function is called by:
  3081 ;;		Interrupt level 2
  3082 ;; This function uses a non-reentrant model
  3083 ;;
  3084                           
  3085                           	psect	intcode
  3086   000008                     __pintcode:
  3087                           	callstack 0
  3088   000008                     _ISR:
  3089                           	callstack 22
  3090                           
  3091                           ;incstack = 0
  3092   000008  8233               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  3093   00000A  ED0A  F006         	call	int_func,f	;refresh shadow registers
  3094                           
  3095                           	psect	intcode_body
  3096   000C14                     __pintcode_body:
  3097                           	callstack 22
  3098   000C14                     int_func:
  3099                           	callstack 22
  3100   000C14  0006               	pop		; remove dummy address from shadow register refresh
  3101                           
  3102                           ;Proyecto.c: 320: if(TMR0IF == 1){
  3103   000C16  A4F2               	btfss	4082,2,c	;volatile
  3104   000C18  D022               	goto	i2l294
  3105                           
  3106                           ;Proyecto.c: 321: TMR0IF = 0;
  3107   000C1A  94F2               	bcf	4082,2,c	;volatile
  3108                           
  3109                           ;Proyecto.c: 322: TMR0 = 64911;
  3110   000C1C  0EFD               	movlw	253
  3111   000C1E  6ED7               	movwf	215,c	;volatile
  3112   000C20  0E8F               	movlw	143
  3113   000C22  6ED6               	movwf	214,c	;volatile
  3114                           
  3115                           ;Proyecto.c: 323: contador += 1;
  3116   000C24  4A2D               	infsnz	_contador^0,f,c
  3117   000C26  2A2E               	incf	(_contador+1)^0,f,c
  3118                           
  3119                           ;Proyecto.c: 324: if(contador == 20000){
  3120   000C28  0E20               	movlw	32
  3121   000C2A  182D               	xorwf	_contador^0,w,c
  3122   000C2C  E106               	bnz	i2l295
  3123   000C2E  0E4E               	movlw	78
  3124   000C30  182E               	xorwf	(_contador+1)^0,w,c
  3125   000C32  A4D8               	btfss	status,2,c
  3126   000C34  D002               	goto	i2l295
  3127   000C36  0003               	sleep		;# 
  3128   000C38                     i2l296:
  3129   000C38  D7FF               	goto	i2l296
  3130   000C3A                     i2l295:
  3131                           
  3132                           ;Proyecto.c: 327: };Proyecto.c: 328: if(RE0 == 1){
  3133   000C3A  A084               	btfss	3972,0,c	;volatile
  3134   000C3C  D010               	goto	i2l294
  3135                           
  3136                           ;Proyecto.c: 329: CCP1CON = 0 ;
  3137   000C3E  0E00               	movlw	0
  3138   000C40  6EBD               	movwf	189,c	;volatile
  3139                           
  3140                           ;Proyecto.c: 330: _delay((unsigned long)((100)*(8000000/4000.0)));
  3141   000C42  0E02               	movlw	2
  3142   000C44  6E07               	movwf	(??_ISR+1)^0,c
  3143   000C46  0E04               	movlw	4
  3144   000C48  6E06               	movwf	??_ISR^0,c
  3145   000C4A  0EBA               	movlw	186
  3146   000C4C                     i2u163_47:
  3147   000C4C  2EE8               	decfsz	wreg,f,c
  3148   000C4E  D7FE               	bra	i2u163_47
  3149   000C50  2E06               	decfsz	??_ISR^0,f,c
  3150   000C52  D7FC               	bra	i2u163_47
  3151   000C54  2E07               	decfsz	(??_ISR+1)^0,f,c
  3152   000C56  D7FA               	bra	i2u163_47
  3153   000C58  D000               	nop2	
  3154   000C5A  0003               	sleep		;# 
  3155   000C5C                     i2l300:
  3156   000C5C  D7FF               	goto	i2l300
  3157   000C5E                     i2l294:
  3158                           
  3159                           ;Proyecto.c: 333: };Proyecto.c: 334: };Proyecto.c: 335: if(RBIF==1){
  3160   000C5E  A0F2               	btfss	4082,0,c	;volatile
  3161   000C60  D063               	goto	i2l336
  3162                           
  3163                           ;Proyecto.c: 336: if(PORTB!=0b11110000){
  3164   000C62  0EF0               	movlw	240
  3165   000C64  1881               	xorwf	129,w,c	;volatile
  3166   000C66  B4D8               	btfsc	status,2,c
  3167   000C68  D053               	goto	i2l2442
  3168                           
  3169                           ;Proyecto.c: 337: Tecla=0;
  3170   000C6A  0E00               	movlw	0
  3171   000C6C  6E30               	movwf	_Tecla^0,c
  3172                           
  3173                           ;Proyecto.c: 338: LATB=0b11111110;
  3174   000C6E  0EFE               	movlw	254
  3175   000C70  6E8A               	movwf	138,c	;volatile
  3176                           
  3177                           ;Proyecto.c: 339: if(RB4==0) Tecla=16;
  3178   000C72  B881               	btfsc	3969,4,c	;volatile
  3179   000C74  D002               	goto	i2l305
  3180   000C76  0E10               	movlw	16
  3181   000C78  D041               	goto	L21
  3182   000C7A                     i2l305:
  3183                           
  3184                           ;Proyecto.c: 340: else if(RB5==0) Tecla=12;
  3185   000C7A  BA81               	btfsc	3969,5,c	;volatile
  3186   000C7C  D002               	goto	i2l307
  3187   000C7E  0E0C               	movlw	12
  3188   000C80  D03D               	goto	L21
  3189   000C82                     i2l307:
  3190                           
  3191                           ;Proyecto.c: 341: else if(RB6==0) Tecla=8;
  3192   000C82  BC81               	btfsc	3969,6,c	;volatile
  3193   000C84  D002               	goto	i2l309
  3194   000C86  0E08               	movlw	8
  3195   000C88  D039               	goto	L21
  3196   000C8A                     i2l309:
  3197                           
  3198                           ;Proyecto.c: 342: else if(RB7==0) Tecla=4;
  3199   000C8A  BE81               	btfsc	3969,7,c	;volatile
  3200   000C8C  D002               	goto	i2l2400
  3201   000C8E  0E04               	movlw	4
  3202   000C90  D035               	goto	L21
  3203   000C92                     i2l2400:
  3204                           
  3205                           ;Proyecto.c: 343: else{;Proyecto.c: 344: LATB=0b11111101;
  3206   000C92  0EFD               	movlw	253
  3207   000C94  6E8A               	movwf	138,c	;volatile
  3208                           
  3209                           ;Proyecto.c: 345: if(RB4==0) Tecla=15;
  3210   000C96  B881               	btfsc	3969,4,c	;volatile
  3211   000C98  D002               	goto	i2l313
  3212   000C9A  0E0F               	movlw	15
  3213   000C9C  D02F               	goto	L21
  3214   000C9E                     i2l313:
  3215                           
  3216                           ;Proyecto.c: 346: else if(RB5==0) Tecla=11;
  3217   000C9E  BA81               	btfsc	3969,5,c	;volatile
  3218   000CA0  D002               	goto	i2l315
  3219   000CA2  0E0B               	movlw	11
  3220   000CA4  D02B               	goto	L21
  3221   000CA6                     i2l315:
  3222                           
  3223                           ;Proyecto.c: 347: else if(RB6==0) Tecla=7;
  3224   000CA6  BC81               	btfsc	3969,6,c	;volatile
  3225   000CA8  D002               	goto	i2l317
  3226   000CAA  0E07               	movlw	7
  3227   000CAC  D027               	goto	L21
  3228   000CAE                     i2l317:
  3229                           
  3230                           ;Proyecto.c: 348: else if(RB7==0) Tecla=3;
  3231   000CAE  BE81               	btfsc	3969,7,c	;volatile
  3232   000CB0  D002               	goto	i2l2412
  3233   000CB2  0E03               	movlw	3
  3234   000CB4  D023               	goto	L21
  3235   000CB6                     i2l2412:
  3236                           
  3237                           ;Proyecto.c: 349: else{;Proyecto.c: 350: LATB=0b11111011;
  3238   000CB6  0EFB               	movlw	251
  3239   000CB8  6E8A               	movwf	138,c	;volatile
  3240                           
  3241                           ;Proyecto.c: 351: if(RB4==0) Tecla=14;
  3242   000CBA  B881               	btfsc	3969,4,c	;volatile
  3243   000CBC  D002               	goto	i2l321
  3244   000CBE  0E0E               	movlw	14
  3245   000CC0  D01D               	goto	L21
  3246   000CC2                     i2l321:
  3247                           
  3248                           ;Proyecto.c: 352: else if(RB5==0) Tecla=10;
  3249   000CC2  BA81               	btfsc	3969,5,c	;volatile
  3250   000CC4  D002               	goto	i2l323
  3251   000CC6  0E0A               	movlw	10
  3252   000CC8  D019               	goto	L21
  3253   000CCA                     i2l323:
  3254                           
  3255                           ;Proyecto.c: 353: else if(RB6==0) Tecla=6;
  3256   000CCA  BC81               	btfsc	3969,6,c	;volatile
  3257   000CCC  D002               	goto	i2l325
  3258   000CCE  0E06               	movlw	6
  3259   000CD0  D015               	goto	L21
  3260   000CD2                     i2l325:
  3261                           
  3262                           ;Proyecto.c: 354: else if(RB7==0) Tecla=2;
  3263   000CD2  BE81               	btfsc	3969,7,c	;volatile
  3264   000CD4  D002               	goto	i2l2424
  3265   000CD6  0E02               	movlw	2
  3266   000CD8  D011               	goto	L21
  3267   000CDA                     i2l2424:
  3268                           
  3269                           ;Proyecto.c: 355: else{;Proyecto.c: 356: LATB=0b11110111;
  3270   000CDA  0EF7               	movlw	247
  3271   000CDC  6E8A               	movwf	138,c	;volatile
  3272                           
  3273                           ;Proyecto.c: 357: if(RB4==0) Tecla=13;
  3274   000CDE  B881               	btfsc	3969,4,c	;volatile
  3275   000CE0  D002               	goto	i2l329
  3276   000CE2  0E0D               	movlw	13
  3277   000CE4  D00B               	goto	L21
  3278   000CE6                     i2l329:
  3279                           
  3280                           ;Proyecto.c: 358: else if(RB5==0) Tecla=9;
  3281   000CE6  BA81               	btfsc	3969,5,c	;volatile
  3282   000CE8  D002               	goto	i2l331
  3283   000CEA  0E09               	movlw	9
  3284   000CEC  D007               	goto	L21
  3285   000CEE                     i2l331:
  3286                           
  3287                           ;Proyecto.c: 359: else if(RB6==0) Tecla=5;
  3288   000CEE  BC81               	btfsc	3969,6,c	;volatile
  3289   000CF0  D002               	goto	i2l333
  3290   000CF2  0E05               	movlw	5
  3291   000CF4  D003               	goto	L21
  3292   000CF6                     i2l333:
  3293                           
  3294                           ;Proyecto.c: 360: else if(RB7==0) Tecla=1;
  3295   000CF6  BE81               	btfsc	3969,7,c	;volatile
  3296   000CF8  D002               	goto	i2l330
  3297   000CFA  0E01               	movlw	1
  3298   000CFC                     L21:
  3299   000CFC  6E30               	movwf	_Tecla^0,c
  3300   000CFE                     i2l330:
  3301                           
  3302                           ;Proyecto.c: 361: };Proyecto.c: 362: };Proyecto.c: 363: };Proyecto.c: 364: LATB=0b111100
      +                          00;
  3303   000CFE  0EF0               	movlw	240
  3304   000D00  6E8A               	movwf	138,c	;volatile
  3305                           
  3306                           ;Proyecto.c: 365: ing = Tecla;
  3307   000D02  C030  F02F         	movff	_Tecla,_ing
  3308                           
  3309                           ;Proyecto.c: 366: LeerTeclado();
  3310   000D06  EC02  F007         	call	_LeerTeclado	;wreg free
  3311                           
  3312                           ;Proyecto.c: 367: EscribeLCD_c(Tecla);
  3313   000D0A  5030               	movf	_Tecla^0,w,c
  3314   000D0C  EC05  F00A         	call	i2_EscribeLCD_c
  3315   000D10                     i2l2442:
  3316                           
  3317                           ;Proyecto.c: 368: };Proyecto.c: 369: RBIF=0;
  3318   000D10  90F2               	bcf	4082,0,c	;volatile
  3319                           
  3320                           ;Proyecto.c: 370: _delay((unsigned long)((300)*(8000000/4000.0)));
  3321   000D12  0E04               	movlw	4
  3322   000D14  6E07               	movwf	(??_ISR+1)^0,c
  3323   000D16  0E0C               	movlw	12
  3324   000D18  6E06               	movwf	??_ISR^0,c
  3325   000D1A  0E34               	movlw	52
  3326   000D1C                     i2u164_47:
  3327   000D1C  2EE8               	decfsz	wreg,f,c
  3328   000D1E  D7FE               	bra	i2u164_47
  3329   000D20  2E06               	decfsz	??_ISR^0,f,c
  3330   000D22  D7FC               	bra	i2u164_47
  3331   000D24  2E07               	decfsz	(??_ISR+1)^0,f,c
  3332   000D26  D7FA               	bra	i2u164_47
  3333   000D28                     i2l336:
  3334   000D28  9233               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  3335   000D2A  0011               	retfie		f
  3336   000D2C                     __end_of_ISR:
  3337                           	callstack 0
  3338                           
  3339 ;; *************** function i2_EscribeLCD_c *****************
  3340 ;; Defined at:
  3341 ;;		line 148 in file "LibLCDXC8.h"
  3342 ;; Parameters:    Size  Location     Type
  3343 ;;  a               1    wreg     unsigned char 
  3344 ;; Auto vars:     Size  Location     Type
  3345 ;;  a               1    4[COMRAM] unsigned char 
  3346 ;; Return value:  Size  Location     Type
  3347 ;;                  1    wreg      void 
  3348 ;; Registers used:
  3349 ;;		wreg, status,2, status,0, cstack
  3350 ;; Tracked objects:
  3351 ;;		On entry : 0/0
  3352 ;;		On exit  : 0/0
  3353 ;;		Unchanged: 0/0
  3354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3355 ;;      Params:         0       0       0       0       0       0       0       0       0
  3356 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3357 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3358 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3359 ;;Total ram usage:        1 bytes
  3360 ;; Hardware stack levels used: 1
  3361 ;; Hardware stack levels required when called: 2
  3362 ;; This function calls:
  3363 ;;		i2_EnviaDato
  3364 ;;		i2_HabilitaLCD
  3365 ;;		i2_RetardoLCD
  3366 ;; This function is called by:
  3367 ;;		_ISR
  3368 ;; This function uses a non-reentrant model
  3369 ;;
  3370                           
  3371                           	psect	text24
  3372   00140A                     __ptext24:
  3373                           	callstack 0
  3374   00140A                     i2_EscribeLCD_c:
  3375                           	callstack 22
  3376                           
  3377                           ;incstack = 0
  3378                           ;i2EscribeLCD_c@a stored from wreg
  3379   00140A  6E05               	movwf	i2EscribeLCD_c@a^0,c
  3380                           
  3381                           ;LibLCDXC8.h: 152: LATE1=1;
  3382   00140C  828D               	bsf	3981,1,c	;volatile
  3383                           
  3384                           ;LibLCDXC8.h: 153: EnviaDato(a);
  3385   00140E  5005               	movf	i2EscribeLCD_c@a^0,w,c
  3386   001410  ECCE  F008         	call	i2_EnviaDato
  3387                           
  3388                           ;LibLCDXC8.h: 154: HabilitaLCD();
  3389   001414  EC21  F00A         	call	i2_HabilitaLCD	;wreg free
  3390                           
  3391                           ;LibLCDXC8.h: 155: RetardoLCD(4);
  3392   001418  0E04               	movlw	4
  3393   00141A  EC28  F008         	call	i2_RetardoLCD
  3394   00141E  0012               	return		;funcret
  3395   001420                     __end_ofi2_EscribeLCD_c:
  3396                           	callstack 0
  3397                           
  3398 ;; *************** function i2_EnviaDato *****************
  3399 ;; Defined at:
  3400 ;;		line 62 in file "LibLCDXC8.h"
  3401 ;; Parameters:    Size  Location     Type
  3402 ;;  a               1    wreg     unsigned char 
  3403 ;; Auto vars:     Size  Location     Type
  3404 ;;  a               1    3[COMRAM] unsigned char 
  3405 ;; Return value:  Size  Location     Type
  3406 ;;                  1    wreg      void 
  3407 ;; Registers used:
  3408 ;;		wreg, status,2, status,0, cstack
  3409 ;; Tracked objects:
  3410 ;;		On entry : 0/0
  3411 ;;		On exit  : 0/0
  3412 ;;		Unchanged: 0/0
  3413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3414 ;;      Params:         0       0       0       0       0       0       0       0       0
  3415 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3416 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3417 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3418 ;;Total ram usage:        2 bytes
  3419 ;; Hardware stack levels used: 1
  3420 ;; Hardware stack levels required when called: 1
  3421 ;; This function calls:
  3422 ;;		i2_HabilitaLCD
  3423 ;;		i2_RetardoLCD
  3424 ;; This function is called by:
  3425 ;;		i2_EscribeLCD_c
  3426 ;; This function uses a non-reentrant model
  3427 ;;
  3428                           
  3429                           	psect	text25
  3430   00119C                     __ptext25:
  3431                           	callstack 0
  3432   00119C                     i2_EnviaDato:
  3433                           	callstack 22
  3434                           
  3435                           ;incstack = 0
  3436                           ;i2EnviaDato@a stored from wreg
  3437   00119C  6E04               	movwf	i2EnviaDato@a^0,c
  3438                           
  3439                           ;LibLCDXC8.h: 63: if(interfaz==4){
  3440   00119E  0E04               	movlw	4
  3441   0011A0  1822               	xorwf	_interfaz^0,w,c
  3442   0011A2  A4D8               	btfss	status,2,c
  3443   0011A4  D017               	goto	i2l2070
  3444                           
  3445                           ;LibLCDXC8.h: 64: LATD=(LATD & 0b00001111) | (a & 0b11110000);
  3446   0011A6  C004  F003         	movff	i2EnviaDato@a,??i2_EnviaDato
  3447   0011AA  0EF0               	movlw	240
  3448   0011AC  1603               	andwf	??i2_EnviaDato^0,f,c
  3449   0011AE  508C               	movf	140,w,c	;volatile
  3450   0011B0  0B0F               	andlw	15
  3451   0011B2  1003               	iorwf	??i2_EnviaDato^0,w,c
  3452   0011B4  6E8C               	movwf	140,c	;volatile
  3453                           
  3454                           ;LibLCDXC8.h: 65: HabilitaLCD();
  3455   0011B6  EC21  F00A         	call	i2_HabilitaLCD	;wreg free
  3456                           
  3457                           ;LibLCDXC8.h: 66: RetardoLCD(1);
  3458   0011BA  0E01               	movlw	1
  3459   0011BC  EC28  F008         	call	i2_RetardoLCD
  3460                           
  3461                           ;LibLCDXC8.h: 67: LATD=(LATD & 0b00001111) | (a<<4);
  3462   0011C0  C004  F003         	movff	i2EnviaDato@a,??i2_EnviaDato
  3463   0011C4  3A03               	swapf	??i2_EnviaDato^0,f,c
  3464   0011C6  0EF0               	movlw	240
  3465   0011C8  1603               	andwf	??i2_EnviaDato^0,f,c
  3466   0011CA  508C               	movf	140,w,c	;volatile
  3467   0011CC  0B0F               	andlw	15
  3468   0011CE  1003               	iorwf	??i2_EnviaDato^0,w,c
  3469   0011D0  6E8C               	movwf	140,c	;volatile
  3470                           
  3471                           ;LibLCDXC8.h: 70: }else if(interfaz==8){
  3472   0011D2  0012               	return	
  3473   0011D4                     i2l2070:
  3474   0011D4  0E08               	movlw	8
  3475   0011D6  1822               	xorwf	_interfaz^0,w,c
  3476   0011D8  A4D8               	btfss	status,2,c
  3477   0011DA  0012               	return	
  3478                           
  3479                           ;LibLCDXC8.h: 71: LATD=a;
  3480   0011DC  C004  FF8C         	movff	i2EnviaDato@a,3980	;volatile
  3481   0011E0  0012               	return		;funcret
  3482   0011E2                     __end_ofi2_EnviaDato:
  3483                           	callstack 0
  3484                           
  3485 ;; *************** function i2_RetardoLCD *****************
  3486 ;; Defined at:
  3487 ;;		line 295 in file "LibLCDXC8.h"
  3488 ;; Parameters:    Size  Location     Type
  3489 ;;  a               1    wreg     unsigned char 
  3490 ;; Auto vars:     Size  Location     Type
  3491 ;;  a               1    1[COMRAM] unsigned char 
  3492 ;; Return value:  Size  Location     Type
  3493 ;;                  1    wreg      void 
  3494 ;; Registers used:
  3495 ;;		wreg, status,2, status,0
  3496 ;; Tracked objects:
  3497 ;;		On entry : 0/0
  3498 ;;		On exit  : 0/0
  3499 ;;		Unchanged: 0/0
  3500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3501 ;;      Params:         0       0       0       0       0       0       0       0       0
  3502 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3503 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3504 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3505 ;;Total ram usage:        2 bytes
  3506 ;; Hardware stack levels used: 1
  3507 ;; This function calls:
  3508 ;;		Nothing
  3509 ;; This function is called by:
  3510 ;;		i2_EnviaDato
  3511 ;;		i2_EscribeLCD_c
  3512 ;; This function uses a non-reentrant model
  3513 ;;
  3514                           
  3515                           	psect	text26
  3516   001050                     __ptext26:
  3517                           	callstack 0
  3518   001050                     i2_RetardoLCD:
  3519                           	callstack 23
  3520                           
  3521                           ;incstack = 0
  3522                           ;i2RetardoLCD@a stored from wreg
  3523   001050  6E02               	movwf	i2RetardoLCD@a^0,c
  3524                           
  3525                           ;LibLCDXC8.h: 296: switch(a){
  3526   001052  D023               	goto	i2l1864
  3527   001054                     i2l1854:
  3528   001054  0E27               	movlw	39
  3529   001056  6E01               	movwf	??i2_RetardoLCD^0,c
  3530   001058  0EF5               	movlw	245
  3531   00105A                     i2u165_47:
  3532   00105A  2EE8               	decfsz	wreg,f,c
  3533   00105C  D7FE               	bra	i2u165_47
  3534   00105E  2E01               	decfsz	??i2_RetardoLCD^0,f,c
  3535   001060  D7FC               	bra	i2u165_47
  3536   001062  F000               	nop	
  3537                           
  3538                           ;LibLCDXC8.h: 299: break;
  3539   001064  0012               	return	
  3540   001066                     i2l1856:
  3541   001066  0E03               	movlw	3
  3542   001068  6E01               	movwf	??i2_RetardoLCD^0,c
  3543   00106A  0E98               	movlw	152
  3544   00106C                     i2u166_47:
  3545   00106C  2EE8               	decfsz	wreg,f,c
  3546   00106E  D7FE               	bra	i2u166_47
  3547   001070  2E01               	decfsz	??i2_RetardoLCD^0,f,c
  3548   001072  D7FC               	bra	i2u166_47
  3549                           
  3550                           ;LibLCDXC8.h: 301: _delay((unsigned long)((640)*(8000000/4000000.0)));
  3551   001074  0EB6               	movlw	182
  3552   001076                     i2u167_47:
  3553   001076  D000               	nop2	
  3554   001078  D000               	nop2	
  3555   00107A  2EE8               	decfsz	wreg,f,c
  3556   00107C  D7FC               	bra	i2u167_47
  3557   00107E  D000               	nop2	
  3558   001080  D000               	nop2	
  3559   001082  D000               	nop2	
  3560                           
  3561                           ;LibLCDXC8.h: 303: break;
  3562   001084  0012               	return	
  3563   001086                     i2l1858:
  3564   001086  0E42               	movlw	66
  3565   001088                     i2u168_47:
  3566   001088  2EE8               	decfsz	wreg,f,c
  3567   00108A  D7FE               	bra	i2u168_47
  3568   00108C  D000               	nop2	
  3569                           
  3570                           ;LibLCDXC8.h: 306: break;
  3571   00108E  0012               	return	
  3572   001090                     i2l1860:
  3573   001090  0E1A               	movlw	26
  3574   001092                     i2u169_47:
  3575   001092  2EE8               	decfsz	wreg,f,c
  3576   001094  D7FE               	bra	i2u169_47
  3577   001096  D000               	nop2	
  3578                           
  3579                           ;LibLCDXC8.h: 309: break;
  3580   001098  0012               	return	
  3581   00109A                     i2l1864:
  3582   00109A  5002               	movf	i2RetardoLCD@a^0,w,c
  3583                           
  3584                           ; Switch size 1, requested type "simple"
  3585                           ; Number of cases is 4, Range of values is 1 to 4
  3586                           ; switch strategies available:
  3587                           ; Name         Instructions Cycles
  3588                           ; simple_byte           13     7 (average)
  3589                           ;	Chosen strategy is simple_byte
  3590   00109C  0A01               	xorlw	1	; case 1
  3591   00109E  B4D8               	btfsc	status,2,c
  3592   0010A0  D7D9               	goto	i2l1854
  3593   0010A2  0A03               	xorlw	3	; case 2
  3594   0010A4  B4D8               	btfsc	status,2,c
  3595   0010A6  D7DF               	goto	i2l1856
  3596   0010A8  0A01               	xorlw	1	; case 3
  3597   0010AA  B4D8               	btfsc	status,2,c
  3598   0010AC  D7EC               	goto	i2l1858
  3599   0010AE  0A07               	xorlw	7	; case 4
  3600   0010B0  A4D8               	btfss	status,2,c
  3601   0010B2  0012               	return	
  3602   0010B4  D7ED               	goto	i2l1860
  3603   0010B6                     __end_ofi2_RetardoLCD:
  3604                           	callstack 0
  3605                           
  3606 ;; *************** function i2_HabilitaLCD *****************
  3607 ;; Defined at:
  3608 ;;		line 108 in file "LibLCDXC8.h"
  3609 ;; Parameters:    Size  Location     Type
  3610 ;;		None
  3611 ;; Auto vars:     Size  Location     Type
  3612 ;;		None
  3613 ;; Return value:  Size  Location     Type
  3614 ;;                  1    wreg      void 
  3615 ;; Registers used:
  3616 ;;		wreg
  3617 ;; Tracked objects:
  3618 ;;		On entry : 0/0
  3619 ;;		On exit  : 0/0
  3620 ;;		Unchanged: 0/0
  3621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3622 ;;      Params:         0       0       0       0       0       0       0       0       0
  3623 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3624 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3625 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3626 ;;Total ram usage:        0 bytes
  3627 ;; Hardware stack levels used: 1
  3628 ;; This function calls:
  3629 ;;		Nothing
  3630 ;; This function is called by:
  3631 ;;		i2_EnviaDato
  3632 ;;		i2_EscribeLCD_c
  3633 ;; This function uses a non-reentrant model
  3634 ;;
  3635                           
  3636                           	psect	text27
  3637   001442                     __ptext27:
  3638                           	callstack 0
  3639   001442                     i2_HabilitaLCD:
  3640                           	callstack 23
  3641                           
  3642                           ;LibLCDXC8.h: 110: LATE2=1;
  3643                           
  3644                           ;incstack = 0
  3645   001442  848D               	bsf	3981,2,c	;volatile
  3646                           
  3647                           ;LibLCDXC8.h: 111: _delay((unsigned long)((40)*(8000000/4000000.0)));
  3648   001444  0E1A               	movlw	26
  3649   001446                     i2u170_47:
  3650   001446  2EE8               	decfsz	wreg,f,c
  3651   001448  D7FE               	bra	i2u170_47
  3652   00144A  D000               	nop2	
  3653                           
  3654                           ;LibLCDXC8.h: 113: LATE2=0;
  3655   00144C  948D               	bcf	3981,2,c	;volatile
  3656   00144E  0012               	return		;funcret
  3657   001450                     __end_ofi2_HabilitaLCD:
  3658                           	callstack 0
  3659                           
  3660 ;; *************** function _LeerTeclado *****************
  3661 ;; Defined at:
  3662 ;;		line 191 in file "Proyecto.c"
  3663 ;; Parameters:    Size  Location     Type
  3664 ;;		None
  3665 ;; Auto vars:     Size  Location     Type
  3666 ;;		None
  3667 ;; Return value:  Size  Location     Type
  3668 ;;                  1    wreg      unsigned char 
  3669 ;; Registers used:
  3670 ;;		wreg, status,2, status,0
  3671 ;; Tracked objects:
  3672 ;;		On entry : 0/0
  3673 ;;		On exit  : 0/0
  3674 ;;		Unchanged: 0/0
  3675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3676 ;;      Params:         0       0       0       0       0       0       0       0       0
  3677 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3678 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3679 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3680 ;;Total ram usage:        0 bytes
  3681 ;; Hardware stack levels used: 1
  3682 ;; This function calls:
  3683 ;;		Nothing
  3684 ;; This function is called by:
  3685 ;;		_ISR
  3686 ;; This function uses a non-reentrant model
  3687 ;;
  3688                           
  3689                           	psect	text28
  3690   000E04                     __ptext28:
  3691                           	callstack 0
  3692   000E04                     _LeerTeclado:
  3693                           	callstack 24
  3694                           
  3695                           ;Proyecto.c: 192: switch (Tecla){
  3696                           
  3697                           ;incstack = 0
  3698   000E04  D030               	goto	i2l1616
  3699   000E06                     i2l1582:
  3700                           
  3701                           ;Proyecto.c: 194: Tecla='1';
  3702   000E06  0E31               	movlw	49
  3703   000E08  6E30               	movwf	_Tecla^0,c
  3704                           
  3705                           ;Proyecto.c: 195: break;
  3706   000E0A  0012               	return	
  3707   000E0C                     i2l1584:
  3708                           
  3709                           ;Proyecto.c: 197: Tecla='2';
  3710   000E0C  0E32               	movlw	50
  3711   000E0E  6E30               	movwf	_Tecla^0,c
  3712                           
  3713                           ;Proyecto.c: 198: break;
  3714   000E10  0012               	return	
  3715   000E12                     i2l1586:
  3716                           
  3717                           ;Proyecto.c: 200: Tecla='3';
  3718   000E12  0E33               	movlw	51
  3719   000E14  6E30               	movwf	_Tecla^0,c
  3720                           
  3721                           ;Proyecto.c: 201: break;
  3722   000E16  0012               	return	
  3723   000E18                     i2l1588:
  3724                           
  3725                           ;Proyecto.c: 203: Tecla='+';
  3726   000E18  0E2B               	movlw	43
  3727   000E1A  6E30               	movwf	_Tecla^0,c
  3728                           
  3729                           ;Proyecto.c: 204: break;
  3730   000E1C  0012               	return	
  3731   000E1E                     i2l1590:
  3732                           
  3733                           ;Proyecto.c: 206: Tecla='4';
  3734   000E1E  0E34               	movlw	52
  3735   000E20  6E30               	movwf	_Tecla^0,c
  3736                           
  3737                           ;Proyecto.c: 207: break;
  3738   000E22  0012               	return	
  3739   000E24                     i2l1592:
  3740                           
  3741                           ;Proyecto.c: 209: Tecla ='5';
  3742   000E24  0E35               	movlw	53
  3743   000E26  6E30               	movwf	_Tecla^0,c
  3744                           
  3745                           ;Proyecto.c: 210: break;
  3746   000E28  0012               	return	
  3747   000E2A                     i2l1594:
  3748                           
  3749                           ;Proyecto.c: 212: Tecla='6';
  3750   000E2A  0E36               	movlw	54
  3751   000E2C  6E30               	movwf	_Tecla^0,c
  3752                           
  3753                           ;Proyecto.c: 213: break;
  3754   000E2E  0012               	return	
  3755   000E30                     i2l1596:
  3756                           
  3757                           ;Proyecto.c: 215: Tecla='-';
  3758   000E30  0E2D               	movlw	45
  3759   000E32  6E30               	movwf	_Tecla^0,c
  3760                           
  3761                           ;Proyecto.c: 216: break;
  3762   000E34  0012               	return	
  3763   000E36                     i2l1598:
  3764                           
  3765                           ;Proyecto.c: 218: Tecla='7';
  3766   000E36  0E37               	movlw	55
  3767   000E38  6E30               	movwf	_Tecla^0,c
  3768                           
  3769                           ;Proyecto.c: 219: break;
  3770   000E3A  0012               	return	
  3771   000E3C                     i2l1600:
  3772                           
  3773                           ;Proyecto.c: 221: Tecla='8';
  3774   000E3C  0E38               	movlw	56
  3775   000E3E  6E30               	movwf	_Tecla^0,c
  3776                           
  3777                           ;Proyecto.c: 222: break;
  3778   000E40  0012               	return	
  3779   000E42                     i2l1602:
  3780                           
  3781                           ;Proyecto.c: 224: Tecla='9';
  3782   000E42  0E39               	movlw	57
  3783   000E44  6E30               	movwf	_Tecla^0,c
  3784                           
  3785                           ;Proyecto.c: 225: break;
  3786   000E46  0012               	return	
  3787   000E48                     i2l1604:
  3788                           
  3789                           ;Proyecto.c: 227: Tecla='X';
  3790   000E48  0E58               	movlw	88
  3791   000E4A  6E30               	movwf	_Tecla^0,c
  3792                           
  3793                           ;Proyecto.c: 228: break;
  3794   000E4C  0012               	return	
  3795   000E4E                     i2l1606:
  3796                           
  3797                           ;Proyecto.c: 230: Tecla='B';
  3798   000E4E  0E42               	movlw	66
  3799   000E50  6E30               	movwf	_Tecla^0,c
  3800                           
  3801                           ;Proyecto.c: 231: break;
  3802   000E52  0012               	return	
  3803   000E54                     i2l1608:
  3804                           
  3805                           ;Proyecto.c: 233: Tecla='0';
  3806   000E54  0E30               	movlw	48
  3807   000E56  6E30               	movwf	_Tecla^0,c
  3808                           
  3809                           ;Proyecto.c: 234: break;
  3810   000E58  0012               	return	
  3811   000E5A                     i2l1610:
  3812                           
  3813                           ;Proyecto.c: 236: Tecla='=';
  3814   000E5A  0E3D               	movlw	61
  3815   000E5C  6E30               	movwf	_Tecla^0,c
  3816                           
  3817                           ;Proyecto.c: 237: break;
  3818   000E5E  0012               	return	
  3819   000E60                     i2l1612:
  3820                           
  3821                           ;Proyecto.c: 239: Tecla='/';
  3822   000E60  0E2F               	movlw	47
  3823   000E62  6E30               	movwf	_Tecla^0,c
  3824                           
  3825                           ;Proyecto.c: 240: break;
  3826   000E64  0012               	return	
  3827   000E66                     i2l1616:
  3828   000E66  5030               	movf	_Tecla^0,w,c
  3829                           
  3830                           ; Switch size 1, requested type "simple"
  3831                           ; Number of cases is 16, Range of values is 1 to 16
  3832                           ; switch strategies available:
  3833                           ; Name         Instructions Cycles
  3834                           ; simple_byte           49    25 (average)
  3835                           ;	Chosen strategy is simple_byte
  3836   000E68  0A01               	xorlw	1	; case 1
  3837   000E6A  B4D8               	btfsc	status,2,c
  3838   000E6C  D7CC               	goto	i2l1582
  3839   000E6E  0A03               	xorlw	3	; case 2
  3840   000E70  B4D8               	btfsc	status,2,c
  3841   000E72  D7CC               	goto	i2l1584
  3842   000E74  0A01               	xorlw	1	; case 3
  3843   000E76  B4D8               	btfsc	status,2,c
  3844   000E78  D7CC               	goto	i2l1586
  3845   000E7A  0A07               	xorlw	7	; case 4
  3846   000E7C  B4D8               	btfsc	status,2,c
  3847   000E7E  D7CC               	goto	i2l1588
  3848   000E80  0A01               	xorlw	1	; case 5
  3849   000E82  B4D8               	btfsc	status,2,c
  3850   000E84  D7CC               	goto	i2l1590
  3851   000E86  0A03               	xorlw	3	; case 6
  3852   000E88  B4D8               	btfsc	status,2,c
  3853   000E8A  D7CC               	goto	i2l1592
  3854   000E8C  0A01               	xorlw	1	; case 7
  3855   000E8E  B4D8               	btfsc	status,2,c
  3856   000E90  D7CC               	goto	i2l1594
  3857   000E92  0A0F               	xorlw	15	; case 8
  3858   000E94  B4D8               	btfsc	status,2,c
  3859   000E96  D7CC               	goto	i2l1596
  3860   000E98  0A01               	xorlw	1	; case 9
  3861   000E9A  B4D8               	btfsc	status,2,c
  3862   000E9C  D7CC               	goto	i2l1598
  3863   000E9E  0A03               	xorlw	3	; case 10
  3864   000EA0  B4D8               	btfsc	status,2,c
  3865   000EA2  D7CC               	goto	i2l1600
  3866   000EA4  0A01               	xorlw	1	; case 11
  3867   000EA6  B4D8               	btfsc	status,2,c
  3868   000EA8  D7CC               	goto	i2l1602
  3869   000EAA  0A07               	xorlw	7	; case 12
  3870   000EAC  B4D8               	btfsc	status,2,c
  3871   000EAE  D7CC               	goto	i2l1604
  3872   000EB0  0A01               	xorlw	1	; case 13
  3873   000EB2  B4D8               	btfsc	status,2,c
  3874   000EB4  D7CC               	goto	i2l1606
  3875   000EB6  0A03               	xorlw	3	; case 14
  3876   000EB8  B4D8               	btfsc	status,2,c
  3877   000EBA  D7CC               	goto	i2l1608
  3878   000EBC  0A01               	xorlw	1	; case 15
  3879   000EBE  B4D8               	btfsc	status,2,c
  3880   000EC0  D7CC               	goto	i2l1610
  3881   000EC2  0A1F               	xorlw	31	; case 16
  3882   000EC4  A4D8               	btfss	status,2,c
  3883   000EC6  0012               	return	
  3884   000EC8  D7CB               	goto	i2l1612
  3885   000ECA                     __end_of_LeerTeclado:
  3886                           	callstack 0
  3887                           
  3888                           	psect	rparam
  3889   000000                     
  3890                           	psect	temp
  3891   000033                     btemp:
  3892                           	callstack 0
  3893   000033                     	ds	1
  3894   000000                     int$flags	set	btemp
  3895   000000                     wtemp8	set	btemp+1
  3896   000000                     ttemp5	set	btemp+1
  3897   000000                     ttemp6	set	btemp+4
  3898   000000                     ttemp7	set	btemp+8
  3899                           
  3900                           	psect	idloc
  3901                           
  3902                           ;Config register IDLOC0 @ 0x200000
  3903                           ;	unspecified, using default values
  3904   200000                     	org	2097152
  3905   200000  FF                 	db	255
  3906                           
  3907                           ;Config register IDLOC1 @ 0x200001
  3908                           ;	unspecified, using default values
  3909   200001                     	org	2097153
  3910   200001  FF                 	db	255
  3911                           
  3912                           ;Config register IDLOC2 @ 0x200002
  3913                           ;	unspecified, using default values
  3914   200002                     	org	2097154
  3915   200002  FF                 	db	255
  3916                           
  3917                           ;Config register IDLOC3 @ 0x200003
  3918                           ;	unspecified, using default values
  3919   200003                     	org	2097155
  3920   200003  FF                 	db	255
  3921                           
  3922                           ;Config register IDLOC4 @ 0x200004
  3923                           ;	unspecified, using default values
  3924   200004                     	org	2097156
  3925   200004  FF                 	db	255
  3926                           
  3927                           ;Config register IDLOC5 @ 0x200005
  3928                           ;	unspecified, using default values
  3929   200005                     	org	2097157
  3930   200005  FF                 	db	255
  3931                           
  3932                           ;Config register IDLOC6 @ 0x200006
  3933                           ;	unspecified, using default values
  3934   200006                     	org	2097158
  3935   200006  FF                 	db	255
  3936                           
  3937                           ;Config register IDLOC7 @ 0x200007
  3938                           ;	unspecified, using default values
  3939   200007                     	org	2097159
  3940   200007  FF                 	db	255
  3941                           
  3942                           	psect	config
  3943                           
  3944                           ;Config register CONFIG1L @ 0x300000
  3945                           ;	unspecified, using default values
  3946                           ;	PLL Prescaler Selection bits
  3947                           ;	PLLDIV = 0x0, unprogrammed default
  3948                           ;	System Clock Postscaler Selection bits
  3949                           ;	CPUDIV = 0x0, unprogrammed default
  3950                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  3951                           ;	USBDIV = 0x0, unprogrammed default
  3952   300000                     	org	3145728
  3953   300000  00                 	db	0
  3954                           
  3955                           ;Config register CONFIG1H @ 0x300001
  3956                           ;	unspecified, using default values
  3957                           ;	Oscillator Selection bits
  3958                           ;	FOSC = 0x5, unprogrammed default
  3959                           ;	Fail-Safe Clock Monitor Enable bit
  3960                           ;	FCMEN = 0x0, unprogrammed default
  3961                           ;	Internal/External Oscillator Switchover bit
  3962                           ;	IESO = 0x0, unprogrammed default
  3963   300001                     	org	3145729
  3964   300001  05                 	db	5
  3965                           
  3966                           ;Config register CONFIG2L @ 0x300002
  3967                           ;	unspecified, using default values
  3968                           ;	Power-up Timer Enable bit
  3969                           ;	PWRT = 0x1, unprogrammed default
  3970                           ;	Brown-out Reset Enable bits
  3971                           ;	BOR = 0x3, unprogrammed default
  3972                           ;	Brown-out Reset Voltage bits
  3973                           ;	BORV = 0x3, unprogrammed default
  3974                           ;	USB Voltage Regulator Enable bit
  3975                           ;	VREGEN = 0x0, unprogrammed default
  3976   300002                     	org	3145730
  3977   300002  1F                 	db	31
  3978                           
  3979                           ;Config register CONFIG2H @ 0x300003
  3980                           ;	Watchdog Timer Enable bit
  3981                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  3982                           ;	Watchdog Timer Postscale Select bits
  3983                           ;	WDTPS = 0xF, unprogrammed default
  3984   300003                     	org	3145731
  3985   300003  1E                 	db	30
  3986                           
  3987                           ; Padding undefined space
  3988   300004                     	org	3145732
  3989   300004  FF                 	db	255
  3990                           
  3991                           ;Config register CONFIG3H @ 0x300005
  3992                           ;	CCP2 MUX bit
  3993                           ;	CCP2MX = 0x1, unprogrammed default
  3994                           ;	PORTB A/D Enable bit
  3995                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  3996                           ;	Low-Power Timer 1 Oscillator Enable bit
  3997                           ;	LPT1OSC = 0x0, unprogrammed default
  3998                           ;	MCLR Pin Enable bit
  3999                           ;	MCLRE = 0x1, unprogrammed default
  4000   300005                     	org	3145733
  4001   300005  81                 	db	129
  4002                           
  4003                           ;Config register CONFIG4L @ 0x300006
  4004                           ;	Stack Full/Underflow Reset Enable bit
  4005                           ;	STVREN = 0x1, unprogrammed default
  4006                           ;	Single-Supply ICSP Enable bit
  4007                           ;	LVP = OFF, Single-Supply ICSP disabled
  4008                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  4009                           ;	ICPRT = 0x0, unprogrammed default
  4010                           ;	Extended Instruction Set Enable bit
  4011                           ;	XINST = 0x0, unprogrammed default
  4012                           ;	Background Debugger Enable bit
  4013                           ;	DEBUG = 0x1, unprogrammed default
  4014   300006                     	org	3145734
  4015   300006  81                 	db	129
  4016                           
  4017                           ; Padding undefined space
  4018   300007                     	org	3145735
  4019   300007  FF                 	db	255
  4020                           
  4021                           ;Config register CONFIG5L @ 0x300008
  4022                           ;	unspecified, using default values
  4023                           ;	Code Protection bit
  4024                           ;	CP0 = 0x1, unprogrammed default
  4025                           ;	Code Protection bit
  4026                           ;	CP1 = 0x1, unprogrammed default
  4027                           ;	Code Protection bit
  4028                           ;	CP2 = 0x1, unprogrammed default
  4029                           ;	Code Protection bit
  4030                           ;	CP3 = 0x1, unprogrammed default
  4031   300008                     	org	3145736
  4032   300008  0F                 	db	15
  4033                           
  4034                           ;Config register CONFIG5H @ 0x300009
  4035                           ;	unspecified, using default values
  4036                           ;	Boot Block Code Protection bit
  4037                           ;	CPB = 0x1, unprogrammed default
  4038                           ;	Data EEPROM Code Protection bit
  4039                           ;	CPD = 0x1, unprogrammed default
  4040   300009                     	org	3145737
  4041   300009  C0                 	db	192
  4042                           
  4043                           ;Config register CONFIG6L @ 0x30000A
  4044                           ;	unspecified, using default values
  4045                           ;	Write Protection bit
  4046                           ;	WRT0 = 0x1, unprogrammed default
  4047                           ;	Write Protection bit
  4048                           ;	WRT1 = 0x1, unprogrammed default
  4049                           ;	Write Protection bit
  4050                           ;	WRT2 = 0x1, unprogrammed default
  4051                           ;	Write Protection bit
  4052                           ;	WRT3 = 0x1, unprogrammed default
  4053   30000A                     	org	3145738
  4054   30000A  0F                 	db	15
  4055                           
  4056                           ;Config register CONFIG6H @ 0x30000B
  4057                           ;	unspecified, using default values
  4058                           ;	Configuration Register Write Protection bit
  4059                           ;	WRTC = 0x1, unprogrammed default
  4060                           ;	Boot Block Write Protection bit
  4061                           ;	WRTB = 0x1, unprogrammed default
  4062                           ;	Data EEPROM Write Protection bit
  4063                           ;	WRTD = 0x1, unprogrammed default
  4064   30000B                     	org	3145739
  4065   30000B  E0                 	db	224
  4066                           
  4067                           ;Config register CONFIG7L @ 0x30000C
  4068                           ;	unspecified, using default values
  4069                           ;	Table Read Protection bit
  4070                           ;	EBTR0 = 0x1, unprogrammed default
  4071                           ;	Table Read Protection bit
  4072                           ;	EBTR1 = 0x1, unprogrammed default
  4073                           ;	Table Read Protection bit
  4074                           ;	EBTR2 = 0x1, unprogrammed default
  4075                           ;	Table Read Protection bit
  4076                           ;	EBTR3 = 0x1, unprogrammed default
  4077   30000C                     	org	3145740
  4078   30000C  0F                 	db	15
  4079                           
  4080                           ;Config register CONFIG7H @ 0x30000D
  4081                           ;	unspecified, using default values
  4082                           ;	Boot Block Table Read Protection bit
  4083                           ;	EBTRB = 0x1, unprogrammed default
  4084   30000D                     	org	3145741
  4085   30000D  40                 	db	64
  4086                           tosu	equ	0xFFF
  4087                           tosh	equ	0xFFE
  4088                           tosl	equ	0xFFD
  4089                           stkptr	equ	0xFFC
  4090                           pclatu	equ	0xFFB
  4091                           pclath	equ	0xFFA
  4092                           pcl	equ	0xFF9
  4093                           tblptru	equ	0xFF8
  4094                           tblptrh	equ	0xFF7
  4095                           tblptrl	equ	0xFF6
  4096                           tablat	equ	0xFF5
  4097                           prodh	equ	0xFF4
  4098                           prodl	equ	0xFF3
  4099                           indf0	equ	0xFEF
  4100                           postinc0	equ	0xFEE
  4101                           postdec0	equ	0xFED
  4102                           preinc0	equ	0xFEC
  4103                           plusw0	equ	0xFEB
  4104                           fsr0h	equ	0xFEA
  4105                           fsr0l	equ	0xFE9
  4106                           wreg	equ	0xFE8
  4107                           indf1	equ	0xFE7
  4108                           postinc1	equ	0xFE6
  4109                           postdec1	equ	0xFE5
  4110                           preinc1	equ	0xFE4
  4111                           plusw1	equ	0xFE3
  4112                           fsr1h	equ	0xFE2
  4113                           fsr1l	equ	0xFE1
  4114                           bsr	equ	0xFE0
  4115                           indf2	equ	0xFDF
  4116                           postinc2	equ	0xFDE
  4117                           postdec2	equ	0xFDD
  4118                           preinc2	equ	0xFDC
  4119                           plusw2	equ	0xFDB
  4120                           fsr2h	equ	0xFDA
  4121                           fsr2l	equ	0xFD9
  4122                           status	equ	0xFD8

Data Sizes:
    Strings     49
    Constant    0
    Data        12
    BSS         8
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     30      50
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    MensajeLCD_Word@a	PTR unsigned char  size(1) Largest target is 17
		 -> STR_8(CODE[5]), STR_7(CODE[6]), STR_6(CODE[17]), STR_5(CODE[17]), 
		 -> STR_4(CODE[17]), STR_3(CODE[10]), STR_2(CODE[17]), STR_1(CODE[11]), 

    NuevoCaracter@c	PTR unsigned char  size(1) Largest target is 8
		 -> cara(COMRAM[8]), 


Critical Paths under _main in COMRAM

    _main->_TransmitirDatos
    _TransmitirDatos->_MensajeLCD_Word
    _MensajeLCD_Word->_EscribeLCD_c
    _DireccionaLCD->_EnviaDato
    _NuevoCaracter->_EscribeLCD_c
    _EscribeLCD_c->_EnviaDato
    _LeerHT11->_LeerByte
    _LeerByte->_LeerBit
    _InicializaLCD->_EnviaDato
    _BorraLCD->_EnviaDato
    _EnviaDato->_RetardoLCD

Critical Paths under _ISR in COMRAM

    _ISR->i2_EscribeLCD_c
    i2_EscribeLCD_c->i2_EnviaDato
    i2_EnviaDato->i2_RetardoLCD

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    7172
                                             28 COMRAM     2     2      0
                           _BorraLCD
                      _DireccionaLCD
                       _EscribeLCD_c
                      _InicializaLCD
                           _LeerHT11
                    _MensajeLCD_Word
                      _NuevoCaracter
                    _TransmitirDatos
                          _Velocidad
 ---------------------------------------------------------------------------------
 (1) _Velocidad                                            2     0      2     384
                                              7 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _TransmitirDatos                                     14    10      4    4798
                                             16 COMRAM    12     8      4
                           _BorraLCD
                      _DireccionaLCD
                       _EscribeLCD_c
                    _MensajeLCD_Word
                         _Transmitir
                            ___awdiv
                            ___lbdiv
                            ___lbmod
                            ___lwdiv
                            ___lwmod
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     311
                                              7 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     615
                                              7 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     922
                                              7 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___lbmod                                              4     3      1     311
                                              7 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (2) ___lbdiv                                              4     3      1     314
                                              7 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     604
                                              7 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _Transmitir                                           1     1      0      22
                                              7 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _MensajeLCD_Word                                      4     3      1     874
                                             12 COMRAM     4     3      1
                       _EscribeLCD_c
 ---------------------------------------------------------------------------------
 (2) _DireccionaLCD                                        1     1      0     132
                                             11 COMRAM     1     1      0
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (1) _NuevoCaracter                                        4     3      1     405
                                             12 COMRAM     4     3      1
                         _ComandoLCD
                       _EscribeLCD_c
 ---------------------------------------------------------------------------------
 (3) _EscribeLCD_c                                         1     1      0     132
                                             11 COMRAM     1     1      0
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (2) _ComandoLCD                                           2     2      0      22
                                              7 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _LeerHT11                                             1     1      0     117
                                             11 COMRAM     1     1      0
                           _LeerByte
 ---------------------------------------------------------------------------------
 (2) _LeerByte                                             3     3      0     117
                                              8 COMRAM     3     3      0
                            _LeerBit
 ---------------------------------------------------------------------------------
 (3) _LeerBit                                              1     1      0      25
                                              7 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _InicializaLCD                                        0     0      0     220
                           _BorraLCD
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (2) _BorraLCD                                             0     0      0     110
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (4) _EnviaDato                                            2     2      0      88
                                              9 COMRAM     2     2      0
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (4) _RetardoLCD                                           2     2      0      22
                                              7 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (4) _HabilitaLCD                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISR                                                  2     2      0     132
                                              5 COMRAM     2     2      0
                        _LeerTeclado
                     i2_EscribeLCD_c
 ---------------------------------------------------------------------------------
 (7) i2_EscribeLCD_c                                       1     1      0     132
                                              4 COMRAM     1     1      0
                        i2_EnviaDato
                      i2_HabilitaLCD
                       i2_RetardoLCD
 ---------------------------------------------------------------------------------
 (8) i2_EnviaDato                                          2     2      0      88
                                              2 COMRAM     2     2      0
                      i2_HabilitaLCD
                       i2_RetardoLCD
 ---------------------------------------------------------------------------------
 (8) i2_RetardoLCD                                         2     2      0      22
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (8) i2_HabilitaLCD                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _LeerTeclado                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BorraLCD
     _EnviaDato
       _HabilitaLCD
       _RetardoLCD
     _HabilitaLCD
     _RetardoLCD
   _DireccionaLCD
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _EscribeLCD_c
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _InicializaLCD
     _BorraLCD
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _LeerHT11
     _LeerByte
       _LeerBit
   _MensajeLCD_Word
     _EscribeLCD_c
   _NuevoCaracter
     _ComandoLCD
     _EscribeLCD_c
   _TransmitirDatos
     _BorraLCD
     _DireccionaLCD
     _EscribeLCD_c
     _MensajeLCD_Word
     _Transmitir
     ___awdiv
     ___lbdiv
     ___lbmod
     ___lwdiv
     ___lwmod
     ___wmul
   _Velocidad

 _ISR (ROOT)
   _LeerTeclado
   i2_EscribeLCD_c
     i2_EnviaDato
       i2_HabilitaLCD
       i2_RetardoLCD
     i2_HabilitaLCD
     i2_RetardoLCD

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      35        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     1E      32       1       53.2%
BITBIGSFRll         21      0       0      33        0.0%
BITBIGSFRhhhlh      19      0       0      21        0.0%
BITBIGSFRhhlllh      D      0       0      26        0.0%
BITBIGSFRhhhh        D      0       0      20        0.0%
BITBIGSFRhhllll      C      0       0      27        0.0%
BITBIGSFRhhlhl       7      0       0      24        0.0%
BITBIGSFRhhllll      7      0       0      28        0.0%
BITBIGSFRhhlhh       6      0       0      23        0.0%
BITBIGSFRlhhl        5      0       0      31        0.0%
BITBIGSFRhl          5      0       0      29        0.0%
BITBIGSFRlhhh        1      0       0      30        0.0%
BITBIGSFRlhl         1      0       0      32        0.0%
BITBIGSFRhhllh       1      0       0      25        0.0%
BITBIGSFRhhhll       1      0       0      22        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      32      34        0.0%
DATA                 0      0      32       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Tue Jun 06 17:13:37 2023

                      _c 001F        Transmitir@BufferT 0008             ___awdiv@sign 000D  
             EnviaDato@a 000B      ___wmul@multiplicand 000A            ??_LeerTeclado 0001  
          _InicializaLCD 0ECA                      l224 12E6                      l243 1336  
                    l227 12F0                      l238 1312                      l283 0868  
                    l288 09AA                      l818 10FE                      l828 121A  
                    _GIE 007F97                      _RC0 007C10                      _RB4 007C0C  
                    _RB5 007C0D                      _RE0 007C20                      _RB6 007C0E  
                    _RB7 007C0F                      _PR2 000FCB                      _ISR 0008  
                    u800 1154                      u900 12B6                      u780 133A  
                    u860 0FAC                      u940 10D8                      u970 11FC  
       TransmitirDatos@n 0017                      _ing 002F                      wreg 000FE8  
                   ?_ISR 0001         ??i2_EscribeLCD_c 0005                     l2002 12D0  
                   l2100 0F18                     l2030 10D4                     l2120 0F50  
                   l2016 138E                     l2008 1376                     l2040 10F4  
                   l2050 11F8                     l2028 10CC                     l2080 0EDC  
                   l2056 1210                     l2048 11F0                     l2090 0EFA  
                   l2242 0D3E                     l2172 08B6                     l2164 0876  
                   l2180 090E                     l2260 0D98                     l2254 0D7A  
                   l1800 102A                     l2168 088A                     l2272 0DD4  
                   l2248 0D5C                     l2178 08E4                     l2266 0DB6  
                   l1804 1034                     l2524 0BA8                     l2278 0DF2  
                   l1816 118E                     l2536 0BDA                     l2528 0BB6  
                   l2458 123A                     l1836 1326                     l1916 13C4  
                   l1926 145E                     l1950 0F8A                     l1944 0F7A  
                   l1794 0FEE                     l1796 1000                     l1956 0FA0  
                   l1972 0FD2                     l1798 1020                     l1894 1110  
                   l1958 0FA8                     l1990 12B2                     l1976 0FE0  
                   l1968 0FC8                     l1986 12AC                     l1998 12C8  
                   STR_1 0812                     STR_2 0801                     STR_3 081D  
                   STR_4 0801                     STR_5 0801                     STR_6 0801  
                   STR_7 0827                     STR_8 082D                     u1100 0D4A  
                   u1200 0DE0                     u1120 0D68                     u1220 0DFE  
                   u1140 0D86                     u1160 0DA4                     u1180 0DC2  
                   _LATB 000F8A                     _LATD 000F8C                     u1450 125E  
                   u1507 134A                     u1517 1354                     u1607 1022  
                   u1527 1360                     u1617 102C                     u1537 12DC  
                   u1627 1438                     u1547 12EC                     u1557 1318  
                   u1477 0B3A                     u1567 1328                     u1487 0B7E  
                   u1577 0FF4                     u1497 0BE4                     u1587 1006  
                   u1597 1010                     _RBIE 007F93                     _RBIF 007F90  
                   _RCIF 007CF5                     _RBPU 007F8F                     _TMR0 000FD6  
                   _TMR2 000FCC                     _TRMT 007D61                     _Cont 0021  
         ??_EscribeLCD_c 000C                     _Temp 0032                     _cara 0023  
                   _main 0AC4                     _duty 002B                     fsr2h 000FDA  
                   indf2 000FDF                     fsr1l 000FE1                     fsr2l 000FD9  
                   btemp 0033                     prodh 000FF4                     prodl 000FF3  
                   start 000E          __end_of_LeerBit 133E             ___param_bank 000000  
                  ??_ISR 0006           ?_InicializaLCD 0001                    ?_main 0001  
        __end_of___awdiv 0FEA          __end_of___lbdiv 12D4               _ComandoLCD 133E  
          EscribeLCD_c@a 000C          __end_of___lbmod 1396                    _T0CON 000FD5  
        ___awdiv@divisor 000A                    _T2CON 000FCA                    _LATE1 007C69  
                  _LATE2 007C6A          __end_of___lwdiv 1108          __end_of___lwmod 1224  
                  i2l300 0C5C                    i2l321 0CC2                    i2l313 0C9E  
                  i2l305 0C7A                    i2l330 0CFE                    i2l331 0CEE  
                  i2l323 0CCA                    i2l315 0CA6                    i2l307 0C82  
                  i2l333 0CF6                    i2l325 0CD2                    i2l317 0CAE  
                  i2l309 0C8A                    i2l336 0D28                    i2l329 0CE6  
                  i2l294 0C5E                    i2l295 0C3A                    i2l296 0C38  
        ___awdiv@counter 000C                    _RCREG 000FAE                    _RCSTA 000FAB  
                  _SPBRG 000FAF                    _PORTB 000F81                    _TRISB 000F93  
                  _TRISC 000F94                    _TRISD 000F95                    _TXREG 000FAD  
                  _TXSTA 000FAC                    _Tecla 0030      __end_of_LeerTeclado 0ECA  
         NuevoCaracter@c 000D           NuevoCaracter@i 000F                    tablat 000FF5  
            _HabilitaLCD 1434                    ttemp5 0034                    ttemp6 0037  
                  ttemp7 003B                    status 000FD8                    wtemp8 0034  
        ___lbdiv@divisor 0008          ___lbdiv@counter 000A         __end_of_BorraLCD 1434  
       __end_of_LeerHT11 130E          __initialization 1260         __end_of_LeerByte 13DE  
           __end_of_main 0C14                   ??_main 001D            __activetblptr 000002  
                 _ADCON0 000FC2                   _ADCON1 000FC1                   _ADCON2 000FC0  
  __end_of_NuevoCaracter 1260           DireccionaLCD@a 000C                   _CCPR1L 000FBE  
       ___awdiv@dividend 0008                   i2l2070 11D4                   i2l1600 0E3C  
                 i2l2400 0C92                   i2l1610 0E5A                   i2l1602 0E42  
                 i2l1612 0E60                   i2l1604 0E48                   i2l2412 0CB6  
                 i2l1606 0E4E                   i2l1608 0E54                   i2l1616 0E66  
                 i2l2424 0CDA                   i2l2442 0D10                   i2l1590 0E1E  
                 i2l1582 0E06                   i2l1592 0E24                   i2l1584 0E0C  
                 i2l1594 0E2A                   i2l1586 0E12                   i2l1596 0E30  
                 i2l1588 0E18                   i2l1860 1090                   i2l1598 0E36  
                 i2l1854 1054                   i2l1856 1066                   i2l1864 109A  
                 i2l1858 1086                   _OSCCON 000FD3                   _TMR0IE 007F95  
                 _TMR0IF 007F92                   _TMR0ON 007EAF                   _TMR2ON 007E52  
                 _TRISC0 007CA0                   _TRISC2 007CA2                   _TRISE0 007CB0  
                 _TRISE1 007CB1                   _TRISE2 007CB2                   _TRISC6 007CA6  
                 _TRISC7 007CA7                ??_LeerBit 0008    __end_of_DireccionaLCD 13F4  
             _RetardoLCD 0FEA      TransmitirDatos@Ent1 0011      TransmitirDatos@Ent2 0013  
    TransmitirDatos@Simb 0019                   ___wmul 1396                ??___awdiv 000C  
              ??___lbdiv 0009                ??___lbmod 0009                ??___lwdiv 000C  
              ??___lwmod 000C          ??_InicializaLCD 000C                   clear_0 1286  
       ___awdiv@quotient 000E                   isa$std 000001     __end_of_EscribeLCD_c 140A  
            ?_ComandoLCD 0001              _LeerTeclado 0E04             ?i2_EnviaDato 0001  
           __pdataCOMRAM 001F             __mediumconst 0000                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8               _Transmitir 145C  
       ___lbdiv@dividend 0009          ___lbmod@divisor 0008    __end_ofi2_HabilitaLCD 1450  
             __accesstop 0060  __end_of__initialization 128C          ___lbmod@counter 000A  
          ___rparam_used 000001           __pcstackCOMRAM 0001        __end_of_EnviaDato 119C  
       ___lbdiv@quotient 000B                ?_BorraLCD 0001                ?_LeerHT11 0001  
              ?_LeerByte 0001              ?_RetardoLCD 0001              RetardoLCD@a 0009  
      __end_of_Velocidad 0E04           ComandoLCD@data 0009                  ?___wmul 0008  
                _CCP1CON 000FBD               ??_BorraLCD 000C               ??_LeerHT11 000C  
            ?_Transmitir 0001        ??_MensajeLCD_Word 000E               ??_LeerByte 0009  
           ?_HabilitaLCD 0001                  _LeerBit 130E                  _Humedad 0031  
                __Hparam 0000                  __Lparam 0000     TransmitirDatos@TempC 001B  
                ___awdiv 0F66                  ___lbdiv 129A                  ___lbmod 136C  
                ___lwdiv 10B6                  ___lwmod 11E2             __psmallconst 0800  
                __pcinit 1260                  __ramtop 0800                  __ptext0 0AC4  
                __ptext1 0D2C                  __ptext2 0834                  __ptext3 1396  
                __ptext4 11E2                  __ptext5 10B6                  __ptext6 136C  
                __ptext7 129A                  __ptext8 0F66                  __ptext9 145C  
         __pintcode_body 0C14     end_of_initialization 128C            __Lmediumconst 0000  
                int_func 0C14             _EscribeLCD_c 13F4                  postdec1 000FE5  
      ??_TransmitirDatos 0015                  postinc0 000FEE             ??_ComandoLCD 0008  
           ?_LeerTeclado 0001         ___lbmod@dividend 0009                LeerByte@i 000B  
        i2EscribeLCD_c@a 0005              ___lbmod@rem 000B            ?i2_RetardoLCD 0001  
     __end_of_ComandoLCD 136C           __end_of___wmul 13BC            __pidataCOMRAM 1450  
  __end_of_InicializaLCD 0F66                _EnviaDato 1156      start_initialization 1260  
            __end_of_ISR 0D2C           ??i2_RetardoLCD 0001             ??_RetardoLCD 0008  
               ??___wmul 000C                _Velocidad 0D2C          _MensajeLCD_Word 1108  
             ?_EnviaDato 0001              __pbssCOMRAM 002B       __end_of_RetardoLCD 1050  
       MensajeLCD_Word@a 000D         MensajeLCD_Word@i 000F             ??_Transmitir 0008  
          _NuevoCaracter 1224                 ?_LeerBit 0001            _DireccionaLCD 13DE  
         i2_EscribeLCD_c 140A         ___lwdiv@dividend 0008                __pintcode 0008  
               ?___awdiv 0008                 ?___lbdiv 0008                 ?___lbmod 0008  
             ?_Velocidad 0008                 ?___lwdiv 0008                 ?___lwmod 0008  
     __end_of_Transmitir 1468              __smallconst 0800         ___lwdiv@quotient 000C  
         ?_NuevoCaracter 000D          _TransmitirDatos 0834           ___wmul@product 000C  
          i2_HabilitaLCD 1442           ?_DireccionaLCD 0001   __end_ofi2_EscribeLCD_c 1420  
               i2u170_47 1446                 i2u163_47 0C4C                 i2u164_47 0D1C  
               i2u165_47 105A                 i2u166_47 106C                 i2u167_47 1076  
               i2u168_47 1088                 i2u169_47 1092  __end_of_MensajeLCD_Word 1156  
      ___wmul@multiplier 0008            ??i2_EnviaDato 0003     __end_ofi2_RetardoLCD 10B6  
            ??_EnviaDato 000A                 _BorraLCD 1420                 _LeerHT11 12D4  
              copy_data0 1274                 _LeerByte 13BC           ?i2_HabilitaLCD 0001  
        ?i2_EscribeLCD_c 0001                 __Hrparam 0000                 __Lrparam 0000  
            ??_Velocidad 000A             i2EnviaDato@a 0004          ??_NuevoCaracter 000E  
__end_of_TransmitirDatos 0AC4          ___lwdiv@divisor 000A          ___lwdiv@counter 000E  
               __ptext10 1108                 __ptext11 13DE                 __ptext20 1156  
               __ptext12 1224                 __ptext21 0FEA                 __ptext13 13F4  
               __ptext22 1434                 __ptext14 133E                 __ptext15 12D4  
               __ptext24 140A                 __ptext16 13BC                 __ptext25 119C  
               __ptext17 130E                 __ptext26 1050                 __ptext18 0ECA  
               __ptext27 1442                 __ptext19 1420                 __ptext28 0E04  
    __end_ofi2_EnviaDato 11E2                 _contador 002D          ??_DireccionaLCD 000C  
               _interfaz 0022             Velocidad@val 0008                 isa$xinst 000000  
       ?_MensajeLCD_Word 000D                 int$flags 0033        NuevoCaracter@addr 000E  
        ??i2_HabilitaLCD 0001                 intlevel2 0000            ??_HabilitaLCD 0008  
       ___lwmod@dividend 0008            i2RetardoLCD@a 0002              i2_EnviaDato 119C  
        ___lwmod@divisor 000A          ___lwmod@counter 000C         ?_TransmitirDatos 0011  
          ?_EscribeLCD_c 0001               LeerBit@res 0008             i2_RetardoLCD 1050  
    __end_of_HabilitaLCD 1442              LeerByte@res 000A  
