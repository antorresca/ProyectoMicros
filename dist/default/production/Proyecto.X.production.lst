

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Wed Jun 07 18:21:24 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og9 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1
    36                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    37                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1
    43                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    44                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    45                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    46                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    47                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    48   000000                     
    49                           ; Version 2.40
    50                           ; Generated 04/07/2022 GMT
    51                           ; 
    52                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    53                           ; All rights reserved.
    54                           ; 
    55                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    56                           ; 
    57                           ; Redistribution and use in source and binary forms, with or without modification, are
    58                           ; permitted provided that the following conditions are met:
    59                           ; 
    60                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    61                           ;        conditions and the following disclaimer.
    62                           ; 
    63                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    64                           ;        of conditions and the following disclaimer in the documentation and/or other
    65                           ;        materials provided with the distribution. Publication is not required when
    66                           ;        this file is used in an embedded application.
    67                           ; 
    68                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    69                           ;        software without specific prior written permission.
    70                           ; 
    71                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    72                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    73                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    74                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    75                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    76                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    77                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    78                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    79                           ; 
    80                           ; 
    81                           ; Code-generator required, PIC18F4550 Definitions
    82                           ; 
    83                           ; SFR Addresses
    84   000000                     
    85                           	psect	idataCOMRAM
    86   0017E8                     __pidataCOMRAM:
    87                           	callstack 0
    88                           
    89                           ;initializer for Password@F3203
    90   0017E8  30                 	db	48
    91   0017E9  31                 	db	49
    92   0017EA  32                 	db	50
    93   0017EB  33                 	db	51
    94                           
    95                           ;initializer for _a
    96   0017EC  007D               	dw	125
    97                           
    98                           ;initializer for _Cont
    99   0017EE  06                 	db	6
   100                           
   101                           ;initializer for _interfaz
   102   0017EF  08                 	db	8
   103                           
   104                           ;initializer for _cara
   105   0017F0  00                 	db	0
   106   0017F1  0A                 	db	10
   107   0017F2  0A                 	db	10
   108   0017F3  0A                 	db	10
   109   0017F4  00                 	db	0
   110   0017F5  1F                 	db	31
   111   0017F6  0E                 	db	14
   112   0017F7  00                 	db	0
   113   000000                     _TMR1	set	4046
   114   000000                     _PORTB	set	3969
   115   000000                     _RCREG	set	4014
   116   000000                     _TXREG	set	4013
   117   000000                     _T1CON	set	4045
   118   000000                     _SPBRG	set	4015
   119   000000                     _TMR2	set	4044
   120   000000                     _TRISB	set	3987
   121   000000                     _RB7	set	31759
   122   000000                     _RB6	set	31758
   123   000000                     _RB5	set	31757
   124   000000                     _RB4	set	31756
   125   000000                     _GO	set	32273
   126   000000                     _TRMT	set	32097
   127   000000                     _GIE	set	32663
   128   000000                     _TMR1ON	set	32360
   129   000000                     _PEIE	set	32662
   130   000000                     _TRISC1	set	31905
   131   000000                     _TRISA5	set	31893
   132   000000                     _TRISC7	set	31911
   133   000000                     _TRISC6	set	31910
   134   000000                     _TMR2ON	set	32338
   135   000000                     _TRISC2	set	31906
   136   000000                     _TMR0ON	set	32431
   137   000000                     _TMR0IE	set	32661
   138   000000                     _TMR0IF	set	32658
   139   000000                     _RBIE	set	32659
   140   000000                     _TRISE1	set	31921
   141   000000                     _TRISE2	set	31922
   142   000000                     _LATE2	set	31850
   143   000000                     _LATD	set	3980
   144   000000                     _USBEN	set	31595
   145   000000                     _UTRDIS	set	31611
   146   000000                     _TRISA	set	3986
   147   000000                     _TRISC	set	3988
   148   000000                     _LATE1	set	31849
   149   000000                     _RCSTA	set	4011
   150   000000                     _TXSTA	set	4012
   151   000000                     _CCP1CON	set	4029
   152   000000                     _CCPR1L	set	4030
   153   000000                     _ADCON2	set	4032
   154   000000                     _ADCON1	set	4033
   155   000000                     _ADCON0	set	4034
   156   000000                     _TRISD	set	3989
   157   000000                     _OSCCON	set	4051
   158   000000                     _TMR1IE	set	31976
   159   000000                     _TMR1IF	set	31984
   160   000000                     _TRISE0	set	31920
   161   000000                     _T0CON	set	4053
   162   000000                     _RBPU	set	32655
   163   000000                     _ADRES	set	4035
   164   000000                     _T2CON	set	4042
   165   000000                     _PR2	set	4043
   166   000000                     _RBIF	set	32656
   167   000000                     _TMR0	set	4054
   168   000000                     _CCPR2	set	4027
   169   000000                     _CCP2CON	set	4026
   170   000000                     _RA5	set	31749
   171   000000                     _RC2	set	31762
   172   000000                     _RE0	set	31776
   173   000000                     _LATB	set	3978
   174                           
   175                           	psect	smallconst
   176   000800                     __psmallconst:
   177                           	callstack 0
   178   000800  00                 	db	0
   179   000801                     STR_4:
   180   000801  20                 	db	32
   181   000802  20                 	db	32
   182   000803  20                 	db	32
   183   000804  20                 	db	32
   184   000805  20                 	db	32
   185   000806  20                 	db	32
   186   000807  20                 	db	32
   187   000808  20                 	db	32
   188   000809  20                 	db	32
   189   00080A  20                 	db	32
   190   00080B  20                 	db	32
   191   00080C  20                 	db	32
   192   00080D  20                 	db	32
   193   00080E  20                 	db	32
   194   00080F  20                 	db	32
   195   000810  20                 	db	32
   196   000811  20                 	db	32
   197   000812  20                 	db	32
   198   000813  20                 	db	32
   199   000814  20                 	db	32
   200   000815  20                 	db	32
   201   000816  20                 	db	32
   202   000817  00                 	db	0
   203   000818                     STR_1:
   204   000818  42                 	db	66	;'B'
   205   000819  69                 	db	105	;'i'
   206   00081A  65                 	db	101	;'e'
   207   00081B  6E                 	db	110	;'n'
   208   00081C  76                 	db	118	;'v'
   209   00081D  65                 	db	101	;'e'
   210   00081E  6E                 	db	110	;'n'
   211   00081F  69                 	db	105	;'i'
   212   000820  64                 	db	100	;'d'
   213   000821  6F                 	db	111	;'o'
   214   000822  00                 	db	0
   215   000823                     STR_5:
   216   000823  49                 	db	73	;'I'
   217   000824  6E                 	db	110	;'n'
   218   000825  63                 	db	99	;'c'
   219   000826  6F                 	db	111	;'o'
   220   000827  72                 	db	114	;'r'
   221   000828  72                 	db	114	;'r'
   222   000829  65                 	db	101	;'e'
   223   00082A  63                 	db	99	;'c'
   224   00082B  74                 	db	116	;'t'
   225   00082C  6F                 	db	111	;'o'
   226   00082D  00                 	db	0
   227   00082E                     STR_3:
   228   00082E  50                 	db	80	;'P'
   229   00082F  61                 	db	97	;'a'
   230   000830  73                 	db	115	;'s'
   231   000831  73                 	db	115	;'s'
   232   000832  77                 	db	119	;'w'
   233   000833  6F                 	db	111	;'o'
   234   000834  72                 	db	114	;'r'
   235   000835  64                 	db	100	;'d'
   236   000836  3A                 	db	58	;':'
   237   000837  00                 	db	0
   238   000838                     STR_7:
   239   000838  54                 	db	84	;'T'
   240   000839  65                 	db	101	;'e'
   241   00083A  6D                 	db	109	;'m'
   242   00083B  70                 	db	112	;'p'
   243   00083C  3A                 	db	58	;':'
   244   00083D  00                 	db	0
   245   00083E                     STR_8:
   246   00083E  44                 	db	68	;'D'
   247   00083F  75                 	db	117	;'u'
   248   000840  74                 	db	116	;'t'
   249   000841  79                 	db	121	;'y'
   250   000842  3A                 	db	58	;':'
   251   000843  00                 	db	0
   252   000844  00                 	db	0	; dummy byte at the end
   253   000000                     
   254                           ; #config settings
   255                           
   256                           	psect	cinit
   257   001666                     __pcinit:
   258                           	callstack 0
   259   001666                     start_initialization:
   260                           	callstack 0
   261   001666                     __initialization:
   262                           	callstack 0
   263                           
   264                           ; Initialize objects allocated to COMRAM (16 bytes)
   265                           ; load TBLPTR registers with __pidataCOMRAM
   266   001666  0EE8               	movlw	low __pidataCOMRAM
   267   001668  6EF6               	movwf	tblptrl,c
   268   00166A  0E17               	movlw	high __pidataCOMRAM
   269   00166C  6EF7               	movwf	tblptrh,c
   270   00166E  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   271   001670  6EF8               	movwf	tblptru,c
   272   001672  EE00  F030         	lfsr	0,__pdataCOMRAM
   273   001676  EE10 F010          	lfsr	1,16
   274   00167A                     copy_data0:
   275   00167A  0009               	tblrd		*+
   276   00167C  CFF5 FFEE          	movff	tablat,postinc0
   277   001680  50E5               	movf	postdec1,w,c
   278   001682  50E1               	movf	fsr1l,w,c
   279   001684  E1FA               	bnz	copy_data0
   280                           
   281                           ; Clear objects allocated to COMRAM (12 bytes)
   282   001686  EE00  F040         	lfsr	0,__pbssCOMRAM
   283   00168A  0E0C               	movlw	12
   284   00168C                     clear_0:
   285   00168C  6AEE               	clrf	postinc0,c
   286   00168E  06E8               	decf	wreg,f,c
   287   001690  E1FD               	bnz	clear_0
   288   001692                     end_of_initialization:
   289                           	callstack 0
   290   001692                     __end_of__initialization:
   291                           	callstack 0
   292   001692  904C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   293   001694  924C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   294   001696  0E00               	movlw	low (__Lmediumconst shr (0+16))
   295   001698  6EF8               	movwf	tblptru,c
   296   00169A  0100               	movlb	0
   297   00169C  EF00  F006         	goto	_main	;jump to C main() function
   298                           
   299                           	psect	bssCOMRAM
   300   000040                     __pbssCOMRAM:
   301                           	callstack 0
   302   000040                     _teclaRecibidaIf:
   303                           	callstack 0
   304   000040                     	ds	2
   305   000042                     _teclaIf:
   306                           	callstack 0
   307   000042                     	ds	2
   308   000044                     _c:
   309                           	callstack 0
   310   000044                     	ds	2
   311   000046                     _Tecla:
   312                           	callstack 0
   313   000046                     	ds	1
   314   000047                     _Temp:
   315                           	callstack 0
   316   000047                     	ds	1
   317   000048                     _ing:
   318                           	callstack 0
   319   000048                     	ds	4
   320                           
   321                           	psect	dataCOMRAM
   322   000030                     __pdataCOMRAM:
   323                           	callstack 0
   324   000030                     Password@F3203:
   325                           	callstack 0
   326   000030                     	ds	4
   327   000034                     _a:
   328                           	callstack 0
   329   000034                     	ds	2
   330   000036                     _Cont:
   331                           	callstack 0
   332   000036                     	ds	1
   333   000037                     _interfaz:
   334                           	callstack 0
   335   000037                     	ds	1
   336   000038                     _cara:
   337                           	callstack 0
   338   000038                     	ds	8
   339                           
   340                           	psect	cstackCOMRAM
   341   000001                     __pcstackCOMRAM:
   342                           	callstack 0
   343   000001                     ??i2_RetardoLCD:
   344   000001                     
   345                           ; 2 bytes @ 0x0
   346   000001                     	ds	1
   347   000002                     i2RetardoLCD@a:
   348                           	callstack 0
   349                           
   350                           ; 1 bytes @ 0x1
   351   000002                     	ds	1
   352   000003                     ??i2_EnviaDato:
   353                           
   354                           ; 1 bytes @ 0x2
   355   000003                     	ds	1
   356   000004                     i2EnviaDato@a:
   357                           	callstack 0
   358                           
   359                           ; 1 bytes @ 0x3
   360   000004                     	ds	1
   361   000005                     i2EscribeLCD_c@a:
   362                           	callstack 0
   363                           
   364                           ; 1 bytes @ 0x4
   365   000005                     	ds	1
   366   000006                     ??_ISR:
   367                           
   368                           ; 1 bytes @ 0x5
   369   000006                     	ds	2
   370   000008                     ??_RetardoLCD:
   371   000008                     ??_Movimiento:
   372   000008                     ??_ComandoLCD:
   373   000008                     ?___wmul:
   374                           	callstack 0
   375   000008                     ?___awdiv:
   376                           	callstack 0
   377   000008                     ?___lwdiv:
   378                           	callstack 0
   379   000008                     ?___lwmod:
   380                           	callstack 0
   381   000008                     LeerBit@res:
   382                           	callstack 0
   383   000008                     Transmitir@BufferT:
   384                           	callstack 0
   385   000008                     ConvertirUnidades@canal:
   386                           	callstack 0
   387   000008                     Velocidad@val:
   388                           	callstack 0
   389   000008                     ___wmul@multiplier:
   390                           	callstack 0
   391   000008                     ___awdiv@dividend:
   392                           	callstack 0
   393   000008                     ___lwdiv@dividend:
   394                           	callstack 0
   395   000008                     ___lwmod@dividend:
   396                           	callstack 0
   397                           
   398                           ; 2 bytes @ 0x7
   399   000008                     	ds	1
   400   000009                     ??_LeerByte:
   401   000009                     ComandoLCD@data:
   402                           	callstack 0
   403   000009                     RetardoLCD@a:
   404                           	callstack 0
   405                           
   406                           ; 1 bytes @ 0x8
   407   000009                     	ds	1
   408   00000A                     ??_EnviaDato:
   409   00000A                     LeerByte@res:
   410                           	callstack 0
   411   00000A                     ___wmul@multiplicand:
   412                           	callstack 0
   413   00000A                     ___awdiv@divisor:
   414                           	callstack 0
   415   00000A                     ___lwdiv@divisor:
   416                           	callstack 0
   417   00000A                     ___lwmod@divisor:
   418                           	callstack 0
   419                           
   420                           ; 2 bytes @ 0x9
   421   00000A                     	ds	1
   422   00000B                     EnviaDato@a:
   423                           	callstack 0
   424   00000B                     LeerByte@i:
   425                           	callstack 0
   426                           
   427                           ; 1 bytes @ 0xA
   428   00000B                     	ds	1
   429   00000C                     ??_LeerHT11:
   430   00000C                     EscribeLCD_c@a:
   431                           	callstack 0
   432   00000C                     DireccionaLCD@a:
   433                           	callstack 0
   434   00000C                     ___awdiv@counter:
   435                           	callstack 0
   436   00000C                     ___lwmod@counter:
   437                           	callstack 0
   438   00000C                     ___wmul@product:
   439                           	callstack 0
   440   00000C                     ___lwdiv@quotient:
   441                           	callstack 0
   442                           
   443                           ; 2 bytes @ 0xB
   444   00000C                     	ds	1
   445   00000D                     ?_Password:
   446                           	callstack 0
   447   00000D                     NuevoCaracter@c:
   448                           	callstack 0
   449   00000D                     MensajeLCD_Word@a:
   450                           	callstack 0
   451   00000D                     Password@pass:
   452                           	callstack 0
   453   00000D                     ___awdiv@sign:
   454                           	callstack 0
   455                           
   456                           ; 1 bytes @ 0xC
   457   00000D                     	ds	1
   458   00000E                     ??_MensajeLCD_Word:
   459   00000E                     NuevoCaracter@addr:
   460                           	callstack 0
   461   00000E                     ___lwdiv@counter:
   462                           	callstack 0
   463   00000E                     ___awdiv@quotient:
   464                           	callstack 0
   465                           
   466                           ; 2 bytes @ 0xD
   467   00000E                     	ds	1
   468   00000F                     NuevoCaracter@i:
   469                           	callstack 0
   470   00000F                     MensajeLCD_Word@i:
   471                           	callstack 0
   472                           
   473                           ; 2 bytes @ 0xE
   474   00000F                     	ds	1
   475   000010                     ?___awmod:
   476                           	callstack 0
   477   000010                     ___awmod@dividend:
   478                           	callstack 0
   479                           
   480                           ; 2 bytes @ 0xF
   481   000010                     	ds	1
   482   000011                     Password@secret:
   483                           	callstack 0
   484                           
   485                           ; 4 bytes @ 0x10
   486   000011                     	ds	1
   487   000012                     ___awmod@divisor:
   488                           	callstack 0
   489                           
   490                           ; 2 bytes @ 0x11
   491   000012                     	ds	2
   492   000014                     ___awmod@counter:
   493                           	callstack 0
   494                           
   495                           ; 1 bytes @ 0x13
   496   000014                     	ds	1
   497   000015                     ___awmod@sign:
   498                           	callstack 0
   499   000015                     Password@access:
   500                           	callstack 0
   501                           
   502                           ; 2 bytes @ 0x14
   503   000015                     	ds	1
   504   000016                     TransmitirDatos@Ent1:
   505                           	callstack 0
   506                           
   507                           ; 2 bytes @ 0x15
   508   000016                     	ds	1
   509   000017                     Password@i:
   510                           	callstack 0
   511                           
   512                           ; 2 bytes @ 0x16
   513   000017                     	ds	1
   514   000018                     TransmitirDatos@Ent2:
   515                           	callstack 0
   516                           
   517                           ; 2 bytes @ 0x17
   518   000018                     	ds	2
   519   00001A                     ??_TransmitirDatos:
   520                           
   521                           ; 1 bytes @ 0x19
   522   00001A                     	ds	2
   523   00001C                     TransmitirDatos@n:
   524                           	callstack 0
   525                           
   526                           ; 2 bytes @ 0x1B
   527   00001C                     	ds	2
   528   00001E                     _TransmitirDatos$226:
   529                           	callstack 0
   530                           
   531                           ; 2 bytes @ 0x1D
   532   00001E                     	ds	2
   533   000020                     _TransmitirDatos$227:
   534                           	callstack 0
   535                           
   536                           ; 2 bytes @ 0x1F
   537   000020                     	ds	2
   538   000022                     _TransmitirDatos$229:
   539                           	callstack 0
   540                           
   541                           ; 2 bytes @ 0x21
   542   000022                     	ds	2
   543   000024                     _TransmitirDatos$230:
   544                           	callstack 0
   545                           
   546                           ; 2 bytes @ 0x23
   547   000024                     	ds	2
   548   000026                     _TransmitirDatos$868:
   549                           	callstack 0
   550                           
   551                           ; 2 bytes @ 0x25
   552   000026                     	ds	2
   553   000028                     TransmitirDatos@Simb:
   554                           	callstack 0
   555                           
   556                           ; 2 bytes @ 0x27
   557   000028                     	ds	2
   558   00002A                     TransmitirDatos@TempC:
   559                           	callstack 0
   560                           
   561                           ; 2 bytes @ 0x29
   562   00002A                     	ds	2
   563   00002C                     ??_main:
   564                           
   565                           ; 1 bytes @ 0x2B
   566   00002C                     	ds	2
   567   00002E                     main@i:
   568                           	callstack 0
   569                           
   570                           ; 2 bytes @ 0x2D
   571   00002E                     	ds	2
   572                           
   573 ;;
   574 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   575 ;;
   576 ;; *************** function _main *****************
   577 ;; Defined at:
   578 ;;		line 59 in file "Proyecto.c"
   579 ;; Parameters:    Size  Location     Type
   580 ;;		None
   581 ;; Auto vars:     Size  Location     Type
   582 ;;  i               2   45[COMRAM] int 
   583 ;; Return value:  Size  Location     Type
   584 ;;                  1    wreg      void 
   585 ;; Registers used:
   586 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   587 ;; Tracked objects:
   588 ;;		On entry : 0/0
   589 ;;		On exit  : 0/0
   590 ;;		Unchanged: 0/0
   591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   592 ;;      Params:         0       0       0       0       0       0       0       0       0
   593 ;;      Locals:         2       0       0       0       0       0       0       0       0
   594 ;;      Temps:          2       0       0       0       0       0       0       0       0
   595 ;;      Totals:         4       0       0       0       0       0       0       0       0
   596 ;;Total ram usage:        4 bytes
   597 ;; Hardware stack levels required when called: 9
   598 ;; This function calls:
   599 ;;		_BorraLCD
   600 ;;		_ConvertirUnidades
   601 ;;		_DireccionaLCD
   602 ;;		_EscribeLCD_c
   603 ;;		_InicializaLCD
   604 ;;		_LeerHT11
   605 ;;		_MensajeLCD_Word
   606 ;;		_Movimiento
   607 ;;		_NuevoCaracter
   608 ;;		_Password
   609 ;;		_TransmitirDatos
   610 ;;		_Velocidad
   611 ;; This function is called by:
   612 ;;		Startup code after reset
   613 ;; This function uses a non-reentrant model
   614 ;;
   615                           
   616                           	psect	text0
   617   000C00                     __ptext0:
   618                           	callstack 0
   619   000C00                     _main:
   620                           	callstack 22
   621                           
   622                           ;Proyecto.c: 61: TRISC = 0;
   623                           
   624                           ;incstack = 0
   625   000C00  0E00               	movlw	0
   626   000C02  6E94               	movwf	148,c	;volatile
   627                           
   628                           ;Proyecto.c: 62: OSCCON = 0b11110110;
   629   000C04  0EF6               	movlw	246
   630   000C06  6ED3               	movwf	211,c	;volatile
   631                           
   632                           ;Proyecto.c: 64: TRISD = 0;
   633   000C08  0E00               	movlw	0
   634   000C0A  6E95               	movwf	149,c	;volatile
   635                           
   636                           ;Proyecto.c: 65: TRISE0 = 1;
   637   000C0C  8096               	bsf	3990,0,c	;volatile
   638                           
   639                           ;Proyecto.c: 66: TRISE2 = 0;
   640   000C0E  9496               	bcf	3990,2,c	;volatile
   641                           
   642                           ;Proyecto.c: 67: TRISE1 = 0;
   643   000C10  9296               	bcf	3990,1,c	;volatile
   644                           
   645                           ;Proyecto.c: 68: InicializaLCD();
   646   000C12  ECF4  F008         	call	_InicializaLCD	;wreg free
   647                           
   648                           ;Proyecto.c: 69: BorraLCD();
   649   000C16  ECE0  F00B         	call	_BorraLCD	;wreg free
   650                           
   651                           ;Proyecto.c: 72: TRISA = 0b00100010;
   652   000C1A  0E22               	movlw	34
   653   000C1C  6E92               	movwf	146,c	;volatile
   654                           
   655                           ;Proyecto.c: 73: ADCON0 = 0b00000001;
   656   000C1E  0E01               	movlw	1
   657   000C20  6EC2               	movwf	194,c	;volatile
   658                           
   659                           ;Proyecto.c: 74: ADCON1 = 0b00001100;
   660   000C22  0E0C               	movlw	12
   661   000C24  6EC1               	movwf	193,c	;volatile
   662                           
   663                           ;Proyecto.c: 75: ADCON2 = 0b10001000;
   664   000C26  0E88               	movlw	136
   665   000C28  6EC0               	movwf	192,c	;volatile
   666                           
   667                           ;Proyecto.c: 78: TRISB=0b11110000;
   668   000C2A  0EF0               	movlw	240
   669   000C2C  6E93               	movwf	147,c	;volatile
   670                           
   671                           ;Proyecto.c: 79: RBPU=0;
   672   000C2E  9EF1               	bcf	4081,7,c	;volatile
   673                           
   674                           ;Proyecto.c: 80: RBIF=0;
   675   000C30  90F2               	bcf	4082,0,c	;volatile
   676                           
   677                           ;Proyecto.c: 81: RBIE=1;
   678   000C32  86F2               	bsf	4082,3,c	;volatile
   679                           
   680                           ;Proyecto.c: 84: T0CON=0b00000011;
   681   000C34  0E03               	movlw	3
   682   000C36  6ED5               	movwf	213,c	;volatile
   683                           
   684                           ;Proyecto.c: 85: TMR0IF=0;
   685   000C38  94F2               	bcf	4082,2,c	;volatile
   686                           
   687                           ;Proyecto.c: 86: TMR0=64286;
   688   000C3A  0EFB               	movlw	251
   689   000C3C  6ED7               	movwf	215,c	;volatile
   690   000C3E  0E1E               	movlw	30
   691   000C40  6ED6               	movwf	214,c	;volatile
   692                           
   693                           ;Proyecto.c: 87: TMR0IE=1;
   694   000C42  8AF2               	bsf	4082,5,c	;volatile
   695                           
   696                           ;Proyecto.c: 88: TMR0ON=1;
   697   000C44  8ED5               	bsf	4053,7,c	;volatile
   698                           
   699                           ;Proyecto.c: 91: TRISC2 = 0;
   700   000C46  9494               	bcf	3988,2,c	;volatile
   701                           
   702                           ;Proyecto.c: 92: PR2 = 125;
   703   000C48  0E7D               	movlw	125
   704   000C4A  6ECB               	movwf	203,c	;volatile
   705                           
   706                           ;Proyecto.c: 93: CCPR1L = 0;
   707   000C4C  0E00               	movlw	0
   708   000C4E  6EBE               	movwf	190,c	;volatile
   709                           
   710                           ;Proyecto.c: 94: T2CON = 0b00000010;
   711   000C50  0E02               	movlw	2
   712   000C52  6ECA               	movwf	202,c	;volatile
   713                           
   714                           ;Proyecto.c: 95: CCP1CON = 0b00001100;
   715   000C54  0E0C               	movlw	12
   716   000C56  6EBD               	movwf	189,c	;volatile
   717                           
   718                           ;Proyecto.c: 96: TMR2 = 0;
   719   000C58  0E00               	movlw	0
   720   000C5A  6ECC               	movwf	204,c	;volatile
   721                           
   722                           ;Proyecto.c: 97: TMR2ON = 1;
   723   000C5C  84CA               	bsf	4042,2,c	;volatile
   724                           
   725                           ;Proyecto.c: 100: TRISC6 = 1;
   726   000C5E  8C94               	bsf	3988,6,c	;volatile
   727                           
   728                           ;Proyecto.c: 101: TRISC7 = 1;
   729   000C60  8E94               	bsf	3988,7,c	;volatile
   730                           
   731                           ;Proyecto.c: 102: TXSTA = 0b00100000;
   732   000C62  0E20               	movlw	32
   733   000C64  6EAC               	movwf	172,c	;volatile
   734                           
   735                           ;Proyecto.c: 103: RCSTA = 0b10010000;
   736   000C66  0E90               	movlw	144
   737   000C68  6EAB               	movwf	171,c	;volatile
   738                           
   739                           ;Proyecto.c: 104: SPBRG = 12;
   740   000C6A  0E0C               	movlw	12
   741   000C6C  6EAF               	movwf	175,c	;volatile
   742                           
   743                           ;Proyecto.c: 107: TRISA5= 1;
   744   000C6E  8A92               	bsf	3986,5,c	;volatile
   745                           
   746                           ;Proyecto.c: 108: UTRDIS = 1;
   747   000C70  866F               	bsf	3951,3,c	;volatile
   748                           
   749                           ;Proyecto.c: 109: USBEN = 0;
   750   000C72  966D               	bcf	3949,3,c	;volatile
   751                           
   752                           ;Proyecto.c: 111: TRISC1=0;
   753   000C74  9294               	bcf	3988,1,c	;volatile
   754                           
   755                           ;Proyecto.c: 112: TMR1=60536;
   756   000C76  0EEC               	movlw	236
   757   000C78  6ECF               	movwf	207,c	;volatile
   758   000C7A  0E78               	movlw	120
   759   000C7C  6ECE               	movwf	206,c	;volatile
   760                           
   761                           ;Proyecto.c: 113: T1CON=0b10110000;
   762   000C7E  0EB0               	movlw	176
   763   000C80  6ECD               	movwf	205,c	;volatile
   764                           
   765                           ;Proyecto.c: 114: CCPR2=60536+125;
   766   000C82  0EEC               	movlw	236
   767   000C84  6EBC               	movwf	188,c	;volatile
   768   000C86  0EF5               	movlw	245
   769   000C88  6EBB               	movwf	187,c	;volatile
   770                           
   771                           ;Proyecto.c: 115: CCP2CON=0b00001001;
   772   000C8A  0E09               	movlw	9
   773   000C8C  6EBA               	movwf	186,c	;volatile
   774                           
   775                           ;Proyecto.c: 116: TMR1IF=0;
   776   000C8E  909E               	bcf	3998,0,c	;volatile
   777                           
   778                           ;Proyecto.c: 117: TMR1IE=1;
   779   000C90  809D               	bsf	3997,0,c	;volatile
   780                           
   781                           ;Proyecto.c: 118: PEIE=1;
   782   000C92  8CF2               	bsf	4082,6,c	;volatile
   783                           
   784                           ;Proyecto.c: 119: TMR1ON=1;
   785   000C94  80CD               	bsf	4045,0,c	;volatile
   786                           
   787                           ;Proyecto.c: 120: GIE=1;
   788   000C96  8EF2               	bsf	4082,7,c	;volatile
   789                           
   790                           ;Proyecto.c: 122: _delay((unsigned long)((1000)*(8000000/4000.0)));
   791   000C98  0E0B               	movlw	11
   792   000C9A  6E2D               	movwf	(??_main+1)^0,c
   793   000C9C  0E26               	movlw	38
   794   000C9E  6E2C               	movwf	??_main^0,c
   795   000CA0  0E5E               	movlw	94
   796   000CA2                     u2127:
   797   000CA2  2EE8               	decfsz	wreg,f,c
   798   000CA4  D7FE               	bra	u2127
   799   000CA6  2E2C               	decfsz	??_main^0,f,c
   800   000CA8  D7FC               	bra	u2127
   801   000CAA  2E2D               	decfsz	(??_main+1)^0,f,c
   802   000CAC  D7FA               	bra	u2127
   803                           
   804                           ;Proyecto.c: 123: BorraLCD();
   805   000CAE  ECE0  F00B         	call	_BorraLCD	;wreg free
   806                           
   807                           ;Proyecto.c: 124: NuevoCaracter(0,cara);
   808   000CB2  0E38               	movlw	low _cara
   809   000CB4  6E0D               	movwf	NuevoCaracter@c^0,c
   810   000CB6  0E00               	movlw	0
   811   000CB8  EC15  F00B         	call	_NuevoCaracter
   812                           
   813                           ;Proyecto.c: 125: DireccionaLCD(0x82);
   814   000CBC  0E82               	movlw	130
   815   000CBE  ECBF  F00B         	call	_DireccionaLCD
   816                           
   817                           ;Proyecto.c: 126: EscribeLCD_c(0);
   818   000CC2  0E00               	movlw	0
   819   000CC4  ECCA  F00B         	call	_EscribeLCD_c
   820                           
   821                           ;Proyecto.c: 127: MensajeLCD_Word("Bienvenido");
   822   000CC8  0E18               	movlw	low STR_1
   823   000CCA  6E0D               	movwf	MensajeLCD_Word@a^0,c
   824   000CCC  EC87  F00A         	call	_MensajeLCD_Word	;wreg free
   825                           
   826                           ;Proyecto.c: 128: EscribeLCD_c(0);
   827   000CD0  0E00               	movlw	0
   828   000CD2  ECCA  F00B         	call	_EscribeLCD_c
   829                           
   830                           ;Proyecto.c: 129: DireccionaLCD(0xC7);
   831   000CD6  0EC7               	movlw	199
   832   000CD8  ECBF  F00B         	call	_DireccionaLCD
   833                           
   834                           ;Proyecto.c: 130: _delay((unsigned long)((1500)*(8000000/4000.0)));
   835   000CDC  0E10               	movlw	16
   836   000CDE  6E2D               	movwf	(??_main+1)^0,c
   837   000CE0  0E39               	movlw	57
   838   000CE2  6E2C               	movwf	??_main^0,c
   839   000CE4  0E0E               	movlw	14
   840   000CE6                     u2137:
   841   000CE6  2EE8               	decfsz	wreg,f,c
   842   000CE8  D7FE               	bra	u2137
   843   000CEA  2E2C               	decfsz	??_main^0,f,c
   844   000CEC  D7FC               	bra	u2137
   845   000CEE  2E2D               	decfsz	(??_main+1)^0,f,c
   846   000CF0  D7FA               	bra	u2137
   847                           
   848                           ;Proyecto.c: 131: DireccionaLCD(0x80);
   849   000CF2  0E80               	movlw	128
   850   000CF4  ECBF  F00B         	call	_DireccionaLCD
   851                           
   852                           ;Proyecto.c: 132: MensajeLCD_Word("                ");
   853   000CF8  0E07               	movlw	low (STR_4+6)
   854   000CFA  6E0D               	movwf	MensajeLCD_Word@a^0,c
   855   000CFC  EC87  F00A         	call	_MensajeLCD_Word	;wreg free
   856                           
   857                           ;Proyecto.c: 133: DireccionaLCD(0x80);
   858   000D00  0E80               	movlw	128
   859   000D02  ECBF  F00B         	call	_DireccionaLCD
   860                           
   861                           ;Proyecto.c: 134: MensajeLCD_Word("Password:");
   862   000D06  0E2E               	movlw	low STR_3
   863   000D08  6E0D               	movwf	MensajeLCD_Word@a^0,c
   864   000D0A  EC87  F00A         	call	_MensajeLCD_Word	;wreg free
   865                           
   866                           ;Proyecto.c: 136: while (!Password(ing)) {
   867   000D0E  D05B               	goto	l2944
   868   000D10                     l2906:
   869                           
   870                           ;Proyecto.c: 137: teclaIf = 1;
   871   000D10  0E00               	movlw	0
   872   000D12  6E43               	movwf	(_teclaIf+1)^0,c
   873   000D14  0E01               	movlw	1
   874   000D16  6E42               	movwf	_teclaIf^0,c
   875                           
   876                           ;Proyecto.c: 138: for (int i = 0; i <4; i++) {
   877   000D18  0E00               	movlw	0
   878   000D1A  6E2F               	movwf	(main@i+1)^0,c
   879   000D1C  0E00               	movlw	0
   880   000D1E  6E2E               	movwf	main@i^0,c
   881   000D20                     l2912:
   882   000D20  5040               	movf	_teclaRecibidaIf^0,w,c
   883   000D22  1041               	iorwf	(_teclaRecibidaIf+1)^0,w,c
   884   000D24  B4D8               	btfsc	status,2,c
   885   000D26  D7FC               	goto	l2912
   886                           
   887                           ;Proyecto.c: 140: teclaRecibidaIf=0;
   888   000D28  0E00               	movlw	0
   889   000D2A  6E41               	movwf	(_teclaRecibidaIf+1)^0,c
   890   000D2C  0E00               	movlw	0
   891   000D2E  6E40               	movwf	_teclaRecibidaIf^0,c
   892                           
   893                           ;Proyecto.c: 141: ing[i] = Tecla;
   894   000D30  502E               	movf	main@i^0,w,c
   895   000D32  0F48               	addlw	low _ing
   896   000D34  6ED9               	movwf	fsr2l,c
   897   000D36  6ADA               	clrf	fsr2h,c
   898   000D38  C046  FFDF         	movff	_Tecla,indf2
   899   000D3C  4A2E               	infsnz	main@i^0,f,c
   900   000D3E  2A2F               	incf	(main@i+1)^0,f,c
   901   000D40  BE2F               	btfsc	(main@i+1)^0,7,c
   902   000D42  D7EE               	goto	l2912
   903   000D44  502F               	movf	(main@i+1)^0,w,c
   904   000D46  E104               	bnz	u2090
   905   000D48  0E04               	movlw	4
   906   000D4A  5C2E               	subwf	main@i^0,w,c
   907   000D4C  A0D8               	btfss	status,0,c
   908   000D4E  D7E8               	goto	l2912
   909   000D50                     u2090:
   910                           
   911                           ;Proyecto.c: 143: };Proyecto.c: 144: teclaIf = 0;
   912   000D50  0E00               	movlw	0
   913   000D52  6E43               	movwf	(_teclaIf+1)^0,c
   914   000D54  0E00               	movlw	0
   915   000D56  6E42               	movwf	_teclaIf^0,c
   916                           
   917                           ;Proyecto.c: 145: if (Password(ing)) {
   918   000D58  0E48               	movlw	low _ing
   919   000D5A  6E0D               	movwf	Password@pass^0,c
   920   000D5C  EC84  F009         	call	_Password	;wreg free
   921   000D60  500D               	movf	?_Password^0,w,c
   922   000D62  100E               	iorwf	(?_Password+1)^0,w,c
   923   000D64  B4D8               	btfsc	status,2,c
   924   000D66  D016               	goto	l2934
   925                           
   926                           ;Proyecto.c: 146: MensajeLCD_Word("                      ");
   927   000D68  0E01               	movlw	low STR_4
   928   000D6A  6E0D               	movwf	MensajeLCD_Word@a^0,c
   929   000D6C  EC87  F00A         	call	_MensajeLCD_Word	;wreg free
   930                           
   931                           ;Proyecto.c: 147: DireccionaLCD(0xC1);
   932   000D70  0EC1               	movlw	193
   933   000D72  ECBF  F00B         	call	_DireccionaLCD
   934                           
   935                           ;Proyecto.c: 148: EscribeLCD_c(0);
   936   000D76  0E00               	movlw	0
   937   000D78  ECCA  F00B         	call	_EscribeLCD_c
   938                           
   939                           ;Proyecto.c: 149: _delay((unsigned long)((1000)*(8000000/4000.0)));
   940   000D7C  0E0B               	movlw	11
   941   000D7E  6E2D               	movwf	(??_main+1)^0,c
   942   000D80  0E26               	movlw	38
   943   000D82  6E2C               	movwf	??_main^0,c
   944   000D84  0E5E               	movlw	94
   945   000D86                     u2147:
   946   000D86  2EE8               	decfsz	wreg,f,c
   947   000D88  D7FE               	bra	u2147
   948   000D8A  2E2C               	decfsz	??_main^0,f,c
   949   000D8C  D7FC               	bra	u2147
   950   000D8E  2E2D               	decfsz	(??_main+1)^0,f,c
   951   000D90  D7FA               	bra	u2147
   952                           
   953                           ;Proyecto.c: 150: } else {
   954   000D92  D019               	goto	l2944
   955   000D94                     l2934:
   956                           
   957                           ;Proyecto.c: 152: DireccionaLCD(0xC1);
   958   000D94  0EC1               	movlw	193
   959   000D96  ECBF  F00B         	call	_DireccionaLCD
   960                           
   961                           ;Proyecto.c: 153: MensajeLCD_Word("Incorrecto");
   962   000D9A  0E23               	movlw	low STR_5
   963   000D9C  6E0D               	movwf	MensajeLCD_Word@a^0,c
   964   000D9E  EC87  F00A         	call	_MensajeLCD_Word	;wreg free
   965                           
   966                           ;Proyecto.c: 154: _delay((unsigned long)((1000)*(8000000/4000.0)));
   967   000DA2  0E0B               	movlw	11
   968   000DA4  6E2D               	movwf	(??_main+1)^0,c
   969   000DA6  0E26               	movlw	38
   970   000DA8  6E2C               	movwf	??_main^0,c
   971   000DAA  0E5E               	movlw	94
   972   000DAC                     u2157:
   973   000DAC  2EE8               	decfsz	wreg,f,c
   974   000DAE  D7FE               	bra	u2157
   975   000DB0  2E2C               	decfsz	??_main^0,f,c
   976   000DB2  D7FC               	bra	u2157
   977   000DB4  2E2D               	decfsz	(??_main+1)^0,f,c
   978   000DB6  D7FA               	bra	u2157
   979                           
   980                           ;Proyecto.c: 155: DireccionaLCD(0xC1);
   981   000DB8  0EC1               	movlw	193
   982   000DBA  ECBF  F00B         	call	_DireccionaLCD
   983                           
   984                           ;Proyecto.c: 156: MensajeLCD_Word("                      ");
   985   000DBE  0E01               	movlw	low STR_4
   986   000DC0  6E0D               	movwf	MensajeLCD_Word@a^0,c
   987   000DC2  EC87  F00A         	call	_MensajeLCD_Word	;wreg free
   988   000DC6                     l2944:
   989   000DC6  0E48               	movlw	low _ing
   990   000DC8  6E0D               	movwf	Password@pass^0,c
   991   000DCA  EC84  F009         	call	_Password	;wreg free
   992   000DCE  500D               	movf	?_Password^0,w,c
   993   000DD0  100E               	iorwf	(?_Password+1)^0,w,c
   994   000DD2  B4D8               	btfsc	status,2,c
   995   000DD4  D79D               	goto	l2906
   996                           
   997                           ;Proyecto.c: 157: };Proyecto.c: 158: };Proyecto.c: 159: BorraLCD();
   998   000DD6  ECE0  F00B         	call	_BorraLCD	;wreg free
   999                           
  1000                           ;Proyecto.c: 164: _delay((unsigned long)((500)*(8000000/4000.0)));
  1001   000DDA  0E06               	movlw	6
  1002   000DDC  6E2D               	movwf	(??_main+1)^0,c
  1003   000DDE  0E13               	movlw	19
  1004   000DE0  6E2C               	movwf	??_main^0,c
  1005   000DE2  0EAE               	movlw	174
  1006   000DE4                     u2167:
  1007   000DE4  2EE8               	decfsz	wreg,f,c
  1008   000DE6  D7FE               	bra	u2167
  1009   000DE8  2E2C               	decfsz	??_main^0,f,c
  1010   000DEA  D7FC               	bra	u2167
  1011   000DEC  2E2D               	decfsz	(??_main+1)^0,f,c
  1012   000DEE  D7FA               	bra	u2167
  1013   000DF0                     l2950:
  1014                           
  1015                           ;Proyecto.c: 168: _delay((unsigned long)((500)*(8000000/4000.0)));
  1016   000DF0  0E06               	movlw	6
  1017   000DF2  6E2D               	movwf	(??_main+1)^0,c
  1018   000DF4  0E13               	movlw	19
  1019   000DF6  6E2C               	movwf	??_main^0,c
  1020   000DF8  0EAE               	movlw	174
  1021   000DFA                     u2177:
  1022   000DFA  2EE8               	decfsz	wreg,f,c
  1023   000DFC  D7FE               	bra	u2177
  1024   000DFE  2E2C               	decfsz	??_main^0,f,c
  1025   000E00  D7FC               	bra	u2177
  1026   000E02  2E2D               	decfsz	(??_main+1)^0,f,c
  1027   000E04  D7FA               	bra	u2177
  1028                           
  1029                           ;Proyecto.c: 169: LeerHT11();
  1030   000E06  EC50  F00B         	call	_LeerHT11	;wreg free
  1031                           
  1032                           ;Proyecto.c: 170: TransmitirDatos(0, 0);
  1033   000E0A  0E00               	movlw	0
  1034   000E0C  6E17               	movwf	(TransmitirDatos@Ent1+1)^0,c
  1035   000E0E  0E00               	movlw	0
  1036   000E10  6E16               	movwf	TransmitirDatos@Ent1^0,c
  1037   000E12  0E00               	movlw	0
  1038   000E14  6E19               	movwf	(TransmitirDatos@Ent2+1)^0,c
  1039   000E16  0E00               	movlw	0
  1040   000E18  6E18               	movwf	TransmitirDatos@Ent2^0,c
  1041   000E1A  EC23  F004         	call	_TransmitirDatos	;wreg free
  1042                           
  1043                           ;Proyecto.c: 171: Velocidad(Temp);
  1044   000E1E  C047  F008         	movff	_Temp,Velocidad@val
  1045   000E22  6A09               	clrf	(Velocidad@val+1)^0,c
  1046   000E24  ECA9  F007         	call	_Velocidad	;wreg free
  1047                           
  1048                           ;Proyecto.c: 172: ConvertirUnidades(0);
  1049   000E28  0E00               	movlw	0
  1050   000E2A  ECEA  F00B         	call	_ConvertirUnidades
  1051                           
  1052                           ;Proyecto.c: 173: Movimiento();
  1053   000E2E  EC23  F008         	call	_Movimiento	;wreg free
  1054   000E32  D7DE               	goto	l2950
  1055   000E34                     __end_of_main:
  1056                           	callstack 0
  1057                           
  1058 ;; *************** function _Velocidad *****************
  1059 ;; Defined at:
  1060 ;;		line 189 in file "Proyecto.c"
  1061 ;; Parameters:    Size  Location     Type
  1062 ;;  val             2    7[COMRAM] unsigned int 
  1063 ;; Auto vars:     Size  Location     Type
  1064 ;;		None
  1065 ;; Return value:  Size  Location     Type
  1066 ;;                  1    wreg      void 
  1067 ;; Registers used:
  1068 ;;		wreg, status,2, status,0
  1069 ;; Tracked objects:
  1070 ;;		On entry : 0/0
  1071 ;;		On exit  : 0/0
  1072 ;;		Unchanged: 0/0
  1073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1074 ;;      Params:         2       0       0       0       0       0       0       0       0
  1075 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1076 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1077 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1078 ;;Total ram usage:        2 bytes
  1079 ;; Hardware stack levels used: 1
  1080 ;; Hardware stack levels required when called: 4
  1081 ;; This function calls:
  1082 ;;		Nothing
  1083 ;; This function is called by:
  1084 ;;		_main
  1085 ;; This function uses a non-reentrant model
  1086 ;;
  1087                           
  1088                           	psect	text1
  1089   000F52                     __ptext1:
  1090                           	callstack 0
  1091   000F52                     _Velocidad:
  1092                           	callstack 26
  1093                           
  1094                           ;Proyecto.c: 190: if (val <= 22) {
  1095                           
  1096                           ;incstack = 0
  1097   000F52  5009               	movf	(Velocidad@val+1)^0,w,c
  1098   000F54  E108               	bnz	l2528
  1099   000F56  0E17               	movlw	23
  1100   000F58  5C08               	subwf	Velocidad@val^0,w,c
  1101   000F5A  B0D8               	btfsc	status,0,c
  1102   000F5C  D004               	goto	l2528
  1103                           
  1104                           ;Proyecto.c: 191: CCP1CON = 0;
  1105   000F5E  0E00               	movlw	0
  1106   000F60  6EBD               	movwf	189,c	;volatile
  1107                           
  1108                           ;Proyecto.c: 192: RC2 = 0;
  1109   000F62  9482               	bcf	3970,2,c	;volatile
  1110                           
  1111                           ;Proyecto.c: 193: } else if (val > 22 && val < 25) {
  1112   000F64  0012               	return	
  1113   000F66                     l2528:
  1114   000F66  5009               	movf	(Velocidad@val+1)^0,w,c
  1115   000F68  E104               	bnz	u1550
  1116   000F6A  0E17               	movlw	23
  1117   000F6C  5C08               	subwf	Velocidad@val^0,w,c
  1118   000F6E  A0D8               	btfss	status,0,c
  1119   000F70  D00B               	goto	l2534
  1120   000F72                     u1550:
  1121   000F72  5009               	movf	(Velocidad@val+1)^0,w,c
  1122   000F74  E109               	bnz	l2534
  1123   000F76  0E19               	movlw	25
  1124   000F78  5C08               	subwf	Velocidad@val^0,w,c
  1125   000F7A  B0D8               	btfsc	status,0,c
  1126   000F7C  D005               	goto	l2534
  1127                           
  1128                           ;Proyecto.c: 194: CCP1CON = 0b00001100;
  1129   000F7E  0E0C               	movlw	12
  1130   000F80  6EBD               	movwf	189,c	;volatile
  1131                           
  1132                           ;Proyecto.c: 195: CCPR1L = 19;
  1133   000F82  0E13               	movlw	19
  1134   000F84  6EBE               	movwf	190,c	;volatile
  1135                           
  1136                           ;Proyecto.c: 196: } else if (val >= 25 && val < 28) {
  1137   000F86  0012               	return	
  1138   000F88                     l2534:
  1139   000F88  5009               	movf	(Velocidad@val+1)^0,w,c
  1140   000F8A  E104               	bnz	u1570
  1141   000F8C  0E19               	movlw	25
  1142   000F8E  5C08               	subwf	Velocidad@val^0,w,c
  1143   000F90  A0D8               	btfss	status,0,c
  1144   000F92  D00B               	goto	l2540
  1145   000F94                     u1570:
  1146   000F94  5009               	movf	(Velocidad@val+1)^0,w,c
  1147   000F96  E109               	bnz	l2540
  1148   000F98  0E1C               	movlw	28
  1149   000F9A  5C08               	subwf	Velocidad@val^0,w,c
  1150   000F9C  B0D8               	btfsc	status,0,c
  1151   000F9E  D005               	goto	l2540
  1152                           
  1153                           ;Proyecto.c: 197: CCP1CON = 0b00001100;
  1154   000FA0  0E0C               	movlw	12
  1155   000FA2  6EBD               	movwf	189,c	;volatile
  1156                           
  1157                           ;Proyecto.c: 198: CCPR1L = 38;
  1158   000FA4  0E26               	movlw	38
  1159   000FA6  6EBE               	movwf	190,c	;volatile
  1160                           
  1161                           ;Proyecto.c: 199: } else if (val >= 28 && val < 31) {
  1162   000FA8  0012               	return	
  1163   000FAA                     l2540:
  1164   000FAA  5009               	movf	(Velocidad@val+1)^0,w,c
  1165   000FAC  E104               	bnz	u1590
  1166   000FAE  0E1C               	movlw	28
  1167   000FB0  5C08               	subwf	Velocidad@val^0,w,c
  1168   000FB2  A0D8               	btfss	status,0,c
  1169   000FB4  D00B               	goto	l2546
  1170   000FB6                     u1590:
  1171   000FB6  5009               	movf	(Velocidad@val+1)^0,w,c
  1172   000FB8  E109               	bnz	l2546
  1173   000FBA  0E1F               	movlw	31
  1174   000FBC  5C08               	subwf	Velocidad@val^0,w,c
  1175   000FBE  B0D8               	btfsc	status,0,c
  1176   000FC0  D005               	goto	l2546
  1177                           
  1178                           ;Proyecto.c: 200: CCP1CON = 0b00001100;
  1179   000FC2  0E0C               	movlw	12
  1180   000FC4  6EBD               	movwf	189,c	;volatile
  1181                           
  1182                           ;Proyecto.c: 201: CCPR1L = 57;
  1183   000FC6  0E39               	movlw	57
  1184   000FC8  6EBE               	movwf	190,c	;volatile
  1185                           
  1186                           ;Proyecto.c: 202: } else if (val >= 31 && val < 34) {
  1187   000FCA  0012               	return	
  1188   000FCC                     l2546:
  1189   000FCC  5009               	movf	(Velocidad@val+1)^0,w,c
  1190   000FCE  E104               	bnz	u1610
  1191   000FD0  0E1F               	movlw	31
  1192   000FD2  5C08               	subwf	Velocidad@val^0,w,c
  1193   000FD4  A0D8               	btfss	status,0,c
  1194   000FD6  D00B               	goto	l2552
  1195   000FD8                     u1610:
  1196   000FD8  5009               	movf	(Velocidad@val+1)^0,w,c
  1197   000FDA  E109               	bnz	l2552
  1198   000FDC  0E22               	movlw	34
  1199   000FDE  5C08               	subwf	Velocidad@val^0,w,c
  1200   000FE0  B0D8               	btfsc	status,0,c
  1201   000FE2  D005               	goto	l2552
  1202                           
  1203                           ;Proyecto.c: 203: CCP1CON = 0b00001100;
  1204   000FE4  0E0C               	movlw	12
  1205   000FE6  6EBD               	movwf	189,c	;volatile
  1206                           
  1207                           ;Proyecto.c: 204: CCPR1L = 76;
  1208   000FE8  0E4C               	movlw	76
  1209   000FEA  6EBE               	movwf	190,c	;volatile
  1210                           
  1211                           ;Proyecto.c: 205: } else if (val >= 34 && val < 37) {
  1212   000FEC  0012               	return	
  1213   000FEE                     l2552:
  1214   000FEE  5009               	movf	(Velocidad@val+1)^0,w,c
  1215   000FF0  E104               	bnz	u1630
  1216   000FF2  0E22               	movlw	34
  1217   000FF4  5C08               	subwf	Velocidad@val^0,w,c
  1218   000FF6  A0D8               	btfss	status,0,c
  1219   000FF8  D00B               	goto	l2558
  1220   000FFA                     u1630:
  1221   000FFA  5009               	movf	(Velocidad@val+1)^0,w,c
  1222   000FFC  E109               	bnz	l2558
  1223   000FFE  0E25               	movlw	37
  1224   001000  5C08               	subwf	Velocidad@val^0,w,c
  1225   001002  B0D8               	btfsc	status,0,c
  1226   001004  D005               	goto	l2558
  1227                           
  1228                           ;Proyecto.c: 206: CCP1CON = 0b00001100;
  1229   001006  0E0C               	movlw	12
  1230   001008  6EBD               	movwf	189,c	;volatile
  1231                           
  1232                           ;Proyecto.c: 207: CCPR1L = 95;
  1233   00100A  0E5F               	movlw	95
  1234   00100C  6EBE               	movwf	190,c	;volatile
  1235                           
  1236                           ;Proyecto.c: 208: } else if (val >= 37 && val < 40) {
  1237   00100E  0012               	return	
  1238   001010                     l2558:
  1239   001010  5009               	movf	(Velocidad@val+1)^0,w,c
  1240   001012  E104               	bnz	u1650
  1241   001014  0E25               	movlw	37
  1242   001016  5C08               	subwf	Velocidad@val^0,w,c
  1243   001018  A0D8               	btfss	status,0,c
  1244   00101A  D00B               	goto	l2564
  1245   00101C                     u1650:
  1246   00101C  5009               	movf	(Velocidad@val+1)^0,w,c
  1247   00101E  E109               	bnz	l2564
  1248   001020  0E28               	movlw	40
  1249   001022  5C08               	subwf	Velocidad@val^0,w,c
  1250   001024  B0D8               	btfsc	status,0,c
  1251   001026  D005               	goto	l2564
  1252                           
  1253                           ;Proyecto.c: 209: CCP1CON = 0b00001100;
  1254   001028  0E0C               	movlw	12
  1255   00102A  6EBD               	movwf	189,c	;volatile
  1256                           
  1257                           ;Proyecto.c: 210: CCPR1L = 113;
  1258   00102C  0E71               	movlw	113
  1259   00102E  6EBE               	movwf	190,c	;volatile
  1260                           
  1261                           ;Proyecto.c: 211: } else if (val >= 40) {
  1262   001030  0012               	return	
  1263   001032                     l2564:
  1264   001032  5009               	movf	(Velocidad@val+1)^0,w,c
  1265   001034  E104               	bnz	u1670
  1266   001036  0E28               	movlw	40
  1267   001038  5C08               	subwf	Velocidad@val^0,w,c
  1268   00103A  A0D8               	btfss	status,0,c
  1269   00103C  0012               	return	
  1270   00103E                     u1670:
  1271                           
  1272                           ;Proyecto.c: 212: CCP1CON = 0;
  1273   00103E  0E00               	movlw	0
  1274   001040  6EBD               	movwf	189,c	;volatile
  1275                           
  1276                           ;Proyecto.c: 213: RC2 = 1;
  1277   001042  8482               	bsf	3970,2,c	;volatile
  1278   001044  0012               	return	
  1279   001046                     __end_of_Velocidad:
  1280                           	callstack 0
  1281                           
  1282 ;; *************** function _TransmitirDatos *****************
  1283 ;; Defined at:
  1284 ;;		line 343 in file "Proyecto.c"
  1285 ;; Parameters:    Size  Location     Type
  1286 ;;  Ent1            2   21[COMRAM] unsigned int 
  1287 ;;  Ent2            2   23[COMRAM] unsigned int 
  1288 ;; Auto vars:     Size  Location     Type
  1289 ;;  TempC           2   41[COMRAM] unsigned int 
  1290 ;;  Simb            2   39[COMRAM] unsigned int 
  1291 ;;  n               2   27[COMRAM] unsigned int 
  1292 ;; Return value:  Size  Location     Type
  1293 ;;                  1    wreg      void 
  1294 ;; Registers used:
  1295 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1296 ;; Tracked objects:
  1297 ;;		On entry : 0/0
  1298 ;;		On exit  : 0/0
  1299 ;;		Unchanged: 0/0
  1300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1301 ;;      Params:         4       0       0       0       0       0       0       0       0
  1302 ;;      Locals:        16       0       0       0       0       0       0       0       0
  1303 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1304 ;;      Totals:        22       0       0       0       0       0       0       0       0
  1305 ;;Total ram usage:       22 bytes
  1306 ;; Hardware stack levels used: 1
  1307 ;; Hardware stack levels required when called: 8
  1308 ;; This function calls:
  1309 ;;		_BorraLCD
  1310 ;;		_DireccionaLCD
  1311 ;;		_EscribeLCD_c
  1312 ;;		_MensajeLCD_Word
  1313 ;;		_Transmitir
  1314 ;;		___awdiv
  1315 ;;		___awmod
  1316 ;;		___lwdiv
  1317 ;;		___lwmod
  1318 ;;		___wmul
  1319 ;; This function is called by:
  1320 ;;		_main
  1321 ;; This function uses a non-reentrant model
  1322 ;;
  1323                           
  1324                           	psect	text2
  1325   000846                     __ptext2:
  1326                           	callstack 0
  1327   000846                     _TransmitirDatos:
  1328                           	callstack 22
  1329                           
  1330                           ;Proyecto.c: 344: unsigned int n = Ent1 * 10 + Ent2, TempC = Temp;
  1331                           
  1332                           ;incstack = 0
  1333   000846  C016  F008         	movff	TransmitirDatos@Ent1,___wmul@multiplier
  1334   00084A  C017  F009         	movff	TransmitirDatos@Ent1+1,___wmul@multiplier+1
  1335   00084E  0E00               	movlw	0
  1336   000850  6E0B               	movwf	(___wmul@multiplicand+1)^0,c
  1337   000852  0E0A               	movlw	10
  1338   000854  6E0A               	movwf	___wmul@multiplicand^0,c
  1339   000856  EC9B  F00B         	call	___wmul	;wreg free
  1340   00085A  5018               	movf	TransmitirDatos@Ent2^0,w,c
  1341   00085C  2408               	addwf	?___wmul^0,w,c
  1342   00085E  6E1C               	movwf	TransmitirDatos@n^0,c
  1343   000860  5019               	movf	(TransmitirDatos@Ent2+1)^0,w,c
  1344   000862  2009               	addwfc	(?___wmul+1)^0,w,c
  1345   000864  6E1D               	movwf	(TransmitirDatos@n+1)^0,c
  1346   000866  C047  F02A         	movff	_Temp,TransmitirDatos@TempC
  1347   00086A  6A2B               	clrf	(TransmitirDatos@TempC+1)^0,c
  1348                           
  1349                           ;Proyecto.c: 345: unsigned int Simb = 67;
  1350   00086C  0E00               	movlw	0
  1351   00086E  6E29               	movwf	(TransmitirDatos@Simb+1)^0,c
  1352   000870  0E43               	movlw	67
  1353   000872  6E28               	movwf	TransmitirDatos@Simb^0,c
  1354                           
  1355                           ;Proyecto.c: 346: BorraLCD();
  1356   000874  ECE0  F00B         	call	_BorraLCD	;wreg free
  1357                           
  1358                           ;Proyecto.c: 347: switch (n) {
  1359   000878  D03E               	goto	l2420
  1360   00087A                     l350:
  1361                           
  1362                           ;Proyecto.c: 349: TempC = Temp;
  1363   00087A  C047  F02A         	movff	_Temp,TransmitirDatos@TempC
  1364   00087E  6A2B               	clrf	(TransmitirDatos@TempC+1)^0,c
  1365                           
  1366                           ;Proyecto.c: 350: Simb = 67;
  1367   000880  0E00               	movlw	0
  1368   000882  6E29               	movwf	(TransmitirDatos@Simb+1)^0,c
  1369   000884  0E43               	movlw	67
  1370   000886  D035               	goto	L3
  1371   000888                     l2406:
  1372                           
  1373                           ;Proyecto.c: 353: TempC = Temp + 273;
  1374   000888  0E11               	movlw	17
  1375   00088A  2447               	addwf	_Temp^0,w,c
  1376   00088C  6E2A               	movwf	TransmitirDatos@TempC^0,c
  1377   00088E  6A2B               	clrf	(TransmitirDatos@TempC+1)^0,c
  1378   000890  0E01               	movlw	1
  1379   000892  222B               	addwfc	(TransmitirDatos@TempC+1)^0,f,c
  1380                           
  1381                           ;Proyecto.c: 354: Simb = 75;
  1382   000894  0E00               	movlw	0
  1383   000896  6E29               	movwf	(TransmitirDatos@Simb+1)^0,c
  1384   000898  0E4B               	movlw	75
  1385   00089A  D02B               	goto	L3
  1386   00089C                     l2410:
  1387                           
  1388                           ;Proyecto.c: 357: TempC = Temp * 9 / 5 + 492;
  1389   00089C  5047               	movf	_Temp^0,w,c
  1390   00089E  0D09               	mullw	9
  1391   0008A0  CFF3 F008          	movff	prodl,___awdiv@dividend
  1392   0008A4  CFF4 F009          	movff	prodh,___awdiv@dividend+1
  1393   0008A8  0E00               	movlw	0
  1394   0008AA  6E0B               	movwf	(___awdiv@divisor+1)^0,c
  1395   0008AC  0E05               	movlw	5
  1396   0008AE  6E0A               	movwf	___awdiv@divisor^0,c
  1397   0008B0  EC42  F009         	call	___awdiv	;wreg free
  1398   0008B4  0EEC               	movlw	236
  1399   0008B6  2408               	addwf	?___awdiv^0,w,c
  1400   0008B8  6E2A               	movwf	TransmitirDatos@TempC^0,c
  1401   0008BA  0E01               	movlw	1
  1402   0008BC  2009               	addwfc	(?___awdiv+1)^0,w,c
  1403   0008BE  6E2B               	movwf	(TransmitirDatos@TempC+1)^0,c
  1404                           
  1405                           ;Proyecto.c: 358: Simb = 82;
  1406   0008C0  0E00               	movlw	0
  1407   0008C2  6E29               	movwf	(TransmitirDatos@Simb+1)^0,c
  1408   0008C4  0E52               	movlw	82
  1409   0008C6  D015               	goto	L3
  1410   0008C8                     l2414:
  1411                           
  1412                           ;Proyecto.c: 361: TempC = Temp * 9 / 5 + 32;
  1413   0008C8  5047               	movf	_Temp^0,w,c
  1414   0008CA  0D09               	mullw	9
  1415   0008CC  CFF3 F008          	movff	prodl,___awdiv@dividend
  1416   0008D0  CFF4 F009          	movff	prodh,___awdiv@dividend+1
  1417   0008D4  0E00               	movlw	0
  1418   0008D6  6E0B               	movwf	(___awdiv@divisor+1)^0,c
  1419   0008D8  0E05               	movlw	5
  1420   0008DA  6E0A               	movwf	___awdiv@divisor^0,c
  1421   0008DC  EC42  F009         	call	___awdiv	;wreg free
  1422   0008E0  0E20               	movlw	32
  1423   0008E2  2408               	addwf	?___awdiv^0,w,c
  1424   0008E4  6E2A               	movwf	TransmitirDatos@TempC^0,c
  1425   0008E6  0E00               	movlw	0
  1426   0008E8  2009               	addwfc	(?___awdiv+1)^0,w,c
  1427   0008EA  6E2B               	movwf	(TransmitirDatos@TempC+1)^0,c
  1428                           
  1429                           ;Proyecto.c: 362: Simb = 70;
  1430   0008EC  0E00               	movlw	0
  1431   0008EE  6E29               	movwf	(TransmitirDatos@Simb+1)^0,c
  1432   0008F0  0E46               	movlw	70
  1433   0008F2                     L3:
  1434   0008F2  6E28               	movwf	TransmitirDatos@Simb^0,c
  1435                           
  1436                           ;Proyecto.c: 363: break;
  1437   0008F4  D015               	goto	l2422
  1438   0008F6                     l2420:
  1439   0008F6  C01C  F01A         	movff	TransmitirDatos@n,??_TransmitirDatos
  1440   0008FA  C01D  F01B         	movff	TransmitirDatos@n+1,??_TransmitirDatos+1
  1441                           
  1442                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1443                           ; Switch size 1, requested type "simple"
  1444                           ; Number of cases is 1, Range of values is 0 to 0
  1445                           ; switch strategies available:
  1446                           ; Name         Instructions Cycles
  1447                           ; simple_byte            4     3 (average)
  1448                           ;	Chosen strategy is simple_byte
  1449   0008FE  501B               	movf	(??_TransmitirDatos+1)^0,w,c
  1450   000900  0A00               	xorlw	0	; case 0
  1451   000902  A4D8               	btfss	status,2,c
  1452   000904  D00D               	goto	l2422
  1453                           
  1454                           ; Switch size 1, requested type "simple"
  1455                           ; Number of cases is 4, Range of values is 0 to 11
  1456                           ; switch strategies available:
  1457                           ; Name         Instructions Cycles
  1458                           ; simple_byte           13     7 (average)
  1459                           ;	Chosen strategy is simple_byte
  1460   000906  501A               	movf	??_TransmitirDatos^0,w,c
  1461   000908  0A00               	xorlw	0	; case 0
  1462   00090A  B4D8               	btfsc	status,2,c
  1463   00090C  D7B6               	goto	l350
  1464   00090E  0A01               	xorlw	1	; case 1
  1465   000910  B4D8               	btfsc	status,2,c
  1466   000912  D7BA               	goto	l2406
  1467   000914  0A0B               	xorlw	11	; case 10
  1468   000916  B4D8               	btfsc	status,2,c
  1469   000918  D7C1               	goto	l2410
  1470   00091A  0A01               	xorlw	1	; case 11
  1471   00091C  B4D8               	btfsc	status,2,c
  1472   00091E  D7D4               	goto	l2414
  1473   000920                     l2422:
  1474                           
  1475                           ;Proyecto.c: 365: Transmitir('T');
  1476   000920  0E54               	movlw	84
  1477   000922  EC0A  F00C         	call	_Transmitir
  1478                           
  1479                           ;Proyecto.c: 366: Transmitir('e');
  1480   000926  0E65               	movlw	101
  1481   000928  EC0A  F00C         	call	_Transmitir
  1482                           
  1483                           ;Proyecto.c: 367: Transmitir('m');
  1484   00092C  0E6D               	movlw	109
  1485   00092E  EC0A  F00C         	call	_Transmitir
  1486                           
  1487                           ;Proyecto.c: 368: Transmitir('p');
  1488   000932  0E70               	movlw	112
  1489   000934  EC0A  F00C         	call	_Transmitir
  1490                           
  1491                           ;Proyecto.c: 369: Transmitir(':');
  1492   000938  0E3A               	movlw	58
  1493   00093A  EC0A  F00C         	call	_Transmitir
  1494                           
  1495                           ;Proyecto.c: 370: Transmitir(' ');
  1496   00093E  0E20               	movlw	32
  1497   000940  EC0A  F00C         	call	_Transmitir
  1498                           
  1499                           ;Proyecto.c: 372: MensajeLCD_Word("Temp:");
  1500   000944  0E38               	movlw	low STR_7
  1501   000946  6E0D               	movwf	MensajeLCD_Word@a^0,c
  1502   000948  EC87  F00A         	call	_MensajeLCD_Word	;wreg free
  1503                           
  1504                           ;Proyecto.c: 373: if (TempC / 100 > 0) {
  1505   00094C  C02A  F008         	movff	TransmitirDatos@TempC,___lwdiv@dividend
  1506   000950  C02B  F009         	movff	TransmitirDatos@TempC+1,___lwdiv@dividend+1
  1507   000954  0E00               	movlw	0
  1508   000956  6E0B               	movwf	(___lwdiv@divisor+1)^0,c
  1509   000958  0E64               	movlw	100
  1510   00095A  6E0A               	movwf	___lwdiv@divisor^0,c
  1511   00095C  EC5E  F00A         	call	___lwdiv	;wreg free
  1512   000960  5008               	movf	?___lwdiv^0,w,c
  1513   000962  1009               	iorwf	(?___lwdiv+1)^0,w,c
  1514   000964  B4D8               	btfsc	status,2,c
  1515   000966  D02A               	goto	l355
  1516                           
  1517                           ;Proyecto.c: 374: Transmitir(TempC / 100 + 48);
  1518   000968  C02A  F008         	movff	TransmitirDatos@TempC,___lwdiv@dividend
  1519   00096C  C02B  F009         	movff	TransmitirDatos@TempC+1,___lwdiv@dividend+1
  1520   000970  0E00               	movlw	0
  1521   000972  6E0B               	movwf	(___lwdiv@divisor+1)^0,c
  1522   000974  0E64               	movlw	100
  1523   000976  6E0A               	movwf	___lwdiv@divisor^0,c
  1524   000978  EC5E  F00A         	call	___lwdiv	;wreg free
  1525   00097C  5008               	movf	?___lwdiv^0,w,c
  1526   00097E  0F30               	addlw	48
  1527   000980  EC0A  F00C         	call	_Transmitir
  1528                           
  1529                           ;Proyecto.c: 375: EscribeLCD_c(TempC / 100 + 48);
  1530   000984  C02A  F008         	movff	TransmitirDatos@TempC,___lwdiv@dividend
  1531   000988  C02B  F009         	movff	TransmitirDatos@TempC+1,___lwdiv@dividend+1
  1532   00098C  0E00               	movlw	0
  1533   00098E  6E0B               	movwf	(___lwdiv@divisor+1)^0,c
  1534   000990  0E64               	movlw	100
  1535   000992  6E0A               	movwf	___lwdiv@divisor^0,c
  1536   000994  EC5E  F00A         	call	___lwdiv	;wreg free
  1537   000998  5008               	movf	?___lwdiv^0,w,c
  1538   00099A  0F30               	addlw	48
  1539   00099C  ECCA  F00B         	call	_EscribeLCD_c
  1540                           
  1541                           ;Proyecto.c: 376: TempC = TempC % 100;
  1542   0009A0  C02A  F008         	movff	TransmitirDatos@TempC,___lwmod@dividend
  1543   0009A4  C02B  F009         	movff	TransmitirDatos@TempC+1,___lwmod@dividend+1
  1544   0009A8  0E00               	movlw	0
  1545   0009AA  6E0B               	movwf	(___lwmod@divisor+1)^0,c
  1546   0009AC  0E64               	movlw	100
  1547   0009AE  6E0A               	movwf	___lwmod@divisor^0,c
  1548   0009B0  ECF4  F00A         	call	___lwmod	;wreg free
  1549   0009B4  C008  F02A         	movff	?___lwmod,TransmitirDatos@TempC
  1550   0009B8  C009  F02B         	movff	?___lwmod+1,TransmitirDatos@TempC+1
  1551   0009BC                     l355:
  1552                           
  1553                           ;Proyecto.c: 377: };Proyecto.c: 378: Transmitir(TempC / 10 + 48);
  1554   0009BC  C02A  F008         	movff	TransmitirDatos@TempC,___lwdiv@dividend
  1555   0009C0  C02B  F009         	movff	TransmitirDatos@TempC+1,___lwdiv@dividend+1
  1556   0009C4  0E00               	movlw	0
  1557   0009C6  6E0B               	movwf	(___lwdiv@divisor+1)^0,c
  1558   0009C8  0E0A               	movlw	10
  1559   0009CA  6E0A               	movwf	___lwdiv@divisor^0,c
  1560   0009CC  EC5E  F00A         	call	___lwdiv	;wreg free
  1561   0009D0  5008               	movf	?___lwdiv^0,w,c
  1562   0009D2  0F30               	addlw	48
  1563   0009D4  EC0A  F00C         	call	_Transmitir
  1564                           
  1565                           ;Proyecto.c: 379: Transmitir(TempC % 10 + 48);
  1566   0009D8  C02A  F008         	movff	TransmitirDatos@TempC,___lwmod@dividend
  1567   0009DC  C02B  F009         	movff	TransmitirDatos@TempC+1,___lwmod@dividend+1
  1568   0009E0  0E00               	movlw	0
  1569   0009E2  6E0B               	movwf	(___lwmod@divisor+1)^0,c
  1570   0009E4  0E0A               	movlw	10
  1571   0009E6  6E0A               	movwf	___lwmod@divisor^0,c
  1572   0009E8  ECF4  F00A         	call	___lwmod	;wreg free
  1573   0009EC  5008               	movf	?___lwmod^0,w,c
  1574   0009EE  0F30               	addlw	48
  1575   0009F0  EC0A  F00C         	call	_Transmitir
  1576                           
  1577                           ;Proyecto.c: 380: Transmitir(167);
  1578   0009F4  0EA7               	movlw	167
  1579   0009F6  EC0A  F00C         	call	_Transmitir
  1580                           
  1581                           ;Proyecto.c: 381: Transmitir(Simb);
  1582   0009FA  5028               	movf	TransmitirDatos@Simb^0,w,c
  1583   0009FC  EC0A  F00C         	call	_Transmitir
  1584                           
  1585                           ;Proyecto.c: 382: Transmitir(' ');
  1586   000A00  0E20               	movlw	32
  1587   000A02  EC0A  F00C         	call	_Transmitir
  1588                           
  1589                           ;Proyecto.c: 383: Transmitir('\n');
  1590   000A06  0E0A               	movlw	10
  1591   000A08  EC0A  F00C         	call	_Transmitir
  1592                           
  1593                           ;Proyecto.c: 384: Transmitir('D');
  1594   000A0C  0E44               	movlw	68
  1595   000A0E  EC0A  F00C         	call	_Transmitir
  1596                           
  1597                           ;Proyecto.c: 385: Transmitir('u');
  1598   000A12  0E75               	movlw	117
  1599   000A14  EC0A  F00C         	call	_Transmitir
  1600                           
  1601                           ;Proyecto.c: 386: Transmitir('t');
  1602   000A18  0E74               	movlw	116
  1603   000A1A  EC0A  F00C         	call	_Transmitir
  1604                           
  1605                           ;Proyecto.c: 387: Transmitir('y');
  1606   000A1E  0E79               	movlw	121
  1607   000A20  EC0A  F00C         	call	_Transmitir
  1608                           
  1609                           ;Proyecto.c: 388: Transmitir(':');
  1610   000A24  0E3A               	movlw	58
  1611   000A26  EC0A  F00C         	call	_Transmitir
  1612                           
  1613                           ;Proyecto.c: 389: Transmitir(' ');
  1614   000A2A  0E20               	movlw	32
  1615   000A2C  EC0A  F00C         	call	_Transmitir
  1616                           
  1617                           ;Proyecto.c: 390: if(CCP1CON==0&& RC2==1) Transmitir(1 + 48);
  1618   000A30  50BD               	movf	189,w,c	;volatile
  1619   000A32  B4D8               	btfsc	status,2,c
  1620   000A34  A482               	btfss	3970,2,c	;volatile
  1621   000A36  D003               	goto	l2456
  1622   000A38  0E31               	movlw	49
  1623   000A3A  EC0A  F00C         	call	_Transmitir
  1624   000A3E                     l2456:
  1625                           
  1626                           ;Proyecto.c: 391: Transmitir((CCP1CON!=0)? ((CCPR1L*100/126) / 10 + 48):0+48);
  1627   000A3E  50BD               	movf	189,w,c	;volatile
  1628   000A40  A4D8               	btfss	status,2,c
  1629   000A42  D005               	goto	l2460
  1630   000A44  0E00               	movlw	0
  1631   000A46  6E1F               	movwf	(_TransmitirDatos$226+1)^0,c
  1632   000A48  0E30               	movlw	48
  1633   000A4A  6E1E               	movwf	_TransmitirDatos$226^0,c
  1634   000A4C  D020               	goto	l2464
  1635   000A4E                     l2460:
  1636   000A4E  0E00               	movlw	0
  1637   000A50  6E0B               	movwf	(___awdiv@divisor+1)^0,c
  1638   000A52  0E7E               	movlw	126
  1639   000A54  6E0A               	movwf	___awdiv@divisor^0,c
  1640   000A56  50BE               	movf	190,w,c	;volatile
  1641   000A58  0D64               	mullw	100
  1642   000A5A  CFF3 F008          	movff	prodl,___awdiv@dividend
  1643   000A5E  CFF4 F009          	movff	prodh,___awdiv@dividend+1
  1644   000A62  EC42  F009         	call	___awdiv	;wreg free
  1645   000A66  C008  F026         	movff	?___awdiv,_TransmitirDatos$868
  1646   000A6A  C009  F027         	movff	?___awdiv+1,_TransmitirDatos$868+1
  1647   000A6E  C026  F008         	movff	_TransmitirDatos$868,___awdiv@dividend
  1648   000A72  C027  F009         	movff	_TransmitirDatos$868+1,___awdiv@dividend+1
  1649   000A76  0E00               	movlw	0
  1650   000A78  6E0B               	movwf	(___awdiv@divisor+1)^0,c
  1651   000A7A  0E0A               	movlw	10
  1652   000A7C  6E0A               	movwf	___awdiv@divisor^0,c
  1653   000A7E  EC42  F009         	call	___awdiv	;wreg free
  1654   000A82  0E30               	movlw	48
  1655   000A84  2408               	addwf	?___awdiv^0,w,c
  1656   000A86  6E1E               	movwf	_TransmitirDatos$226^0,c
  1657   000A88  0E00               	movlw	0
  1658   000A8A  2009               	addwfc	(?___awdiv+1)^0,w,c
  1659   000A8C  6E1F               	movwf	(_TransmitirDatos$226+1)^0,c
  1660   000A8E                     l2464:
  1661   000A8E  501E               	movf	_TransmitirDatos$226^0,w,c
  1662   000A90  EC0A  F00C         	call	_Transmitir
  1663                           
  1664                           ;Proyecto.c: 392: Transmitir((CCP1CON!=0)? ((CCPR1L*100/126) % 10 + 48):0+48);
  1665   000A94  50BD               	movf	189,w,c	;volatile
  1666   000A96  A4D8               	btfss	status,2,c
  1667   000A98  D005               	goto	l2470
  1668   000A9A  0E00               	movlw	0
  1669   000A9C  6E21               	movwf	(_TransmitirDatos$227+1)^0,c
  1670   000A9E  0E30               	movlw	48
  1671   000AA0  6E20               	movwf	_TransmitirDatos$227^0,c
  1672   000AA2  D01C               	goto	l2472
  1673   000AA4                     l2470:
  1674   000AA4  0E00               	movlw	0
  1675   000AA6  6E0B               	movwf	(___awdiv@divisor+1)^0,c
  1676   000AA8  0E7E               	movlw	126
  1677   000AAA  6E0A               	movwf	___awdiv@divisor^0,c
  1678   000AAC  50BE               	movf	190,w,c	;volatile
  1679   000AAE  0D64               	mullw	100
  1680   000AB0  CFF3 F008          	movff	prodl,___awdiv@dividend
  1681   000AB4  CFF4 F009          	movff	prodh,___awdiv@dividend+1
  1682   000AB8  EC42  F009         	call	___awdiv	;wreg free
  1683   000ABC  C008  F010         	movff	?___awdiv,___awmod@dividend
  1684   000AC0  C009  F011         	movff	?___awdiv+1,___awmod@dividend+1
  1685   000AC4  0E00               	movlw	0
  1686   000AC6  6E13               	movwf	(___awmod@divisor+1)^0,c
  1687   000AC8  0E0A               	movlw	10
  1688   000ACA  6E12               	movwf	___awmod@divisor^0,c
  1689   000ACC  ECC0  F009         	call	___awmod	;wreg free
  1690   000AD0  0E30               	movlw	48
  1691   000AD2  2410               	addwf	?___awmod^0,w,c
  1692   000AD4  6E20               	movwf	_TransmitirDatos$227^0,c
  1693   000AD6  0E00               	movlw	0
  1694   000AD8  2011               	addwfc	(?___awmod+1)^0,w,c
  1695   000ADA  6E21               	movwf	(_TransmitirDatos$227+1)^0,c
  1696   000ADC                     l2472:
  1697   000ADC  5020               	movf	_TransmitirDatos$227^0,w,c
  1698   000ADE  EC0A  F00C         	call	_Transmitir
  1699                           
  1700                           ;Proyecto.c: 393: Transmitir(' ');
  1701   000AE2  0E20               	movlw	32
  1702   000AE4  EC0A  F00C         	call	_Transmitir
  1703                           
  1704                           ;Proyecto.c: 394: Transmitir('%');
  1705   000AE8  0E25               	movlw	37
  1706   000AEA  EC0A  F00C         	call	_Transmitir
  1707                           
  1708                           ;Proyecto.c: 395: Transmitir('\n');
  1709   000AEE  0E0A               	movlw	10
  1710   000AF0  EC0A  F00C         	call	_Transmitir
  1711                           
  1712                           ;Proyecto.c: 396: Transmitir(' ');
  1713   000AF4  0E20               	movlw	32
  1714   000AF6  EC0A  F00C         	call	_Transmitir
  1715                           
  1716                           ;Proyecto.c: 398: EscribeLCD_c(TempC / 10 + 48);
  1717   000AFA  C02A  F008         	movff	TransmitirDatos@TempC,___lwdiv@dividend
  1718   000AFE  C02B  F009         	movff	TransmitirDatos@TempC+1,___lwdiv@dividend+1
  1719   000B02  0E00               	movlw	0
  1720   000B04  6E0B               	movwf	(___lwdiv@divisor+1)^0,c
  1721   000B06  0E0A               	movlw	10
  1722   000B08  6E0A               	movwf	___lwdiv@divisor^0,c
  1723   000B0A  EC5E  F00A         	call	___lwdiv	;wreg free
  1724   000B0E  5008               	movf	?___lwdiv^0,w,c
  1725   000B10  0F30               	addlw	48
  1726   000B12  ECCA  F00B         	call	_EscribeLCD_c
  1727                           
  1728                           ;Proyecto.c: 399: EscribeLCD_c(TempC % 10 + 48);
  1729   000B16  C02A  F008         	movff	TransmitirDatos@TempC,___lwmod@dividend
  1730   000B1A  C02B  F009         	movff	TransmitirDatos@TempC+1,___lwmod@dividend+1
  1731   000B1E  0E00               	movlw	0
  1732   000B20  6E0B               	movwf	(___lwmod@divisor+1)^0,c
  1733   000B22  0E0A               	movlw	10
  1734   000B24  6E0A               	movwf	___lwmod@divisor^0,c
  1735   000B26  ECF4  F00A         	call	___lwmod	;wreg free
  1736   000B2A  5008               	movf	?___lwmod^0,w,c
  1737   000B2C  0F30               	addlw	48
  1738   000B2E  ECCA  F00B         	call	_EscribeLCD_c
  1739                           
  1740                           ;Proyecto.c: 400: EscribeLCD_c(Simb);
  1741   000B32  5028               	movf	TransmitirDatos@Simb^0,w,c
  1742   000B34  ECCA  F00B         	call	_EscribeLCD_c
  1743                           
  1744                           ;Proyecto.c: 401: DireccionaLCD(192);
  1745   000B38  0EC0               	movlw	192
  1746   000B3A  ECBF  F00B         	call	_DireccionaLCD
  1747                           
  1748                           ;Proyecto.c: 402: MensajeLCD_Word("Duty:");
  1749   000B3E  0E3E               	movlw	low STR_8
  1750   000B40  6E0D               	movwf	MensajeLCD_Word@a^0,c
  1751   000B42  EC87  F00A         	call	_MensajeLCD_Word	;wreg free
  1752                           
  1753                           ;Proyecto.c: 403: if(CCP1CON==0 && RC2==1) EscribeLCD_c(1 + 48);
  1754   000B46  50BD               	movf	189,w,c	;volatile
  1755   000B48  B4D8               	btfsc	status,2,c
  1756   000B4A  A482               	btfss	3970,2,c	;volatile
  1757   000B4C  D003               	goto	l2498
  1758   000B4E  0E31               	movlw	49
  1759   000B50  ECCA  F00B         	call	_EscribeLCD_c
  1760   000B54                     l2498:
  1761                           
  1762                           ;Proyecto.c: 404: EscribeLCD_c((CCP1CON!=0)? ((CCPR1L*100/126) / 10 + 48):0+48);
  1763   000B54  50BD               	movf	189,w,c	;volatile
  1764   000B56  A4D8               	btfss	status,2,c
  1765   000B58  D005               	goto	l2502
  1766   000B5A  0E00               	movlw	0
  1767   000B5C  6E23               	movwf	(_TransmitirDatos$229+1)^0,c
  1768   000B5E  0E30               	movlw	48
  1769   000B60  6E22               	movwf	_TransmitirDatos$229^0,c
  1770   000B62  D020               	goto	l2506
  1771   000B64                     l2502:
  1772   000B64  0E00               	movlw	0
  1773   000B66  6E0B               	movwf	(___awdiv@divisor+1)^0,c
  1774   000B68  0E7E               	movlw	126
  1775   000B6A  6E0A               	movwf	___awdiv@divisor^0,c
  1776   000B6C  50BE               	movf	190,w,c	;volatile
  1777   000B6E  0D64               	mullw	100
  1778   000B70  CFF3 F008          	movff	prodl,___awdiv@dividend
  1779   000B74  CFF4 F009          	movff	prodh,___awdiv@dividend+1
  1780   000B78  EC42  F009         	call	___awdiv	;wreg free
  1781   000B7C  C008  F026         	movff	?___awdiv,_TransmitirDatos$868
  1782   000B80  C009  F027         	movff	?___awdiv+1,_TransmitirDatos$868+1
  1783   000B84  C026  F008         	movff	_TransmitirDatos$868,___awdiv@dividend
  1784   000B88  C027  F009         	movff	_TransmitirDatos$868+1,___awdiv@dividend+1
  1785   000B8C  0E00               	movlw	0
  1786   000B8E  6E0B               	movwf	(___awdiv@divisor+1)^0,c
  1787   000B90  0E0A               	movlw	10
  1788   000B92  6E0A               	movwf	___awdiv@divisor^0,c
  1789   000B94  EC42  F009         	call	___awdiv	;wreg free
  1790   000B98  0E30               	movlw	48
  1791   000B9A  2408               	addwf	?___awdiv^0,w,c
  1792   000B9C  6E22               	movwf	_TransmitirDatos$229^0,c
  1793   000B9E  0E00               	movlw	0
  1794   000BA0  2009               	addwfc	(?___awdiv+1)^0,w,c
  1795   000BA2  6E23               	movwf	(_TransmitirDatos$229+1)^0,c
  1796   000BA4                     l2506:
  1797   000BA4  5022               	movf	_TransmitirDatos$229^0,w,c
  1798   000BA6  ECCA  F00B         	call	_EscribeLCD_c
  1799                           
  1800                           ;Proyecto.c: 405: EscribeLCD_c((CCP1CON!=0)? ((CCPR1L*100/126) % 10 + 48):0+48);
  1801   000BAA  50BD               	movf	189,w,c	;volatile
  1802   000BAC  A4D8               	btfss	status,2,c
  1803   000BAE  D005               	goto	l2512
  1804   000BB0  0E00               	movlw	0
  1805   000BB2  6E25               	movwf	(_TransmitirDatos$230+1)^0,c
  1806   000BB4  0E30               	movlw	48
  1807   000BB6  6E24               	movwf	_TransmitirDatos$230^0,c
  1808   000BB8  D01C               	goto	l2514
  1809   000BBA                     l2512:
  1810   000BBA  0E00               	movlw	0
  1811   000BBC  6E0B               	movwf	(___awdiv@divisor+1)^0,c
  1812   000BBE  0E7E               	movlw	126
  1813   000BC0  6E0A               	movwf	___awdiv@divisor^0,c
  1814   000BC2  50BE               	movf	190,w,c	;volatile
  1815   000BC4  0D64               	mullw	100
  1816   000BC6  CFF3 F008          	movff	prodl,___awdiv@dividend
  1817   000BCA  CFF4 F009          	movff	prodh,___awdiv@dividend+1
  1818   000BCE  EC42  F009         	call	___awdiv	;wreg free
  1819   000BD2  C008  F010         	movff	?___awdiv,___awmod@dividend
  1820   000BD6  C009  F011         	movff	?___awdiv+1,___awmod@dividend+1
  1821   000BDA  0E00               	movlw	0
  1822   000BDC  6E13               	movwf	(___awmod@divisor+1)^0,c
  1823   000BDE  0E0A               	movlw	10
  1824   000BE0  6E12               	movwf	___awmod@divisor^0,c
  1825   000BE2  ECC0  F009         	call	___awmod	;wreg free
  1826   000BE6  0E30               	movlw	48
  1827   000BE8  2410               	addwf	?___awmod^0,w,c
  1828   000BEA  6E24               	movwf	_TransmitirDatos$230^0,c
  1829   000BEC  0E00               	movlw	0
  1830   000BEE  2011               	addwfc	(?___awmod+1)^0,w,c
  1831   000BF0  6E25               	movwf	(_TransmitirDatos$230+1)^0,c
  1832   000BF2                     l2514:
  1833   000BF2  5024               	movf	_TransmitirDatos$230^0,w,c
  1834   000BF4  ECCA  F00B         	call	_EscribeLCD_c
  1835                           
  1836                           ;Proyecto.c: 406: EscribeLCD_c('%');
  1837   000BF8  0E25               	movlw	37
  1838   000BFA  ECCA  F00B         	call	_EscribeLCD_c
  1839   000BFE  0012               	return		;funcret
  1840   000C00                     __end_of_TransmitirDatos:
  1841                           	callstack 0
  1842                           
  1843 ;; *************** function ___wmul *****************
  1844 ;; Defined at:
  1845 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul16.c"
  1846 ;; Parameters:    Size  Location     Type
  1847 ;;  multiplier      2    7[COMRAM] unsigned int 
  1848 ;;  multiplicand    2    9[COMRAM] unsigned int 
  1849 ;; Auto vars:     Size  Location     Type
  1850 ;;  product         2   11[COMRAM] unsigned int 
  1851 ;; Return value:  Size  Location     Type
  1852 ;;                  2    7[COMRAM] unsigned int 
  1853 ;; Registers used:
  1854 ;;		wreg, status,2, status,0, prodl, prodh
  1855 ;; Tracked objects:
  1856 ;;		On entry : 0/0
  1857 ;;		On exit  : 0/0
  1858 ;;		Unchanged: 0/0
  1859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1860 ;;      Params:         4       0       0       0       0       0       0       0       0
  1861 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1862 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1863 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1864 ;;Total ram usage:        6 bytes
  1865 ;; Hardware stack levels used: 1
  1866 ;; Hardware stack levels required when called: 4
  1867 ;; This function calls:
  1868 ;;		Nothing
  1869 ;; This function is called by:
  1870 ;;		_TransmitirDatos
  1871 ;; This function uses a non-reentrant model
  1872 ;;
  1873                           
  1874                           	psect	text3
  1875   001736                     __ptext3:
  1876                           	callstack 0
  1877   001736                     ___wmul:
  1878                           	callstack 25
  1879                           
  1880                           ;incstack = 0
  1881   001736  5008               	movf	___wmul@multiplier^0,w,c
  1882   001738  020A               	mulwf	___wmul@multiplicand^0,c
  1883   00173A  CFF3 F00C          	movff	prodl,___wmul@product
  1884   00173E  CFF4 F00D          	movff	prodh,___wmul@product+1
  1885   001742  5008               	movf	___wmul@multiplier^0,w,c
  1886   001744  020B               	mulwf	(___wmul@multiplicand+1)^0,c
  1887   001746  50F3               	movf	243,w,c
  1888   001748  260D               	addwf	(___wmul@product+1)^0,f,c
  1889   00174A  5009               	movf	(___wmul@multiplier+1)^0,w,c
  1890   00174C  020A               	mulwf	___wmul@multiplicand^0,c
  1891   00174E  50F3               	movf	243,w,c
  1892   001750  260D               	addwf	(___wmul@product+1)^0,f,c
  1893   001752  C00C  F008         	movff	___wmul@product,?___wmul
  1894   001756  C00D  F009         	movff	___wmul@product+1,?___wmul+1
  1895   00175A  0012               	return		;funcret
  1896   00175C                     __end_of___wmul:
  1897                           	callstack 0
  1898                           
  1899 ;; *************** function ___lwmod *****************
  1900 ;; Defined at:
  1901 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwmod.c"
  1902 ;; Parameters:    Size  Location     Type
  1903 ;;  dividend        2    7[COMRAM] unsigned int 
  1904 ;;  divisor         2    9[COMRAM] unsigned int 
  1905 ;; Auto vars:     Size  Location     Type
  1906 ;;  counter         1   11[COMRAM] unsigned char 
  1907 ;; Return value:  Size  Location     Type
  1908 ;;                  2    7[COMRAM] unsigned int 
  1909 ;; Registers used:
  1910 ;;		wreg, status,2, status,0
  1911 ;; Tracked objects:
  1912 ;;		On entry : 0/0
  1913 ;;		On exit  : 0/0
  1914 ;;		Unchanged: 0/0
  1915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1916 ;;      Params:         4       0       0       0       0       0       0       0       0
  1917 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1918 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1919 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1920 ;;Total ram usage:        5 bytes
  1921 ;; Hardware stack levels used: 1
  1922 ;; Hardware stack levels required when called: 4
  1923 ;; This function calls:
  1924 ;;		Nothing
  1925 ;; This function is called by:
  1926 ;;		_TransmitirDatos
  1927 ;; This function uses a non-reentrant model
  1928 ;;
  1929                           
  1930                           	psect	text4
  1931   0015E8                     __ptext4:
  1932                           	callstack 0
  1933   0015E8                     ___lwmod:
  1934                           	callstack 25
  1935                           
  1936                           ;incstack = 0
  1937   0015E8  500A               	movf	___lwmod@divisor^0,w,c
  1938   0015EA  100B               	iorwf	(___lwmod@divisor+1)^0,w,c
  1939   0015EC  B4D8               	btfsc	status,2,c
  1940   0015EE  D018               	goto	l910
  1941   0015F0  0E01               	movlw	1
  1942   0015F2  6E0C               	movwf	___lwmod@counter^0,c
  1943   0015F4  D004               	goto	l2268
  1944   0015F6                     l2266:
  1945   0015F6  90D8               	bcf	status,0,c
  1946   0015F8  360A               	rlcf	___lwmod@divisor^0,f,c
  1947   0015FA  360B               	rlcf	(___lwmod@divisor+1)^0,f,c
  1948   0015FC  2A0C               	incf	___lwmod@counter^0,f,c
  1949   0015FE                     l2268:
  1950   0015FE  AE0B               	btfss	(___lwmod@divisor+1)^0,7,c
  1951   001600  D7FA               	goto	l2266
  1952   001602                     u1300:
  1953   001602  500A               	movf	___lwmod@divisor^0,w,c
  1954   001604  5C08               	subwf	___lwmod@dividend^0,w,c
  1955   001606  500B               	movf	(___lwmod@divisor+1)^0,w,c
  1956   001608  5809               	subwfb	(___lwmod@dividend+1)^0,w,c
  1957   00160A  A0D8               	btfss	status,0,c
  1958   00160C  D004               	goto	l2274
  1959   00160E  500A               	movf	___lwmod@divisor^0,w,c
  1960   001610  5E08               	subwf	___lwmod@dividend^0,f,c
  1961   001612  500B               	movf	(___lwmod@divisor+1)^0,w,c
  1962   001614  5A09               	subwfb	(___lwmod@dividend+1)^0,f,c
  1963   001616                     l2274:
  1964   001616  90D8               	bcf	status,0,c
  1965   001618  320B               	rrcf	(___lwmod@divisor+1)^0,f,c
  1966   00161A  320A               	rrcf	___lwmod@divisor^0,f,c
  1967   00161C  2E0C               	decfsz	___lwmod@counter^0,f,c
  1968   00161E  D7F1               	goto	u1300
  1969   001620                     l910:
  1970   001620  C008  F008         	movff	___lwmod@dividend,?___lwmod
  1971   001624  C009  F009         	movff	___lwmod@dividend+1,?___lwmod+1
  1972   001628  0012               	return		;funcret
  1973   00162A                     __end_of___lwmod:
  1974                           	callstack 0
  1975                           
  1976 ;; *************** function ___lwdiv *****************
  1977 ;; Defined at:
  1978 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwdiv.c"
  1979 ;; Parameters:    Size  Location     Type
  1980 ;;  dividend        2    7[COMRAM] unsigned int 
  1981 ;;  divisor         2    9[COMRAM] unsigned int 
  1982 ;; Auto vars:     Size  Location     Type
  1983 ;;  quotient        2   11[COMRAM] unsigned int 
  1984 ;;  counter         1   13[COMRAM] unsigned char 
  1985 ;; Return value:  Size  Location     Type
  1986 ;;                  2    7[COMRAM] unsigned int 
  1987 ;; Registers used:
  1988 ;;		wreg, status,2, status,0
  1989 ;; Tracked objects:
  1990 ;;		On entry : 0/0
  1991 ;;		On exit  : 0/0
  1992 ;;		Unchanged: 0/0
  1993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1994 ;;      Params:         4       0       0       0       0       0       0       0       0
  1995 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1996 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1997 ;;      Totals:         7       0       0       0       0       0       0       0       0
  1998 ;;Total ram usage:        7 bytes
  1999 ;; Hardware stack levels used: 1
  2000 ;; Hardware stack levels required when called: 4
  2001 ;; This function calls:
  2002 ;;		Nothing
  2003 ;; This function is called by:
  2004 ;;		_TransmitirDatos
  2005 ;; This function uses a non-reentrant model
  2006 ;;
  2007                           
  2008                           	psect	text5
  2009   0014BC                     __ptext5:
  2010                           	callstack 0
  2011   0014BC                     ___lwdiv:
  2012                           	callstack 25
  2013                           
  2014                           ;incstack = 0
  2015   0014BC  0E00               	movlw	0
  2016   0014BE  6E0D               	movwf	(___lwdiv@quotient+1)^0,c
  2017   0014C0  0E00               	movlw	0
  2018   0014C2  6E0C               	movwf	___lwdiv@quotient^0,c
  2019   0014C4  500A               	movf	___lwdiv@divisor^0,w,c
  2020   0014C6  100B               	iorwf	(___lwdiv@divisor+1)^0,w,c
  2021   0014C8  B4D8               	btfsc	status,2,c
  2022   0014CA  D01C               	goto	l900
  2023   0014CC  0E01               	movlw	1
  2024   0014CE  6E0E               	movwf	___lwdiv@counter^0,c
  2025   0014D0  D004               	goto	l2248
  2026   0014D2                     l2246:
  2027   0014D2  90D8               	bcf	status,0,c
  2028   0014D4  360A               	rlcf	___lwdiv@divisor^0,f,c
  2029   0014D6  360B               	rlcf	(___lwdiv@divisor+1)^0,f,c
  2030   0014D8  2A0E               	incf	___lwdiv@counter^0,f,c
  2031   0014DA                     l2248:
  2032   0014DA  AE0B               	btfss	(___lwdiv@divisor+1)^0,7,c
  2033   0014DC  D7FA               	goto	l2246
  2034   0014DE                     u1270:
  2035   0014DE  90D8               	bcf	status,0,c
  2036   0014E0  360C               	rlcf	___lwdiv@quotient^0,f,c
  2037   0014E2  360D               	rlcf	(___lwdiv@quotient+1)^0,f,c
  2038   0014E4  500A               	movf	___lwdiv@divisor^0,w,c
  2039   0014E6  5C08               	subwf	___lwdiv@dividend^0,w,c
  2040   0014E8  500B               	movf	(___lwdiv@divisor+1)^0,w,c
  2041   0014EA  5809               	subwfb	(___lwdiv@dividend+1)^0,w,c
  2042   0014EC  A0D8               	btfss	status,0,c
  2043   0014EE  D005               	goto	l2258
  2044   0014F0  500A               	movf	___lwdiv@divisor^0,w,c
  2045   0014F2  5E08               	subwf	___lwdiv@dividend^0,f,c
  2046   0014F4  500B               	movf	(___lwdiv@divisor+1)^0,w,c
  2047   0014F6  5A09               	subwfb	(___lwdiv@dividend+1)^0,f,c
  2048   0014F8  800C               	bsf	___lwdiv@quotient^0,0,c
  2049   0014FA                     l2258:
  2050   0014FA  90D8               	bcf	status,0,c
  2051   0014FC  320B               	rrcf	(___lwdiv@divisor+1)^0,f,c
  2052   0014FE  320A               	rrcf	___lwdiv@divisor^0,f,c
  2053   001500  2E0E               	decfsz	___lwdiv@counter^0,f,c
  2054   001502  D7ED               	goto	u1270
  2055   001504                     l900:
  2056   001504  C00C  F008         	movff	___lwdiv@quotient,?___lwdiv
  2057   001508  C00D  F009         	movff	___lwdiv@quotient+1,?___lwdiv+1
  2058   00150C  0012               	return		;funcret
  2059   00150E                     __end_of___lwdiv:
  2060                           	callstack 0
  2061                           
  2062 ;; *************** function ___awmod *****************
  2063 ;; Defined at:
  2064 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awmod.c"
  2065 ;; Parameters:    Size  Location     Type
  2066 ;;  dividend        2   15[COMRAM] int 
  2067 ;;  divisor         2   17[COMRAM] int 
  2068 ;; Auto vars:     Size  Location     Type
  2069 ;;  sign            1   20[COMRAM] unsigned char 
  2070 ;;  counter         1   19[COMRAM] unsigned char 
  2071 ;; Return value:  Size  Location     Type
  2072 ;;                  2   15[COMRAM] int 
  2073 ;; Registers used:
  2074 ;;		wreg, status,2, status,0
  2075 ;; Tracked objects:
  2076 ;;		On entry : 0/0
  2077 ;;		On exit  : 0/0
  2078 ;;		Unchanged: 0/0
  2079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2080 ;;      Params:         4       0       0       0       0       0       0       0       0
  2081 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2082 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2083 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2084 ;;Total ram usage:        6 bytes
  2085 ;; Hardware stack levels used: 1
  2086 ;; Hardware stack levels required when called: 4
  2087 ;; This function calls:
  2088 ;;		Nothing
  2089 ;; This function is called by:
  2090 ;;		_TransmitirDatos
  2091 ;; This function uses a non-reentrant model
  2092 ;;
  2093                           
  2094                           	psect	text6
  2095   001380                     __ptext6:
  2096                           	callstack 0
  2097   001380                     ___awmod:
  2098                           	callstack 25
  2099                           
  2100                           ;incstack = 0
  2101   001380  0E00               	movlw	0
  2102   001382  6E15               	movwf	___awmod@sign^0,c
  2103   001384  AE11               	btfss	(___awmod@dividend+1)^0,7,c
  2104   001386  D006               	goto	l2212
  2105   001388  6C10               	negf	___awmod@dividend^0,c
  2106   00138A  1E11               	comf	(___awmod@dividend+1)^0,f,c
  2107   00138C  B0D8               	btfsc	status,0,c
  2108   00138E  2A11               	incf	(___awmod@dividend+1)^0,f,c
  2109   001390  0E01               	movlw	1
  2110   001392  6E15               	movwf	___awmod@sign^0,c
  2111   001394                     l2212:
  2112   001394  AE13               	btfss	(___awmod@divisor+1)^0,7,c
  2113   001396  D004               	goto	l2216
  2114   001398  6C12               	negf	___awmod@divisor^0,c
  2115   00139A  1E13               	comf	(___awmod@divisor+1)^0,f,c
  2116   00139C  B0D8               	btfsc	status,0,c
  2117   00139E  2A13               	incf	(___awmod@divisor+1)^0,f,c
  2118   0013A0                     l2216:
  2119   0013A0  5012               	movf	___awmod@divisor^0,w,c
  2120   0013A2  1013               	iorwf	(___awmod@divisor+1)^0,w,c
  2121   0013A4  B4D8               	btfsc	status,2,c
  2122   0013A6  D018               	goto	l2232
  2123   0013A8  0E01               	movlw	1
  2124   0013AA  6E14               	movwf	___awmod@counter^0,c
  2125   0013AC  D004               	goto	l2222
  2126   0013AE                     l2220:
  2127   0013AE  90D8               	bcf	status,0,c
  2128   0013B0  3612               	rlcf	___awmod@divisor^0,f,c
  2129   0013B2  3613               	rlcf	(___awmod@divisor+1)^0,f,c
  2130   0013B4  2A14               	incf	___awmod@counter^0,f,c
  2131   0013B6                     l2222:
  2132   0013B6  AE13               	btfss	(___awmod@divisor+1)^0,7,c
  2133   0013B8  D7FA               	goto	l2220
  2134   0013BA                     u1230:
  2135   0013BA  5012               	movf	___awmod@divisor^0,w,c
  2136   0013BC  5C10               	subwf	___awmod@dividend^0,w,c
  2137   0013BE  5013               	movf	(___awmod@divisor+1)^0,w,c
  2138   0013C0  5811               	subwfb	(___awmod@dividend+1)^0,w,c
  2139   0013C2  A0D8               	btfss	status,0,c
  2140   0013C4  D004               	goto	l2228
  2141   0013C6  5012               	movf	___awmod@divisor^0,w,c
  2142   0013C8  5E10               	subwf	___awmod@dividend^0,f,c
  2143   0013CA  5013               	movf	(___awmod@divisor+1)^0,w,c
  2144   0013CC  5A11               	subwfb	(___awmod@dividend+1)^0,f,c
  2145   0013CE                     l2228:
  2146   0013CE  90D8               	bcf	status,0,c
  2147   0013D0  3213               	rrcf	(___awmod@divisor+1)^0,f,c
  2148   0013D2  3212               	rrcf	___awmod@divisor^0,f,c
  2149   0013D4  2E14               	decfsz	___awmod@counter^0,f,c
  2150   0013D6  D7F1               	goto	u1230
  2151   0013D8                     l2232:
  2152   0013D8  5015               	movf	___awmod@sign^0,w,c
  2153   0013DA  B4D8               	btfsc	status,2,c
  2154   0013DC  D004               	goto	l2236
  2155   0013DE  6C10               	negf	___awmod@dividend^0,c
  2156   0013E0  1E11               	comf	(___awmod@dividend+1)^0,f,c
  2157   0013E2  B0D8               	btfsc	status,0,c
  2158   0013E4  2A11               	incf	(___awmod@dividend+1)^0,f,c
  2159   0013E6                     l2236:
  2160   0013E6  C010  F010         	movff	___awmod@dividend,?___awmod
  2161   0013EA  C011  F011         	movff	___awmod@dividend+1,?___awmod+1
  2162   0013EE  0012               	return		;funcret
  2163   0013F0                     __end_of___awmod:
  2164                           	callstack 0
  2165                           
  2166 ;; *************** function ___awdiv *****************
  2167 ;; Defined at:
  2168 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awdiv.c"
  2169 ;; Parameters:    Size  Location     Type
  2170 ;;  dividend        2    7[COMRAM] int 
  2171 ;;  divisor         2    9[COMRAM] int 
  2172 ;; Auto vars:     Size  Location     Type
  2173 ;;  quotient        2   13[COMRAM] int 
  2174 ;;  sign            1   12[COMRAM] unsigned char 
  2175 ;;  counter         1   11[COMRAM] unsigned char 
  2176 ;; Return value:  Size  Location     Type
  2177 ;;                  2    7[COMRAM] int 
  2178 ;; Registers used:
  2179 ;;		wreg, status,2, status,0
  2180 ;; Tracked objects:
  2181 ;;		On entry : 0/0
  2182 ;;		On exit  : 0/0
  2183 ;;		Unchanged: 0/0
  2184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2185 ;;      Params:         4       0       0       0       0       0       0       0       0
  2186 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2187 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2188 ;;      Totals:         8       0       0       0       0       0       0       0       0
  2189 ;;Total ram usage:        8 bytes
  2190 ;; Hardware stack levels used: 1
  2191 ;; Hardware stack levels required when called: 4
  2192 ;; This function calls:
  2193 ;;		Nothing
  2194 ;; This function is called by:
  2195 ;;		_TransmitirDatos
  2196 ;; This function uses a non-reentrant model
  2197 ;;
  2198                           
  2199                           	psect	text7
  2200   001284                     __ptext7:
  2201                           	callstack 0
  2202   001284                     ___awdiv:
  2203                           	callstack 25
  2204                           
  2205                           ;incstack = 0
  2206   001284  0E00               	movlw	0
  2207   001286  6E0D               	movwf	___awdiv@sign^0,c
  2208   001288  AE0B               	btfss	(___awdiv@divisor+1)^0,7,c
  2209   00128A  D006               	goto	l2168
  2210   00128C  6C0A               	negf	___awdiv@divisor^0,c
  2211   00128E  1E0B               	comf	(___awdiv@divisor+1)^0,f,c
  2212   001290  B0D8               	btfsc	status,0,c
  2213   001292  2A0B               	incf	(___awdiv@divisor+1)^0,f,c
  2214   001294  0E01               	movlw	1
  2215   001296  6E0D               	movwf	___awdiv@sign^0,c
  2216   001298                     l2168:
  2217   001298  AE09               	btfss	(___awdiv@dividend+1)^0,7,c
  2218   00129A  D006               	goto	l2174
  2219   00129C  6C08               	negf	___awdiv@dividend^0,c
  2220   00129E  1E09               	comf	(___awdiv@dividend+1)^0,f,c
  2221   0012A0  B0D8               	btfsc	status,0,c
  2222   0012A2  2A09               	incf	(___awdiv@dividend+1)^0,f,c
  2223   0012A4  0E01               	movlw	1
  2224   0012A6  1A0D               	xorwf	___awdiv@sign^0,f,c
  2225   0012A8                     l2174:
  2226   0012A8  0E00               	movlw	0
  2227   0012AA  6E0F               	movwf	(___awdiv@quotient+1)^0,c
  2228   0012AC  0E00               	movlw	0
  2229   0012AE  6E0E               	movwf	___awdiv@quotient^0,c
  2230   0012B0  500A               	movf	___awdiv@divisor^0,w,c
  2231   0012B2  100B               	iorwf	(___awdiv@divisor+1)^0,w,c
  2232   0012B4  B4D8               	btfsc	status,2,c
  2233   0012B6  D01C               	goto	l2196
  2234   0012B8  0E01               	movlw	1
  2235   0012BA  6E0C               	movwf	___awdiv@counter^0,c
  2236   0012BC  D004               	goto	l2182
  2237   0012BE                     l2180:
  2238   0012BE  90D8               	bcf	status,0,c
  2239   0012C0  360A               	rlcf	___awdiv@divisor^0,f,c
  2240   0012C2  360B               	rlcf	(___awdiv@divisor+1)^0,f,c
  2241   0012C4  2A0C               	incf	___awdiv@counter^0,f,c
  2242   0012C6                     l2182:
  2243   0012C6  AE0B               	btfss	(___awdiv@divisor+1)^0,7,c
  2244   0012C8  D7FA               	goto	l2180
  2245   0012CA                     u1170:
  2246   0012CA  90D8               	bcf	status,0,c
  2247   0012CC  360E               	rlcf	___awdiv@quotient^0,f,c
  2248   0012CE  360F               	rlcf	(___awdiv@quotient+1)^0,f,c
  2249   0012D0  500A               	movf	___awdiv@divisor^0,w,c
  2250   0012D2  5C08               	subwf	___awdiv@dividend^0,w,c
  2251   0012D4  500B               	movf	(___awdiv@divisor+1)^0,w,c
  2252   0012D6  5809               	subwfb	(___awdiv@dividend+1)^0,w,c
  2253   0012D8  A0D8               	btfss	status,0,c
  2254   0012DA  D005               	goto	l2192
  2255   0012DC  500A               	movf	___awdiv@divisor^0,w,c
  2256   0012DE  5E08               	subwf	___awdiv@dividend^0,f,c
  2257   0012E0  500B               	movf	(___awdiv@divisor+1)^0,w,c
  2258   0012E2  5A09               	subwfb	(___awdiv@dividend+1)^0,f,c
  2259   0012E4  800E               	bsf	___awdiv@quotient^0,0,c
  2260   0012E6                     l2192:
  2261   0012E6  90D8               	bcf	status,0,c
  2262   0012E8  320B               	rrcf	(___awdiv@divisor+1)^0,f,c
  2263   0012EA  320A               	rrcf	___awdiv@divisor^0,f,c
  2264   0012EC  2E0C               	decfsz	___awdiv@counter^0,f,c
  2265   0012EE  D7ED               	goto	u1170
  2266   0012F0                     l2196:
  2267   0012F0  500D               	movf	___awdiv@sign^0,w,c
  2268   0012F2  B4D8               	btfsc	status,2,c
  2269   0012F4  D004               	goto	l2200
  2270   0012F6  6C0E               	negf	___awdiv@quotient^0,c
  2271   0012F8  1E0F               	comf	(___awdiv@quotient+1)^0,f,c
  2272   0012FA  B0D8               	btfsc	status,0,c
  2273   0012FC  2A0F               	incf	(___awdiv@quotient+1)^0,f,c
  2274   0012FE                     l2200:
  2275   0012FE  C00E  F008         	movff	___awdiv@quotient,?___awdiv
  2276   001302  C00F  F009         	movff	___awdiv@quotient+1,?___awdiv+1
  2277   001306  0012               	return		;funcret
  2278   001308                     __end_of___awdiv:
  2279                           	callstack 0
  2280                           
  2281 ;; *************** function _Transmitir *****************
  2282 ;; Defined at:
  2283 ;;		line 326 in file "Proyecto.c"
  2284 ;; Parameters:    Size  Location     Type
  2285 ;;  BufferT         1    wreg     unsigned char 
  2286 ;; Auto vars:     Size  Location     Type
  2287 ;;  BufferT         1    7[COMRAM] unsigned char 
  2288 ;; Return value:  Size  Location     Type
  2289 ;;                  1    wreg      void 
  2290 ;; Registers used:
  2291 ;;		wreg
  2292 ;; Tracked objects:
  2293 ;;		On entry : 0/0
  2294 ;;		On exit  : 0/0
  2295 ;;		Unchanged: 0/0
  2296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2297 ;;      Params:         0       0       0       0       0       0       0       0       0
  2298 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2299 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2300 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2301 ;;Total ram usage:        1 bytes
  2302 ;; Hardware stack levels used: 1
  2303 ;; Hardware stack levels required when called: 4
  2304 ;; This function calls:
  2305 ;;		Nothing
  2306 ;; This function is called by:
  2307 ;;		_TransmitirDatos
  2308 ;; This function uses a non-reentrant model
  2309 ;;
  2310                           
  2311                           	psect	text8
  2312   001814                     __ptext8:
  2313                           	callstack 0
  2314   001814                     _Transmitir:
  2315                           	callstack 25
  2316                           
  2317                           ;incstack = 0
  2318                           ;Transmitir@BufferT stored from wreg
  2319   001814  6E08               	movwf	Transmitir@BufferT^0,c
  2320   001816                     
  2321                           ;Proyecto.c: 327: while (TRMT == 0);
  2322   001816  A2AC               	btfss	4012,1,c	;volatile
  2323   001818  D7FE               	goto	l2150
  2324                           
  2325                           ;Proyecto.c: 328: TXREG = BufferT;
  2326   00181A  C008  FFAD         	movff	Transmitir@BufferT,4013	;volatile
  2327   00181E  0012               	return		;funcret
  2328   001820                     __end_of_Transmitir:
  2329                           	callstack 0
  2330                           
  2331 ;; *************** function _MensajeLCD_Word *****************
  2332 ;; Defined at:
  2333 ;;		line 247 in file "LibLCDXC8.h"
  2334 ;; Parameters:    Size  Location     Type
  2335 ;;  a               1   12[COMRAM] PTR unsigned char 
  2336 ;;		 -> STR_8(6), STR_7(6), STR_6(23), STR_5(11), 
  2337 ;;		 -> STR_4(23), STR_3(10), STR_2(17), STR_1(11), 
  2338 ;; Auto vars:     Size  Location     Type
  2339 ;;  i               2   14[COMRAM] int 
  2340 ;; Return value:  Size  Location     Type
  2341 ;;                  1    wreg      void 
  2342 ;; Registers used:
  2343 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2344 ;; Tracked objects:
  2345 ;;		On entry : 0/0
  2346 ;;		On exit  : 0/0
  2347 ;;		Unchanged: 0/0
  2348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2349 ;;      Params:         1       0       0       0       0       0       0       0       0
  2350 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2351 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2352 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2353 ;;Total ram usage:        4 bytes
  2354 ;; Hardware stack levels used: 1
  2355 ;; Hardware stack levels required when called: 7
  2356 ;; This function calls:
  2357 ;;		_EscribeLCD_c
  2358 ;; This function is called by:
  2359 ;;		_main
  2360 ;;		_TransmitirDatos
  2361 ;; This function uses a non-reentrant model
  2362 ;;
  2363                           
  2364                           	psect	text9
  2365   00150E                     __ptext9:
  2366                           	callstack 0
  2367   00150E                     _MensajeLCD_Word:
  2368                           	callstack 22
  2369                           
  2370                           ;LibLCDXC8.h: 251: for(int i = 0; i<16; i++){
  2371                           
  2372                           ;incstack = 0
  2373   00150E  0E00               	movlw	0
  2374   001510  6E10               	movwf	(MensajeLCD_Word@i+1)^0,c
  2375   001512  0E00               	movlw	0
  2376   001514  6E0F               	movwf	MensajeLCD_Word@i^0,c
  2377   001516                     l2118:
  2378                           
  2379                           ;LibLCDXC8.h: 252: if(a[i] == (0)){
  2380   001516  500D               	movf	MensajeLCD_Word@a^0,w,c
  2381   001518  240F               	addwf	MensajeLCD_Word@i^0,w,c
  2382   00151A  6E0E               	movwf	??_MensajeLCD_Word^0,c
  2383   00151C  C00E  FFF6         	movff	??_MensajeLCD_Word,tblptrl
  2384   001520                     	if	1	;There is more than 1 active tblptr byte
  2385   001520  0E08               	movlw	high __smallconst
  2386   001522  6EF7               	movwf	tblptrh,c
  2387   001524                     	endif
  2388   001524                     	if	0	;tblptru may be non-zero
  2389   001524                     	endif
  2390   001524                     	if	0	;tblptru may be non-zero
  2391   001524                     	endif
  2392   001524  0008               	tblrd		*
  2393   001526  50F5               	movf	tablat,w,c
  2394   001528  0900               	iorlw	0
  2395   00152A  B4D8               	btfsc	status,2,c
  2396   00152C  0012               	return	
  2397                           
  2398                           ;LibLCDXC8.h: 254: };LibLCDXC8.h: 255: EscribeLCD_c(a[i]);
  2399   00152E  500D               	movf	MensajeLCD_Word@a^0,w,c
  2400   001530  240F               	addwf	MensajeLCD_Word@i^0,w,c
  2401   001532  6E0E               	movwf	??_MensajeLCD_Word^0,c
  2402   001534  C00E  FFF6         	movff	??_MensajeLCD_Word,tblptrl
  2403   001538                     	if	1	;There is more than 1 active tblptr byte
  2404   001538  0E08               	movlw	high __smallconst
  2405   00153A  6EF7               	movwf	tblptrh,c
  2406   00153C                     	endif
  2407   00153C                     	if	0	;tblptru may be non-zero
  2408   00153C                     	endif
  2409   00153C                     	if	0	;tblptru may be non-zero
  2410   00153C                     	endif
  2411   00153C  0008               	tblrd		*
  2412   00153E  50F5               	movf	tablat,w,c
  2413   001540  ECCA  F00B         	call	_EscribeLCD_c
  2414   001544  4A0F               	infsnz	MensajeLCD_Word@i^0,f,c
  2415   001546  2A10               	incf	(MensajeLCD_Word@i+1)^0,f,c
  2416   001548  BE10               	btfsc	(MensajeLCD_Word@i+1)^0,7,c
  2417   00154A  D7E5               	goto	l2118
  2418   00154C  5010               	movf	(MensajeLCD_Word@i+1)^0,w,c
  2419   00154E  E105               	bnz	u1110
  2420   001550  0E10               	movlw	16
  2421   001552  5C0F               	subwf	MensajeLCD_Word@i^0,w,c
  2422   001554  B0D8               	btfsc	status,0,c
  2423   001556  0012               	return	
  2424   001558  D7DE               	goto	l2118
  2425   00155A                     u1110:
  2426   00155A  0012               	return		;funcret
  2427   00155C                     __end_of_MensajeLCD_Word:
  2428                           	callstack 0
  2429                           
  2430 ;; *************** function _Password *****************
  2431 ;; Defined at:
  2432 ;;		line 217 in file "Proyecto.c"
  2433 ;; Parameters:    Size  Location     Type
  2434 ;;  pass            1   12[COMRAM] PTR unsigned char 
  2435 ;;		 -> ing(4), 
  2436 ;; Auto vars:     Size  Location     Type
  2437 ;;  i               2   22[COMRAM] int 
  2438 ;;  secret          4   16[COMRAM] unsigned char [4]
  2439 ;;  access          2   20[COMRAM] unsigned int 
  2440 ;; Return value:  Size  Location     Type
  2441 ;;                  2   12[COMRAM] int 
  2442 ;; Registers used:
  2443 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2444 ;; Tracked objects:
  2445 ;;		On entry : 0/0
  2446 ;;		On exit  : 0/0
  2447 ;;		Unchanged: 0/0
  2448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2449 ;;      Params:         2       0       0       0       0       0       0       0       0
  2450 ;;      Locals:         8       0       0       0       0       0       0       0       0
  2451 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2452 ;;      Totals:        12       0       0       0       0       0       0       0       0
  2453 ;;Total ram usage:       12 bytes
  2454 ;; Hardware stack levels used: 1
  2455 ;; Hardware stack levels required when called: 7
  2456 ;; This function calls:
  2457 ;;		_DireccionaLCD
  2458 ;;		_EscribeLCD_c
  2459 ;; This function is called by:
  2460 ;;		_main
  2461 ;; This function uses a non-reentrant model
  2462 ;;
  2463                           
  2464                           	psect	text10
  2465   001308                     __ptext10:
  2466                           	callstack 0
  2467   001308                     _Password:
  2468                           	callstack 23
  2469                           
  2470                           ;Proyecto.c: 218: unsigned char secret[] = {'0','1','2','3'};
  2471                           
  2472                           ;incstack = 0
  2473   001308  C030  F011         	movff	Password@F3203,Password@secret
  2474   00130C  C031  F012         	movff	Password@F3203+1,Password@secret+1
  2475   001310  C032  F013         	movff	Password@F3203+2,Password@secret+2
  2476   001314  C033  F014         	movff	Password@F3203+3,Password@secret+3
  2477                           
  2478                           ;Proyecto.c: 219: unsigned int access = 0;
  2479   001318  0E00               	movlw	0
  2480   00131A  6E16               	movwf	(Password@access+1)^0,c
  2481   00131C  0E00               	movlw	0
  2482   00131E  6E15               	movwf	Password@access^0,c
  2483                           
  2484                           ;Proyecto.c: 220: DireccionaLCD(0xC1);
  2485   001320  0EC1               	movlw	193
  2486   001322  ECBF  F00B         	call	_DireccionaLCD
  2487                           
  2488                           ;Proyecto.c: 221: for(int i=0; i<4; i++){
  2489   001326  0E00               	movlw	0
  2490   001328  6E18               	movwf	(Password@i+1)^0,c
  2491   00132A  0E00               	movlw	0
  2492   00132C  6E17               	movwf	Password@i^0,c
  2493   00132E                     l2372:
  2494                           
  2495                           ;Proyecto.c: 223: EscribeLCD_c('*');
  2496   00132E  0E2A               	movlw	42
  2497   001330  ECCA  F00B         	call	_EscribeLCD_c
  2498                           
  2499                           ;Proyecto.c: 224: if(pass[i] == secret[i]){
  2500   001334  5017               	movf	Password@i^0,w,c
  2501   001336  0F11               	addlw	low Password@secret
  2502   001338  6ED9               	movwf	fsr2l,c
  2503   00133A  6ADA               	clrf	fsr2h,c
  2504   00133C  500D               	movf	Password@pass^0,w,c
  2505   00133E  2417               	addwf	Password@i^0,w,c
  2506   001340  6EE1               	movwf	fsr1l,c
  2507   001342  6AE2               	clrf	fsr1h,c
  2508   001344  50DE               	movf	postinc2,w,c
  2509   001346  18E6               	xorwf	postinc1,w,c
  2510   001348  A4D8               	btfss	status,2,c
  2511   00134A  D002               	goto	l281
  2512                           
  2513                           ;Proyecto.c: 225: access++;
  2514   00134C  4A15               	infsnz	Password@access^0,f,c
  2515   00134E  2A16               	incf	(Password@access+1)^0,f,c
  2516   001350                     l281:
  2517   001350  4A17               	infsnz	Password@i^0,f,c
  2518   001352  2A18               	incf	(Password@i+1)^0,f,c
  2519   001354  BE18               	btfsc	(Password@i+1)^0,7,c
  2520   001356  D7EB               	goto	l2372
  2521   001358  5018               	movf	(Password@i+1)^0,w,c
  2522   00135A  E104               	bnz	u1400
  2523   00135C  0E04               	movlw	4
  2524   00135E  5C17               	subwf	Password@i^0,w,c
  2525   001360  A0D8               	btfss	status,0,c
  2526   001362  D7E5               	goto	l2372
  2527   001364                     u1400:
  2528                           
  2529                           ;Proyecto.c: 226: };Proyecto.c: 227: };Proyecto.c: 228: DireccionaLCD(0xC1);
  2530   001364  0EC1               	movlw	193
  2531   001366  ECBF  F00B         	call	_DireccionaLCD
  2532                           
  2533                           ;Proyecto.c: 229: return (access==4)? 1:0;
  2534   00136A  0E04               	movlw	4
  2535   00136C  1815               	xorwf	Password@access^0,w,c
  2536   00136E  1016               	iorwf	(Password@access+1)^0,w,c
  2537   001370  A4D8               	btfss	status,2,c
  2538   001372  D002               	goto	u1410
  2539   001374  0E01               	movlw	1
  2540   001376  D001               	goto	u1420
  2541   001378                     u1410:
  2542   001378  0E00               	movlw	0
  2543   00137A                     u1420:
  2544   00137A  6E0D               	movwf	?_Password^0,c
  2545   00137C  6A0E               	clrf	(?_Password+1)^0,c
  2546   00137E  0012               	return		;funcret
  2547   001380                     __end_of_Password:
  2548                           	callstack 0
  2549                           
  2550 ;; *************** function _DireccionaLCD *****************
  2551 ;; Defined at:
  2552 ;;		line 259 in file "LibLCDXC8.h"
  2553 ;; Parameters:    Size  Location     Type
  2554 ;;  a               1    wreg     unsigned char 
  2555 ;; Auto vars:     Size  Location     Type
  2556 ;;  a               1   11[COMRAM] unsigned char 
  2557 ;; Return value:  Size  Location     Type
  2558 ;;                  1    wreg      void 
  2559 ;; Registers used:
  2560 ;;		wreg, status,2, status,0, cstack
  2561 ;; Tracked objects:
  2562 ;;		On entry : 0/0
  2563 ;;		On exit  : 0/0
  2564 ;;		Unchanged: 0/0
  2565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2566 ;;      Params:         0       0       0       0       0       0       0       0       0
  2567 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2568 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2569 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2570 ;;Total ram usage:        1 bytes
  2571 ;; Hardware stack levels used: 1
  2572 ;; Hardware stack levels required when called: 6
  2573 ;; This function calls:
  2574 ;;		_EnviaDato
  2575 ;;		_HabilitaLCD
  2576 ;;		_RetardoLCD
  2577 ;; This function is called by:
  2578 ;;		_main
  2579 ;;		_Password
  2580 ;;		_TransmitirDatos
  2581 ;; This function uses a non-reentrant model
  2582 ;;
  2583                           
  2584                           	psect	text11
  2585   00177E                     __ptext11:
  2586                           	callstack 0
  2587   00177E                     _DireccionaLCD:
  2588                           	callstack 23
  2589                           
  2590                           ;incstack = 0
  2591                           ;DireccionaLCD@a stored from wreg
  2592   00177E  6E0C               	movwf	DireccionaLCD@a^0,c
  2593                           
  2594                           ;LibLCDXC8.h: 262: LATE1=0;
  2595   001780  928D               	bcf	3981,1,c	;volatile
  2596                           
  2597                           ;LibLCDXC8.h: 263: EnviaDato(a);
  2598   001782  500C               	movf	DireccionaLCD@a^0,w,c
  2599   001784  ECAE  F00A         	call	_EnviaDato
  2600                           
  2601                           ;LibLCDXC8.h: 264: HabilitaLCD();
  2602   001788  ECFC  F00B         	call	_HabilitaLCD	;wreg free
  2603                           
  2604                           ;LibLCDXC8.h: 265: RetardoLCD(4);
  2605   00178C  0E04               	movlw	4
  2606   00178E  ECF8  F009         	call	_RetardoLCD
  2607   001792  0012               	return		;funcret
  2608   001794                     __end_of_DireccionaLCD:
  2609                           	callstack 0
  2610                           
  2611 ;; *************** function _NuevoCaracter *****************
  2612 ;; Defined at:
  2613 ;;		line 140 in file "LibLCDXC8.h"
  2614 ;; Parameters:    Size  Location     Type
  2615 ;;  addr            1    wreg     unsigned char 
  2616 ;;  c               1   12[COMRAM] PTR unsigned char 
  2617 ;;		 -> cara(8), 
  2618 ;; Auto vars:     Size  Location     Type
  2619 ;;  addr            1   13[COMRAM] unsigned char 
  2620 ;;  i               2   14[COMRAM] int 
  2621 ;; Return value:  Size  Location     Type
  2622 ;;                  1    wreg      void 
  2623 ;; Registers used:
  2624 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2625 ;; Tracked objects:
  2626 ;;		On entry : 0/0
  2627 ;;		On exit  : 0/0
  2628 ;;		Unchanged: 0/0
  2629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2630 ;;      Params:         1       0       0       0       0       0       0       0       0
  2631 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2632 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2633 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2634 ;;Total ram usage:        4 bytes
  2635 ;; Hardware stack levels used: 1
  2636 ;; Hardware stack levels required when called: 7
  2637 ;; This function calls:
  2638 ;;		_ComandoLCD
  2639 ;;		_EscribeLCD_c
  2640 ;; This function is called by:
  2641 ;;		_main
  2642 ;; This function uses a non-reentrant model
  2643 ;;
  2644                           
  2645                           	psect	text12
  2646   00162A                     __ptext12:
  2647                           	callstack 0
  2648   00162A                     _NuevoCaracter:
  2649                           	callstack 23
  2650                           
  2651                           ;incstack = 0
  2652                           ;NuevoCaracter@addr stored from wreg
  2653   00162A  6E0E               	movwf	NuevoCaracter@addr^0,c
  2654                           
  2655                           ;LibLCDXC8.h: 141: int i;;LibLCDXC8.h: 142: ComandoLCD(0x40 + (addr * 8));
  2656   00162C  500E               	movf	NuevoCaracter@addr^0,w,c
  2657   00162E  0D08               	mullw	8
  2658   001630  50F3               	movf	243,w,c
  2659   001632  0F40               	addlw	64
  2660   001634  EC84  F00B         	call	_ComandoLCD
  2661                           
  2662                           ;LibLCDXC8.h: 143: for (i = 0; i < 8; i++) {
  2663   001638  0E00               	movlw	0
  2664   00163A  6E10               	movwf	(NuevoCaracter@i+1)^0,c
  2665   00163C  0E00               	movlw	0
  2666   00163E  6E0F               	movwf	NuevoCaracter@i^0,c
  2667   001640                     l2824:
  2668                           
  2669                           ;LibLCDXC8.h: 144: EscribeLCD_c(c[i]);
  2670   001640  500D               	movf	NuevoCaracter@c^0,w,c
  2671   001642  240F               	addwf	NuevoCaracter@i^0,w,c
  2672   001644  6ED9               	movwf	fsr2l,c
  2673   001646  6ADA               	clrf	fsr2h,c
  2674   001648  50DF               	movf	indf2,w,c
  2675   00164A  ECCA  F00B         	call	_EscribeLCD_c
  2676   00164E  4A0F               	infsnz	NuevoCaracter@i^0,f,c
  2677   001650  2A10               	incf	(NuevoCaracter@i+1)^0,f,c
  2678   001652  BE10               	btfsc	(NuevoCaracter@i+1)^0,7,c
  2679   001654  D7F5               	goto	l2824
  2680   001656  5010               	movf	(NuevoCaracter@i+1)^0,w,c
  2681   001658  E105               	bnz	u2070
  2682   00165A  0E08               	movlw	8
  2683   00165C  5C0F               	subwf	NuevoCaracter@i^0,w,c
  2684   00165E  B0D8               	btfsc	status,0,c
  2685   001660  0012               	return	
  2686   001662  D7EE               	goto	l2824
  2687   001664                     u2070:
  2688   001664  0012               	return		;funcret
  2689   001666                     __end_of_NuevoCaracter:
  2690                           	callstack 0
  2691                           
  2692 ;; *************** function _EscribeLCD_c *****************
  2693 ;; Defined at:
  2694 ;;		line 148 in file "LibLCDXC8.h"
  2695 ;; Parameters:    Size  Location     Type
  2696 ;;  a               1    wreg     unsigned char 
  2697 ;; Auto vars:     Size  Location     Type
  2698 ;;  a               1   11[COMRAM] unsigned char 
  2699 ;; Return value:  Size  Location     Type
  2700 ;;                  1    wreg      void 
  2701 ;; Registers used:
  2702 ;;		wreg, status,2, status,0, cstack
  2703 ;; Tracked objects:
  2704 ;;		On entry : 0/0
  2705 ;;		On exit  : 0/0
  2706 ;;		Unchanged: 0/0
  2707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2708 ;;      Params:         0       0       0       0       0       0       0       0       0
  2709 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2710 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2711 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2712 ;;Total ram usage:        1 bytes
  2713 ;; Hardware stack levels used: 1
  2714 ;; Hardware stack levels required when called: 6
  2715 ;; This function calls:
  2716 ;;		_EnviaDato
  2717 ;;		_HabilitaLCD
  2718 ;;		_RetardoLCD
  2719 ;; This function is called by:
  2720 ;;		_NuevoCaracter
  2721 ;;		_MensajeLCD_Word
  2722 ;;		_main
  2723 ;;		_Password
  2724 ;;		_TransmitirDatos
  2725 ;; This function uses a non-reentrant model
  2726 ;;
  2727                           
  2728                           	psect	text13
  2729   001794                     __ptext13:
  2730                           	callstack 0
  2731   001794                     _EscribeLCD_c:
  2732                           	callstack 22
  2733                           
  2734                           ;incstack = 0
  2735                           ;EscribeLCD_c@a stored from wreg
  2736   001794  6E0C               	movwf	EscribeLCD_c@a^0,c
  2737                           
  2738                           ;LibLCDXC8.h: 152: LATE1=1;
  2739   001796  828D               	bsf	3981,1,c	;volatile
  2740                           
  2741                           ;LibLCDXC8.h: 153: EnviaDato(a);
  2742   001798  500C               	movf	EscribeLCD_c@a^0,w,c
  2743   00179A  ECAE  F00A         	call	_EnviaDato
  2744                           
  2745                           ;LibLCDXC8.h: 154: HabilitaLCD();
  2746   00179E  ECFC  F00B         	call	_HabilitaLCD	;wreg free
  2747                           
  2748                           ;LibLCDXC8.h: 155: RetardoLCD(4);
  2749   0017A2  0E04               	movlw	4
  2750   0017A4  ECF8  F009         	call	_RetardoLCD
  2751   0017A8  0012               	return		;funcret
  2752   0017AA                     __end_of_EscribeLCD_c:
  2753                           	callstack 0
  2754                           
  2755 ;; *************** function _ComandoLCD *****************
  2756 ;; Defined at:
  2757 ;;		line 129 in file "LibLCDXC8.h"
  2758 ;; Parameters:    Size  Location     Type
  2759 ;;  data            1    wreg     unsigned char 
  2760 ;; Auto vars:     Size  Location     Type
  2761 ;;  data            1    8[COMRAM] unsigned char 
  2762 ;; Return value:  Size  Location     Type
  2763 ;;                  1    wreg      void 
  2764 ;; Registers used:
  2765 ;;		wreg, status,2, cstack
  2766 ;; Tracked objects:
  2767 ;;		On entry : 0/0
  2768 ;;		On exit  : 0/0
  2769 ;;		Unchanged: 0/0
  2770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2771 ;;      Params:         0       0       0       0       0       0       0       0       0
  2772 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2773 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2774 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2775 ;;Total ram usage:        2 bytes
  2776 ;; Hardware stack levels used: 1
  2777 ;; Hardware stack levels required when called: 4
  2778 ;; This function calls:
  2779 ;;		Nothing
  2780 ;; This function is called by:
  2781 ;;		_NuevoCaracter
  2782 ;; This function uses a non-reentrant model
  2783 ;;
  2784                           
  2785                           	psect	text14
  2786   001708                     __ptext14:
  2787                           	callstack 0
  2788   001708                     _ComandoLCD:
  2789                           	callstack 25
  2790                           
  2791                           ;incstack = 0
  2792                           ;ComandoLCD@data stored from wreg
  2793   001708  6E09               	movwf	ComandoLCD@data^0,c
  2794                           
  2795                           ;LibLCDXC8.h: 131: LATE1 = 0;
  2796   00170A  928D               	bcf	3981,1,c	;volatile
  2797                           
  2798                           ;LibLCDXC8.h: 132: LATD = data;
  2799   00170C  C009  FF8C         	movff	ComandoLCD@data,3980	;volatile
  2800                           
  2801                           ;LibLCDXC8.h: 133: LATE2 = 1;
  2802   001710  848D               	bsf	3981,2,c	;volatile
  2803                           
  2804                           ;LibLCDXC8.h: 134: _delay((unsigned long)((5)*(8000000/4000000.0)));
  2805   001712  0E03               	movlw	3
  2806   001714                     u2187:
  2807   001714  2EE8               	decfsz	wreg,f,c
  2808   001716  D7FE               	bra	u2187
  2809   001718  F000               	nop	
  2810                           
  2811                           ;LibLCDXC8.h: 135: LATE2 = 0;
  2812   00171A  948D               	bcf	3981,2,c	;volatile
  2813                           
  2814                           ;LibLCDXC8.h: 136: _delay((unsigned long)((5)*(8000000/4000000.0)));
  2815   00171C  0E03               	movlw	3
  2816   00171E                     u2197:
  2817   00171E  2EE8               	decfsz	wreg,f,c
  2818   001720  D7FE               	bra	u2197
  2819   001722  F000               	nop	
  2820                           
  2821                           ;LibLCDXC8.h: 137: _delay((unsigned long)((2)*(8000000/4000.0)));
  2822   001724  0E06               	movlw	6
  2823   001726  6E08               	movwf	??_ComandoLCD^0,c
  2824   001728  0E30               	movlw	48
  2825   00172A                     u2207:
  2826   00172A  2EE8               	decfsz	wreg,f,c
  2827   00172C  D7FE               	bra	u2207
  2828   00172E  2E08               	decfsz	??_ComandoLCD^0,f,c
  2829   001730  D7FC               	bra	u2207
  2830   001732  D000               	nop2	
  2831   001734  0012               	return		;funcret
  2832   001736                     __end_of_ComandoLCD:
  2833                           	callstack 0
  2834                           
  2835 ;; *************** function _Movimiento *****************
  2836 ;; Defined at:
  2837 ;;		line 177 in file "Proyecto.c"
  2838 ;; Parameters:    Size  Location     Type
  2839 ;;		None
  2840 ;; Auto vars:     Size  Location     Type
  2841 ;;		None
  2842 ;; Return value:  Size  Location     Type
  2843 ;;                  1    wreg      void 
  2844 ;; Registers used:
  2845 ;;		wreg, status,2, status,0
  2846 ;; Tracked objects:
  2847 ;;		On entry : 0/0
  2848 ;;		On exit  : 0/0
  2849 ;;		Unchanged: 0/0
  2850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2851 ;;      Params:         0       0       0       0       0       0       0       0       0
  2852 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2853 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2854 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2855 ;;Total ram usage:        1 bytes
  2856 ;; Hardware stack levels used: 1
  2857 ;; Hardware stack levels required when called: 4
  2858 ;; This function calls:
  2859 ;;		Nothing
  2860 ;; This function is called by:
  2861 ;;		_main
  2862 ;; This function uses a non-reentrant model
  2863 ;;
  2864                           
  2865                           	psect	text15
  2866   001046                     __ptext15:
  2867                           	callstack 0
  2868   001046                     _Movimiento:
  2869                           	callstack 26
  2870                           
  2871                           ;Proyecto.c: 178: if(ADRES>0 & ADRES<=255){
  2872                           
  2873                           ;incstack = 0
  2874   001046  0E00               	movlw	0
  2875   001048  5CC3               	subwf	195,w,c	;volatile
  2876   00104A  0E01               	movlw	1
  2877   00104C  58C4               	subwfb	196,w,c	;volatile
  2878   00104E  B0D8               	btfsc	status,0,c
  2879   001050  D002               	goto	u1690
  2880   001052  0E01               	movlw	1
  2881   001054  D001               	goto	u1692
  2882   001056                     u1690:
  2883   001056  0E00               	movlw	0
  2884   001058                     u1692:
  2885   001058  6E08               	movwf	??_Movimiento^0,c
  2886   00105A  50C3               	movf	195,w,c	;volatile
  2887   00105C  10C4               	iorwf	196,w,c	;volatile
  2888   00105E  B4D8               	btfsc	status,2,c
  2889   001060  D002               	goto	u1700
  2890   001062  0E01               	movlw	1
  2891   001064  D001               	goto	u1702
  2892   001066                     u1700:
  2893   001066  0E00               	movlw	0
  2894   001068                     u1702:
  2895   001068  1408               	andwf	??_Movimiento^0,w,c
  2896   00106A  A0E8               	btfss	wreg,0,c
  2897   00106C  D005               	goto	l2578
  2898                           
  2899                           ;Proyecto.c: 179: a = 125;
  2900   00106E  0E00               	movlw	0
  2901   001070  6E35               	movwf	(_a+1)^0,c
  2902   001072  0E7D               	movlw	125
  2903   001074  6E34               	movwf	_a^0,c
  2904                           
  2905                           ;Proyecto.c: 180: }else if(ADRES>255 & ADRES<=511){
  2906   001076  0012               	return	
  2907   001078                     l2578:
  2908   001078  0E00               	movlw	0
  2909   00107A  5CC3               	subwf	195,w,c	;volatile
  2910   00107C  0E02               	movlw	2
  2911   00107E  58C4               	subwfb	196,w,c	;volatile
  2912   001080  B0D8               	btfsc	status,0,c
  2913   001082  D002               	goto	u1720
  2914   001084  0E01               	movlw	1
  2915   001086  D001               	goto	u1722
  2916   001088                     u1720:
  2917   001088  0E00               	movlw	0
  2918   00108A                     u1722:
  2919   00108A  6E08               	movwf	??_Movimiento^0,c
  2920   00108C  0E00               	movlw	0
  2921   00108E  5CC3               	subwf	195,w,c	;volatile
  2922   001090  0E01               	movlw	1
  2923   001092  58C4               	subwfb	196,w,c	;volatile
  2924   001094  A0D8               	btfss	status,0,c
  2925   001096  D002               	goto	u1730
  2926   001098  0E01               	movlw	1
  2927   00109A  D001               	goto	u1732
  2928   00109C                     u1730:
  2929   00109C  0E00               	movlw	0
  2930   00109E                     u1732:
  2931   00109E  1408               	andwf	??_Movimiento^0,w,c
  2932   0010A0  A0E8               	btfss	wreg,0,c
  2933   0010A2  D005               	goto	l2582
  2934                           
  2935                           ;Proyecto.c: 181: a = 292;
  2936   0010A4  0E01               	movlw	1
  2937   0010A6  6E35               	movwf	(_a+1)^0,c
  2938   0010A8  0E24               	movlw	36
  2939   0010AA  6E34               	movwf	_a^0,c
  2940                           
  2941                           ;Proyecto.c: 182: }else if(ADRES>511 & ADRES<=1918){
  2942   0010AC  0012               	return	
  2943   0010AE                     l2582:
  2944   0010AE  0E7F               	movlw	127
  2945   0010B0  5CC3               	subwf	195,w,c	;volatile
  2946   0010B2  0E07               	movlw	7
  2947   0010B4  58C4               	subwfb	196,w,c	;volatile
  2948   0010B6  B0D8               	btfsc	status,0,c
  2949   0010B8  D002               	goto	u1750
  2950   0010BA  0E01               	movlw	1
  2951   0010BC  D001               	goto	u1752
  2952   0010BE                     u1750:
  2953   0010BE  0E00               	movlw	0
  2954   0010C0                     u1752:
  2955   0010C0  6E08               	movwf	??_Movimiento^0,c
  2956   0010C2  0E00               	movlw	0
  2957   0010C4  5CC3               	subwf	195,w,c	;volatile
  2958   0010C6  0E02               	movlw	2
  2959   0010C8  58C4               	subwfb	196,w,c	;volatile
  2960   0010CA  A0D8               	btfss	status,0,c
  2961   0010CC  D002               	goto	u1760
  2962   0010CE  0E01               	movlw	1
  2963   0010D0  D001               	goto	u1762
  2964   0010D2                     u1760:
  2965   0010D2  0E00               	movlw	0
  2966   0010D4                     u1762:
  2967   0010D4  1408               	andwf	??_Movimiento^0,w,c
  2968   0010D6  A0E8               	btfss	wreg,0,c
  2969   0010D8  D005               	goto	l2586
  2970                           
  2971                           ;Proyecto.c: 183: a = 458;
  2972   0010DA  0E01               	movlw	1
  2973   0010DC  6E35               	movwf	(_a+1)^0,c
  2974   0010DE  0ECA               	movlw	202
  2975   0010E0  6E34               	movwf	_a^0,c
  2976                           
  2977                           ;Proyecto.c: 184: }else if(ADRES>1918 & ADRES<=5115){
  2978   0010E2  0012               	return	
  2979   0010E4                     l2586:
  2980   0010E4  0EFC               	movlw	252
  2981   0010E6  5CC3               	subwf	195,w,c	;volatile
  2982   0010E8  0E13               	movlw	19
  2983   0010EA  58C4               	subwfb	196,w,c	;volatile
  2984   0010EC  B0D8               	btfsc	status,0,c
  2985   0010EE  D002               	goto	u1780
  2986   0010F0  0E01               	movlw	1
  2987   0010F2  D001               	goto	u1782
  2988   0010F4                     u1780:
  2989   0010F4  0E00               	movlw	0
  2990   0010F6                     u1782:
  2991   0010F6  6E08               	movwf	??_Movimiento^0,c
  2992   0010F8  0E7F               	movlw	127
  2993   0010FA  5CC3               	subwf	195,w,c	;volatile
  2994   0010FC  0E07               	movlw	7
  2995   0010FE  58C4               	subwfb	196,w,c	;volatile
  2996   001100  A0D8               	btfss	status,0,c
  2997   001102  D002               	goto	u1790
  2998   001104  0E01               	movlw	1
  2999   001106  D001               	goto	u1792
  3000   001108                     u1790:
  3001   001108  0E00               	movlw	0
  3002   00110A                     u1792:
  3003   00110A  1408               	andwf	??_Movimiento^0,w,c
  3004   00110C  A0E8               	btfss	wreg,0,c
  3005   00110E  0012               	return	
  3006                           
  3007                           ;Proyecto.c: 185: a = 625;
  3008   001110  0E02               	movlw	2
  3009   001112  6E35               	movwf	(_a+1)^0,c
  3010   001114  0E71               	movlw	113
  3011   001116  6E34               	movwf	_a^0,c
  3012   001118  0012               	return	
  3013   00111A                     __end_of_Movimiento:
  3014                           	callstack 0
  3015                           
  3016 ;; *************** function _LeerHT11 *****************
  3017 ;; Defined at:
  3018 ;;		line 233 in file "Proyecto.c"
  3019 ;; Parameters:    Size  Location     Type
  3020 ;;		None
  3021 ;; Auto vars:     Size  Location     Type
  3022 ;;		None
  3023 ;; Return value:  Size  Location     Type
  3024 ;;                  1    wreg      void 
  3025 ;; Registers used:
  3026 ;;		wreg, status,2, status,0, cstack
  3027 ;; Tracked objects:
  3028 ;;		On entry : 0/0
  3029 ;;		On exit  : 0/0
  3030 ;;		Unchanged: 0/0
  3031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3032 ;;      Params:         0       0       0       0       0       0       0       0       0
  3033 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3034 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3035 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3036 ;;Total ram usage:        1 bytes
  3037 ;; Hardware stack levels used: 1
  3038 ;; Hardware stack levels required when called: 6
  3039 ;; This function calls:
  3040 ;;		_LeerByte
  3041 ;; This function is called by:
  3042 ;;		_main
  3043 ;; This function uses a non-reentrant model
  3044 ;;
  3045                           
  3046                           	psect	text16
  3047   0016A0                     __ptext16:
  3048                           	callstack 0
  3049   0016A0                     _LeerHT11:
  3050                           	callstack 24
  3051                           
  3052                           ;Proyecto.c: 235: TRISA5 = 0;
  3053                           
  3054                           ;incstack = 0
  3055   0016A0  9A92               	bcf	3986,5,c	;volatile
  3056                           
  3057                           ;Proyecto.c: 236: _delay((unsigned long)((18)*(8000000/4000.0)));
  3058   0016A2  0E2F               	movlw	47
  3059   0016A4  6E0C               	movwf	??_LeerHT11^0,c
  3060   0016A6  0EC0               	movlw	192
  3061   0016A8                     u2217:
  3062   0016A8  2EE8               	decfsz	wreg,f,c
  3063   0016AA  D7FE               	bra	u2217
  3064   0016AC  2E0C               	decfsz	??_LeerHT11^0,f,c
  3065   0016AE  D7FC               	bra	u2217
  3066                           
  3067                           ;Proyecto.c: 237: TRISA5 = 1;
  3068   0016B0  8A92               	bsf	3986,5,c	;volatile
  3069   0016B2                     l285:
  3070   0016B2  BA80               	btfsc	3968,5,c	;volatile
  3071   0016B4  D7FE               	goto	l285
  3072                           
  3073                           ;Proyecto.c: 240: _delay((unsigned long)((120)*(8000000/4000000.0)));
  3074   0016B6  0E50               	movlw	80
  3075   0016B8                     u2227:
  3076   0016B8  2EE8               	decfsz	wreg,f,c
  3077   0016BA  D7FE               	bra	u2227
  3078   0016BC                     l288:
  3079   0016BC  BA80               	btfsc	3968,5,c	;volatile
  3080   0016BE  D7FE               	goto	l288
  3081                           
  3082                           ;Proyecto.c: 243: LeerByte();
  3083   0016C0  ECAE  F00B         	call	_LeerByte	;wreg free
  3084                           
  3085                           ;Proyecto.c: 244: LeerByte();
  3086   0016C4  ECAE  F00B         	call	_LeerByte	;wreg free
  3087                           
  3088                           ;Proyecto.c: 245: Temp = LeerByte();
  3089   0016C8  ECAE  F00B         	call	_LeerByte	;wreg free
  3090   0016CC  6E47               	movwf	_Temp^0,c
  3091                           
  3092                           ;Proyecto.c: 246: LeerByte();
  3093   0016CE  ECAE  F00B         	call	_LeerByte	;wreg free
  3094                           
  3095                           ;Proyecto.c: 247: LeerByte();
  3096   0016D2  ECAE  F00B         	call	_LeerByte	;wreg free
  3097   0016D6  0012               	return		;funcret
  3098   0016D8                     __end_of_LeerHT11:
  3099                           	callstack 0
  3100                           
  3101 ;; *************** function _LeerByte *****************
  3102 ;; Defined at:
  3103 ;;		line 250 in file "Proyecto.c"
  3104 ;; Parameters:    Size  Location     Type
  3105 ;;		None
  3106 ;; Auto vars:     Size  Location     Type
  3107 ;;  i               1   10[COMRAM] unsigned char 
  3108 ;;  res             1    9[COMRAM] unsigned char 
  3109 ;; Return value:  Size  Location     Type
  3110 ;;                  1    wreg      unsigned char 
  3111 ;; Registers used:
  3112 ;;		wreg, status,2, status,0, cstack
  3113 ;; Tracked objects:
  3114 ;;		On entry : 0/0
  3115 ;;		On exit  : 0/0
  3116 ;;		Unchanged: 0/0
  3117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3118 ;;      Params:         0       0       0       0       0       0       0       0       0
  3119 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3120 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3121 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3122 ;;Total ram usage:        3 bytes
  3123 ;; Hardware stack levels used: 1
  3124 ;; Hardware stack levels required when called: 5
  3125 ;; This function calls:
  3126 ;;		_LeerBit
  3127 ;; This function is called by:
  3128 ;;		_LeerHT11
  3129 ;; This function uses a non-reentrant model
  3130 ;;
  3131                           
  3132                           	psect	text17
  3133   00175C                     __ptext17:
  3134                           	callstack 0
  3135   00175C                     _LeerByte:
  3136                           	callstack 24
  3137                           
  3138                           ;Proyecto.c: 251: unsigned char res = 0, i;
  3139                           
  3140                           ;incstack = 0
  3141   00175C  0E00               	movlw	0
  3142   00175E  6E0A               	movwf	LeerByte@res^0,c
  3143                           
  3144                           ;Proyecto.c: 252: for (i = 8; i > 0; i--) {
  3145   001760  0E08               	movlw	8
  3146   001762  6E0B               	movwf	LeerByte@i^0,c
  3147   001764                     l2140:
  3148                           
  3149                           ;Proyecto.c: 253: res = (res << 1) | LeerBit();
  3150   001764  EC6C  F00B         	call	_LeerBit	;wreg free
  3151   001768  6E09               	movwf	??_LeerByte^0,c
  3152   00176A  500A               	movf	LeerByte@res^0,w,c
  3153   00176C  240A               	addwf	LeerByte@res^0,w,c
  3154   00176E  1009               	iorwf	??_LeerByte^0,w,c
  3155   001770  6E0A               	movwf	LeerByte@res^0,c
  3156   001772  060B               	decf	LeerByte@i^0,f,c
  3157   001774  500B               	movf	LeerByte@i^0,w,c
  3158   001776  A4D8               	btfss	status,2,c
  3159   001778  D7F5               	goto	l2140
  3160                           
  3161                           ;Proyecto.c: 254: };Proyecto.c: 255: return res;
  3162   00177A  500A               	movf	LeerByte@res^0,w,c
  3163   00177C  0012               	return		;funcret
  3164   00177E                     __end_of_LeerByte:
  3165                           	callstack 0
  3166                           
  3167 ;; *************** function _LeerBit *****************
  3168 ;; Defined at:
  3169 ;;		line 258 in file "Proyecto.c"
  3170 ;; Parameters:    Size  Location     Type
  3171 ;;		None
  3172 ;; Auto vars:     Size  Location     Type
  3173 ;;  res             1    7[COMRAM] unsigned char 
  3174 ;; Return value:  Size  Location     Type
  3175 ;;                  1    wreg      unsigned char 
  3176 ;; Registers used:
  3177 ;;		wreg, status,2
  3178 ;; Tracked objects:
  3179 ;;		On entry : 0/0
  3180 ;;		On exit  : 0/0
  3181 ;;		Unchanged: 0/0
  3182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3183 ;;      Params:         0       0       0       0       0       0       0       0       0
  3184 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3185 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3186 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3187 ;;Total ram usage:        1 bytes
  3188 ;; Hardware stack levels used: 1
  3189 ;; Hardware stack levels required when called: 4
  3190 ;; This function calls:
  3191 ;;		Nothing
  3192 ;; This function is called by:
  3193 ;;		_LeerByte
  3194 ;; This function uses a non-reentrant model
  3195 ;;
  3196                           
  3197                           	psect	text18
  3198   0016D8                     __ptext18:
  3199                           	callstack 0
  3200   0016D8                     _LeerBit:
  3201                           	callstack 24
  3202                           
  3203                           ;Proyecto.c: 259: unsigned char res = 0;
  3204                           
  3205                           ;incstack = 0
  3206   0016D8  0E00               	movlw	0
  3207   0016DA  6E08               	movwf	LeerBit@res^0,c
  3208   0016DC                     l299:
  3209   0016DC  AA80               	btfss	3968,5,c	;volatile
  3210   0016DE  D7FE               	goto	l299
  3211                           
  3212                           ;Proyecto.c: 261: _delay((unsigned long)((13)*(8000000/4000000.0)));
  3213   0016E0  0E08               	movlw	8
  3214   0016E2                     u2237:
  3215   0016E2  2EE8               	decfsz	wreg,f,c
  3216   0016E4  D7FE               	bra	u2237
  3217   0016E6  D000               	nop2	
  3218                           
  3219                           ;Proyecto.c: 262: if (RA5 == 1) res = 0;
  3220   0016E8  AA80               	btfss	3968,5,c	;volatile
  3221   0016EA  D002               	goto	l2060
  3222   0016EC  0E00               	movlw	0
  3223   0016EE  6E08               	movwf	LeerBit@res^0,c
  3224   0016F0                     l2060:
  3225                           
  3226                           ;Proyecto.c: 263: _delay((unsigned long)((22)*(8000000/4000000.0)));
  3227   0016F0  0E0E               	movlw	14
  3228   0016F2                     u2247:
  3229   0016F2  2EE8               	decfsz	wreg,f,c
  3230   0016F4  D7FE               	bra	u2247
  3231   0016F6  D000               	nop2	
  3232                           
  3233                           ;Proyecto.c: 264: if (RA5 == 1) {
  3234   0016F8  AA80               	btfss	3968,5,c	;volatile
  3235   0016FA  D004               	goto	u1090
  3236                           
  3237                           ;Proyecto.c: 265: res = 1;
  3238   0016FC  0E01               	movlw	1
  3239   0016FE  6E08               	movwf	LeerBit@res^0,c
  3240   001700                     l304:
  3241   001700  BA80               	btfsc	3968,5,c	;volatile
  3242   001702  D7FE               	goto	l304
  3243   001704                     u1090:
  3244                           
  3245                           ;Proyecto.c: 267: };Proyecto.c: 268: return res;
  3246   001704  5008               	movf	LeerBit@res^0,w,c
  3247   001706  0012               	return		;funcret
  3248   001708                     __end_of_LeerBit:
  3249                           	callstack 0
  3250                           
  3251 ;; *************** function _InicializaLCD *****************
  3252 ;; Defined at:
  3253 ;;		line 74 in file "LibLCDXC8.h"
  3254 ;; Parameters:    Size  Location     Type
  3255 ;;		None
  3256 ;; Auto vars:     Size  Location     Type
  3257 ;;		None
  3258 ;; Return value:  Size  Location     Type
  3259 ;;                  1    wreg      void 
  3260 ;; Registers used:
  3261 ;;		wreg, status,2, status,0, cstack
  3262 ;; Tracked objects:
  3263 ;;		On entry : 0/0
  3264 ;;		On exit  : 0/0
  3265 ;;		Unchanged: 0/0
  3266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3267 ;;      Params:         0       0       0       0       0       0       0       0       0
  3268 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3269 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3270 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3271 ;;Total ram usage:        0 bytes
  3272 ;; Hardware stack levels used: 1
  3273 ;; Hardware stack levels required when called: 7
  3274 ;; This function calls:
  3275 ;;		_BorraLCD
  3276 ;;		_EnviaDato
  3277 ;;		_HabilitaLCD
  3278 ;;		_RetardoLCD
  3279 ;; This function is called by:
  3280 ;;		_main
  3281 ;; This function uses a non-reentrant model
  3282 ;;
  3283                           
  3284                           	psect	text19
  3285   0011E8                     __ptext19:
  3286                           	callstack 0
  3287   0011E8                     _InicializaLCD:
  3288                           	callstack 23
  3289                           
  3290                           ;LibLCDXC8.h: 76: LATE1=0;
  3291                           
  3292                           ;incstack = 0
  3293   0011E8  928D               	bcf	3981,1,c	;volatile
  3294                           
  3295                           ;LibLCDXC8.h: 77: if(interfaz==4)
  3296   0011EA  0E04               	movlw	4
  3297   0011EC  1837               	xorwf	_interfaz^0,w,c
  3298   0011EE  A4D8               	btfss	status,2,c
  3299   0011F0  D004               	goto	l2298
  3300                           
  3301                           ;LibLCDXC8.h: 78: LATD=(LATD & 0b00001111) | 0x30;
  3302   0011F2  508C               	movf	140,w,c	;volatile
  3303   0011F4  0B0F               	andlw	15
  3304   0011F6  0930               	iorlw	48
  3305   0011F8  D001               	goto	L4
  3306   0011FA                     l2298:
  3307                           
  3308                           ;LibLCDXC8.h: 79: else;LibLCDXC8.h: 80: LATD=0x3F;
  3309   0011FA  0E3F               	movlw	63
  3310   0011FC                     L4:
  3311   0011FC  6E8C               	movwf	140,c	;volatile
  3312                           
  3313                           ;LibLCDXC8.h: 81: HabilitaLCD();
  3314   0011FE  ECFC  F00B         	call	_HabilitaLCD	;wreg free
  3315                           
  3316                           ;LibLCDXC8.h: 82: RetardoLCD(1);
  3317   001202  0E01               	movlw	1
  3318   001204  ECF8  F009         	call	_RetardoLCD
  3319                           
  3320                           ;LibLCDXC8.h: 83: if(interfaz==4)
  3321   001208  0E04               	movlw	4
  3322   00120A  1837               	xorwf	_interfaz^0,w,c
  3323   00120C  A4D8               	btfss	status,2,c
  3324   00120E  D004               	goto	l2308
  3325                           
  3326                           ;LibLCDXC8.h: 84: LATD=(LATD & 0b00001111) | 0x30;
  3327   001210  508C               	movf	140,w,c	;volatile
  3328   001212  0B0F               	andlw	15
  3329   001214  0930               	iorlw	48
  3330   001216  D001               	goto	L5
  3331   001218                     l2308:
  3332                           
  3333                           ;LibLCDXC8.h: 85: else;LibLCDXC8.h: 86: LATD=0x3F;
  3334   001218  0E3F               	movlw	63
  3335   00121A                     L5:
  3336   00121A  6E8C               	movwf	140,c	;volatile
  3337                           
  3338                           ;LibLCDXC8.h: 87: HabilitaLCD();
  3339   00121C  ECFC  F00B         	call	_HabilitaLCD	;wreg free
  3340                           
  3341                           ;LibLCDXC8.h: 88: RetardoLCD(3);
  3342   001220  0E03               	movlw	3
  3343   001222  ECF8  F009         	call	_RetardoLCD
  3344                           
  3345                           ;LibLCDXC8.h: 89: if(interfaz==4)
  3346   001226  0E04               	movlw	4
  3347   001228  1837               	xorwf	_interfaz^0,w,c
  3348   00122A  A4D8               	btfss	status,2,c
  3349   00122C  D004               	goto	l2318
  3350                           
  3351                           ;LibLCDXC8.h: 90: LATD=(LATD & 0b00001111) | 0x30;
  3352   00122E  508C               	movf	140,w,c	;volatile
  3353   001230  0B0F               	andlw	15
  3354   001232  0930               	iorlw	48
  3355   001234  D001               	goto	L6
  3356   001236                     l2318:
  3357                           
  3358                           ;LibLCDXC8.h: 91: else;LibLCDXC8.h: 92: LATD=0x3F;
  3359   001236  0E3F               	movlw	63
  3360   001238                     L6:
  3361   001238  6E8C               	movwf	140,c	;volatile
  3362                           
  3363                           ;LibLCDXC8.h: 93: HabilitaLCD();
  3364   00123A  ECFC  F00B         	call	_HabilitaLCD	;wreg free
  3365                           
  3366                           ;LibLCDXC8.h: 94: RetardoLCD(4);
  3367   00123E  0E04               	movlw	4
  3368   001240  ECF8  F009         	call	_RetardoLCD
  3369                           
  3370                           ;LibLCDXC8.h: 95: if(interfaz==4){
  3371   001244  0E04               	movlw	4
  3372   001246  1837               	xorwf	_interfaz^0,w,c
  3373   001248  A4D8               	btfss	status,2,c
  3374   00124A  D011               	goto	l2338
  3375                           
  3376                           ;LibLCDXC8.h: 96: LATD=(LATD & 0b00001111) | 0x20;
  3377   00124C  508C               	movf	140,w,c	;volatile
  3378   00124E  0B0F               	andlw	15
  3379   001250  0920               	iorlw	32
  3380   001252  6E8C               	movwf	140,c	;volatile
  3381                           
  3382                           ;LibLCDXC8.h: 97: HabilitaLCD();
  3383   001254  ECFC  F00B         	call	_HabilitaLCD	;wreg free
  3384                           
  3385                           ;LibLCDXC8.h: 98: RetardoLCD(4);
  3386   001258  0E04               	movlw	4
  3387   00125A  ECF8  F009         	call	_RetardoLCD
  3388                           
  3389                           ;LibLCDXC8.h: 99: EnviaDato(0x2F);
  3390   00125E  0E2F               	movlw	47
  3391   001260  ECAE  F00A         	call	_EnviaDato
  3392                           
  3393                           ;LibLCDXC8.h: 100: HabilitaLCD();
  3394   001264  ECFC  F00B         	call	_HabilitaLCD	;wreg free
  3395                           
  3396                           ;LibLCDXC8.h: 101: RetardoLCD(4);
  3397   001268  0E04               	movlw	4
  3398   00126A  ECF8  F009         	call	_RetardoLCD
  3399   00126E                     l2338:
  3400                           
  3401                           ;LibLCDXC8.h: 102: };LibLCDXC8.h: 103: BorraLCD();
  3402   00126E  ECE0  F00B         	call	_BorraLCD	;wreg free
  3403                           
  3404                           ;LibLCDXC8.h: 104: EnviaDato(0xF);
  3405   001272  0E0F               	movlw	15
  3406   001274  ECAE  F00A         	call	_EnviaDato
  3407                           
  3408                           ;LibLCDXC8.h: 105: HabilitaLCD();
  3409   001278  ECFC  F00B         	call	_HabilitaLCD	;wreg free
  3410                           
  3411                           ;LibLCDXC8.h: 106: RetardoLCD(4);
  3412   00127C  0E04               	movlw	4
  3413   00127E  ECF8  F009         	call	_RetardoLCD
  3414   001282  0012               	return		;funcret
  3415   001284                     __end_of_InicializaLCD:
  3416                           	callstack 0
  3417                           
  3418 ;; *************** function _BorraLCD *****************
  3419 ;; Defined at:
  3420 ;;		line 115 in file "LibLCDXC8.h"
  3421 ;; Parameters:    Size  Location     Type
  3422 ;;		None
  3423 ;; Auto vars:     Size  Location     Type
  3424 ;;		None
  3425 ;; Return value:  Size  Location     Type
  3426 ;;                  1    wreg      void 
  3427 ;; Registers used:
  3428 ;;		wreg, status,2, status,0, cstack
  3429 ;; Tracked objects:
  3430 ;;		On entry : 0/0
  3431 ;;		On exit  : 0/0
  3432 ;;		Unchanged: 0/0
  3433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3434 ;;      Params:         0       0       0       0       0       0       0       0       0
  3435 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3436 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3437 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3438 ;;Total ram usage:        0 bytes
  3439 ;; Hardware stack levels used: 1
  3440 ;; Hardware stack levels required when called: 6
  3441 ;; This function calls:
  3442 ;;		_EnviaDato
  3443 ;;		_HabilitaLCD
  3444 ;;		_RetardoLCD
  3445 ;; This function is called by:
  3446 ;;		_InicializaLCD
  3447 ;;		_main
  3448 ;;		_TransmitirDatos
  3449 ;; This function uses a non-reentrant model
  3450 ;;
  3451                           
  3452                           	psect	text20
  3453   0017C0                     __ptext20:
  3454                           	callstack 0
  3455   0017C0                     _BorraLCD:
  3456                           	callstack 23
  3457                           
  3458                           ;LibLCDXC8.h: 117: LATE1=0;
  3459                           
  3460                           ;incstack = 0
  3461   0017C0  928D               	bcf	3981,1,c	;volatile
  3462                           
  3463                           ;LibLCDXC8.h: 118: EnviaDato(0x01);
  3464   0017C2  0E01               	movlw	1
  3465   0017C4  ECAE  F00A         	call	_EnviaDato
  3466                           
  3467                           ;LibLCDXC8.h: 119: HabilitaLCD();
  3468   0017C8  ECFC  F00B         	call	_HabilitaLCD	;wreg free
  3469                           
  3470                           ;LibLCDXC8.h: 120: RetardoLCD(2);
  3471   0017CC  0E02               	movlw	2
  3472   0017CE  ECF8  F009         	call	_RetardoLCD
  3473   0017D2  0012               	return		;funcret
  3474   0017D4                     __end_of_BorraLCD:
  3475                           	callstack 0
  3476                           
  3477 ;; *************** function _EnviaDato *****************
  3478 ;; Defined at:
  3479 ;;		line 62 in file "LibLCDXC8.h"
  3480 ;; Parameters:    Size  Location     Type
  3481 ;;  a               1    wreg     unsigned char 
  3482 ;; Auto vars:     Size  Location     Type
  3483 ;;  a               1   10[COMRAM] unsigned char 
  3484 ;; Return value:  Size  Location     Type
  3485 ;;                  1    wreg      void 
  3486 ;; Registers used:
  3487 ;;		wreg, status,2, status,0, cstack
  3488 ;; Tracked objects:
  3489 ;;		On entry : 0/0
  3490 ;;		On exit  : 0/0
  3491 ;;		Unchanged: 0/0
  3492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3493 ;;      Params:         0       0       0       0       0       0       0       0       0
  3494 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3495 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3496 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3497 ;;Total ram usage:        2 bytes
  3498 ;; Hardware stack levels used: 1
  3499 ;; Hardware stack levels required when called: 5
  3500 ;; This function calls:
  3501 ;;		_HabilitaLCD
  3502 ;;		_RetardoLCD
  3503 ;; This function is called by:
  3504 ;;		_InicializaLCD
  3505 ;;		_BorraLCD
  3506 ;;		_EscribeLCD_c
  3507 ;;		_DireccionaLCD
  3508 ;; This function uses a non-reentrant model
  3509 ;;
  3510                           
  3511                           	psect	text21
  3512   00155C                     __ptext21:
  3513                           	callstack 0
  3514   00155C                     _EnviaDato:
  3515                           	callstack 22
  3516                           
  3517                           ;incstack = 0
  3518                           ;EnviaDato@a stored from wreg
  3519   00155C  6E0B               	movwf	EnviaDato@a^0,c
  3520                           
  3521                           ;LibLCDXC8.h: 63: if(interfaz==4){
  3522   00155E  0E04               	movlw	4
  3523   001560  1837               	xorwf	_interfaz^0,w,c
  3524   001562  A4D8               	btfss	status,2,c
  3525   001564  D017               	goto	l2040
  3526                           
  3527                           ;LibLCDXC8.h: 64: LATD=(LATD & 0b00001111) | (a & 0b11110000);
  3528   001566  C00B  F00A         	movff	EnviaDato@a,??_EnviaDato
  3529   00156A  0EF0               	movlw	240
  3530   00156C  160A               	andwf	??_EnviaDato^0,f,c
  3531   00156E  508C               	movf	140,w,c	;volatile
  3532   001570  0B0F               	andlw	15
  3533   001572  100A               	iorwf	??_EnviaDato^0,w,c
  3534   001574  6E8C               	movwf	140,c	;volatile
  3535                           
  3536                           ;LibLCDXC8.h: 65: HabilitaLCD();
  3537   001576  ECFC  F00B         	call	_HabilitaLCD	;wreg free
  3538                           
  3539                           ;LibLCDXC8.h: 66: RetardoLCD(1);
  3540   00157A  0E01               	movlw	1
  3541   00157C  ECF8  F009         	call	_RetardoLCD
  3542                           
  3543                           ;LibLCDXC8.h: 67: LATD=(LATD & 0b00001111) | (a<<4);
  3544   001580  C00B  F00A         	movff	EnviaDato@a,??_EnviaDato
  3545   001584  3A0A               	swapf	??_EnviaDato^0,f,c
  3546   001586  0EF0               	movlw	240
  3547   001588  160A               	andwf	??_EnviaDato^0,f,c
  3548   00158A  508C               	movf	140,w,c	;volatile
  3549   00158C  0B0F               	andlw	15
  3550   00158E  100A               	iorwf	??_EnviaDato^0,w,c
  3551   001590  6E8C               	movwf	140,c	;volatile
  3552                           
  3553                           ;LibLCDXC8.h: 70: }else if(interfaz==8){
  3554   001592  0012               	return	
  3555   001594                     l2040:
  3556   001594  0E08               	movlw	8
  3557   001596  1837               	xorwf	_interfaz^0,w,c
  3558   001598  A4D8               	btfss	status,2,c
  3559   00159A  0012               	return	
  3560                           
  3561                           ;LibLCDXC8.h: 71: LATD=a;
  3562   00159C  C00B  FF8C         	movff	EnviaDato@a,3980	;volatile
  3563   0015A0  0012               	return		;funcret
  3564   0015A2                     __end_of_EnviaDato:
  3565                           	callstack 0
  3566                           
  3567 ;; *************** function _RetardoLCD *****************
  3568 ;; Defined at:
  3569 ;;		line 295 in file "LibLCDXC8.h"
  3570 ;; Parameters:    Size  Location     Type
  3571 ;;  a               1    wreg     unsigned char 
  3572 ;; Auto vars:     Size  Location     Type
  3573 ;;  a               1    8[COMRAM] unsigned char 
  3574 ;; Return value:  Size  Location     Type
  3575 ;;                  1    wreg      void 
  3576 ;; Registers used:
  3577 ;;		wreg, status,2, status,0
  3578 ;; Tracked objects:
  3579 ;;		On entry : 0/0
  3580 ;;		On exit  : 0/0
  3581 ;;		Unchanged: 0/0
  3582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3583 ;;      Params:         0       0       0       0       0       0       0       0       0
  3584 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3585 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3586 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3587 ;;Total ram usage:        2 bytes
  3588 ;; Hardware stack levels used: 1
  3589 ;; Hardware stack levels required when called: 4
  3590 ;; This function calls:
  3591 ;;		Nothing
  3592 ;; This function is called by:
  3593 ;;		_EnviaDato
  3594 ;;		_InicializaLCD
  3595 ;;		_BorraLCD
  3596 ;;		_EscribeLCD_c
  3597 ;;		_DireccionaLCD
  3598 ;; This function uses a non-reentrant model
  3599 ;;
  3600                           
  3601                           	psect	text22
  3602   0013F0                     __ptext22:
  3603                           	callstack 0
  3604   0013F0                     _RetardoLCD:
  3605                           	callstack 23
  3606                           
  3607                           ;incstack = 0
  3608                           ;RetardoLCD@a stored from wreg
  3609   0013F0  6E09               	movwf	RetardoLCD@a^0,c
  3610                           
  3611                           ;LibLCDXC8.h: 296: switch(a){
  3612   0013F2  D023               	goto	l2028
  3613   0013F4                     l2018:
  3614   0013F4  0E27               	movlw	39
  3615   0013F6  6E08               	movwf	??_RetardoLCD^0,c
  3616   0013F8  0EF5               	movlw	245
  3617   0013FA                     u2257:
  3618   0013FA  2EE8               	decfsz	wreg,f,c
  3619   0013FC  D7FE               	bra	u2257
  3620   0013FE  2E08               	decfsz	??_RetardoLCD^0,f,c
  3621   001400  D7FC               	bra	u2257
  3622   001402  F000               	nop	
  3623                           
  3624                           ;LibLCDXC8.h: 299: break;
  3625   001404  0012               	return	
  3626   001406                     l2020:
  3627   001406  0E03               	movlw	3
  3628   001408  6E08               	movwf	??_RetardoLCD^0,c
  3629   00140A  0E98               	movlw	152
  3630   00140C                     u2267:
  3631   00140C  2EE8               	decfsz	wreg,f,c
  3632   00140E  D7FE               	bra	u2267
  3633   001410  2E08               	decfsz	??_RetardoLCD^0,f,c
  3634   001412  D7FC               	bra	u2267
  3635                           
  3636                           ;LibLCDXC8.h: 301: _delay((unsigned long)((640)*(8000000/4000000.0)));
  3637   001414  0EB6               	movlw	182
  3638   001416                     u2277:
  3639   001416  D000               	nop2	
  3640   001418  D000               	nop2	
  3641   00141A  2EE8               	decfsz	wreg,f,c
  3642   00141C  D7FC               	bra	u2277
  3643   00141E  D000               	nop2	
  3644   001420  D000               	nop2	
  3645   001422  D000               	nop2	
  3646                           
  3647                           ;LibLCDXC8.h: 303: break;
  3648   001424  0012               	return	
  3649   001426                     l2022:
  3650   001426  0E42               	movlw	66
  3651   001428                     u2287:
  3652   001428  2EE8               	decfsz	wreg,f,c
  3653   00142A  D7FE               	bra	u2287
  3654   00142C  D000               	nop2	
  3655                           
  3656                           ;LibLCDXC8.h: 306: break;
  3657   00142E  0012               	return	
  3658   001430                     l2024:
  3659   001430  0E1A               	movlw	26
  3660   001432                     u2297:
  3661   001432  2EE8               	decfsz	wreg,f,c
  3662   001434  D7FE               	bra	u2297
  3663   001436  D000               	nop2	
  3664                           
  3665                           ;LibLCDXC8.h: 309: break;
  3666   001438  0012               	return	
  3667   00143A                     l2028:
  3668   00143A  5009               	movf	RetardoLCD@a^0,w,c
  3669                           
  3670                           ; Switch size 1, requested type "simple"
  3671                           ; Number of cases is 4, Range of values is 1 to 4
  3672                           ; switch strategies available:
  3673                           ; Name         Instructions Cycles
  3674                           ; simple_byte           13     7 (average)
  3675                           ;	Chosen strategy is simple_byte
  3676   00143C  0A01               	xorlw	1	; case 1
  3677   00143E  B4D8               	btfsc	status,2,c
  3678   001440  D7D9               	goto	l2018
  3679   001442  0A03               	xorlw	3	; case 2
  3680   001444  B4D8               	btfsc	status,2,c
  3681   001446  D7DF               	goto	l2020
  3682   001448  0A01               	xorlw	1	; case 3
  3683   00144A  B4D8               	btfsc	status,2,c
  3684   00144C  D7EC               	goto	l2022
  3685   00144E  0A07               	xorlw	7	; case 4
  3686   001450  A4D8               	btfss	status,2,c
  3687   001452  0012               	return	
  3688   001454  D7ED               	goto	l2024
  3689   001456                     __end_of_RetardoLCD:
  3690                           	callstack 0
  3691                           
  3692 ;; *************** function _HabilitaLCD *****************
  3693 ;; Defined at:
  3694 ;;		line 108 in file "LibLCDXC8.h"
  3695 ;; Parameters:    Size  Location     Type
  3696 ;;		None
  3697 ;; Auto vars:     Size  Location     Type
  3698 ;;		None
  3699 ;; Return value:  Size  Location     Type
  3700 ;;                  1    wreg      void 
  3701 ;; Registers used:
  3702 ;;		wreg
  3703 ;; Tracked objects:
  3704 ;;		On entry : 0/0
  3705 ;;		On exit  : 0/0
  3706 ;;		Unchanged: 0/0
  3707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3708 ;;      Params:         0       0       0       0       0       0       0       0       0
  3709 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3710 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3711 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3712 ;;Total ram usage:        0 bytes
  3713 ;; Hardware stack levels used: 1
  3714 ;; Hardware stack levels required when called: 4
  3715 ;; This function calls:
  3716 ;;		Nothing
  3717 ;; This function is called by:
  3718 ;;		_EnviaDato
  3719 ;;		_InicializaLCD
  3720 ;;		_BorraLCD
  3721 ;;		_EscribeLCD_c
  3722 ;;		_DireccionaLCD
  3723 ;; This function uses a non-reentrant model
  3724 ;;
  3725                           
  3726                           	psect	text23
  3727   0017F8                     __ptext23:
  3728                           	callstack 0
  3729   0017F8                     _HabilitaLCD:
  3730                           	callstack 23
  3731                           
  3732                           ;LibLCDXC8.h: 110: LATE2=1;
  3733                           
  3734                           ;incstack = 0
  3735   0017F8  848D               	bsf	3981,2,c	;volatile
  3736                           
  3737                           ;LibLCDXC8.h: 111: _delay((unsigned long)((40)*(8000000/4000000.0)));
  3738   0017FA  0E1A               	movlw	26
  3739   0017FC                     u2307:
  3740   0017FC  2EE8               	decfsz	wreg,f,c
  3741   0017FE  D7FE               	bra	u2307
  3742   001800  D000               	nop2	
  3743                           
  3744                           ;LibLCDXC8.h: 113: LATE2=0;
  3745   001802  948D               	bcf	3981,2,c	;volatile
  3746   001804  0012               	return		;funcret
  3747   001806                     __end_of_HabilitaLCD:
  3748                           	callstack 0
  3749                           
  3750 ;; *************** function _ConvertirUnidades *****************
  3751 ;; Defined at:
  3752 ;;		line 331 in file "Proyecto.c"
  3753 ;; Parameters:    Size  Location     Type
  3754 ;;  canal           1    wreg     unsigned char 
  3755 ;; Auto vars:     Size  Location     Type
  3756 ;;  canal           1    7[COMRAM] unsigned char 
  3757 ;; Return value:  Size  Location     Type
  3758 ;;                  2  114[None  ] unsigned int 
  3759 ;; Registers used:
  3760 ;;		wreg, status,2, status,0
  3761 ;; Tracked objects:
  3762 ;;		On entry : 0/0
  3763 ;;		On exit  : 0/0
  3764 ;;		Unchanged: 0/0
  3765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3766 ;;      Params:         0       0       0       0       0       0       0       0       0
  3767 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3768 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3769 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3770 ;;Total ram usage:        1 bytes
  3771 ;; Hardware stack levels used: 1
  3772 ;; Hardware stack levels required when called: 4
  3773 ;; This function calls:
  3774 ;;		Nothing
  3775 ;; This function is called by:
  3776 ;;		_main
  3777 ;; This function uses a non-reentrant model
  3778 ;;
  3779                           
  3780                           	psect	text24
  3781   0017D4                     __ptext24:
  3782                           	callstack 0
  3783   0017D4                     _ConvertirUnidades:
  3784                           	callstack 26
  3785                           
  3786                           ;incstack = 0
  3787                           ;ConvertirUnidades@canal stored from wreg
  3788   0017D4  6E08               	movwf	ConvertirUnidades@canal^0,c
  3789                           
  3790                           ;Proyecto.c: 332: ADCON0 = 0b00000001 | (canal << 2);
  3791   0017D6  4408               	rlncf	ConvertirUnidades@canal^0,w,c
  3792   0017D8  46E8               	rlncf	wreg,f,c
  3793   0017DA  0BFC               	andlw	252
  3794   0017DC  0901               	iorlw	1
  3795   0017DE  6EC2               	movwf	194,c	;volatile
  3796                           
  3797                           ;Proyecto.c: 333: GO = 1;
  3798   0017E0  82C2               	bsf	4034,1,c	;volatile
  3799   0017E2                     l337:
  3800   0017E2  A2C2               	btfss	4034,1,c	;volatile
  3801   0017E4  0012               	return	
  3802   0017E6  D7FD               	goto	l337
  3803   0017E8                     __end_of_ConvertirUnidades:
  3804                           	callstack 0
  3805                           
  3806 ;; *************** function _ISR *****************
  3807 ;; Defined at:
  3808 ;;		line 410 in file "Proyecto.c"
  3809 ;; Parameters:    Size  Location     Type
  3810 ;;		None
  3811 ;; Auto vars:     Size  Location     Type
  3812 ;;		None
  3813 ;; Return value:  Size  Location     Type
  3814 ;;                  1    wreg      void 
  3815 ;; Registers used:
  3816 ;;		wreg, status,2, status,0, cstack
  3817 ;; Tracked objects:
  3818 ;;		On entry : 0/0
  3819 ;;		On exit  : 0/0
  3820 ;;		Unchanged: 0/0
  3821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3822 ;;      Params:         0       0       0       0       0       0       0       0       0
  3823 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3824 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3825 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3826 ;;Total ram usage:        2 bytes
  3827 ;; Hardware stack levels used: 1
  3828 ;; Hardware stack levels required when called: 3
  3829 ;; This function calls:
  3830 ;;		_LeerTeclado
  3831 ;;		i2_EscribeLCD_c
  3832 ;; This function is called by:
  3833 ;;		Interrupt level 2
  3834 ;; This function uses a non-reentrant model
  3835 ;;
  3836                           
  3837                           	psect	intcode
  3838   000008                     __pintcode:
  3839                           	callstack 0
  3840   000008                     _ISR:
  3841                           	callstack 22
  3842                           
  3843                           ;incstack = 0
  3844   000008  824C               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  3845   00000A  ED1A  F007         	call	int_func,f	;refresh shadow registers
  3846                           
  3847                           	psect	intcode_body
  3848   000E34                     __pintcode_body:
  3849                           	callstack 22
  3850   000E34                     int_func:
  3851                           	callstack 22
  3852   000E34  0006               	pop		; remove dummy address from shadow register refresh
  3853                           
  3854                           ;Proyecto.c: 411: if(TMR0IF == 1){
  3855   000E36  A4F2               	btfss	4082,2,c	;volatile
  3856   000E38  D018               	goto	i2l379
  3857                           
  3858                           ;Proyecto.c: 412: TMR0IF = 0;
  3859   000E3A  94F2               	bcf	4082,2,c	;volatile
  3860                           
  3861                           ;Proyecto.c: 413: TMR0 = 64286;
  3862   000E3C  0EFB               	movlw	251
  3863   000E3E  6ED7               	movwf	215,c	;volatile
  3864   000E40  0E1E               	movlw	30
  3865   000E42  6ED6               	movwf	214,c	;volatile
  3866                           
  3867                           ;Proyecto.c: 414: if(RE0 == 1){
  3868   000E44  A084               	btfss	3972,0,c	;volatile
  3869   000E46  D011               	goto	i2l379
  3870                           
  3871                           ;Proyecto.c: 415: CCP1CON = 0;
  3872   000E48  0E00               	movlw	0
  3873   000E4A  6EBD               	movwf	189,c	;volatile
  3874                           
  3875                           ;Proyecto.c: 416: RC2 = 0;
  3876   000E4C  9482               	bcf	3970,2,c	;volatile
  3877                           
  3878                           ;Proyecto.c: 417: _delay((unsigned long)((200)*(8000000/4000.0)));
  3879   000E4E  0E03               	movlw	3
  3880   000E50  6E07               	movwf	(??_ISR+1)^0,c
  3881   000E52  0E08               	movlw	8
  3882   000E54  6E06               	movwf	??_ISR^0,c
  3883   000E56  0E77               	movlw	119
  3884   000E58                     i2u231_47:
  3885   000E58  2EE8               	decfsz	wreg,f,c
  3886   000E5A  D7FE               	bra	i2u231_47
  3887   000E5C  2E06               	decfsz	??_ISR^0,f,c
  3888   000E5E  D7FC               	bra	i2u231_47
  3889   000E60  2E07               	decfsz	(??_ISR+1)^0,f,c
  3890   000E62  D7FA               	bra	i2u231_47
  3891   000E64  F000               	nop	
  3892   000E66  0003               	sleep		;# 
  3893   000E68                     i2l381:
  3894   000E68  D7FF               	goto	i2l381
  3895   000E6A                     i2l379:
  3896                           
  3897                           ;Proyecto.c: 420: };Proyecto.c: 421: };Proyecto.c: 422: if(RBIF==1){
  3898   000E6A  A0F2               	btfss	4082,0,c	;volatile
  3899   000E6C  D061               	goto	i2l2802
  3900                           
  3901                           ;Proyecto.c: 424: if(PORTB!=0b11110000 && teclaIf == 1){
  3902   000E6E  0EF0               	movlw	240
  3903   000E70  1881               	xorwf	129,w,c	;volatile
  3904   000E72  B4D8               	btfsc	status,2,c
  3905   000E74  D055               	goto	i2l2798
  3906   000E76  0442               	decf	_teclaIf^0,w,c
  3907   000E78  1043               	iorwf	(_teclaIf+1)^0,w,c
  3908   000E7A  A4D8               	btfss	status,2,c
  3909   000E7C  D051               	goto	i2l2798
  3910                           
  3911                           ;Proyecto.c: 425: Tecla=0;
  3912   000E7E  0E00               	movlw	0
  3913   000E80  6E46               	movwf	_Tecla^0,c
  3914                           
  3915                           ;Proyecto.c: 426: LATB=0b11111110;
  3916   000E82  0EFE               	movlw	254
  3917   000E84  6E8A               	movwf	138,c	;volatile
  3918                           
  3919                           ;Proyecto.c: 427: if(RB4==0) Tecla=16;
  3920   000E86  B881               	btfsc	3969,4,c	;volatile
  3921   000E88  D002               	goto	i2l386
  3922   000E8A  0E10               	movlw	16
  3923   000E8C  D041               	goto	L21
  3924   000E8E                     i2l386:
  3925                           
  3926                           ;Proyecto.c: 428: else if(RB5==0) Tecla=12;
  3927   000E8E  BA81               	btfsc	3969,5,c	;volatile
  3928   000E90  D002               	goto	i2l388
  3929   000E92  0E0C               	movlw	12
  3930   000E94  D03D               	goto	L21
  3931   000E96                     i2l388:
  3932                           
  3933                           ;Proyecto.c: 429: else if(RB6==0) Tecla=8;
  3934   000E96  BC81               	btfsc	3969,6,c	;volatile
  3935   000E98  D002               	goto	i2l390
  3936   000E9A  0E08               	movlw	8
  3937   000E9C  D039               	goto	L21
  3938   000E9E                     i2l390:
  3939                           
  3940                           ;Proyecto.c: 430: else if(RB7==0) Tecla=4;
  3941   000E9E  BE81               	btfsc	3969,7,c	;volatile
  3942   000EA0  D002               	goto	i2l2758
  3943   000EA2  0E04               	movlw	4
  3944   000EA4  D035               	goto	L21
  3945   000EA6                     i2l2758:
  3946                           
  3947                           ;Proyecto.c: 431: else{;Proyecto.c: 432: LATB=0b11111101;
  3948   000EA6  0EFD               	movlw	253
  3949   000EA8  6E8A               	movwf	138,c	;volatile
  3950                           
  3951                           ;Proyecto.c: 433: if(RB4==0) Tecla=15;
  3952   000EAA  B881               	btfsc	3969,4,c	;volatile
  3953   000EAC  D002               	goto	i2l394
  3954   000EAE  0E0F               	movlw	15
  3955   000EB0  D02F               	goto	L21
  3956   000EB2                     i2l394:
  3957                           
  3958                           ;Proyecto.c: 434: else if(RB5==0) Tecla=11;
  3959   000EB2  BA81               	btfsc	3969,5,c	;volatile
  3960   000EB4  D002               	goto	i2l396
  3961   000EB6  0E0B               	movlw	11
  3962   000EB8  D02B               	goto	L21
  3963   000EBA                     i2l396:
  3964                           
  3965                           ;Proyecto.c: 435: else if(RB6==0) Tecla=7;
  3966   000EBA  BC81               	btfsc	3969,6,c	;volatile
  3967   000EBC  D002               	goto	i2l398
  3968   000EBE  0E07               	movlw	7
  3969   000EC0  D027               	goto	L21
  3970   000EC2                     i2l398:
  3971                           
  3972                           ;Proyecto.c: 436: else if(RB7==0) Tecla=3;
  3973   000EC2  BE81               	btfsc	3969,7,c	;volatile
  3974   000EC4  D002               	goto	i2l2770
  3975   000EC6  0E03               	movlw	3
  3976   000EC8  D023               	goto	L21
  3977   000ECA                     i2l2770:
  3978                           
  3979                           ;Proyecto.c: 437: else{;Proyecto.c: 438: LATB=0b11111011;
  3980   000ECA  0EFB               	movlw	251
  3981   000ECC  6E8A               	movwf	138,c	;volatile
  3982                           
  3983                           ;Proyecto.c: 439: if(RB4==0) Tecla=14;
  3984   000ECE  B881               	btfsc	3969,4,c	;volatile
  3985   000ED0  D002               	goto	i2l402
  3986   000ED2  0E0E               	movlw	14
  3987   000ED4  D01D               	goto	L21
  3988   000ED6                     i2l402:
  3989                           
  3990                           ;Proyecto.c: 440: else if(RB5==0) Tecla=10;
  3991   000ED6  BA81               	btfsc	3969,5,c	;volatile
  3992   000ED8  D002               	goto	i2l404
  3993   000EDA  0E0A               	movlw	10
  3994   000EDC  D019               	goto	L21
  3995   000EDE                     i2l404:
  3996                           
  3997                           ;Proyecto.c: 441: else if(RB6==0) Tecla=6;
  3998   000EDE  BC81               	btfsc	3969,6,c	;volatile
  3999   000EE0  D002               	goto	i2l406
  4000   000EE2  0E06               	movlw	6
  4001   000EE4  D015               	goto	L21
  4002   000EE6                     i2l406:
  4003                           
  4004                           ;Proyecto.c: 442: else if(RB7==0) Tecla=2;
  4005   000EE6  BE81               	btfsc	3969,7,c	;volatile
  4006   000EE8  D002               	goto	i2l2782
  4007   000EEA  0E02               	movlw	2
  4008   000EEC  D011               	goto	L21
  4009   000EEE                     i2l2782:
  4010                           
  4011                           ;Proyecto.c: 443: else{;Proyecto.c: 444: LATB=0b11110111;
  4012   000EEE  0EF7               	movlw	247
  4013   000EF0  6E8A               	movwf	138,c	;volatile
  4014                           
  4015                           ;Proyecto.c: 445: if(RB4==0) Tecla=13;
  4016   000EF2  B881               	btfsc	3969,4,c	;volatile
  4017   000EF4  D002               	goto	i2l410
  4018   000EF6  0E0D               	movlw	13
  4019   000EF8  D00B               	goto	L21
  4020   000EFA                     i2l410:
  4021                           
  4022                           ;Proyecto.c: 446: else if(RB5==0) Tecla=9;
  4023   000EFA  BA81               	btfsc	3969,5,c	;volatile
  4024   000EFC  D002               	goto	i2l412
  4025   000EFE  0E09               	movlw	9
  4026   000F00  D007               	goto	L21
  4027   000F02                     i2l412:
  4028                           
  4029                           ;Proyecto.c: 447: else if(RB6==0) Tecla=5;
  4030   000F02  BC81               	btfsc	3969,6,c	;volatile
  4031   000F04  D002               	goto	i2l414
  4032   000F06  0E05               	movlw	5
  4033   000F08  D003               	goto	L21
  4034   000F0A                     i2l414:
  4035                           
  4036                           ;Proyecto.c: 448: else if(RB7==0) Tecla=1;
  4037   000F0A  BE81               	btfsc	3969,7,c	;volatile
  4038   000F0C  D002               	goto	i2l411
  4039   000F0E  0E01               	movlw	1
  4040   000F10                     L21:
  4041   000F10  6E46               	movwf	_Tecla^0,c
  4042   000F12                     i2l411:
  4043                           
  4044                           ;Proyecto.c: 449: };Proyecto.c: 450: };Proyecto.c: 451: };Proyecto.c: 452: LATB=0b111100
      +                          00;
  4045   000F12  0EF0               	movlw	240
  4046   000F14  6E8A               	movwf	138,c	;volatile
  4047                           
  4048                           ;Proyecto.c: 454: LeerTeclado();
  4049   000F16  EC8D  F008         	call	_LeerTeclado	;wreg free
  4050                           
  4051                           ;Proyecto.c: 455: EscribeLCD_c(Tecla);
  4052   000F1A  5046               	movf	_Tecla^0,w,c
  4053   000F1C  ECD5  F00B         	call	i2_EscribeLCD_c
  4054   000F20                     i2l2798:
  4055                           
  4056                           ;Proyecto.c: 456: };Proyecto.c: 457: RBIF=0;
  4057   000F20  90F2               	bcf	4082,0,c	;volatile
  4058                           
  4059                           ;Proyecto.c: 458: _delay((unsigned long)((50)*(8000000/4000.0)));
  4060   000F22  0E82               	movlw	130
  4061   000F24  6E06               	movwf	??_ISR^0,c
  4062   000F26  0EDE               	movlw	222
  4063   000F28                     i2u232_47:
  4064   000F28  2EE8               	decfsz	wreg,f,c
  4065   000F2A  D7FE               	bra	i2u232_47
  4066   000F2C  2E06               	decfsz	??_ISR^0,f,c
  4067   000F2E  D7FC               	bra	i2u232_47
  4068   000F30                     i2l2802:
  4069                           
  4070                           ;Proyecto.c: 460: };Proyecto.c: 461: if(TMR1IF==1){
  4071   000F30  A09E               	btfss	3998,0,c	;volatile
  4072   000F32  D00D               	goto	i2l418
  4073                           
  4074                           ;Proyecto.c: 462: TMR1IF=0;
  4075   000F34  909E               	bcf	3998,0,c	;volatile
  4076                           
  4077                           ;Proyecto.c: 463: TMR1=60536;
  4078   000F36  0EEC               	movlw	236
  4079   000F38  6ECF               	movwf	207,c	;volatile
  4080   000F3A  0E78               	movlw	120
  4081   000F3C  6ECE               	movwf	206,c	;volatile
  4082                           
  4083                           ;Proyecto.c: 464: CCPR2=60536+a;
  4084   000F3E  0E78               	movlw	120
  4085   000F40  2434               	addwf	_a^0,w,c
  4086   000F42  6EBB               	movwf	187,c	;volatile
  4087   000F44  0EEC               	movlw	236
  4088   000F46  2035               	addwfc	(_a+1)^0,w,c
  4089   000F48  6EBC               	movwf	188,c	;volatile
  4090                           
  4091                           ;Proyecto.c: 465: CCP2CON=0b00001001;
  4092   000F4A  0E09               	movlw	9
  4093   000F4C  6EBA               	movwf	186,c	;volatile
  4094   000F4E                     i2l418:
  4095   000F4E  924C               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  4096   000F50  0011               	retfie		f
  4097   000F52                     __end_of_ISR:
  4098                           	callstack 0
  4099                           
  4100 ;; *************** function i2_EscribeLCD_c *****************
  4101 ;; Defined at:
  4102 ;;		line 148 in file "LibLCDXC8.h"
  4103 ;; Parameters:    Size  Location     Type
  4104 ;;  a               1    wreg     unsigned char 
  4105 ;; Auto vars:     Size  Location     Type
  4106 ;;  a               1    4[COMRAM] unsigned char 
  4107 ;; Return value:  Size  Location     Type
  4108 ;;                  1    wreg      void 
  4109 ;; Registers used:
  4110 ;;		wreg, status,2, status,0, cstack
  4111 ;; Tracked objects:
  4112 ;;		On entry : 0/0
  4113 ;;		On exit  : 0/0
  4114 ;;		Unchanged: 0/0
  4115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4116 ;;      Params:         0       0       0       0       0       0       0       0       0
  4117 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4118 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4119 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4120 ;;Total ram usage:        1 bytes
  4121 ;; Hardware stack levels used: 1
  4122 ;; Hardware stack levels required when called: 2
  4123 ;; This function calls:
  4124 ;;		i2_EnviaDato
  4125 ;;		i2_HabilitaLCD
  4126 ;;		i2_RetardoLCD
  4127 ;; This function is called by:
  4128 ;;		_ISR
  4129 ;; This function uses a non-reentrant model
  4130 ;;
  4131                           
  4132                           	psect	text26
  4133   0017AA                     __ptext26:
  4134                           	callstack 0
  4135   0017AA                     i2_EscribeLCD_c:
  4136                           	callstack 22
  4137                           
  4138                           ;incstack = 0
  4139                           ;i2EscribeLCD_c@a stored from wreg
  4140   0017AA  6E05               	movwf	i2EscribeLCD_c@a^0,c
  4141                           
  4142                           ;LibLCDXC8.h: 152: LATE1=1;
  4143   0017AC  828D               	bsf	3981,1,c	;volatile
  4144                           
  4145                           ;LibLCDXC8.h: 153: EnviaDato(a);
  4146   0017AE  5005               	movf	i2EscribeLCD_c@a^0,w,c
  4147   0017B0  ECD1  F00A         	call	i2_EnviaDato
  4148                           
  4149                           ;LibLCDXC8.h: 154: HabilitaLCD();
  4150   0017B4  EC03  F00C         	call	i2_HabilitaLCD	;wreg free
  4151                           
  4152                           ;LibLCDXC8.h: 155: RetardoLCD(4);
  4153   0017B8  0E04               	movlw	4
  4154   0017BA  EC2B  F00A         	call	i2_RetardoLCD
  4155   0017BE  0012               	return		;funcret
  4156   0017C0                     __end_ofi2_EscribeLCD_c:
  4157                           	callstack 0
  4158                           
  4159 ;; *************** function i2_EnviaDato *****************
  4160 ;; Defined at:
  4161 ;;		line 62 in file "LibLCDXC8.h"
  4162 ;; Parameters:    Size  Location     Type
  4163 ;;  a               1    wreg     unsigned char 
  4164 ;; Auto vars:     Size  Location     Type
  4165 ;;  a               1    3[COMRAM] unsigned char 
  4166 ;; Return value:  Size  Location     Type
  4167 ;;                  1    wreg      void 
  4168 ;; Registers used:
  4169 ;;		wreg, status,2, status,0, cstack
  4170 ;; Tracked objects:
  4171 ;;		On entry : 0/0
  4172 ;;		On exit  : 0/0
  4173 ;;		Unchanged: 0/0
  4174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4175 ;;      Params:         0       0       0       0       0       0       0       0       0
  4176 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4177 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4178 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4179 ;;Total ram usage:        2 bytes
  4180 ;; Hardware stack levels used: 1
  4181 ;; Hardware stack levels required when called: 1
  4182 ;; This function calls:
  4183 ;;		i2_HabilitaLCD
  4184 ;;		i2_RetardoLCD
  4185 ;; This function is called by:
  4186 ;;		i2_EscribeLCD_c
  4187 ;; This function uses a non-reentrant model
  4188 ;;
  4189                           
  4190                           	psect	text27
  4191   0015A2                     __ptext27:
  4192                           	callstack 0
  4193   0015A2                     i2_EnviaDato:
  4194                           	callstack 22
  4195                           
  4196                           ;incstack = 0
  4197                           ;i2EnviaDato@a stored from wreg
  4198   0015A2  6E04               	movwf	i2EnviaDato@a^0,c
  4199                           
  4200                           ;LibLCDXC8.h: 63: if(interfaz==4){
  4201   0015A4  0E04               	movlw	4
  4202   0015A6  1837               	xorwf	_interfaz^0,w,c
  4203   0015A8  A4D8               	btfss	status,2,c
  4204   0015AA  D017               	goto	i2l2288
  4205                           
  4206                           ;LibLCDXC8.h: 64: LATD=(LATD & 0b00001111) | (a & 0b11110000);
  4207   0015AC  C004  F003         	movff	i2EnviaDato@a,??i2_EnviaDato
  4208   0015B0  0EF0               	movlw	240
  4209   0015B2  1603               	andwf	??i2_EnviaDato^0,f,c
  4210   0015B4  508C               	movf	140,w,c	;volatile
  4211   0015B6  0B0F               	andlw	15
  4212   0015B8  1003               	iorwf	??i2_EnviaDato^0,w,c
  4213   0015BA  6E8C               	movwf	140,c	;volatile
  4214                           
  4215                           ;LibLCDXC8.h: 65: HabilitaLCD();
  4216   0015BC  EC03  F00C         	call	i2_HabilitaLCD	;wreg free
  4217                           
  4218                           ;LibLCDXC8.h: 66: RetardoLCD(1);
  4219   0015C0  0E01               	movlw	1
  4220   0015C2  EC2B  F00A         	call	i2_RetardoLCD
  4221                           
  4222                           ;LibLCDXC8.h: 67: LATD=(LATD & 0b00001111) | (a<<4);
  4223   0015C6  C004  F003         	movff	i2EnviaDato@a,??i2_EnviaDato
  4224   0015CA  3A03               	swapf	??i2_EnviaDato^0,f,c
  4225   0015CC  0EF0               	movlw	240
  4226   0015CE  1603               	andwf	??i2_EnviaDato^0,f,c
  4227   0015D0  508C               	movf	140,w,c	;volatile
  4228   0015D2  0B0F               	andlw	15
  4229   0015D4  1003               	iorwf	??i2_EnviaDato^0,w,c
  4230   0015D6  6E8C               	movwf	140,c	;volatile
  4231                           
  4232                           ;LibLCDXC8.h: 70: }else if(interfaz==8){
  4233   0015D8  0012               	return	
  4234   0015DA                     i2l2288:
  4235   0015DA  0E08               	movlw	8
  4236   0015DC  1837               	xorwf	_interfaz^0,w,c
  4237   0015DE  A4D8               	btfss	status,2,c
  4238   0015E0  0012               	return	
  4239                           
  4240                           ;LibLCDXC8.h: 71: LATD=a;
  4241   0015E2  C004  FF8C         	movff	i2EnviaDato@a,3980	;volatile
  4242   0015E6  0012               	return		;funcret
  4243   0015E8                     __end_ofi2_EnviaDato:
  4244                           	callstack 0
  4245                           
  4246 ;; *************** function i2_RetardoLCD *****************
  4247 ;; Defined at:
  4248 ;;		line 295 in file "LibLCDXC8.h"
  4249 ;; Parameters:    Size  Location     Type
  4250 ;;  a               1    wreg     unsigned char 
  4251 ;; Auto vars:     Size  Location     Type
  4252 ;;  a               1    1[COMRAM] unsigned char 
  4253 ;; Return value:  Size  Location     Type
  4254 ;;                  1    wreg      void 
  4255 ;; Registers used:
  4256 ;;		wreg, status,2, status,0
  4257 ;; Tracked objects:
  4258 ;;		On entry : 0/0
  4259 ;;		On exit  : 0/0
  4260 ;;		Unchanged: 0/0
  4261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4262 ;;      Params:         0       0       0       0       0       0       0       0       0
  4263 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4264 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4265 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4266 ;;Total ram usage:        2 bytes
  4267 ;; Hardware stack levels used: 1
  4268 ;; This function calls:
  4269 ;;		Nothing
  4270 ;; This function is called by:
  4271 ;;		i2_EnviaDato
  4272 ;;		i2_EscribeLCD_c
  4273 ;; This function uses a non-reentrant model
  4274 ;;
  4275                           
  4276                           	psect	text28
  4277   001456                     __ptext28:
  4278                           	callstack 0
  4279   001456                     i2_RetardoLCD:
  4280                           	callstack 23
  4281                           
  4282                           ;incstack = 0
  4283                           ;i2RetardoLCD@a stored from wreg
  4284   001456  6E02               	movwf	i2RetardoLCD@a^0,c
  4285                           
  4286                           ;LibLCDXC8.h: 296: switch(a){
  4287   001458  D023               	goto	i2l2088
  4288   00145A                     i2l2078:
  4289   00145A  0E27               	movlw	39
  4290   00145C  6E01               	movwf	??i2_RetardoLCD^0,c
  4291   00145E  0EF5               	movlw	245
  4292   001460                     i2u233_47:
  4293   001460  2EE8               	decfsz	wreg,f,c
  4294   001462  D7FE               	bra	i2u233_47
  4295   001464  2E01               	decfsz	??i2_RetardoLCD^0,f,c
  4296   001466  D7FC               	bra	i2u233_47
  4297   001468  F000               	nop	
  4298                           
  4299                           ;LibLCDXC8.h: 299: break;
  4300   00146A  0012               	return	
  4301   00146C                     i2l2080:
  4302   00146C  0E03               	movlw	3
  4303   00146E  6E01               	movwf	??i2_RetardoLCD^0,c
  4304   001470  0E98               	movlw	152
  4305   001472                     i2u234_47:
  4306   001472  2EE8               	decfsz	wreg,f,c
  4307   001474  D7FE               	bra	i2u234_47
  4308   001476  2E01               	decfsz	??i2_RetardoLCD^0,f,c
  4309   001478  D7FC               	bra	i2u234_47
  4310                           
  4311                           ;LibLCDXC8.h: 301: _delay((unsigned long)((640)*(8000000/4000000.0)));
  4312   00147A  0EB6               	movlw	182
  4313   00147C                     i2u235_47:
  4314   00147C  D000               	nop2	
  4315   00147E  D000               	nop2	
  4316   001480  2EE8               	decfsz	wreg,f,c
  4317   001482  D7FC               	bra	i2u235_47
  4318   001484  D000               	nop2	
  4319   001486  D000               	nop2	
  4320   001488  D000               	nop2	
  4321                           
  4322                           ;LibLCDXC8.h: 303: break;
  4323   00148A  0012               	return	
  4324   00148C                     i2l2082:
  4325   00148C  0E42               	movlw	66
  4326   00148E                     i2u236_47:
  4327   00148E  2EE8               	decfsz	wreg,f,c
  4328   001490  D7FE               	bra	i2u236_47
  4329   001492  D000               	nop2	
  4330                           
  4331                           ;LibLCDXC8.h: 306: break;
  4332   001494  0012               	return	
  4333   001496                     i2l2084:
  4334   001496  0E1A               	movlw	26
  4335   001498                     i2u237_47:
  4336   001498  2EE8               	decfsz	wreg,f,c
  4337   00149A  D7FE               	bra	i2u237_47
  4338   00149C  D000               	nop2	
  4339                           
  4340                           ;LibLCDXC8.h: 309: break;
  4341   00149E  0012               	return	
  4342   0014A0                     i2l2088:
  4343   0014A0  5002               	movf	i2RetardoLCD@a^0,w,c
  4344                           
  4345                           ; Switch size 1, requested type "simple"
  4346                           ; Number of cases is 4, Range of values is 1 to 4
  4347                           ; switch strategies available:
  4348                           ; Name         Instructions Cycles
  4349                           ; simple_byte           13     7 (average)
  4350                           ;	Chosen strategy is simple_byte
  4351   0014A2  0A01               	xorlw	1	; case 1
  4352   0014A4  B4D8               	btfsc	status,2,c
  4353   0014A6  D7D9               	goto	i2l2078
  4354   0014A8  0A03               	xorlw	3	; case 2
  4355   0014AA  B4D8               	btfsc	status,2,c
  4356   0014AC  D7DF               	goto	i2l2080
  4357   0014AE  0A01               	xorlw	1	; case 3
  4358   0014B0  B4D8               	btfsc	status,2,c
  4359   0014B2  D7EC               	goto	i2l2082
  4360   0014B4  0A07               	xorlw	7	; case 4
  4361   0014B6  A4D8               	btfss	status,2,c
  4362   0014B8  0012               	return	
  4363   0014BA  D7ED               	goto	i2l2084
  4364   0014BC                     __end_ofi2_RetardoLCD:
  4365                           	callstack 0
  4366                           
  4367 ;; *************** function i2_HabilitaLCD *****************
  4368 ;; Defined at:
  4369 ;;		line 108 in file "LibLCDXC8.h"
  4370 ;; Parameters:    Size  Location     Type
  4371 ;;		None
  4372 ;; Auto vars:     Size  Location     Type
  4373 ;;		None
  4374 ;; Return value:  Size  Location     Type
  4375 ;;                  1    wreg      void 
  4376 ;; Registers used:
  4377 ;;		wreg
  4378 ;; Tracked objects:
  4379 ;;		On entry : 0/0
  4380 ;;		On exit  : 0/0
  4381 ;;		Unchanged: 0/0
  4382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4383 ;;      Params:         0       0       0       0       0       0       0       0       0
  4384 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4385 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4386 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4387 ;;Total ram usage:        0 bytes
  4388 ;; Hardware stack levels used: 1
  4389 ;; This function calls:
  4390 ;;		Nothing
  4391 ;; This function is called by:
  4392 ;;		i2_EnviaDato
  4393 ;;		i2_EscribeLCD_c
  4394 ;; This function uses a non-reentrant model
  4395 ;;
  4396                           
  4397                           	psect	text29
  4398   001806                     __ptext29:
  4399                           	callstack 0
  4400   001806                     i2_HabilitaLCD:
  4401                           	callstack 23
  4402                           
  4403                           ;LibLCDXC8.h: 110: LATE2=1;
  4404                           
  4405                           ;incstack = 0
  4406   001806  848D               	bsf	3981,2,c	;volatile
  4407                           
  4408                           ;LibLCDXC8.h: 111: _delay((unsigned long)((40)*(8000000/4000000.0)));
  4409   001808  0E1A               	movlw	26
  4410   00180A                     i2u238_47:
  4411   00180A  2EE8               	decfsz	wreg,f,c
  4412   00180C  D7FE               	bra	i2u238_47
  4413   00180E  D000               	nop2	
  4414                           
  4415                           ;LibLCDXC8.h: 113: LATE2=0;
  4416   001810  948D               	bcf	3981,2,c	;volatile
  4417   001812  0012               	return		;funcret
  4418   001814                     __end_ofi2_HabilitaLCD:
  4419                           	callstack 0
  4420                           
  4421 ;; *************** function _LeerTeclado *****************
  4422 ;; Defined at:
  4423 ;;		line 271 in file "Proyecto.c"
  4424 ;; Parameters:    Size  Location     Type
  4425 ;;		None
  4426 ;; Auto vars:     Size  Location     Type
  4427 ;;		None
  4428 ;; Return value:  Size  Location     Type
  4429 ;;                  1    wreg      unsigned char 
  4430 ;; Registers used:
  4431 ;;		wreg, status,2, status,0
  4432 ;; Tracked objects:
  4433 ;;		On entry : 0/0
  4434 ;;		On exit  : 0/0
  4435 ;;		Unchanged: 0/0
  4436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4437 ;;      Params:         0       0       0       0       0       0       0       0       0
  4438 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4439 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4440 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4441 ;;Total ram usage:        0 bytes
  4442 ;; Hardware stack levels used: 1
  4443 ;; This function calls:
  4444 ;;		Nothing
  4445 ;; This function is called by:
  4446 ;;		_ISR
  4447 ;; This function uses a non-reentrant model
  4448 ;;
  4449                           
  4450                           	psect	text30
  4451   00111A                     __ptext30:
  4452                           	callstack 0
  4453   00111A                     _LeerTeclado:
  4454                           	callstack 24
  4455                           
  4456                           ;Proyecto.c: 272: teclaRecibidaIf=1;
  4457                           
  4458                           ;incstack = 0
  4459   00111A  0E00               	movlw	0
  4460   00111C  6E41               	movwf	(_teclaRecibidaIf+1)^0,c
  4461   00111E  0E01               	movlw	1
  4462   001120  6E40               	movwf	_teclaRecibidaIf^0,c
  4463                           
  4464                           ;Proyecto.c: 273: switch (Tecla){
  4465   001122  D030               	goto	i2l1782
  4466   001124                     i2l1748:
  4467                           
  4468                           ;Proyecto.c: 275: Tecla='1';
  4469   001124  0E31               	movlw	49
  4470   001126  6E46               	movwf	_Tecla^0,c
  4471                           
  4472                           ;Proyecto.c: 276: break;
  4473   001128  0012               	return	
  4474   00112A                     i2l1750:
  4475                           
  4476                           ;Proyecto.c: 278: Tecla='2';
  4477   00112A  0E32               	movlw	50
  4478   00112C  6E46               	movwf	_Tecla^0,c
  4479                           
  4480                           ;Proyecto.c: 279: break;
  4481   00112E  0012               	return	
  4482   001130                     i2l1752:
  4483                           
  4484                           ;Proyecto.c: 281: Tecla='3';
  4485   001130  0E33               	movlw	51
  4486   001132  6E46               	movwf	_Tecla^0,c
  4487                           
  4488                           ;Proyecto.c: 282: break;
  4489   001134  0012               	return	
  4490   001136                     i2l1754:
  4491                           
  4492                           ;Proyecto.c: 284: Tecla='+';
  4493   001136  0E2B               	movlw	43
  4494   001138  6E46               	movwf	_Tecla^0,c
  4495                           
  4496                           ;Proyecto.c: 285: break;
  4497   00113A  0012               	return	
  4498   00113C                     i2l1756:
  4499                           
  4500                           ;Proyecto.c: 287: Tecla='4';
  4501   00113C  0E34               	movlw	52
  4502   00113E  6E46               	movwf	_Tecla^0,c
  4503                           
  4504                           ;Proyecto.c: 288: break;
  4505   001140  0012               	return	
  4506   001142                     i2l1758:
  4507                           
  4508                           ;Proyecto.c: 290: Tecla ='5';
  4509   001142  0E35               	movlw	53
  4510   001144  6E46               	movwf	_Tecla^0,c
  4511                           
  4512                           ;Proyecto.c: 291: break;
  4513   001146  0012               	return	
  4514   001148                     i2l1760:
  4515                           
  4516                           ;Proyecto.c: 293: Tecla='6';
  4517   001148  0E36               	movlw	54
  4518   00114A  6E46               	movwf	_Tecla^0,c
  4519                           
  4520                           ;Proyecto.c: 294: break;
  4521   00114C  0012               	return	
  4522   00114E                     i2l1762:
  4523                           
  4524                           ;Proyecto.c: 296: Tecla='-';
  4525   00114E  0E2D               	movlw	45
  4526   001150  6E46               	movwf	_Tecla^0,c
  4527                           
  4528                           ;Proyecto.c: 297: break;
  4529   001152  0012               	return	
  4530   001154                     i2l1764:
  4531                           
  4532                           ;Proyecto.c: 299: Tecla='7';
  4533   001154  0E37               	movlw	55
  4534   001156  6E46               	movwf	_Tecla^0,c
  4535                           
  4536                           ;Proyecto.c: 300: break;
  4537   001158  0012               	return	
  4538   00115A                     i2l1766:
  4539                           
  4540                           ;Proyecto.c: 302: Tecla='8';
  4541   00115A  0E38               	movlw	56
  4542   00115C  6E46               	movwf	_Tecla^0,c
  4543                           
  4544                           ;Proyecto.c: 303: break;
  4545   00115E  0012               	return	
  4546   001160                     i2l1768:
  4547                           
  4548                           ;Proyecto.c: 305: Tecla='9';
  4549   001160  0E39               	movlw	57
  4550   001162  6E46               	movwf	_Tecla^0,c
  4551                           
  4552                           ;Proyecto.c: 306: break;
  4553   001164  0012               	return	
  4554   001166                     i2l1770:
  4555                           
  4556                           ;Proyecto.c: 308: Tecla='X';
  4557   001166  0E58               	movlw	88
  4558   001168  6E46               	movwf	_Tecla^0,c
  4559                           
  4560                           ;Proyecto.c: 309: break;
  4561   00116A  0012               	return	
  4562   00116C                     i2l1772:
  4563                           
  4564                           ;Proyecto.c: 311: Tecla='B';
  4565   00116C  0E42               	movlw	66
  4566   00116E  6E46               	movwf	_Tecla^0,c
  4567                           
  4568                           ;Proyecto.c: 312: break;
  4569   001170  0012               	return	
  4570   001172                     i2l1774:
  4571                           
  4572                           ;Proyecto.c: 314: Tecla='0';
  4573   001172  0E30               	movlw	48
  4574   001174  6E46               	movwf	_Tecla^0,c
  4575                           
  4576                           ;Proyecto.c: 315: break;
  4577   001176  0012               	return	
  4578   001178                     i2l1776:
  4579                           
  4580                           ;Proyecto.c: 317: Tecla='=';
  4581   001178  0E3D               	movlw	61
  4582   00117A  6E46               	movwf	_Tecla^0,c
  4583                           
  4584                           ;Proyecto.c: 318: break;
  4585   00117C  0012               	return	
  4586   00117E                     i2l1778:
  4587                           
  4588                           ;Proyecto.c: 320: Tecla='/';
  4589   00117E  0E2F               	movlw	47
  4590   001180  6E46               	movwf	_Tecla^0,c
  4591                           
  4592                           ;Proyecto.c: 321: break;
  4593   001182  0012               	return	
  4594   001184                     i2l1782:
  4595   001184  5046               	movf	_Tecla^0,w,c
  4596                           
  4597                           ; Switch size 1, requested type "simple"
  4598                           ; Number of cases is 16, Range of values is 1 to 16
  4599                           ; switch strategies available:
  4600                           ; Name         Instructions Cycles
  4601                           ; simple_byte           49    25 (average)
  4602                           ;	Chosen strategy is simple_byte
  4603   001186  0A01               	xorlw	1	; case 1
  4604   001188  B4D8               	btfsc	status,2,c
  4605   00118A  D7CC               	goto	i2l1748
  4606   00118C  0A03               	xorlw	3	; case 2
  4607   00118E  B4D8               	btfsc	status,2,c
  4608   001190  D7CC               	goto	i2l1750
  4609   001192  0A01               	xorlw	1	; case 3
  4610   001194  B4D8               	btfsc	status,2,c
  4611   001196  D7CC               	goto	i2l1752
  4612   001198  0A07               	xorlw	7	; case 4
  4613   00119A  B4D8               	btfsc	status,2,c
  4614   00119C  D7CC               	goto	i2l1754
  4615   00119E  0A01               	xorlw	1	; case 5
  4616   0011A0  B4D8               	btfsc	status,2,c
  4617   0011A2  D7CC               	goto	i2l1756
  4618   0011A4  0A03               	xorlw	3	; case 6
  4619   0011A6  B4D8               	btfsc	status,2,c
  4620   0011A8  D7CC               	goto	i2l1758
  4621   0011AA  0A01               	xorlw	1	; case 7
  4622   0011AC  B4D8               	btfsc	status,2,c
  4623   0011AE  D7CC               	goto	i2l1760
  4624   0011B0  0A0F               	xorlw	15	; case 8
  4625   0011B2  B4D8               	btfsc	status,2,c
  4626   0011B4  D7CC               	goto	i2l1762
  4627   0011B6  0A01               	xorlw	1	; case 9
  4628   0011B8  B4D8               	btfsc	status,2,c
  4629   0011BA  D7CC               	goto	i2l1764
  4630   0011BC  0A03               	xorlw	3	; case 10
  4631   0011BE  B4D8               	btfsc	status,2,c
  4632   0011C0  D7CC               	goto	i2l1766
  4633   0011C2  0A01               	xorlw	1	; case 11
  4634   0011C4  B4D8               	btfsc	status,2,c
  4635   0011C6  D7CC               	goto	i2l1768
  4636   0011C8  0A07               	xorlw	7	; case 12
  4637   0011CA  B4D8               	btfsc	status,2,c
  4638   0011CC  D7CC               	goto	i2l1770
  4639   0011CE  0A01               	xorlw	1	; case 13
  4640   0011D0  B4D8               	btfsc	status,2,c
  4641   0011D2  D7CC               	goto	i2l1772
  4642   0011D4  0A03               	xorlw	3	; case 14
  4643   0011D6  B4D8               	btfsc	status,2,c
  4644   0011D8  D7CC               	goto	i2l1774
  4645   0011DA  0A01               	xorlw	1	; case 15
  4646   0011DC  B4D8               	btfsc	status,2,c
  4647   0011DE  D7CC               	goto	i2l1776
  4648   0011E0  0A1F               	xorlw	31	; case 16
  4649   0011E2  A4D8               	btfss	status,2,c
  4650   0011E4  0012               	return	
  4651   0011E6  D7CB               	goto	i2l1778
  4652   0011E8                     __end_of_LeerTeclado:
  4653                           	callstack 0
  4654                           
  4655                           	psect	rparam
  4656   000000                     
  4657                           	psect	temp
  4658   00004C                     btemp:
  4659                           	callstack 0
  4660   00004C                     	ds	1
  4661   000000                     int$flags	set	btemp
  4662   000000                     wtemp8	set	btemp+1
  4663   000000                     ttemp5	set	btemp+1
  4664   000000                     ttemp6	set	btemp+4
  4665   000000                     ttemp7	set	btemp+8
  4666                           
  4667                           	psect	idloc
  4668                           
  4669                           ;Config register IDLOC0 @ 0x200000
  4670                           ;	unspecified, using default values
  4671   200000                     	org	2097152
  4672   200000  FF                 	db	255
  4673                           
  4674                           ;Config register IDLOC1 @ 0x200001
  4675                           ;	unspecified, using default values
  4676   200001                     	org	2097153
  4677   200001  FF                 	db	255
  4678                           
  4679                           ;Config register IDLOC2 @ 0x200002
  4680                           ;	unspecified, using default values
  4681   200002                     	org	2097154
  4682   200002  FF                 	db	255
  4683                           
  4684                           ;Config register IDLOC3 @ 0x200003
  4685                           ;	unspecified, using default values
  4686   200003                     	org	2097155
  4687   200003  FF                 	db	255
  4688                           
  4689                           ;Config register IDLOC4 @ 0x200004
  4690                           ;	unspecified, using default values
  4691   200004                     	org	2097156
  4692   200004  FF                 	db	255
  4693                           
  4694                           ;Config register IDLOC5 @ 0x200005
  4695                           ;	unspecified, using default values
  4696   200005                     	org	2097157
  4697   200005  FF                 	db	255
  4698                           
  4699                           ;Config register IDLOC6 @ 0x200006
  4700                           ;	unspecified, using default values
  4701   200006                     	org	2097158
  4702   200006  FF                 	db	255
  4703                           
  4704                           ;Config register IDLOC7 @ 0x200007
  4705                           ;	unspecified, using default values
  4706   200007                     	org	2097159
  4707   200007  FF                 	db	255
  4708                           
  4709                           	psect	config
  4710                           
  4711                           ;Config register CONFIG1L @ 0x300000
  4712                           ;	unspecified, using default values
  4713                           ;	PLL Prescaler Selection bits
  4714                           ;	PLLDIV = 0x0, unprogrammed default
  4715                           ;	System Clock Postscaler Selection bits
  4716                           ;	CPUDIV = 0x0, unprogrammed default
  4717                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  4718                           ;	USBDIV = 0x0, unprogrammed default
  4719   300000                     	org	3145728
  4720   300000  00                 	db	0
  4721                           
  4722                           ;Config register CONFIG1H @ 0x300001
  4723                           ;	Oscillator Selection bits
  4724                           ;	FOSC = INTOSC_EC, Internal oscillator, CLKO function on RA6, EC used by USB (INTCKO)
  4725                           ;	Fail-Safe Clock Monitor Enable bit
  4726                           ;	FCMEN = 0x0, unprogrammed default
  4727                           ;	Internal/External Oscillator Switchover bit
  4728                           ;	IESO = 0x0, unprogrammed default
  4729   300001                     	org	3145729
  4730   300001  09                 	db	9
  4731                           
  4732                           ;Config register CONFIG2L @ 0x300002
  4733                           ;	unspecified, using default values
  4734                           ;	Power-up Timer Enable bit
  4735                           ;	PWRT = 0x1, unprogrammed default
  4736                           ;	Brown-out Reset Enable bits
  4737                           ;	BOR = 0x3, unprogrammed default
  4738                           ;	Brown-out Reset Voltage bits
  4739                           ;	BORV = 0x3, unprogrammed default
  4740                           ;	USB Voltage Regulator Enable bit
  4741                           ;	VREGEN = 0x0, unprogrammed default
  4742   300002                     	org	3145730
  4743   300002  1F                 	db	31
  4744                           
  4745                           ;Config register CONFIG2H @ 0x300003
  4746                           ;	Watchdog Timer Enable bit
  4747                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  4748                           ;	Watchdog Timer Postscale Select bits
  4749                           ;	WDTPS = 0xF, unprogrammed default
  4750   300003                     	org	3145731
  4751   300003  1E                 	db	30
  4752                           
  4753                           ; Padding undefined space
  4754   300004                     	org	3145732
  4755   300004  FF                 	db	255
  4756                           
  4757                           ;Config register CONFIG3H @ 0x300005
  4758                           ;	CCP2 MUX bit
  4759                           ;	CCP2MX = 0x1, unprogrammed default
  4760                           ;	PORTB A/D Enable bit
  4761                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  4762                           ;	Low-Power Timer 1 Oscillator Enable bit
  4763                           ;	LPT1OSC = 0x0, unprogrammed default
  4764                           ;	MCLR Pin Enable bit
  4765                           ;	MCLRE = 0x1, unprogrammed default
  4766   300005                     	org	3145733
  4767   300005  81                 	db	129
  4768                           
  4769                           ;Config register CONFIG4L @ 0x300006
  4770                           ;	Stack Full/Underflow Reset Enable bit
  4771                           ;	STVREN = 0x1, unprogrammed default
  4772                           ;	Single-Supply ICSP Enable bit
  4773                           ;	LVP = OFF, Single-Supply ICSP disabled
  4774                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  4775                           ;	ICPRT = 0x0, unprogrammed default
  4776                           ;	Extended Instruction Set Enable bit
  4777                           ;	XINST = 0x0, unprogrammed default
  4778                           ;	Background Debugger Enable bit
  4779                           ;	DEBUG = 0x1, unprogrammed default
  4780   300006                     	org	3145734
  4781   300006  81                 	db	129
  4782                           
  4783                           ; Padding undefined space
  4784   300007                     	org	3145735
  4785   300007  FF                 	db	255
  4786                           
  4787                           ;Config register CONFIG5L @ 0x300008
  4788                           ;	unspecified, using default values
  4789                           ;	Code Protection bit
  4790                           ;	CP0 = 0x1, unprogrammed default
  4791                           ;	Code Protection bit
  4792                           ;	CP1 = 0x1, unprogrammed default
  4793                           ;	Code Protection bit
  4794                           ;	CP2 = 0x1, unprogrammed default
  4795                           ;	Code Protection bit
  4796                           ;	CP3 = 0x1, unprogrammed default
  4797   300008                     	org	3145736
  4798   300008  0F                 	db	15
  4799                           
  4800                           ;Config register CONFIG5H @ 0x300009
  4801                           ;	unspecified, using default values
  4802                           ;	Boot Block Code Protection bit
  4803                           ;	CPB = 0x1, unprogrammed default
  4804                           ;	Data EEPROM Code Protection bit
  4805                           ;	CPD = 0x1, unprogrammed default
  4806   300009                     	org	3145737
  4807   300009  C0                 	db	192
  4808                           
  4809                           ;Config register CONFIG6L @ 0x30000A
  4810                           ;	unspecified, using default values
  4811                           ;	Write Protection bit
  4812                           ;	WRT0 = 0x1, unprogrammed default
  4813                           ;	Write Protection bit
  4814                           ;	WRT1 = 0x1, unprogrammed default
  4815                           ;	Write Protection bit
  4816                           ;	WRT2 = 0x1, unprogrammed default
  4817                           ;	Write Protection bit
  4818                           ;	WRT3 = 0x1, unprogrammed default
  4819   30000A                     	org	3145738
  4820   30000A  0F                 	db	15
  4821                           
  4822                           ;Config register CONFIG6H @ 0x30000B
  4823                           ;	unspecified, using default values
  4824                           ;	Configuration Register Write Protection bit
  4825                           ;	WRTC = 0x1, unprogrammed default
  4826                           ;	Boot Block Write Protection bit
  4827                           ;	WRTB = 0x1, unprogrammed default
  4828                           ;	Data EEPROM Write Protection bit
  4829                           ;	WRTD = 0x1, unprogrammed default
  4830   30000B                     	org	3145739
  4831   30000B  E0                 	db	224
  4832                           
  4833                           ;Config register CONFIG7L @ 0x30000C
  4834                           ;	unspecified, using default values
  4835                           ;	Table Read Protection bit
  4836                           ;	EBTR0 = 0x1, unprogrammed default
  4837                           ;	Table Read Protection bit
  4838                           ;	EBTR1 = 0x1, unprogrammed default
  4839                           ;	Table Read Protection bit
  4840                           ;	EBTR2 = 0x1, unprogrammed default
  4841                           ;	Table Read Protection bit
  4842                           ;	EBTR3 = 0x1, unprogrammed default
  4843   30000C                     	org	3145740
  4844   30000C  0F                 	db	15
  4845                           
  4846                           ;Config register CONFIG7H @ 0x30000D
  4847                           ;	unspecified, using default values
  4848                           ;	Boot Block Table Read Protection bit
  4849                           ;	EBTRB = 0x1, unprogrammed default
  4850   30000D                     	org	3145741
  4851   30000D  40                 	db	64
  4852                           tosu	equ	0xFFF
  4853                           tosh	equ	0xFFE
  4854                           tosl	equ	0xFFD
  4855                           stkptr	equ	0xFFC
  4856                           pclatu	equ	0xFFB
  4857                           pclath	equ	0xFFA
  4858                           pcl	equ	0xFF9
  4859                           tblptru	equ	0xFF8
  4860                           tblptrh	equ	0xFF7
  4861                           tblptrl	equ	0xFF6
  4862                           tablat	equ	0xFF5
  4863                           prodh	equ	0xFF4
  4864                           prodl	equ	0xFF3
  4865                           indf0	equ	0xFEF
  4866                           postinc0	equ	0xFEE
  4867                           postdec0	equ	0xFED
  4868                           preinc0	equ	0xFEC
  4869                           plusw0	equ	0xFEB
  4870                           fsr0h	equ	0xFEA
  4871                           fsr0l	equ	0xFE9
  4872                           wreg	equ	0xFE8
  4873                           indf1	equ	0xFE7
  4874                           postinc1	equ	0xFE6
  4875                           postdec1	equ	0xFE5
  4876                           preinc1	equ	0xFE4
  4877                           plusw1	equ	0xFE3
  4878                           fsr1h	equ	0xFE2
  4879                           fsr1l	equ	0xFE1
  4880                           bsr	equ	0xFE0
  4881                           indf2	equ	0xFDF
  4882                           postinc2	equ	0xFDE
  4883                           postdec2	equ	0xFDD
  4884                           preinc2	equ	0xFDC
  4885                           plusw2	equ	0xFDB
  4886                           fsr2h	equ	0xFDA
  4887                           fsr2l	equ	0xFD9
  4888                           status	equ	0xFD8

Data Sizes:
    Strings     67
    Constant    0
    Data        16
    BSS         12
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     47      75
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    Password@pass	PTR unsigned char  size(1) Largest target is 4
		 -> ing(COMRAM[4]), 

    MensajeLCD_Word@a	PTR unsigned char  size(1) Largest target is 23
		 -> STR_8(CODE[6]), STR_7(CODE[6]), STR_6(CODE[23]), STR_5(CODE[11]), 
		 -> STR_4(CODE[23]), STR_3(CODE[10]), STR_2(CODE[17]), STR_1(CODE[11]), 

    NuevoCaracter@c	PTR unsigned char  size(1) Largest target is 8
		 -> cara(COMRAM[8]), 


Critical Paths under _main in COMRAM

    _main->_TransmitirDatos
    _TransmitirDatos->___awmod
    ___awmod->___awdiv
    _MensajeLCD_Word->_EscribeLCD_c
    _Password->_DireccionaLCD
    _Password->_EscribeLCD_c
    _DireccionaLCD->_EnviaDato
    _NuevoCaracter->_EscribeLCD_c
    _EscribeLCD_c->_EnviaDato
    _LeerHT11->_LeerByte
    _LeerByte->_LeerBit
    _InicializaLCD->_EnviaDato
    _BorraLCD->_EnviaDato
    _EnviaDato->_RetardoLCD

Critical Paths under _ISR in COMRAM

    _ISR->i2_EscribeLCD_c
    i2_EscribeLCD_c->i2_EnviaDato
    i2_EnviaDato->i2_RetardoLCD

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    8897
                                             43 COMRAM     4     4      0
                           _BorraLCD
                  _ConvertirUnidades
                      _DireccionaLCD
                       _EscribeLCD_c
                      _InicializaLCD
                           _LeerHT11
                    _MensajeLCD_Word
                         _Movimiento
                      _NuevoCaracter
                           _Password
                    _TransmitirDatos
                          _Velocidad
 ---------------------------------------------------------------------------------
 (1) _Velocidad                                            2     0      2     384
                                              7 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _TransmitirDatos                                     22    18      4    5826
                                             21 COMRAM    22    18      4
                           _BorraLCD
                      _DireccionaLCD
                       _EscribeLCD_c
                    _MensajeLCD_Word
                         _Transmitir
                            ___awdiv
                            ___awmod
                            ___lwdiv
                            ___lwmod
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     311
                                              7 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     615
                                              7 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     922
                                              7 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     600
                                             15 COMRAM     6     2      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4    1516
                                              7 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _Transmitir                                           1     1      0      22
                                              7 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _MensajeLCD_Word                                      4     3      1     874
                                             12 COMRAM     4     3      1
                       _EscribeLCD_c
 ---------------------------------------------------------------------------------
 (1) _Password                                            12    10      2     576
                                             12 COMRAM    12    10      2
                      _DireccionaLCD
                       _EscribeLCD_c
 ---------------------------------------------------------------------------------
 (2) _DireccionaLCD                                        1     1      0     132
                                             11 COMRAM     1     1      0
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (1) _NuevoCaracter                                        4     3      1     405
                                             12 COMRAM     4     3      1
                         _ComandoLCD
                       _EscribeLCD_c
 ---------------------------------------------------------------------------------
 (3) _EscribeLCD_c                                         1     1      0     132
                                             11 COMRAM     1     1      0
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (2) _ComandoLCD                                           2     2      0      22
                                              7 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Movimiento                                           1     1      0       0
                                              7 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _LeerHT11                                             1     1      0     117
                                             11 COMRAM     1     1      0
                           _LeerByte
 ---------------------------------------------------------------------------------
 (2) _LeerByte                                             3     3      0     117
                                              8 COMRAM     3     3      0
                            _LeerBit
 ---------------------------------------------------------------------------------
 (3) _LeerBit                                              1     1      0      25
                                              7 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _InicializaLCD                                        0     0      0     220
                           _BorraLCD
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (2) _BorraLCD                                             0     0      0     110
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (4) _EnviaDato                                            2     2      0      88
                                              9 COMRAM     2     2      0
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (4) _RetardoLCD                                           2     2      0      22
                                              7 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (4) _HabilitaLCD                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConvertirUnidades                                    1     1      0      22
                                              7 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISR                                                  2     2      0     132
                                              5 COMRAM     2     2      0
                        _LeerTeclado
                     i2_EscribeLCD_c
 ---------------------------------------------------------------------------------
 (7) i2_EscribeLCD_c                                       1     1      0     132
                                              4 COMRAM     1     1      0
                        i2_EnviaDato
                      i2_HabilitaLCD
                       i2_RetardoLCD
 ---------------------------------------------------------------------------------
 (8) i2_EnviaDato                                          2     2      0      88
                                              2 COMRAM     2     2      0
                      i2_HabilitaLCD
                       i2_RetardoLCD
 ---------------------------------------------------------------------------------
 (8) i2_RetardoLCD                                         2     2      0      22
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (8) i2_HabilitaLCD                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _LeerTeclado                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BorraLCD
     _EnviaDato
       _HabilitaLCD
       _RetardoLCD
     _HabilitaLCD
     _RetardoLCD
   _ConvertirUnidades
   _DireccionaLCD
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _EscribeLCD_c
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _InicializaLCD
     _BorraLCD
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _LeerHT11
     _LeerByte
       _LeerBit
   _MensajeLCD_Word
     _EscribeLCD_c
   _Movimiento
   _NuevoCaracter
     _ComandoLCD
     _EscribeLCD_c
   _Password
     _DireccionaLCD
     _EscribeLCD_c
   _TransmitirDatos
     _BorraLCD
     _DireccionaLCD
     _EscribeLCD_c
     _MensajeLCD_Word
     _Transmitir
     ___awdiv
     ___awmod
       ___awdiv (ARG)
     ___lwdiv
     ___lwmod
     ___wmul
   _Velocidad

 _ISR (ROOT)
   _LeerTeclado
   i2_EscribeLCD_c
     i2_EnviaDato
       i2_HabilitaLCD
       i2_RetardoLCD
     i2_HabilitaLCD
     i2_RetardoLCD

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      37        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2F      4B       1       79.8%
BITBIGSFRhhhlh      19      0       0      21        0.0%
BITBIGSFRlhll       10      0       0      33        0.0%
BITBIGSFRhhhh        D      0       0      20        0.0%
BITBIGSFRlll         D      0       0      35        0.0%
BITBIGSFRhhllll      C      0       0      27        0.0%
BITBIGSFRhhlllh      A      0       0      26        0.0%
BITBIGSFRhhllll      6      0       0      28        0.0%
BITBIGSFRlhhhl       5      0       0      31        0.0%
BITBIGSFRhhlhl       5      0       0      24        0.0%
BITBIGSFRhll         4      0       0      29        0.0%
BITBIGSFRhhlhhh      3      0       0      23        0.0%
BITBIGSFRlhhhh       1      0       0      30        0.0%
BITBIGSFRlhhl        1      0       0      32        0.0%
BITBIGSFRllh         1      0       0      34        0.0%
BITBIGSFRhhllh       1      0       0      25        0.0%
BITBIGSFRhhhll       1      0       0      22        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      4B      36        0.0%
DATA                 0      0      4B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Wed Jun 07 18:21:24 2023

                        _a 0034                          _c 0044          Transmitir@BufferT 0008  
                       _GO 007E11               ___awdiv@sign 000D                 EnviaDato@a 000B  
      ___wmul@multiplicand 000A              ??_LeerTeclado 0001              _InicializaLCD 11E8  
                      l304 1700                        l350 087A                        l337 17E2  
                      l281 1350                        l355 09BC                        l285 16B2  
                      l288 16BC                        l299 16DC                        l900 1504  
                      l910 1620                        _GIE 007F97                        _RA5 007C05  
                      _RC2 007C12                        _RB4 007C0C                        _RB5 007C0D  
                      _RE0 007C20                        _RB6 007C0E                        _RB7 007C0F  
                      _PR2 000FCB                        _ISR 0008           TransmitirDatos@n 001C  
                      _ing 0048               ___awmod@sign 0015                        wreg 000FE8  
                     ?_ISR 0001           ??i2_EscribeLCD_c 0005                       l2020 1406  
                     l2022 1426                       l2024 1430                       l2040 1594  
                     l2200 12FE                       l2018 13F4                       l2028 143A  
                     l2060 16F0                       l2140 1764                       l2220 13AE  
                     l2212 1394                       l2118 1516                       l2150 1816  
                     l2222 13B6                       l2232 13D8                       l2216 13A0  
                     l2410 089C                       l2308 1218                       l2180 12BE  
                     l2236 13E6                       l2228 13CE                       l2420 08F6  
                     l2318 1236                       l2182 12C6                       l2174 12A8  
                     l2246 14D2                       l2502 0B64                       l2414 08C8  
                     l2406 0888                       l2422 0920                       l2192 12E6  
                     l2168 1298                       l2248 14DA                       l2512 0BBA  
                     l2338 126E                       l2258 14FA                       l2274 1616  
                     l2266 15F6                       l2514 0BF2                       l2506 0BA4  
                     l2372 132E                       l2196 12F0                       l2268 15FE  
                     l2460 0A4E                       l2540 0FAA                       l2470 0AA4  
                     l2534 0F88                       l2472 0ADC                       l2464 0A8E  
                     l2456 0A3E                       l2552 0FEE                       l2528 0F66  
                     l2298 11FA                       l2546 0FCC                       l2564 1032  
                     l2582 10AE                       l2558 1010                       l2824 1640  
                     l2912 0D20                       l2586 10E4                       l2578 1078  
                     l2498 0B54                       l2906 0D10                       l2950 0DF0  
                     l2934 0D94                       l2944 0DC6                       STR_1 0818  
                     STR_2 0807                       STR_3 082E                       STR_4 0801  
                     STR_5 0823                       STR_6 0801                       STR_7 0838  
                     STR_8 083E                       u1110 155A                       u1300 1602  
                     u1230 13BA                       u1400 1364                       u1090 1704  
                     u1410 1378                       u1170 12CA                       u1420 137A  
                     u2070 1664                       u1270 14DE                       _LATB 000F8A  
                     u2207 172A                       u2127 0CA2                       _LATD 000F8C  
                     u2217 16A8                       u2137 0CE6                       u1610 0FD8  
                     u2090 0D50                       u2307 17FC                       u2227 16B8  
                     u2147 0D86                       u1700 1066                       u2237 16E2  
                     u2157 0DAC                       u1702 1068                       u1630 0FFA  
                     u1550 0F72                       u2247 16F2                       u2167 0DE4  
                     u1720 1088                       u2257 13FA                       u2177 0DFA  
                     u1730 109C                       u1722 108A                       u1650 101C  
                     u1570 0F94                       u2267 140C                       u2187 1714  
                     u1732 109E                       u2277 1416                       u2197 171E  
                     u1750 10BE                       u1670 103E                       u1590 0FB6  
                     u2287 1428                       u1760 10D2                       u1752 10C0  
                     u2297 1432                       u1762 10D4                       u1690 1056  
                     u1780 10F4                       u1692 1058                       u1790 1108  
                     u1782 10F6                       u1792 110A                       _PEIE 007F96  
                     _RBIE 007F93                       _RBIF 007F90                       _RBPU 007F8F  
                     _TMR0 000FD6                       _TMR1 000FCE                       _TMR2 000FCC  
                     _TRMT 007D61                       _Cont 0036             ??_EscribeLCD_c 000C  
                     _Temp 0047                       _cara 0038                       _main 0C00  
                     fsr1h 000FE2                       fsr2h 000FDA                       indf2 000FDF  
                     fsr1l 000FE1                       fsr2l 000FD9                       btemp 004C  
                     prodh 000FF4                       prodl 000FF3                       start 000E  
          __end_of_LeerBit 1708               ___param_bank 000000                      ??_ISR 0006  
           ?_InicializaLCD 0001                      ?_main 0001            __end_of___awdiv 1308  
                    _ADRES 000FC3                      _CCPR2 000FBB            __end_of___awmod 13F0  
               _ComandoLCD 1708              EscribeLCD_c@a 000C                      _T0CON 000FD5  
          ___awdiv@divisor 000A                      _T1CON 000FCD                      _T2CON 000FCA  
                    _LATE1 007C69                      _LATE2 007C6A            __end_of___lwdiv 150E  
          __end_of___lwmod 162A                      i2l410 0EFA                      i2l402 0ED6  
                    i2l411 0F12                      i2l412 0F02                      i2l404 0EDE  
                    i2l414 0F0A                      i2l406 0EE6                      i2l418 0F4E  
                    i2l381 0E68                      i2l390 0E9E                      i2l394 0EB2  
                    i2l386 0E8E                      i2l379 0E6A                      i2l396 0EBA  
                    i2l388 0E96                      i2l398 0EC2            ___awdiv@counter 000C  
                    _RCREG 000FAE                      _RCSTA 000FAB                      _SPBRG 000FAF  
                    _PORTB 000F81                      _USBEN 007B6B                      _TRISA 000F92  
                    _TRISB 000F93                      _TRISC 000F94                      _TRISD 000F95  
                    _TXREG 000FAD                      _TXSTA 000FAC                      _Tecla 0046  
          _teclaRecibidaIf 0040        __end_of_LeerTeclado 11E8                      main@i 002E  
           NuevoCaracter@c 000D             NuevoCaracter@i 000F                      tablat 000FF5  
              _HabilitaLCD 17F8                      ttemp5 004D                      ttemp6 0050  
                    ttemp7 0054                      status 000FD8                      wtemp8 004D  
            Password@F3203 0030           __end_of_BorraLCD 17D4           __end_of_LeerHT11 16D8  
          __initialization 1666           __end_of_LeerByte 177E               __end_of_main 0E34  
                   ??_main 002C           __end_of_Password 1380              __activetblptr 000002  
                   _ADCON0 000FC2                     _ADCON1 000FC1                     _ADCON2 000FC0  
    __end_of_NuevoCaracter 1666             DireccionaLCD@a 000C                     _CCPR1L 000FBE  
         ___awdiv@dividend 0008                     i2l2080 146C                     i2l2082 148C  
                   i2l2084 1496                     i2l2078 145A                     i2l2088 14A0  
                   i2l1750 112A                     i2l1760 1148                     i2l1752 1130  
                   i2l2288 15DA                     i2l1770 1166                     i2l1762 114E  
                   i2l1754 1136                     i2l2802 0F30                     i2l1772 116C  
                   i2l1764 1154                     i2l1756 113C                     i2l1748 1124  
                   i2l1774 1172                     i2l1766 115A                     i2l1758 1142  
                   i2l1782 1184                     i2l1776 1178                     i2l1768 1160  
                   i2l1778 117E                     i2l2770 0ECA                     i2l2782 0EEE  
                   i2l2758 0EA6                     i2l2798 0F20                     _OSCCON 000FD3  
                   _TMR0IE 007F95                     _TMR0IF 007F92                     _TMR1IE 007CE8  
                   _TMR1IF 007CF0                     _TMR0ON 007EAF                     _TMR1ON 007E68  
                   _TMR2ON 007E52                     _TRISA5 007C95                     _TRISC1 007CA1  
                   _TRISC2 007CA2                     _TRISE0 007CB0                     _TRISE1 007CB1  
                   _TRISE2 007CB2                     _TRISC6 007CA6                     _TRISC7 007CA7  
                ??_LeerBit 0008      __end_of_DireccionaLCD 1794                     _UTRDIS 007B7B  
               _RetardoLCD 13F0        TransmitirDatos@Ent1 0016        TransmitirDatos@Ent2 0018  
      TransmitirDatos@Simb 0028                 _Movimiento 1046                     ___wmul 1736  
                ??___awdiv 000C                  ??___awmod 0014                  ??___lwdiv 000C  
                ??___lwmod 000C            ??_InicializaLCD 000C                     clear_0 168C  
         ___awdiv@quotient 000E            ___awmod@divisor 0012                     isa$std 000001  
          ___awmod@counter 0014       __end_of_EscribeLCD_c 17AA                ?_ComandoLCD 0001  
              _LeerTeclado 111A               ?i2_EnviaDato 0001               __pdataCOMRAM 0030  
             __mediumconst 0000                     tblptrh 000FF7                     tblptrl 000FF6  
                   tblptru 000FF8                 _Transmitir 1814      __end_ofi2_HabilitaLCD 1814  
               __accesstop 0060    __end_of__initialization 1692              ___rparam_used 000001  
           __pcstackCOMRAM 0001          __end_of_EnviaDato 15A2             Password@access 0015  
                ?_BorraLCD 0001                  ?_LeerHT11 0001                  ?_LeerByte 0001  
           Password@secret 0011                ?_RetardoLCD 0001                RetardoLCD@a 0009  
        __end_of_Velocidad 1046                  ?_Password 000D             ComandoLCD@data 0009  
              ?_Movimiento 0001                    ?___wmul 0008                    _CCP1CON 000FBD  
                  _CCP2CON 000FBA                 ??_BorraLCD 000C                 ??_LeerHT11 000C  
              ?_Transmitir 0001          ??_MensajeLCD_Word 000E                 ??_LeerByte 0009  
             ?_HabilitaLCD 0001                    _LeerBit 16D8                 ??_Password 000F  
                  __Hparam 0000                    __Lparam 0000       TransmitirDatos@TempC 002A  
                  ___awdiv 1284                    ___awmod 1380                    ___lwdiv 14BC  
                  ___lwmod 15E8               __psmallconst 0800                    __pcinit 1666  
                  __ramtop 0800                    __ptext0 0C00                    __ptext1 0F52  
                  __ptext2 0846                    __ptext3 1736                    __ptext4 15E8  
                  __ptext5 14BC                    __ptext6 1380                    __ptext7 1284  
                  __ptext8 1814                    __ptext9 150E           ___awmod@dividend 0010  
                  _teclaIf 0042             __pintcode_body 0E34       end_of_initialization 1692  
      _TransmitirDatos$230 0024        _TransmitirDatos$226 001E        _TransmitirDatos$227 0020  
      _TransmitirDatos$229 0022        _TransmitirDatos$868 0026              __Lmediumconst 0000  
                  int_func 0E34               _EscribeLCD_c 1794                    postdec1 000FE5  
        ??_TransmitirDatos 001A                    postinc0 000FEE                    postinc1 000FE6  
                  postinc2 000FDE               ??_ComandoLCD 0008               ?_LeerTeclado 0001  
                LeerByte@i 000B            i2EscribeLCD_c@a 0005              ?i2_RetardoLCD 0001  
       __end_of_ComandoLCD 1736             __end_of___wmul 175C              __pidataCOMRAM 17E8  
    __end_of_InicializaLCD 1284                  _EnviaDato 155C        start_initialization 1666  
              __end_of_ISR 0F52                  Password@i 0017               Password@pass 000D  
           ??i2_RetardoLCD 0001               ??_RetardoLCD 0008               ??_Movimiento 0008  
                 ??___wmul 000C                  _Velocidad 0F52            _MensajeLCD_Word 150E  
               ?_EnviaDato 0001                __pbssCOMRAM 0040         __end_of_RetardoLCD 1456  
         MensajeLCD_Word@a 000D           MensajeLCD_Word@i 000F               ??_Transmitir 0008  
            _NuevoCaracter 162A         __end_of_Movimiento 111A                   ?_LeerBit 0001  
            _DireccionaLCD 177E             i2_EscribeLCD_c 17AA           ___lwdiv@dividend 0008  
                __pintcode 0008                   ?___awdiv 0008                   ?___awmod 0010  
               ?_Velocidad 0008                   ?___lwdiv 0008                   ?___lwmod 0008  
       __end_of_Transmitir 1820                __smallconst 0800           ___lwdiv@quotient 000C  
           ?_NuevoCaracter 000D            _TransmitirDatos 0846             ___wmul@product 000C  
            i2_HabilitaLCD 1806             ?_DireccionaLCD 0001     __end_ofi2_EscribeLCD_c 17C0  
                 i2u231_47 0E58                   i2u232_47 0F28                   i2u233_47 1460  
                 i2u234_47 1472                   i2u235_47 147C                   i2u236_47 148E  
                 i2u237_47 1498                   i2u238_47 180A    __end_of_MensajeLCD_Word 155C  
        ___wmul@multiplier 0008              ??i2_EnviaDato 0003       __end_ofi2_RetardoLCD 14BC  
              ??_EnviaDato 000A          _ConvertirUnidades 17D4         ?_ConvertirUnidades 0001  
                 _BorraLCD 17C0                   _LeerHT11 16A0                  copy_data0 167A  
                 _LeerByte 175C             ?i2_HabilitaLCD 0001        ??_ConvertirUnidades 0008  
          ?i2_EscribeLCD_c 0001                   _Password 1308                   __Hrparam 0000  
                 __Lrparam 0000                ??_Velocidad 000A               i2EnviaDato@a 0004  
__end_of_ConvertirUnidades 17E8            ??_NuevoCaracter 000E    __end_of_TransmitirDatos 0C00  
          ___lwdiv@divisor 000A            ___lwdiv@counter 000E                   __ptext10 1308  
                 __ptext11 177E                   __ptext20 17C0                   __ptext12 162A  
                 __ptext21 155C                   __ptext13 1794                   __ptext30 111A  
                 __ptext22 13F0                   __ptext14 1708                   __ptext23 17F8  
                 __ptext15 1046                   __ptext24 17D4                   __ptext16 16A0  
                 __ptext17 175C                   __ptext26 17AA                   __ptext18 16D8  
                 __ptext27 15A2                   __ptext19 11E8                   __ptext28 1456  
                 __ptext29 1806        __end_ofi2_EnviaDato 15E8            ??_DireccionaLCD 000C  
                 _interfaz 0037               Velocidad@val 0008                   isa$xinst 000000  
         ?_MensajeLCD_Word 000D                   int$flags 004C          NuevoCaracter@addr 000E  
          ??i2_HabilitaLCD 0001                   intlevel2 0000              ??_HabilitaLCD 0008  
         ___lwmod@dividend 0008              i2RetardoLCD@a 0002                i2_EnviaDato 15A2  
          ___lwmod@divisor 000A            ___lwmod@counter 000C           ?_TransmitirDatos 0016  
   ConvertirUnidades@canal 0008              ?_EscribeLCD_c 0001                 LeerBit@res 0008  
             i2_RetardoLCD 1456        __end_of_HabilitaLCD 1806                LeerByte@res 000A  
