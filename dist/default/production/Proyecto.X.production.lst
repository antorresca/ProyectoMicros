

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Tue Jun 06 15:57:30 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og9 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    34                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    41                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    42                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    43                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    44                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    45   000000                     
    46                           ; Version 2.40
    47                           ; Generated 04/07/2022 GMT
    48                           ; 
    49                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    50                           ; All rights reserved.
    51                           ; 
    52                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    53                           ; 
    54                           ; Redistribution and use in source and binary forms, with or without modification, are
    55                           ; permitted provided that the following conditions are met:
    56                           ; 
    57                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    58                           ;        conditions and the following disclaimer.
    59                           ; 
    60                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    61                           ;        of conditions and the following disclaimer in the documentation and/or other
    62                           ;        materials provided with the distribution. Publication is not required when
    63                           ;        this file is used in an embedded application.
    64                           ; 
    65                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    66                           ;        software without specific prior written permission.
    67                           ; 
    68                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    69                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    70                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    71                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    72                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    73                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    74                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    75                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    76                           ; 
    77                           ; 
    78                           ; Code-generator required, PIC18F4550 Definitions
    79                           ; 
    80                           ; SFR Addresses
    81   000000                     
    82                           	psect	idataCOMRAM
    83   00134E                     __pidataCOMRAM:
    84                           	callstack 0
    85                           
    86                           ;initializer for _c
    87   00134E  4240               	dw	16960
    88                           
    89                           ;initializer for _Cont
    90   001350  06                 	db	6
    91                           
    92                           ;initializer for _interfaz
    93   001351  08                 	db	8
    94                           
    95                           ;initializer for _cara
    96   001352  00                 	db	0
    97   001353  0A                 	db	10
    98   001354  0A                 	db	10
    99   001355  0A                 	db	10
   100   001356  00                 	db	0
   101   001357  1F                 	db	31
   102   001358  0E                 	db	14
   103   001359  00                 	db	0
   104   000000                     _RCREG	set	4014
   105   000000                     _TXREG	set	4013
   106   000000                     _SPBRG	set	4015
   107   000000                     _RB7	set	31759
   108   000000                     _RB6	set	31758
   109   000000                     _RB5	set	31757
   110   000000                     _RB4	set	31756
   111   000000                     _RC5	set	31765
   112   000000                     _TRMT	set	32097
   113   000000                     _TRISC0	set	31904
   114   000000                     _TRISC7	set	31911
   115   000000                     _TRISC6	set	31910
   116   000000                     _TMR2ON	set	32338
   117   000000                     _TRISC2	set	31906
   118   000000                     _TMR0ON	set	32431
   119   000000                     _GIE	set	32663
   120   000000                     _TMR0IE	set	32661
   121   000000                     _TMR0IF	set	32658
   122   000000                     _RBIE	set	32659
   123   000000                     _TRISE1	set	31921
   124   000000                     _TRISE2	set	31922
   125   000000                     _LATE2	set	31850
   126   000000                     _PORTB	set	3969
   127   000000                     _LATD	set	3980
   128   000000                     _RC0	set	31760
   129   000000                     _TRISB	set	3987
   130   000000                     _TRISC	set	3988
   131   000000                     _LATE0	set	31848
   132   000000                     _RCSTA	set	4011
   133   000000                     _TXSTA	set	4012
   134   000000                     _CCP1CON	set	4029
   135   000000                     _CCPR1L	set	4030
   136   000000                     _ADCON2	set	4032
   137   000000                     _ADCON1	set	4033
   138   000000                     _ADCON0	set	4034
   139   000000                     _TRISD	set	3989
   140   000000                     _OSCCON	set	4051
   141   000000                     _RCIF	set	31989
   142   000000                     _TRISE0	set	31920
   143   000000                     _T0CON	set	4053
   144   000000                     _RBPU	set	32655
   145   000000                     _T2CON	set	4042
   146   000000                     _PR2	set	4043
   147   000000                     _RBIF	set	32656
   148   000000                     _TMR0	set	4054
   149   000000                     _TMR2	set	4044
   150   000000                     _RE1	set	31777
   151   000000                     _LATB	set	3978
   152                           
   153                           	psect	smallconst
   154   000800                     __psmallconst:
   155                           	callstack 0
   156   000800  00                 	db	0
   157   000801                     STR_2:
   158   000801  20                 	db	32
   159   000802  20                 	db	32
   160   000803  20                 	db	32
   161   000804  20                 	db	32
   162   000805  20                 	db	32
   163   000806  20                 	db	32
   164   000807  20                 	db	32
   165   000808  20                 	db	32
   166   000809  20                 	db	32
   167   00080A  20                 	db	32
   168   00080B  20                 	db	32
   169   00080C  20                 	db	32
   170   00080D  20                 	db	32
   171   00080E  20                 	db	32
   172   00080F  20                 	db	32
   173   000810  20                 	db	32
   174   000811  00                 	db	0
   175   000812                     STR_1:
   176   000812  42                 	db	66	;'B'
   177   000813  69                 	db	105	;'i'
   178   000814  65                 	db	101	;'e'
   179   000815  6E                 	db	110	;'n'
   180   000816  76                 	db	118	;'v'
   181   000817  65                 	db	101	;'e'
   182   000818  6E                 	db	110	;'n'
   183   000819  69                 	db	105	;'i'
   184   00081A  64                 	db	100	;'d'
   185   00081B  6F                 	db	111	;'o'
   186   00081C  00                 	db	0
   187   00081D                     STR_3:
   188   00081D  50                 	db	80	;'P'
   189   00081E  61                 	db	97	;'a'
   190   00081F  73                 	db	115	;'s'
   191   000820  73                 	db	115	;'s'
   192   000821  77                 	db	119	;'w'
   193   000822  6F                 	db	111	;'o'
   194   000823  72                 	db	114	;'r'
   195   000824  64                 	db	100	;'d'
   196   000825  3A                 	db	58	;':'
   197   000826  00                 	db	0
   198   000827                     STR_6:
   199   000827  54                 	db	84	;'T'
   200   000828  65                 	db	101	;'e'
   201   000829  6D                 	db	109	;'m'
   202   00082A  70                 	db	112	;'p'
   203   00082B  3A                 	db	58	;':'
   204   00082C  00                 	db	0
   205   00082D                     STR_7:
   206   00082D  48                 	db	72	;'H'
   207   00082E  75                 	db	117	;'u'
   208   00082F  6D                 	db	109	;'m'
   209   000830  3A                 	db	58	;':'
   210   000831  00                 	db	0
   211   000832  00                 	db	0	; dummy byte at the end
   212   000000                     
   213                           ; #config settings
   214                           
   215                           	psect	cinit
   216   00115E                     __pcinit:
   217                           	callstack 0
   218   00115E                     start_initialization:
   219                           	callstack 0
   220   00115E                     __initialization:
   221                           	callstack 0
   222                           
   223                           ; Initialize objects allocated to COMRAM (12 bytes)
   224                           ; load TBLPTR registers with __pidataCOMRAM
   225   00115E  0E4E               	movlw	low __pidataCOMRAM
   226   001160  6EF6               	movwf	tblptrl,c
   227   001162  0E13               	movlw	high __pidataCOMRAM
   228   001164  6EF7               	movwf	tblptrh,c
   229   001166  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   230   001168  6EF8               	movwf	tblptru,c
   231   00116A  EE00  F01F         	lfsr	0,__pdataCOMRAM
   232   00116E  EE10 F00C          	lfsr	1,12
   233   001172                     copy_data0:
   234   001172  0009               	tblrd		*+
   235   001174  CFF5 FFEE          	movff	tablat,postinc0
   236   001178  50E5               	movf	postdec1,w,c
   237   00117A  50E1               	movf	fsr1l,w,c
   238   00117C  E1FA               	bnz	copy_data0
   239                           
   240                           ; Clear objects allocated to COMRAM (8 bytes)
   241   00117E  EE00  F02B         	lfsr	0,__pbssCOMRAM
   242   001182  0E08               	movlw	8
   243   001184                     clear_0:
   244   001184  6AEE               	clrf	postinc0,c
   245   001186  06E8               	decf	wreg,f,c
   246   001188  E1FD               	bnz	clear_0
   247   00118A                     end_of_initialization:
   248                           	callstack 0
   249   00118A                     __end_of__initialization:
   250                           	callstack 0
   251   00118A  9033               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   252   00118C  9233               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   253   00118E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   254   001190  6EF8               	movwf	tblptru,c
   255   001192  0100               	movlb	0
   256   001194  EF62  F005         	goto	_main	;jump to C main() function
   257                           
   258                           	psect	bssCOMRAM
   259   00002B                     __pbssCOMRAM:
   260                           	callstack 0
   261   00002B                     _duty:
   262                           	callstack 0
   263   00002B                     	ds	2
   264   00002D                     _contador:
   265                           	callstack 0
   266   00002D                     	ds	2
   267   00002F                     _ing:
   268                           	callstack 0
   269   00002F                     	ds	1
   270   000030                     _Tecla:
   271                           	callstack 0
   272   000030                     	ds	1
   273   000031                     _Humedad:
   274                           	callstack 0
   275   000031                     	ds	1
   276   000032                     _Temp:
   277                           	callstack 0
   278   000032                     	ds	1
   279                           
   280                           	psect	dataCOMRAM
   281   00001F                     __pdataCOMRAM:
   282                           	callstack 0
   283   00001F                     _c:
   284                           	callstack 0
   285   00001F                     	ds	2
   286   000021                     _Cont:
   287                           	callstack 0
   288   000021                     	ds	1
   289   000022                     _interfaz:
   290                           	callstack 0
   291   000022                     	ds	1
   292   000023                     _cara:
   293                           	callstack 0
   294   000023                     	ds	8
   295                           
   296                           	psect	cstackCOMRAM
   297   000001                     __pcstackCOMRAM:
   298                           	callstack 0
   299   000001                     ??i2_RetardoLCD:
   300                           
   301                           ; 1 bytes @ 0x0
   302   000001                     	ds	1
   303   000002                     i2RetardoLCD@a:
   304                           	callstack 0
   305                           
   306                           ; 1 bytes @ 0x1
   307   000002                     	ds	1
   308   000003                     ??i2_EnviaDato:
   309                           
   310                           ; 1 bytes @ 0x2
   311   000003                     	ds	1
   312   000004                     i2EnviaDato@a:
   313                           	callstack 0
   314                           
   315                           ; 1 bytes @ 0x3
   316   000004                     	ds	1
   317   000005                     i2EscribeLCD_c@a:
   318                           	callstack 0
   319                           
   320                           ; 1 bytes @ 0x4
   321   000005                     	ds	1
   322   000006                     ??_ISR:
   323                           
   324                           ; 1 bytes @ 0x5
   325   000006                     	ds	2
   326   000008                     ??_RetardoLCD:
   327   000008                     ??_ComandoLCD:
   328   000008                     ?___wmul:
   329                           	callstack 0
   330   000008                     ?___awdiv:
   331                           	callstack 0
   332   000008                     ?___lwdiv:
   333                           	callstack 0
   334   000008                     ?___lwmod:
   335                           	callstack 0
   336   000008                     LeerBit@res:
   337                           	callstack 0
   338   000008                     Transmitir@BufferT:
   339                           	callstack 0
   340   000008                     ___lbdiv@divisor:
   341                           	callstack 0
   342   000008                     ___lbmod@divisor:
   343                           	callstack 0
   344   000008                     ___wmul@multiplier:
   345                           	callstack 0
   346   000008                     ___awdiv@dividend:
   347                           	callstack 0
   348   000008                     ___lwdiv@dividend:
   349                           	callstack 0
   350   000008                     ___lwmod@dividend:
   351                           	callstack 0
   352                           
   353                           ; 2 bytes @ 0x7
   354   000008                     	ds	1
   355   000009                     ??_LeerByte:
   356   000009                     ComandoLCD@data:
   357                           	callstack 0
   358   000009                     RetardoLCD@a:
   359                           	callstack 0
   360   000009                     ___lbdiv@dividend:
   361                           	callstack 0
   362   000009                     ___lbmod@dividend:
   363                           	callstack 0
   364                           
   365                           ; 1 bytes @ 0x8
   366   000009                     	ds	1
   367   00000A                     ??_EnviaDato:
   368   00000A                     LeerByte@res:
   369                           	callstack 0
   370   00000A                     ___lbdiv@counter:
   371                           	callstack 0
   372   00000A                     ___lbmod@counter:
   373                           	callstack 0
   374   00000A                     ___wmul@multiplicand:
   375                           	callstack 0
   376   00000A                     ___awdiv@divisor:
   377                           	callstack 0
   378   00000A                     ___lwdiv@divisor:
   379                           	callstack 0
   380   00000A                     ___lwmod@divisor:
   381                           	callstack 0
   382                           
   383                           ; 2 bytes @ 0x9
   384   00000A                     	ds	1
   385   00000B                     EnviaDato@a:
   386                           	callstack 0
   387   00000B                     LeerByte@i:
   388                           	callstack 0
   389   00000B                     ___lbdiv@quotient:
   390                           	callstack 0
   391   00000B                     ___lbmod@rem:
   392                           	callstack 0
   393                           
   394                           ; 1 bytes @ 0xA
   395   00000B                     	ds	1
   396   00000C                     ??_LeerHT11:
   397   00000C                     EscribeLCD_c@a:
   398                           	callstack 0
   399   00000C                     DireccionaLCD@a:
   400                           	callstack 0
   401   00000C                     ___awdiv@counter:
   402                           	callstack 0
   403   00000C                     ___lwmod@counter:
   404                           	callstack 0
   405   00000C                     ___wmul@product:
   406                           	callstack 0
   407   00000C                     ___lwdiv@quotient:
   408                           	callstack 0
   409                           
   410                           ; 2 bytes @ 0xB
   411   00000C                     	ds	1
   412   00000D                     NuevoCaracter@c:
   413                           	callstack 0
   414   00000D                     MensajeLCD_Word@a:
   415                           	callstack 0
   416   00000D                     ___awdiv@sign:
   417                           	callstack 0
   418                           
   419                           ; 1 bytes @ 0xC
   420   00000D                     	ds	1
   421   00000E                     ??_MensajeLCD_Word:
   422   00000E                     NuevoCaracter@addr:
   423                           	callstack 0
   424   00000E                     ___lwdiv@counter:
   425                           	callstack 0
   426   00000E                     ___awdiv@quotient:
   427                           	callstack 0
   428                           
   429                           ; 2 bytes @ 0xD
   430   00000E                     	ds	1
   431   00000F                     NuevoCaracter@i:
   432                           	callstack 0
   433   00000F                     MensajeLCD_Word@i:
   434                           	callstack 0
   435                           
   436                           ; 2 bytes @ 0xE
   437   00000F                     	ds	2
   438   000011                     TransmitirDatos@Ent1:
   439                           	callstack 0
   440                           
   441                           ; 2 bytes @ 0x10
   442   000011                     	ds	2
   443   000013                     TransmitirDatos@Ent2:
   444                           	callstack 0
   445                           
   446                           ; 2 bytes @ 0x12
   447   000013                     	ds	2
   448   000015                     ??_TransmitirDatos:
   449                           
   450                           ; 1 bytes @ 0x14
   451   000015                     	ds	2
   452   000017                     TransmitirDatos@n:
   453                           	callstack 0
   454                           
   455                           ; 2 bytes @ 0x16
   456   000017                     	ds	2
   457   000019                     TransmitirDatos@Simb:
   458                           	callstack 0
   459                           
   460                           ; 2 bytes @ 0x18
   461   000019                     	ds	2
   462   00001B                     TransmitirDatos@TempC:
   463                           	callstack 0
   464                           
   465                           ; 2 bytes @ 0x1A
   466   00001B                     	ds	2
   467   00001D                     ??_main:
   468                           
   469                           ; 1 bytes @ 0x1C
   470   00001D                     	ds	2
   471                           
   472 ;;
   473 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   474 ;;
   475 ;; *************** function _main *****************
   476 ;; Defined at:
   477 ;;		line 54 in file "Proyecto.c"
   478 ;; Parameters:    Size  Location     Type
   479 ;;		None
   480 ;; Auto vars:     Size  Location     Type
   481 ;;		None
   482 ;; Return value:  Size  Location     Type
   483 ;;                  1    wreg      void 
   484 ;; Registers used:
   485 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   486 ;; Tracked objects:
   487 ;;		On entry : 0/0
   488 ;;		On exit  : 0/0
   489 ;;		Unchanged: 0/0
   490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   491 ;;      Params:         0       0       0       0       0       0       0       0       0
   492 ;;      Locals:         0       0       0       0       0       0       0       0       0
   493 ;;      Temps:          2       0       0       0       0       0       0       0       0
   494 ;;      Totals:         2       0       0       0       0       0       0       0       0
   495 ;;Total ram usage:        2 bytes
   496 ;; Hardware stack levels required when called: 9
   497 ;; This function calls:
   498 ;;		_BorraLCD
   499 ;;		_DireccionaLCD
   500 ;;		_EscribeLCD_c
   501 ;;		_InicializaLCD
   502 ;;		_LeerHT11
   503 ;;		_MensajeLCD_Word
   504 ;;		_NuevoCaracter
   505 ;;		_TransmitirDatos
   506 ;; This function is called by:
   507 ;;		Startup code after reset
   508 ;; This function uses a non-reentrant model
   509 ;;
   510                           
   511                           	psect	text0
   512   000AC4                     __ptext0:
   513                           	callstack 0
   514   000AC4                     _main:
   515                           	callstack 22
   516                           
   517                           ;Proyecto.c: 56: TRISC = 0;
   518                           
   519                           ;incstack = 0
   520   000AC4  0E00               	movlw	0
   521   000AC6  6E94               	movwf	148,c	;volatile
   522                           
   523                           ;Proyecto.c: 57: OSCCON = 0b11110110;
   524   000AC8  0EF6               	movlw	246
   525   000ACA  6ED3               	movwf	211,c	;volatile
   526                           
   527                           ;Proyecto.c: 59: TRISD = 0;
   528   000ACC  0E00               	movlw	0
   529   000ACE  6E95               	movwf	149,c	;volatile
   530                           
   531                           ;Proyecto.c: 60: TRISE0 = 0;
   532   000AD0  9096               	bcf	3990,0,c	;volatile
   533                           
   534                           ;Proyecto.c: 61: TRISE2 = 0;
   535   000AD2  9496               	bcf	3990,2,c	;volatile
   536                           
   537                           ;Proyecto.c: 62: TRISE1 = 0;
   538   000AD4  9296               	bcf	3990,1,c	;volatile
   539                           
   540                           ;Proyecto.c: 63: InicializaLCD();
   541   000AD6  ECE4  F006         	call	_InicializaLCD	;wreg free
   542                           
   543                           ;Proyecto.c: 64: BorraLCD();
   544   000ADA  EC8F  F009         	call	_BorraLCD	;wreg free
   545                           
   546                           ;Proyecto.c: 67: ADCON0 = 0b00000001;
   547   000ADE  0E01               	movlw	1
   548   000AE0  6EC2               	movwf	194,c	;volatile
   549                           
   550                           ;Proyecto.c: 68: ADCON1 = 0b00001100;
   551   000AE2  0E0C               	movlw	12
   552   000AE4  6EC1               	movwf	193,c	;volatile
   553                           
   554                           ;Proyecto.c: 69: ADCON2 = 0b10001000;
   555   000AE6  0E88               	movlw	136
   556   000AE8  6EC0               	movwf	192,c	;volatile
   557                           
   558                           ;Proyecto.c: 72: TRISB=0b11110000;
   559   000AEA  0EF0               	movlw	240
   560   000AEC  6E93               	movwf	147,c	;volatile
   561                           
   562                           ;Proyecto.c: 73: RBPU=0;
   563   000AEE  9EF1               	bcf	4081,7,c	;volatile
   564                           
   565                           ;Proyecto.c: 74: RBIF=0;
   566   000AF0  90F2               	bcf	4082,0,c	;volatile
   567                           
   568                           ;Proyecto.c: 75: RBIE=1;
   569   000AF2  86F2               	bsf	4082,3,c	;volatile
   570                           
   571                           ;Proyecto.c: 78: T0CON=0b00000011;
   572   000AF4  0E03               	movlw	3
   573   000AF6  6ED5               	movwf	213,c	;volatile
   574                           
   575                           ;Proyecto.c: 79: TMR0IF=0;
   576   000AF8  94F2               	bcf	4082,2,c	;volatile
   577                           
   578                           ;Proyecto.c: 80: TMR0=64911;
   579   000AFA  0EFD               	movlw	253
   580   000AFC  6ED7               	movwf	215,c	;volatile
   581   000AFE  0E8F               	movlw	143
   582   000B00  6ED6               	movwf	214,c	;volatile
   583                           
   584                           ;Proyecto.c: 81: TMR0IE=1;
   585   000B02  8AF2               	bsf	4082,5,c	;volatile
   586                           
   587                           ;Proyecto.c: 82: GIE=1;
   588   000B04  8EF2               	bsf	4082,7,c	;volatile
   589                           
   590                           ;Proyecto.c: 83: TMR0ON=1;
   591   000B06  8ED5               	bsf	4053,7,c	;volatile
   592                           
   593                           ;Proyecto.c: 86: TRISC2 = 0;
   594   000B08  9494               	bcf	3988,2,c	;volatile
   595                           
   596                           ;Proyecto.c: 87: PR2 = 249;
   597   000B0A  0EF9               	movlw	249
   598   000B0C  6ECB               	movwf	203,c	;volatile
   599                           
   600                           ;Proyecto.c: 88: CCPR1L = 0;
   601   000B0E  0E00               	movlw	0
   602   000B10  6EBE               	movwf	190,c	;volatile
   603                           
   604                           ;Proyecto.c: 89: T2CON = 0b00000000;
   605   000B12  0E00               	movlw	0
   606   000B14  6ECA               	movwf	202,c	;volatile
   607                           
   608                           ;Proyecto.c: 90: CCP1CON = 0b00001100;
   609   000B16  0E0C               	movlw	12
   610   000B18  6EBD               	movwf	189,c	;volatile
   611                           
   612                           ;Proyecto.c: 91: TMR2 = 0;
   613   000B1A  0E00               	movlw	0
   614   000B1C  6ECC               	movwf	204,c	;volatile
   615                           
   616                           ;Proyecto.c: 92: TMR2ON = 1;
   617   000B1E  84CA               	bsf	4042,2,c	;volatile
   618                           
   619                           ;Proyecto.c: 95: TRISC6 = 1;
   620   000B20  8C94               	bsf	3988,6,c	;volatile
   621                           
   622                           ;Proyecto.c: 96: TRISC7 = 1;
   623   000B22  8E94               	bsf	3988,7,c	;volatile
   624                           
   625                           ;Proyecto.c: 97: TXSTA = 0b00100000;
   626   000B24  0E20               	movlw	32
   627   000B26  6EAC               	movwf	172,c	;volatile
   628                           
   629                           ;Proyecto.c: 98: RCSTA = 0b10010000;
   630   000B28  0E90               	movlw	144
   631   000B2A  6EAB               	movwf	171,c	;volatile
   632                           
   633                           ;Proyecto.c: 99: SPBRG = 12;
   634   000B2C  0E0C               	movlw	12
   635   000B2E  6EAF               	movwf	175,c	;volatile
   636                           
   637                           ;Proyecto.c: 102: _delay((unsigned long)((1000)*(8000000/4000.0)));
   638   000B30  0E0B               	movlw	11
   639   000B32  6E1E               	movwf	(??_main+1)^0,c
   640   000B34  0E26               	movlw	38
   641   000B36  6E1D               	movwf	??_main^0,c
   642   000B38  0E5E               	movlw	94
   643   000B3A                     u1237:
   644   000B3A  2EE8               	decfsz	wreg,f,c
   645   000B3C  D7FE               	bra	u1237
   646   000B3E  2E1D               	decfsz	??_main^0,f,c
   647   000B40  D7FC               	bra	u1237
   648   000B42  2E1E               	decfsz	(??_main+1)^0,f,c
   649   000B44  D7FA               	bra	u1237
   650                           
   651                           ;Proyecto.c: 103: BorraLCD();
   652   000B46  EC8F  F009         	call	_BorraLCD	;wreg free
   653                           
   654                           ;Proyecto.c: 104: NuevoCaracter(0,cara);
   655   000B4A  0E23               	movlw	low _cara
   656   000B4C  6E0D               	movwf	NuevoCaracter@c^0,c
   657   000B4E  0E00               	movlw	0
   658   000B50  EC91  F008         	call	_NuevoCaracter
   659                           
   660                           ;Proyecto.c: 105: DireccionaLCD(0x82);
   661   000B54  0E82               	movlw	130
   662   000B56  EC6E  F009         	call	_DireccionaLCD
   663                           
   664                           ;Proyecto.c: 106: EscribeLCD_c(0);
   665   000B5A  0E00               	movlw	0
   666   000B5C  EC79  F009         	call	_EscribeLCD_c
   667                           
   668                           ;Proyecto.c: 107: MensajeLCD_Word("Bienvenido");
   669   000B60  0E12               	movlw	low STR_1
   670   000B62  6E0D               	movwf	MensajeLCD_Word@a^0,c
   671   000B64  EC03  F008         	call	_MensajeLCD_Word	;wreg free
   672                           
   673                           ;Proyecto.c: 108: EscribeLCD_c(0);
   674   000B68  0E00               	movlw	0
   675   000B6A  EC79  F009         	call	_EscribeLCD_c
   676                           
   677                           ;Proyecto.c: 109: DireccionaLCD(0xC7);
   678   000B6E  0EC7               	movlw	199
   679   000B70  EC6E  F009         	call	_DireccionaLCD
   680                           
   681                           ;Proyecto.c: 110: _delay((unsigned long)((1500)*(8000000/4000.0)));
   682   000B74  0E10               	movlw	16
   683   000B76  6E1E               	movwf	(??_main+1)^0,c
   684   000B78  0E39               	movlw	57
   685   000B7A  6E1D               	movwf	??_main^0,c
   686   000B7C  0E0E               	movlw	14
   687   000B7E                     u1247:
   688   000B7E  2EE8               	decfsz	wreg,f,c
   689   000B80  D7FE               	bra	u1247
   690   000B82  2E1D               	decfsz	??_main^0,f,c
   691   000B84  D7FC               	bra	u1247
   692   000B86  2E1E               	decfsz	(??_main+1)^0,f,c
   693   000B88  D7FA               	bra	u1247
   694                           
   695                           ;Proyecto.c: 111: DireccionaLCD(0x80);
   696   000B8A  0E80               	movlw	128
   697   000B8C  EC6E  F009         	call	_DireccionaLCD
   698                           
   699                           ;Proyecto.c: 112: MensajeLCD_Word("                ");
   700   000B90  0E01               	movlw	low STR_2
   701   000B92  6E0D               	movwf	MensajeLCD_Word@a^0,c
   702   000B94  EC03  F008         	call	_MensajeLCD_Word	;wreg free
   703                           
   704                           ;Proyecto.c: 113: DireccionaLCD(0x80);
   705   000B98  0E80               	movlw	128
   706   000B9A  EC6E  F009         	call	_DireccionaLCD
   707                           
   708                           ;Proyecto.c: 114: MensajeLCD_Word("Password:");
   709   000B9E  0E1D               	movlw	low STR_3
   710   000BA0  6E0D               	movwf	MensajeLCD_Word@a^0,c
   711   000BA2  EC03  F008         	call	_MensajeLCD_Word	;wreg free
   712                           
   713                           ;Proyecto.c: 115: while(ing!=Cont){
   714   000BA6  D007               	goto	l2410
   715   000BA8                     l2406:
   716                           
   717                           ;Proyecto.c: 116: DireccionaLCD(0xC1);
   718   000BA8  0EC1               	movlw	193
   719   000BAA  EC6E  F009         	call	_DireccionaLCD
   720                           
   721                           ;Proyecto.c: 117: MensajeLCD_Word("                ");
   722   000BAE  0E01               	movlw	low STR_2
   723   000BB0  6E0D               	movwf	MensajeLCD_Word@a^0,c
   724   000BB2  EC03  F008         	call	_MensajeLCD_Word	;wreg free
   725   000BB6                     l2410:
   726   000BB6  0E06               	movlw	6
   727   000BB8  182F               	xorwf	_ing^0,w,c
   728   000BBA  A4D8               	btfss	status,2,c
   729   000BBC  D7F5               	goto	l2406
   730                           
   731                           ;Proyecto.c: 118: };Proyecto.c: 119: DireccionaLCD(0x80);
   732   000BBE  0E80               	movlw	128
   733   000BC0  EC6E  F009         	call	_DireccionaLCD
   734                           
   735                           ;Proyecto.c: 120: MensajeLCD_Word("                ");
   736   000BC4  0E01               	movlw	low STR_2
   737   000BC6  6E0D               	movwf	MensajeLCD_Word@a^0,c
   738   000BC8  EC03  F008         	call	_MensajeLCD_Word	;wreg free
   739   000BCC                     l2416:
   740                           
   741                           ;Proyecto.c: 122: _delay((unsigned long)((500)*(8000000/4000.0)));
   742   000BCC  0E06               	movlw	6
   743   000BCE  6E1E               	movwf	(??_main+1)^0,c
   744   000BD0  0E13               	movlw	19
   745   000BD2  6E1D               	movwf	??_main^0,c
   746   000BD4  0EAE               	movlw	174
   747   000BD6                     u1257:
   748   000BD6  2EE8               	decfsz	wreg,f,c
   749   000BD8  D7FE               	bra	u1257
   750   000BDA  2E1D               	decfsz	??_main^0,f,c
   751   000BDC  D7FC               	bra	u1257
   752   000BDE  2E1E               	decfsz	(??_main+1)^0,f,c
   753   000BE0  D7FA               	bra	u1257
   754                           
   755                           ;Proyecto.c: 123: LeerHT11();
   756   000BE2  ECE9  F008         	call	_LeerHT11	;wreg free
   757                           
   758                           ;Proyecto.c: 124: TransmitirDatos(0, 0);
   759   000BE6  0E00               	movlw	0
   760   000BE8  6E12               	movwf	(TransmitirDatos@Ent1+1)^0,c
   761   000BEA  0E00               	movlw	0
   762   000BEC  6E11               	movwf	TransmitirDatos@Ent1^0,c
   763   000BEE  0E00               	movlw	0
   764   000BF0  6E14               	movwf	(TransmitirDatos@Ent2+1)^0,c
   765   000BF2  0E00               	movlw	0
   766   000BF4  6E13               	movwf	TransmitirDatos@Ent2^0,c
   767   000BF6  EC1A  F004         	call	_TransmitirDatos	;wreg free
   768   000BFA  D7E8               	goto	l2416
   769   000BFC                     __end_of_main:
   770                           	callstack 0
   771                           
   772 ;; *************** function _TransmitirDatos *****************
   773 ;; Defined at:
   774 ;;		line 230 in file "Proyecto.c"
   775 ;; Parameters:    Size  Location     Type
   776 ;;  Ent1            2   16[COMRAM] unsigned int 
   777 ;;  Ent2            2   18[COMRAM] unsigned int 
   778 ;; Auto vars:     Size  Location     Type
   779 ;;  TempC           2   26[COMRAM] unsigned int 
   780 ;;  Simb            2   24[COMRAM] unsigned int 
   781 ;;  n               2   22[COMRAM] unsigned int 
   782 ;;  HumedadC        2    0        unsigned int 
   783 ;; Return value:  Size  Location     Type
   784 ;;                  1    wreg      void 
   785 ;; Registers used:
   786 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   787 ;; Tracked objects:
   788 ;;		On entry : 0/0
   789 ;;		On exit  : 0/0
   790 ;;		Unchanged: 0/0
   791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   792 ;;      Params:         4       0       0       0       0       0       0       0       0
   793 ;;      Locals:         6       0       0       0       0       0       0       0       0
   794 ;;      Temps:          2       0       0       0       0       0       0       0       0
   795 ;;      Totals:        12       0       0       0       0       0       0       0       0
   796 ;;Total ram usage:       12 bytes
   797 ;; Hardware stack levels used: 1
   798 ;; Hardware stack levels required when called: 8
   799 ;; This function calls:
   800 ;;		_BorraLCD
   801 ;;		_DireccionaLCD
   802 ;;		_EscribeLCD_c
   803 ;;		_MensajeLCD_Word
   804 ;;		_Transmitir
   805 ;;		___awdiv
   806 ;;		___lbdiv
   807 ;;		___lbmod
   808 ;;		___lwdiv
   809 ;;		___lwmod
   810 ;;		___wmul
   811 ;; This function is called by:
   812 ;;		_main
   813 ;; This function uses a non-reentrant model
   814 ;;
   815                           
   816                           	psect	text1
   817   000834                     __ptext1:
   818                           	callstack 0
   819   000834                     _TransmitirDatos:
   820                           	callstack 22
   821                           
   822                           ;Proyecto.c: 231: unsigned int n = Ent1 * 10 + Ent2, TempC = Temp, HumedadC = Humedad;
   823                           
   824                           ;incstack = 0
   825   000834  C011  F008         	movff	TransmitirDatos@Ent1,___wmul@multiplier
   826   000838  C012  F009         	movff	TransmitirDatos@Ent1+1,___wmul@multiplier+1
   827   00083C  0E00               	movlw	0
   828   00083E  6E0B               	movwf	(___wmul@multiplicand+1)^0,c
   829   000840  0E0A               	movlw	10
   830   000842  6E0A               	movwf	___wmul@multiplicand^0,c
   831   000844  EC4A  F009         	call	___wmul	;wreg free
   832   000848  5013               	movf	TransmitirDatos@Ent2^0,w,c
   833   00084A  2408               	addwf	?___wmul^0,w,c
   834   00084C  6E17               	movwf	TransmitirDatos@n^0,c
   835   00084E  5014               	movf	(TransmitirDatos@Ent2+1)^0,w,c
   836   000850  2009               	addwfc	(?___wmul+1)^0,w,c
   837   000852  6E18               	movwf	(TransmitirDatos@n+1)^0,c
   838   000854  C032  F01B         	movff	_Temp,TransmitirDatos@TempC
   839   000858  6A1C               	clrf	(TransmitirDatos@TempC+1)^0,c
   840                           
   841                           ;Proyecto.c: 232: unsigned int Simb = 67;
   842   00085A  0E00               	movlw	0
   843   00085C  6E1A               	movwf	(TransmitirDatos@Simb+1)^0,c
   844   00085E  0E43               	movlw	67
   845   000860  6E19               	movwf	TransmitirDatos@Simb^0,c
   846                           
   847                           ;Proyecto.c: 233: BorraLCD();
   848   000862  EC8F  F009         	call	_BorraLCD	;wreg free
   849                           
   850                           ;Proyecto.c: 234: switch (n) {
   851   000866  D03E               	goto	l2110
   852   000868                     l265:
   853                           
   854                           ;Proyecto.c: 236: TempC = Temp;
   855   000868  C032  F01B         	movff	_Temp,TransmitirDatos@TempC
   856   00086C  6A1C               	clrf	(TransmitirDatos@TempC+1)^0,c
   857                           
   858                           ;Proyecto.c: 237: Simb = 67;
   859   00086E  0E00               	movlw	0
   860   000870  6E1A               	movwf	(TransmitirDatos@Simb+1)^0,c
   861   000872  0E43               	movlw	67
   862   000874  D035               	goto	L3
   863   000876                     l2096:
   864                           
   865                           ;Proyecto.c: 240: TempC = Temp + 273;
   866   000876  0E11               	movlw	17
   867   000878  2432               	addwf	_Temp^0,w,c
   868   00087A  6E1B               	movwf	TransmitirDatos@TempC^0,c
   869   00087C  6A1C               	clrf	(TransmitirDatos@TempC+1)^0,c
   870   00087E  0E01               	movlw	1
   871   000880  221C               	addwfc	(TransmitirDatos@TempC+1)^0,f,c
   872                           
   873                           ;Proyecto.c: 241: Simb = 75;
   874   000882  0E00               	movlw	0
   875   000884  6E1A               	movwf	(TransmitirDatos@Simb+1)^0,c
   876   000886  0E4B               	movlw	75
   877   000888  D02B               	goto	L3
   878   00088A                     l2100:
   879                           
   880                           ;Proyecto.c: 244: TempC = Temp * 9 / 5 + 492;
   881   00088A  5032               	movf	_Temp^0,w,c
   882   00088C  0D09               	mullw	9
   883   00088E  CFF3 F008          	movff	prodl,___awdiv@dividend
   884   000892  CFF4 F009          	movff	prodh,___awdiv@dividend+1
   885   000896  0E00               	movlw	0
   886   000898  6E0B               	movwf	(___awdiv@divisor+1)^0,c
   887   00089A  0E05               	movlw	5
   888   00089C  6E0A               	movwf	___awdiv@divisor^0,c
   889   00089E  EC32  F007         	call	___awdiv	;wreg free
   890   0008A2  0EEC               	movlw	236
   891   0008A4  2408               	addwf	?___awdiv^0,w,c
   892   0008A6  6E1B               	movwf	TransmitirDatos@TempC^0,c
   893   0008A8  0E01               	movlw	1
   894   0008AA  2009               	addwfc	(?___awdiv+1)^0,w,c
   895   0008AC  6E1C               	movwf	(TransmitirDatos@TempC+1)^0,c
   896                           
   897                           ;Proyecto.c: 245: Simb = 82;
   898   0008AE  0E00               	movlw	0
   899   0008B0  6E1A               	movwf	(TransmitirDatos@Simb+1)^0,c
   900   0008B2  0E52               	movlw	82
   901   0008B4  D015               	goto	L3
   902   0008B6                     l2104:
   903                           
   904                           ;Proyecto.c: 248: TempC = Temp * 9 / 5 + 32;
   905   0008B6  5032               	movf	_Temp^0,w,c
   906   0008B8  0D09               	mullw	9
   907   0008BA  CFF3 F008          	movff	prodl,___awdiv@dividend
   908   0008BE  CFF4 F009          	movff	prodh,___awdiv@dividend+1
   909   0008C2  0E00               	movlw	0
   910   0008C4  6E0B               	movwf	(___awdiv@divisor+1)^0,c
   911   0008C6  0E05               	movlw	5
   912   0008C8  6E0A               	movwf	___awdiv@divisor^0,c
   913   0008CA  EC32  F007         	call	___awdiv	;wreg free
   914   0008CE  0E20               	movlw	32
   915   0008D0  2408               	addwf	?___awdiv^0,w,c
   916   0008D2  6E1B               	movwf	TransmitirDatos@TempC^0,c
   917   0008D4  0E00               	movlw	0
   918   0008D6  2009               	addwfc	(?___awdiv+1)^0,w,c
   919   0008D8  6E1C               	movwf	(TransmitirDatos@TempC+1)^0,c
   920                           
   921                           ;Proyecto.c: 249: Simb = 70;
   922   0008DA  0E00               	movlw	0
   923   0008DC  6E1A               	movwf	(TransmitirDatos@Simb+1)^0,c
   924   0008DE  0E46               	movlw	70
   925   0008E0                     L3:
   926   0008E0  6E19               	movwf	TransmitirDatos@Simb^0,c
   927                           
   928                           ;Proyecto.c: 250: break;
   929   0008E2  D015               	goto	l2112
   930   0008E4                     l2110:
   931   0008E4  C017  F015         	movff	TransmitirDatos@n,??_TransmitirDatos
   932   0008E8  C018  F016         	movff	TransmitirDatos@n+1,??_TransmitirDatos+1
   933                           
   934                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   935                           ; Switch size 1, requested type "simple"
   936                           ; Number of cases is 1, Range of values is 0 to 0
   937                           ; switch strategies available:
   938                           ; Name         Instructions Cycles
   939                           ; simple_byte            4     3 (average)
   940                           ;	Chosen strategy is simple_byte
   941   0008EC  5016               	movf	(??_TransmitirDatos+1)^0,w,c
   942   0008EE  0A00               	xorlw	0	; case 0
   943   0008F0  A4D8               	btfss	status,2,c
   944   0008F2  D00D               	goto	l2112
   945                           
   946                           ; Switch size 1, requested type "simple"
   947                           ; Number of cases is 4, Range of values is 0 to 11
   948                           ; switch strategies available:
   949                           ; Name         Instructions Cycles
   950                           ; simple_byte           13     7 (average)
   951                           ;	Chosen strategy is simple_byte
   952   0008F4  5015               	movf	??_TransmitirDatos^0,w,c
   953   0008F6  0A00               	xorlw	0	; case 0
   954   0008F8  B4D8               	btfsc	status,2,c
   955   0008FA  D7B6               	goto	l265
   956   0008FC  0A01               	xorlw	1	; case 1
   957   0008FE  B4D8               	btfsc	status,2,c
   958   000900  D7BA               	goto	l2096
   959   000902  0A0B               	xorlw	11	; case 10
   960   000904  B4D8               	btfsc	status,2,c
   961   000906  D7C1               	goto	l2100
   962   000908  0A01               	xorlw	1	; case 11
   963   00090A  B4D8               	btfsc	status,2,c
   964   00090C  D7D4               	goto	l2104
   965   00090E                     l2112:
   966                           
   967                           ;Proyecto.c: 252: Transmitir('T');
   968   00090E  0E54               	movlw	84
   969   000910  ECAD  F009         	call	_Transmitir
   970                           
   971                           ;Proyecto.c: 253: Transmitir('e');
   972   000914  0E65               	movlw	101
   973   000916  ECAD  F009         	call	_Transmitir
   974                           
   975                           ;Proyecto.c: 254: Transmitir('m');
   976   00091A  0E6D               	movlw	109
   977   00091C  ECAD  F009         	call	_Transmitir
   978                           
   979                           ;Proyecto.c: 255: Transmitir('p');
   980   000920  0E70               	movlw	112
   981   000922  ECAD  F009         	call	_Transmitir
   982                           
   983                           ;Proyecto.c: 256: Transmitir(':');
   984   000926  0E3A               	movlw	58
   985   000928  ECAD  F009         	call	_Transmitir
   986                           
   987                           ;Proyecto.c: 257: Transmitir(' ');
   988   00092C  0E20               	movlw	32
   989   00092E  ECAD  F009         	call	_Transmitir
   990                           
   991                           ;Proyecto.c: 259: MensajeLCD_Word("Temp:");
   992   000932  0E27               	movlw	low STR_6
   993   000934  6E0D               	movwf	MensajeLCD_Word@a^0,c
   994   000936  EC03  F008         	call	_MensajeLCD_Word	;wreg free
   995                           
   996                           ;Proyecto.c: 260: if (TempC / 100 > 0) {
   997   00093A  C01B  F008         	movff	TransmitirDatos@TempC,___lwdiv@dividend
   998   00093E  C01C  F009         	movff	TransmitirDatos@TempC+1,___lwdiv@dividend+1
   999   000942  0E00               	movlw	0
  1000   000944  6E0B               	movwf	(___lwdiv@divisor+1)^0,c
  1001   000946  0E64               	movlw	100
  1002   000948  6E0A               	movwf	___lwdiv@divisor^0,c
  1003   00094A  ECDA  F007         	call	___lwdiv	;wreg free
  1004   00094E  5008               	movf	?___lwdiv^0,w,c
  1005   000950  1009               	iorwf	(?___lwdiv+1)^0,w,c
  1006   000952  B4D8               	btfsc	status,2,c
  1007   000954  D02A               	goto	l270
  1008                           
  1009                           ;Proyecto.c: 261: Transmitir(TempC / 100 + 48);
  1010   000956  C01B  F008         	movff	TransmitirDatos@TempC,___lwdiv@dividend
  1011   00095A  C01C  F009         	movff	TransmitirDatos@TempC+1,___lwdiv@dividend+1
  1012   00095E  0E00               	movlw	0
  1013   000960  6E0B               	movwf	(___lwdiv@divisor+1)^0,c
  1014   000962  0E64               	movlw	100
  1015   000964  6E0A               	movwf	___lwdiv@divisor^0,c
  1016   000966  ECDA  F007         	call	___lwdiv	;wreg free
  1017   00096A  5008               	movf	?___lwdiv^0,w,c
  1018   00096C  0F30               	addlw	48
  1019   00096E  ECAD  F009         	call	_Transmitir
  1020                           
  1021                           ;Proyecto.c: 262: EscribeLCD_c(TempC / 100 + 48);
  1022   000972  C01B  F008         	movff	TransmitirDatos@TempC,___lwdiv@dividend
  1023   000976  C01C  F009         	movff	TransmitirDatos@TempC+1,___lwdiv@dividend+1
  1024   00097A  0E00               	movlw	0
  1025   00097C  6E0B               	movwf	(___lwdiv@divisor+1)^0,c
  1026   00097E  0E64               	movlw	100
  1027   000980  6E0A               	movwf	___lwdiv@divisor^0,c
  1028   000982  ECDA  F007         	call	___lwdiv	;wreg free
  1029   000986  5008               	movf	?___lwdiv^0,w,c
  1030   000988  0F30               	addlw	48
  1031   00098A  EC79  F009         	call	_EscribeLCD_c
  1032                           
  1033                           ;Proyecto.c: 263: TempC = TempC % 100;
  1034   00098E  C01B  F008         	movff	TransmitirDatos@TempC,___lwmod@dividend
  1035   000992  C01C  F009         	movff	TransmitirDatos@TempC+1,___lwmod@dividend+1
  1036   000996  0E00               	movlw	0
  1037   000998  6E0B               	movwf	(___lwmod@divisor+1)^0,c
  1038   00099A  0E64               	movlw	100
  1039   00099C  6E0A               	movwf	___lwmod@divisor^0,c
  1040   00099E  EC70  F008         	call	___lwmod	;wreg free
  1041   0009A2  C008  F01B         	movff	?___lwmod,TransmitirDatos@TempC
  1042   0009A6  C009  F01C         	movff	?___lwmod+1,TransmitirDatos@TempC+1
  1043   0009AA                     l270:
  1044                           
  1045                           ;Proyecto.c: 264: };Proyecto.c: 265: Transmitir(TempC / 10 + 48);
  1046   0009AA  C01B  F008         	movff	TransmitirDatos@TempC,___lwdiv@dividend
  1047   0009AE  C01C  F009         	movff	TransmitirDatos@TempC+1,___lwdiv@dividend+1
  1048   0009B2  0E00               	movlw	0
  1049   0009B4  6E0B               	movwf	(___lwdiv@divisor+1)^0,c
  1050   0009B6  0E0A               	movlw	10
  1051   0009B8  6E0A               	movwf	___lwdiv@divisor^0,c
  1052   0009BA  ECDA  F007         	call	___lwdiv	;wreg free
  1053   0009BE  5008               	movf	?___lwdiv^0,w,c
  1054   0009C0  0F30               	addlw	48
  1055   0009C2  ECAD  F009         	call	_Transmitir
  1056                           
  1057                           ;Proyecto.c: 266: Transmitir(TempC % 10 + 48);
  1058   0009C6  C01B  F008         	movff	TransmitirDatos@TempC,___lwmod@dividend
  1059   0009CA  C01C  F009         	movff	TransmitirDatos@TempC+1,___lwmod@dividend+1
  1060   0009CE  0E00               	movlw	0
  1061   0009D0  6E0B               	movwf	(___lwmod@divisor+1)^0,c
  1062   0009D2  0E0A               	movlw	10
  1063   0009D4  6E0A               	movwf	___lwmod@divisor^0,c
  1064   0009D6  EC70  F008         	call	___lwmod	;wreg free
  1065   0009DA  5008               	movf	?___lwmod^0,w,c
  1066   0009DC  0F30               	addlw	48
  1067   0009DE  ECAD  F009         	call	_Transmitir
  1068                           
  1069                           ;Proyecto.c: 267: Transmitir(167);
  1070   0009E2  0EA7               	movlw	167
  1071   0009E4  ECAD  F009         	call	_Transmitir
  1072                           
  1073                           ;Proyecto.c: 268: Transmitir(Simb);
  1074   0009E8  5019               	movf	TransmitirDatos@Simb^0,w,c
  1075   0009EA  ECAD  F009         	call	_Transmitir
  1076                           
  1077                           ;Proyecto.c: 269: Transmitir(' ');
  1078   0009EE  0E20               	movlw	32
  1079   0009F0  ECAD  F009         	call	_Transmitir
  1080                           
  1081                           ;Proyecto.c: 270: Transmitir('\n');
  1082   0009F4  0E0A               	movlw	10
  1083   0009F6  ECAD  F009         	call	_Transmitir
  1084                           
  1085                           ;Proyecto.c: 271: Transmitir('H');
  1086   0009FA  0E48               	movlw	72
  1087   0009FC  ECAD  F009         	call	_Transmitir
  1088                           
  1089                           ;Proyecto.c: 272: Transmitir('u');
  1090   000A00  0E75               	movlw	117
  1091   000A02  ECAD  F009         	call	_Transmitir
  1092                           
  1093                           ;Proyecto.c: 273: Transmitir('m');
  1094   000A06  0E6D               	movlw	109
  1095   000A08  ECAD  F009         	call	_Transmitir
  1096                           
  1097                           ;Proyecto.c: 274: Transmitir(':');
  1098   000A0C  0E3A               	movlw	58
  1099   000A0E  ECAD  F009         	call	_Transmitir
  1100                           
  1101                           ;Proyecto.c: 275: Transmitir(' ');
  1102   000A12  0E20               	movlw	32
  1103   000A14  ECAD  F009         	call	_Transmitir
  1104                           
  1105                           ;Proyecto.c: 276: Transmitir(Humedad / 10 + 48);
  1106   000A18  0E0A               	movlw	10
  1107   000A1A  6E08               	movwf	___lbdiv@divisor^0,c
  1108   000A1C  5031               	movf	_Humedad^0,w,c
  1109   000A1E  ECCC  F008         	call	___lbdiv
  1110   000A22  0F30               	addlw	48
  1111   000A24  ECAD  F009         	call	_Transmitir
  1112                           
  1113                           ;Proyecto.c: 277: Transmitir(Humedad % 10 + 48);
  1114   000A28  0E0A               	movlw	10
  1115   000A2A  6E08               	movwf	___lbmod@divisor^0,c
  1116   000A2C  5031               	movf	_Humedad^0,w,c
  1117   000A2E  EC35  F009         	call	___lbmod
  1118   000A32  0F30               	addlw	48
  1119   000A34  ECAD  F009         	call	_Transmitir
  1120                           
  1121                           ;Proyecto.c: 278: Transmitir(' ');
  1122   000A38  0E20               	movlw	32
  1123   000A3A  ECAD  F009         	call	_Transmitir
  1124                           
  1125                           ;Proyecto.c: 279: Transmitir('%');
  1126   000A3E  0E25               	movlw	37
  1127   000A40  ECAD  F009         	call	_Transmitir
  1128                           
  1129                           ;Proyecto.c: 280: Transmitir('\n');
  1130   000A44  0E0A               	movlw	10
  1131   000A46  ECAD  F009         	call	_Transmitir
  1132                           
  1133                           ;Proyecto.c: 281: Transmitir(' ');
  1134   000A4A  0E20               	movlw	32
  1135   000A4C  ECAD  F009         	call	_Transmitir
  1136                           
  1137                           ;Proyecto.c: 283: EscribeLCD_c(TempC / 10 + 48);
  1138   000A50  C01B  F008         	movff	TransmitirDatos@TempC,___lwdiv@dividend
  1139   000A54  C01C  F009         	movff	TransmitirDatos@TempC+1,___lwdiv@dividend+1
  1140   000A58  0E00               	movlw	0
  1141   000A5A  6E0B               	movwf	(___lwdiv@divisor+1)^0,c
  1142   000A5C  0E0A               	movlw	10
  1143   000A5E  6E0A               	movwf	___lwdiv@divisor^0,c
  1144   000A60  ECDA  F007         	call	___lwdiv	;wreg free
  1145   000A64  5008               	movf	?___lwdiv^0,w,c
  1146   000A66  0F30               	addlw	48
  1147   000A68  EC79  F009         	call	_EscribeLCD_c
  1148                           
  1149                           ;Proyecto.c: 284: EscribeLCD_c(TempC % 10 + 48);
  1150   000A6C  C01B  F008         	movff	TransmitirDatos@TempC,___lwmod@dividend
  1151   000A70  C01C  F009         	movff	TransmitirDatos@TempC+1,___lwmod@dividend+1
  1152   000A74  0E00               	movlw	0
  1153   000A76  6E0B               	movwf	(___lwmod@divisor+1)^0,c
  1154   000A78  0E0A               	movlw	10
  1155   000A7A  6E0A               	movwf	___lwmod@divisor^0,c
  1156   000A7C  EC70  F008         	call	___lwmod	;wreg free
  1157   000A80  5008               	movf	?___lwmod^0,w,c
  1158   000A82  0F30               	addlw	48
  1159   000A84  EC79  F009         	call	_EscribeLCD_c
  1160                           
  1161                           ;Proyecto.c: 285: EscribeLCD_c(Simb);
  1162   000A88  5019               	movf	TransmitirDatos@Simb^0,w,c
  1163   000A8A  EC79  F009         	call	_EscribeLCD_c
  1164                           
  1165                           ;Proyecto.c: 286: DireccionaLCD(192);
  1166   000A8E  0EC0               	movlw	192
  1167   000A90  EC6E  F009         	call	_DireccionaLCD
  1168                           
  1169                           ;Proyecto.c: 287: MensajeLCD_Word("Hum:");
  1170   000A94  0E2D               	movlw	low STR_7
  1171   000A96  6E0D               	movwf	MensajeLCD_Word@a^0,c
  1172   000A98  EC03  F008         	call	_MensajeLCD_Word	;wreg free
  1173                           
  1174                           ;Proyecto.c: 288: EscribeLCD_c(Humedad / 10 + 48);
  1175   000A9C  0E0A               	movlw	10
  1176   000A9E  6E08               	movwf	___lbdiv@divisor^0,c
  1177   000AA0  5031               	movf	_Humedad^0,w,c
  1178   000AA2  ECCC  F008         	call	___lbdiv
  1179   000AA6  0F30               	addlw	48
  1180   000AA8  EC79  F009         	call	_EscribeLCD_c
  1181                           
  1182                           ;Proyecto.c: 289: EscribeLCD_c(Humedad % 10 + 48);
  1183   000AAC  0E0A               	movlw	10
  1184   000AAE  6E08               	movwf	___lbmod@divisor^0,c
  1185   000AB0  5031               	movf	_Humedad^0,w,c
  1186   000AB2  EC35  F009         	call	___lbmod
  1187   000AB6  0F30               	addlw	48
  1188   000AB8  EC79  F009         	call	_EscribeLCD_c
  1189                           
  1190                           ;Proyecto.c: 290: EscribeLCD_c('%');
  1191   000ABC  0E25               	movlw	37
  1192   000ABE  EC79  F009         	call	_EscribeLCD_c
  1193   000AC2  0012               	return		;funcret
  1194   000AC4                     __end_of_TransmitirDatos:
  1195                           	callstack 0
  1196                           
  1197 ;; *************** function ___wmul *****************
  1198 ;; Defined at:
  1199 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul16.c"
  1200 ;; Parameters:    Size  Location     Type
  1201 ;;  multiplier      2    7[COMRAM] unsigned int 
  1202 ;;  multiplicand    2    9[COMRAM] unsigned int 
  1203 ;; Auto vars:     Size  Location     Type
  1204 ;;  product         2   11[COMRAM] unsigned int 
  1205 ;; Return value:  Size  Location     Type
  1206 ;;                  2    7[COMRAM] unsigned int 
  1207 ;; Registers used:
  1208 ;;		wreg, status,2, status,0, prodl, prodh
  1209 ;; Tracked objects:
  1210 ;;		On entry : 0/0
  1211 ;;		On exit  : 0/0
  1212 ;;		Unchanged: 0/0
  1213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1214 ;;      Params:         4       0       0       0       0       0       0       0       0
  1215 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1216 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1217 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1218 ;;Total ram usage:        6 bytes
  1219 ;; Hardware stack levels used: 1
  1220 ;; Hardware stack levels required when called: 4
  1221 ;; This function calls:
  1222 ;;		Nothing
  1223 ;; This function is called by:
  1224 ;;		_TransmitirDatos
  1225 ;; This function uses a non-reentrant model
  1226 ;;
  1227                           
  1228                           	psect	text2
  1229   001294                     __ptext2:
  1230                           	callstack 0
  1231   001294                     ___wmul:
  1232                           	callstack 25
  1233                           
  1234                           ;incstack = 0
  1235   001294  5008               	movf	___wmul@multiplier^0,w,c
  1236   001296  020A               	mulwf	___wmul@multiplicand^0,c
  1237   001298  CFF3 F00C          	movff	prodl,___wmul@product
  1238   00129C  CFF4 F00D          	movff	prodh,___wmul@product+1
  1239   0012A0  5008               	movf	___wmul@multiplier^0,w,c
  1240   0012A2  020B               	mulwf	(___wmul@multiplicand+1)^0,c
  1241   0012A4  50F3               	movf	243,w,c
  1242   0012A6  260D               	addwf	(___wmul@product+1)^0,f,c
  1243   0012A8  5009               	movf	(___wmul@multiplier+1)^0,w,c
  1244   0012AA  020A               	mulwf	___wmul@multiplicand^0,c
  1245   0012AC  50F3               	movf	243,w,c
  1246   0012AE  260D               	addwf	(___wmul@product+1)^0,f,c
  1247   0012B0  C00C  F008         	movff	___wmul@product,?___wmul
  1248   0012B4  C00D  F009         	movff	___wmul@product+1,?___wmul+1
  1249   0012B8  0012               	return		;funcret
  1250   0012BA                     __end_of___wmul:
  1251                           	callstack 0
  1252                           
  1253 ;; *************** function ___lwmod *****************
  1254 ;; Defined at:
  1255 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwmod.c"
  1256 ;; Parameters:    Size  Location     Type
  1257 ;;  dividend        2    7[COMRAM] unsigned int 
  1258 ;;  divisor         2    9[COMRAM] unsigned int 
  1259 ;; Auto vars:     Size  Location     Type
  1260 ;;  counter         1   11[COMRAM] unsigned char 
  1261 ;; Return value:  Size  Location     Type
  1262 ;;                  2    7[COMRAM] unsigned int 
  1263 ;; Registers used:
  1264 ;;		wreg, status,2, status,0
  1265 ;; Tracked objects:
  1266 ;;		On entry : 0/0
  1267 ;;		On exit  : 0/0
  1268 ;;		Unchanged: 0/0
  1269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1270 ;;      Params:         4       0       0       0       0       0       0       0       0
  1271 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1272 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1273 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1274 ;;Total ram usage:        5 bytes
  1275 ;; Hardware stack levels used: 1
  1276 ;; Hardware stack levels required when called: 4
  1277 ;; This function calls:
  1278 ;;		Nothing
  1279 ;; This function is called by:
  1280 ;;		_TransmitirDatos
  1281 ;; This function uses a non-reentrant model
  1282 ;;
  1283                           
  1284                           	psect	text3
  1285   0010E0                     __ptext3:
  1286                           	callstack 0
  1287   0010E0                     ___lwmod:
  1288                           	callstack 25
  1289                           
  1290                           ;incstack = 0
  1291   0010E0  500A               	movf	___lwmod@divisor^0,w,c
  1292   0010E2  100B               	iorwf	(___lwmod@divisor+1)^0,w,c
  1293   0010E4  B4D8               	btfsc	status,2,c
  1294   0010E6  D018               	goto	l810
  1295   0010E8  0E01               	movlw	1
  1296   0010EA  6E0C               	movwf	___lwmod@counter^0,c
  1297   0010EC  D004               	goto	l1982
  1298   0010EE                     l1980:
  1299   0010EE  90D8               	bcf	status,0,c
  1300   0010F0  360A               	rlcf	___lwmod@divisor^0,f,c
  1301   0010F2  360B               	rlcf	(___lwmod@divisor+1)^0,f,c
  1302   0010F4  2A0C               	incf	___lwmod@counter^0,f,c
  1303   0010F6                     l1982:
  1304   0010F6  AE0B               	btfss	(___lwmod@divisor+1)^0,7,c
  1305   0010F8  D7FA               	goto	l1980
  1306   0010FA                     u850:
  1307   0010FA  500A               	movf	___lwmod@divisor^0,w,c
  1308   0010FC  5C08               	subwf	___lwmod@dividend^0,w,c
  1309   0010FE  500B               	movf	(___lwmod@divisor+1)^0,w,c
  1310   001100  5809               	subwfb	(___lwmod@dividend+1)^0,w,c
  1311   001102  A0D8               	btfss	status,0,c
  1312   001104  D004               	goto	l1988
  1313   001106  500A               	movf	___lwmod@divisor^0,w,c
  1314   001108  5E08               	subwf	___lwmod@dividend^0,f,c
  1315   00110A  500B               	movf	(___lwmod@divisor+1)^0,w,c
  1316   00110C  5A09               	subwfb	(___lwmod@dividend+1)^0,f,c
  1317   00110E                     l1988:
  1318   00110E  90D8               	bcf	status,0,c
  1319   001110  320B               	rrcf	(___lwmod@divisor+1)^0,f,c
  1320   001112  320A               	rrcf	___lwmod@divisor^0,f,c
  1321   001114  2E0C               	decfsz	___lwmod@counter^0,f,c
  1322   001116  D7F1               	goto	u850
  1323   001118                     l810:
  1324   001118  C008  F008         	movff	___lwmod@dividend,?___lwmod
  1325   00111C  C009  F009         	movff	___lwmod@dividend+1,?___lwmod+1
  1326   001120  0012               	return		;funcret
  1327   001122                     __end_of___lwmod:
  1328                           	callstack 0
  1329                           
  1330 ;; *************** function ___lwdiv *****************
  1331 ;; Defined at:
  1332 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwdiv.c"
  1333 ;; Parameters:    Size  Location     Type
  1334 ;;  dividend        2    7[COMRAM] unsigned int 
  1335 ;;  divisor         2    9[COMRAM] unsigned int 
  1336 ;; Auto vars:     Size  Location     Type
  1337 ;;  quotient        2   11[COMRAM] unsigned int 
  1338 ;;  counter         1   13[COMRAM] unsigned char 
  1339 ;; Return value:  Size  Location     Type
  1340 ;;                  2    7[COMRAM] unsigned int 
  1341 ;; Registers used:
  1342 ;;		wreg, status,2, status,0
  1343 ;; Tracked objects:
  1344 ;;		On entry : 0/0
  1345 ;;		On exit  : 0/0
  1346 ;;		Unchanged: 0/0
  1347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1348 ;;      Params:         4       0       0       0       0       0       0       0       0
  1349 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1350 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1351 ;;      Totals:         7       0       0       0       0       0       0       0       0
  1352 ;;Total ram usage:        7 bytes
  1353 ;; Hardware stack levels used: 1
  1354 ;; Hardware stack levels required when called: 4
  1355 ;; This function calls:
  1356 ;;		Nothing
  1357 ;; This function is called by:
  1358 ;;		_TransmitirDatos
  1359 ;; This function uses a non-reentrant model
  1360 ;;
  1361                           
  1362                           	psect	text4
  1363   000FB4                     __ptext4:
  1364                           	callstack 0
  1365   000FB4                     ___lwdiv:
  1366                           	callstack 25
  1367                           
  1368                           ;incstack = 0
  1369   000FB4  0E00               	movlw	0
  1370   000FB6  6E0D               	movwf	(___lwdiv@quotient+1)^0,c
  1371   000FB8  0E00               	movlw	0
  1372   000FBA  6E0C               	movwf	___lwdiv@quotient^0,c
  1373   000FBC  500A               	movf	___lwdiv@divisor^0,w,c
  1374   000FBE  100B               	iorwf	(___lwdiv@divisor+1)^0,w,c
  1375   000FC0  B4D8               	btfsc	status,2,c
  1376   000FC2  D01C               	goto	l800
  1377   000FC4  0E01               	movlw	1
  1378   000FC6  6E0E               	movwf	___lwdiv@counter^0,c
  1379   000FC8  D004               	goto	l1962
  1380   000FCA                     l1960:
  1381   000FCA  90D8               	bcf	status,0,c
  1382   000FCC  360A               	rlcf	___lwdiv@divisor^0,f,c
  1383   000FCE  360B               	rlcf	(___lwdiv@divisor+1)^0,f,c
  1384   000FD0  2A0E               	incf	___lwdiv@counter^0,f,c
  1385   000FD2                     l1962:
  1386   000FD2  AE0B               	btfss	(___lwdiv@divisor+1)^0,7,c
  1387   000FD4  D7FA               	goto	l1960
  1388   000FD6                     u820:
  1389   000FD6  90D8               	bcf	status,0,c
  1390   000FD8  360C               	rlcf	___lwdiv@quotient^0,f,c
  1391   000FDA  360D               	rlcf	(___lwdiv@quotient+1)^0,f,c
  1392   000FDC  500A               	movf	___lwdiv@divisor^0,w,c
  1393   000FDE  5C08               	subwf	___lwdiv@dividend^0,w,c
  1394   000FE0  500B               	movf	(___lwdiv@divisor+1)^0,w,c
  1395   000FE2  5809               	subwfb	(___lwdiv@dividend+1)^0,w,c
  1396   000FE4  A0D8               	btfss	status,0,c
  1397   000FE6  D005               	goto	l1972
  1398   000FE8  500A               	movf	___lwdiv@divisor^0,w,c
  1399   000FEA  5E08               	subwf	___lwdiv@dividend^0,f,c
  1400   000FEC  500B               	movf	(___lwdiv@divisor+1)^0,w,c
  1401   000FEE  5A09               	subwfb	(___lwdiv@dividend+1)^0,f,c
  1402   000FF0  800C               	bsf	___lwdiv@quotient^0,0,c
  1403   000FF2                     l1972:
  1404   000FF2  90D8               	bcf	status,0,c
  1405   000FF4  320B               	rrcf	(___lwdiv@divisor+1)^0,f,c
  1406   000FF6  320A               	rrcf	___lwdiv@divisor^0,f,c
  1407   000FF8  2E0E               	decfsz	___lwdiv@counter^0,f,c
  1408   000FFA  D7ED               	goto	u820
  1409   000FFC                     l800:
  1410   000FFC  C00C  F008         	movff	___lwdiv@quotient,?___lwdiv
  1411   001000  C00D  F009         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1412   001004  0012               	return		;funcret
  1413   001006                     __end_of___lwdiv:
  1414                           	callstack 0
  1415                           
  1416 ;; *************** function ___lbmod *****************
  1417 ;; Defined at:
  1418 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lbmod.c"
  1419 ;; Parameters:    Size  Location     Type
  1420 ;;  dividend        1    wreg     unsigned char 
  1421 ;;  divisor         1    7[COMRAM] unsigned char 
  1422 ;; Auto vars:     Size  Location     Type
  1423 ;;  dividend        1    8[COMRAM] unsigned char 
  1424 ;;  rem             1   10[COMRAM] unsigned char 
  1425 ;;  counter         1    9[COMRAM] unsigned char 
  1426 ;; Return value:  Size  Location     Type
  1427 ;;                  1    wreg      unsigned char 
  1428 ;; Registers used:
  1429 ;;		wreg, status,2, status,0
  1430 ;; Tracked objects:
  1431 ;;		On entry : 0/0
  1432 ;;		On exit  : 0/0
  1433 ;;		Unchanged: 0/0
  1434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1435 ;;      Params:         1       0       0       0       0       0       0       0       0
  1436 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1437 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1438 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1439 ;;Total ram usage:        4 bytes
  1440 ;; Hardware stack levels used: 1
  1441 ;; Hardware stack levels required when called: 4
  1442 ;; This function calls:
  1443 ;;		Nothing
  1444 ;; This function is called by:
  1445 ;;		_TransmitirDatos
  1446 ;; This function uses a non-reentrant model
  1447 ;;
  1448                           
  1449                           	psect	text5
  1450   00126A                     __ptext5:
  1451                           	callstack 0
  1452   00126A                     ___lbmod:
  1453                           	callstack 25
  1454                           
  1455                           ;incstack = 0
  1456                           ;___lbmod@dividend stored from wreg
  1457   00126A  6E09               	movwf	___lbmod@dividend^0,c
  1458   00126C  0E08               	movlw	8
  1459   00126E  6E0A               	movwf	___lbmod@counter^0,c
  1460   001270  0E00               	movlw	0
  1461   001272  6E0B               	movwf	___lbmod@rem^0,c
  1462   001274                     l1940:
  1463   001274  90D8               	bcf	status,0,c
  1464   001276  3409               	rlcf	___lbmod@dividend^0,w,c
  1465   001278  340B               	rlcf	___lbmod@rem^0,w,c
  1466   00127A  6E0B               	movwf	___lbmod@rem^0,c
  1467   00127C  90D8               	bcf	status,0,c
  1468   00127E  3609               	rlcf	___lbmod@dividend^0,f,c
  1469   001280  5008               	movf	___lbmod@divisor^0,w,c
  1470   001282  5C0B               	subwf	___lbmod@rem^0,w,c
  1471   001284  A0D8               	btfss	status,0,c
  1472   001286  D002               	goto	l1948
  1473   001288  5008               	movf	___lbmod@divisor^0,w,c
  1474   00128A  5E0B               	subwf	___lbmod@rem^0,f,c
  1475   00128C                     l1948:
  1476   00128C  2E0A               	decfsz	___lbmod@counter^0,f,c
  1477   00128E  D7F2               	goto	l1940
  1478   001290  500B               	movf	___lbmod@rem^0,w,c
  1479   001292  0012               	return		;funcret
  1480   001294                     __end_of___lbmod:
  1481                           	callstack 0
  1482                           
  1483 ;; *************** function ___lbdiv *****************
  1484 ;; Defined at:
  1485 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lbdiv.c"
  1486 ;; Parameters:    Size  Location     Type
  1487 ;;  dividend        1    wreg     unsigned char 
  1488 ;;  divisor         1    7[COMRAM] unsigned char 
  1489 ;; Auto vars:     Size  Location     Type
  1490 ;;  dividend        1    8[COMRAM] unsigned char 
  1491 ;;  quotient        1   10[COMRAM] unsigned char 
  1492 ;;  counter         1    9[COMRAM] unsigned char 
  1493 ;; Return value:  Size  Location     Type
  1494 ;;                  1    wreg      unsigned char 
  1495 ;; Registers used:
  1496 ;;		wreg, status,2, status,0
  1497 ;; Tracked objects:
  1498 ;;		On entry : 0/0
  1499 ;;		On exit  : 0/0
  1500 ;;		Unchanged: 0/0
  1501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1502 ;;      Params:         1       0       0       0       0       0       0       0       0
  1503 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1504 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1505 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1506 ;;Total ram usage:        4 bytes
  1507 ;; Hardware stack levels used: 1
  1508 ;; Hardware stack levels required when called: 4
  1509 ;; This function calls:
  1510 ;;		Nothing
  1511 ;; This function is called by:
  1512 ;;		_TransmitirDatos
  1513 ;; This function uses a non-reentrant model
  1514 ;;
  1515                           
  1516                           	psect	text6
  1517   001198                     __ptext6:
  1518                           	callstack 0
  1519   001198                     ___lbdiv:
  1520                           	callstack 25
  1521                           
  1522                           ;incstack = 0
  1523                           ;___lbdiv@dividend stored from wreg
  1524   001198  6E09               	movwf	___lbdiv@dividend^0,c
  1525   00119A  0E00               	movlw	0
  1526   00119C  6E0B               	movwf	___lbdiv@quotient^0,c
  1527   00119E  5008               	movf	___lbdiv@divisor^0,w,c
  1528   0011A0  B4D8               	btfsc	status,2,c
  1529   0011A2  D015               	goto	l1934
  1530   0011A4  0E01               	movlw	1
  1531   0011A6  6E0A               	movwf	___lbdiv@counter^0,c
  1532   0011A8  D003               	goto	l1922
  1533   0011AA                     l1918:
  1534   0011AA  90D8               	bcf	status,0,c
  1535   0011AC  3608               	rlcf	___lbdiv@divisor^0,f,c
  1536   0011AE  2A0A               	incf	___lbdiv@counter^0,f,c
  1537   0011B0                     l1922:
  1538   0011B0  AE08               	btfss	___lbdiv@divisor^0,7,c
  1539   0011B2  D7FB               	goto	l1918
  1540   0011B4                     u780:
  1541   0011B4  90D8               	bcf	status,0,c
  1542   0011B6  360B               	rlcf	___lbdiv@quotient^0,f,c
  1543   0011B8  5008               	movf	___lbdiv@divisor^0,w,c
  1544   0011BA  5C09               	subwf	___lbdiv@dividend^0,w,c
  1545   0011BC  A0D8               	btfss	status,0,c
  1546   0011BE  D003               	goto	l1930
  1547   0011C0  5008               	movf	___lbdiv@divisor^0,w,c
  1548   0011C2  5E09               	subwf	___lbdiv@dividend^0,f,c
  1549   0011C4  800B               	bsf	___lbdiv@quotient^0,0,c
  1550   0011C6                     l1930:
  1551   0011C6  90D8               	bcf	status,0,c
  1552   0011C8  3208               	rrcf	___lbdiv@divisor^0,f,c
  1553   0011CA  2E0A               	decfsz	___lbdiv@counter^0,f,c
  1554   0011CC  D7F3               	goto	u780
  1555   0011CE                     l1934:
  1556   0011CE  500B               	movf	___lbdiv@quotient^0,w,c
  1557   0011D0  0012               	return		;funcret
  1558   0011D2                     __end_of___lbdiv:
  1559                           	callstack 0
  1560                           
  1561 ;; *************** function ___awdiv *****************
  1562 ;; Defined at:
  1563 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awdiv.c"
  1564 ;; Parameters:    Size  Location     Type
  1565 ;;  dividend        2    7[COMRAM] int 
  1566 ;;  divisor         2    9[COMRAM] int 
  1567 ;; Auto vars:     Size  Location     Type
  1568 ;;  quotient        2   13[COMRAM] int 
  1569 ;;  sign            1   12[COMRAM] unsigned char 
  1570 ;;  counter         1   11[COMRAM] unsigned char 
  1571 ;; Return value:  Size  Location     Type
  1572 ;;                  2    7[COMRAM] int 
  1573 ;; Registers used:
  1574 ;;		wreg, status,2, status,0
  1575 ;; Tracked objects:
  1576 ;;		On entry : 0/0
  1577 ;;		On exit  : 0/0
  1578 ;;		Unchanged: 0/0
  1579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1580 ;;      Params:         4       0       0       0       0       0       0       0       0
  1581 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1582 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1583 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1584 ;;Total ram usage:        8 bytes
  1585 ;; Hardware stack levels used: 1
  1586 ;; Hardware stack levels required when called: 4
  1587 ;; This function calls:
  1588 ;;		Nothing
  1589 ;; This function is called by:
  1590 ;;		_TransmitirDatos
  1591 ;; This function uses a non-reentrant model
  1592 ;;
  1593                           
  1594                           	psect	text7
  1595   000E64                     __ptext7:
  1596                           	callstack 0
  1597   000E64                     ___awdiv:
  1598                           	callstack 25
  1599                           
  1600                           ;incstack = 0
  1601   000E64  0E00               	movlw	0
  1602   000E66  6E0D               	movwf	___awdiv@sign^0,c
  1603   000E68  AE0B               	btfss	(___awdiv@divisor+1)^0,7,c
  1604   000E6A  D006               	goto	l1876
  1605   000E6C  6C0A               	negf	___awdiv@divisor^0,c
  1606   000E6E  1E0B               	comf	(___awdiv@divisor+1)^0,f,c
  1607   000E70  B0D8               	btfsc	status,0,c
  1608   000E72  2A0B               	incf	(___awdiv@divisor+1)^0,f,c
  1609   000E74  0E01               	movlw	1
  1610   000E76  6E0D               	movwf	___awdiv@sign^0,c
  1611   000E78                     l1876:
  1612   000E78  AE09               	btfss	(___awdiv@dividend+1)^0,7,c
  1613   000E7A  D006               	goto	l1882
  1614   000E7C  6C08               	negf	___awdiv@dividend^0,c
  1615   000E7E  1E09               	comf	(___awdiv@dividend+1)^0,f,c
  1616   000E80  B0D8               	btfsc	status,0,c
  1617   000E82  2A09               	incf	(___awdiv@dividend+1)^0,f,c
  1618   000E84  0E01               	movlw	1
  1619   000E86  1A0D               	xorwf	___awdiv@sign^0,f,c
  1620   000E88                     l1882:
  1621   000E88  0E00               	movlw	0
  1622   000E8A  6E0F               	movwf	(___awdiv@quotient+1)^0,c
  1623   000E8C  0E00               	movlw	0
  1624   000E8E  6E0E               	movwf	___awdiv@quotient^0,c
  1625   000E90  500A               	movf	___awdiv@divisor^0,w,c
  1626   000E92  100B               	iorwf	(___awdiv@divisor+1)^0,w,c
  1627   000E94  B4D8               	btfsc	status,2,c
  1628   000E96  D01C               	goto	l1904
  1629   000E98  0E01               	movlw	1
  1630   000E9A  6E0C               	movwf	___awdiv@counter^0,c
  1631   000E9C  D004               	goto	l1890
  1632   000E9E                     l1888:
  1633   000E9E  90D8               	bcf	status,0,c
  1634   000EA0  360A               	rlcf	___awdiv@divisor^0,f,c
  1635   000EA2  360B               	rlcf	(___awdiv@divisor+1)^0,f,c
  1636   000EA4  2A0C               	incf	___awdiv@counter^0,f,c
  1637   000EA6                     l1890:
  1638   000EA6  AE0B               	btfss	(___awdiv@divisor+1)^0,7,c
  1639   000EA8  D7FA               	goto	l1888
  1640   000EAA                     u740:
  1641   000EAA  90D8               	bcf	status,0,c
  1642   000EAC  360E               	rlcf	___awdiv@quotient^0,f,c
  1643   000EAE  360F               	rlcf	(___awdiv@quotient+1)^0,f,c
  1644   000EB0  500A               	movf	___awdiv@divisor^0,w,c
  1645   000EB2  5C08               	subwf	___awdiv@dividend^0,w,c
  1646   000EB4  500B               	movf	(___awdiv@divisor+1)^0,w,c
  1647   000EB6  5809               	subwfb	(___awdiv@dividend+1)^0,w,c
  1648   000EB8  A0D8               	btfss	status,0,c
  1649   000EBA  D005               	goto	l1900
  1650   000EBC  500A               	movf	___awdiv@divisor^0,w,c
  1651   000EBE  5E08               	subwf	___awdiv@dividend^0,f,c
  1652   000EC0  500B               	movf	(___awdiv@divisor+1)^0,w,c
  1653   000EC2  5A09               	subwfb	(___awdiv@dividend+1)^0,f,c
  1654   000EC4  800E               	bsf	___awdiv@quotient^0,0,c
  1655   000EC6                     l1900:
  1656   000EC6  90D8               	bcf	status,0,c
  1657   000EC8  320B               	rrcf	(___awdiv@divisor+1)^0,f,c
  1658   000ECA  320A               	rrcf	___awdiv@divisor^0,f,c
  1659   000ECC  2E0C               	decfsz	___awdiv@counter^0,f,c
  1660   000ECE  D7ED               	goto	u740
  1661   000ED0                     l1904:
  1662   000ED0  500D               	movf	___awdiv@sign^0,w,c
  1663   000ED2  B4D8               	btfsc	status,2,c
  1664   000ED4  D004               	goto	l1908
  1665   000ED6  6C0E               	negf	___awdiv@quotient^0,c
  1666   000ED8  1E0F               	comf	(___awdiv@quotient+1)^0,f,c
  1667   000EDA  B0D8               	btfsc	status,0,c
  1668   000EDC  2A0F               	incf	(___awdiv@quotient+1)^0,f,c
  1669   000EDE                     l1908:
  1670   000EDE  C00E  F008         	movff	___awdiv@quotient,?___awdiv
  1671   000EE2  C00F  F009         	movff	___awdiv@quotient+1,?___awdiv+1
  1672   000EE6  0012               	return		;funcret
  1673   000EE8                     __end_of___awdiv:
  1674                           	callstack 0
  1675                           
  1676 ;; *************** function _Transmitir *****************
  1677 ;; Defined at:
  1678 ;;		line 220 in file "Proyecto.c"
  1679 ;; Parameters:    Size  Location     Type
  1680 ;;  BufferT         1    wreg     unsigned char 
  1681 ;; Auto vars:     Size  Location     Type
  1682 ;;  BufferT         1    7[COMRAM] unsigned char 
  1683 ;; Return value:  Size  Location     Type
  1684 ;;                  1    wreg      void 
  1685 ;; Registers used:
  1686 ;;		wreg
  1687 ;; Tracked objects:
  1688 ;;		On entry : 0/0
  1689 ;;		On exit  : 0/0
  1690 ;;		Unchanged: 0/0
  1691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1692 ;;      Params:         0       0       0       0       0       0       0       0       0
  1693 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1694 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1695 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1696 ;;Total ram usage:        1 bytes
  1697 ;; Hardware stack levels used: 1
  1698 ;; Hardware stack levels required when called: 4
  1699 ;; This function calls:
  1700 ;;		Nothing
  1701 ;; This function is called by:
  1702 ;;		_TransmitirDatos
  1703 ;; This function uses a non-reentrant model
  1704 ;;
  1705                           
  1706                           	psect	text8
  1707   00135A                     __ptext8:
  1708                           	callstack 0
  1709   00135A                     _Transmitir:
  1710                           	callstack 25
  1711                           
  1712                           ;incstack = 0
  1713                           ;Transmitir@BufferT stored from wreg
  1714   00135A  6E08               	movwf	Transmitir@BufferT^0,c
  1715   00135C                     
  1716                           ;Proyecto.c: 221: while (TRMT == 0);
  1717   00135C  A2AC               	btfss	4012,1,c	;volatile
  1718   00135E  D7FE               	goto	l1858
  1719                           
  1720                           ;Proyecto.c: 222: TXREG = BufferT;
  1721   001360  C008  FFAD         	movff	Transmitir@BufferT,4013	;volatile
  1722   001364  0012               	return		;funcret
  1723   001366                     __end_of_Transmitir:
  1724                           	callstack 0
  1725                           
  1726 ;; *************** function _MensajeLCD_Word *****************
  1727 ;; Defined at:
  1728 ;;		line 247 in file "LibLCDXC8.h"
  1729 ;; Parameters:    Size  Location     Type
  1730 ;;  a               1   12[COMRAM] PTR unsigned char 
  1731 ;;		 -> STR_7(5), STR_6(6), STR_5(17), STR_4(17), 
  1732 ;;		 -> STR_3(10), STR_2(17), STR_1(11), 
  1733 ;; Auto vars:     Size  Location     Type
  1734 ;;  i               2   14[COMRAM] int 
  1735 ;; Return value:  Size  Location     Type
  1736 ;;                  1    wreg      void 
  1737 ;; Registers used:
  1738 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1739 ;; Tracked objects:
  1740 ;;		On entry : 0/0
  1741 ;;		On exit  : 0/0
  1742 ;;		Unchanged: 0/0
  1743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1744 ;;      Params:         1       0       0       0       0       0       0       0       0
  1745 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1746 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1747 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1748 ;;Total ram usage:        4 bytes
  1749 ;; Hardware stack levels used: 1
  1750 ;; Hardware stack levels required when called: 7
  1751 ;; This function calls:
  1752 ;;		_EscribeLCD_c
  1753 ;; This function is called by:
  1754 ;;		_main
  1755 ;;		_TransmitirDatos
  1756 ;; This function uses a non-reentrant model
  1757 ;;
  1758                           
  1759                           	psect	text9
  1760   001006                     __ptext9:
  1761                           	callstack 0
  1762   001006                     _MensajeLCD_Word:
  1763                           	callstack 22
  1764                           
  1765                           ;LibLCDXC8.h: 251: for(int i = 0; i<16; i++){
  1766                           
  1767                           ;incstack = 0
  1768   001006  0E00               	movlw	0
  1769   001008  6E10               	movwf	(MensajeLCD_Word@i+1)^0,c
  1770   00100A  0E00               	movlw	0
  1771   00100C  6E0F               	movwf	MensajeLCD_Word@i^0,c
  1772   00100E                     l1826:
  1773                           
  1774                           ;LibLCDXC8.h: 252: if(a[i] == (0)){
  1775   00100E  500D               	movf	MensajeLCD_Word@a^0,w,c
  1776   001010  240F               	addwf	MensajeLCD_Word@i^0,w,c
  1777   001012  6E0E               	movwf	??_MensajeLCD_Word^0,c
  1778   001014  C00E  FFF6         	movff	??_MensajeLCD_Word,tblptrl
  1779   001018                     	if	1	;There is more than 1 active tblptr byte
  1780   001018  0E08               	movlw	high __smallconst
  1781   00101A  6EF7               	movwf	tblptrh,c
  1782   00101C                     	endif
  1783   00101C                     	if	0	;tblptru may be non-zero
  1784   00101C                     	endif
  1785   00101C                     	if	0	;tblptru may be non-zero
  1786   00101C                     	endif
  1787   00101C  0008               	tblrd		*
  1788   00101E  50F5               	movf	tablat,w,c
  1789   001020  0900               	iorlw	0
  1790   001022  B4D8               	btfsc	status,2,c
  1791   001024  0012               	return	
  1792                           
  1793                           ;LibLCDXC8.h: 254: };LibLCDXC8.h: 255: EscribeLCD_c(a[i]);
  1794   001026  500D               	movf	MensajeLCD_Word@a^0,w,c
  1795   001028  240F               	addwf	MensajeLCD_Word@i^0,w,c
  1796   00102A  6E0E               	movwf	??_MensajeLCD_Word^0,c
  1797   00102C  C00E  FFF6         	movff	??_MensajeLCD_Word,tblptrl
  1798   001030                     	if	1	;There is more than 1 active tblptr byte
  1799   001030  0E08               	movlw	high __smallconst
  1800   001032  6EF7               	movwf	tblptrh,c
  1801   001034                     	endif
  1802   001034                     	if	0	;tblptru may be non-zero
  1803   001034                     	endif
  1804   001034                     	if	0	;tblptru may be non-zero
  1805   001034                     	endif
  1806   001034  0008               	tblrd		*
  1807   001036  50F5               	movf	tablat,w,c
  1808   001038  EC79  F009         	call	_EscribeLCD_c
  1809   00103C  4A0F               	infsnz	MensajeLCD_Word@i^0,f,c
  1810   00103E  2A10               	incf	(MensajeLCD_Word@i+1)^0,f,c
  1811   001040  BE10               	btfsc	(MensajeLCD_Word@i+1)^0,7,c
  1812   001042  D7E5               	goto	l1826
  1813   001044  5010               	movf	(MensajeLCD_Word@i+1)^0,w,c
  1814   001046  E105               	bnz	u680
  1815   001048  0E10               	movlw	16
  1816   00104A  5C0F               	subwf	MensajeLCD_Word@i^0,w,c
  1817   00104C  B0D8               	btfsc	status,0,c
  1818   00104E  0012               	return	
  1819   001050  D7DE               	goto	l1826
  1820   001052                     u680:
  1821   001052  0012               	return		;funcret
  1822   001054                     __end_of_MensajeLCD_Word:
  1823                           	callstack 0
  1824                           
  1825 ;; *************** function _DireccionaLCD *****************
  1826 ;; Defined at:
  1827 ;;		line 259 in file "LibLCDXC8.h"
  1828 ;; Parameters:    Size  Location     Type
  1829 ;;  a               1    wreg     unsigned char 
  1830 ;; Auto vars:     Size  Location     Type
  1831 ;;  a               1   11[COMRAM] unsigned char 
  1832 ;; Return value:  Size  Location     Type
  1833 ;;                  1    wreg      void 
  1834 ;; Registers used:
  1835 ;;		wreg, status,2, status,0, cstack
  1836 ;; Tracked objects:
  1837 ;;		On entry : 0/0
  1838 ;;		On exit  : 0/0
  1839 ;;		Unchanged: 0/0
  1840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1841 ;;      Params:         0       0       0       0       0       0       0       0       0
  1842 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1843 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1844 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1845 ;;Total ram usage:        1 bytes
  1846 ;; Hardware stack levels used: 1
  1847 ;; Hardware stack levels required when called: 6
  1848 ;; This function calls:
  1849 ;;		_EnviaDato
  1850 ;;		_HabilitaLCD
  1851 ;;		_RetardoLCD
  1852 ;; This function is called by:
  1853 ;;		_main
  1854 ;;		_TransmitirDatos
  1855 ;; This function uses a non-reentrant model
  1856 ;;
  1857                           
  1858                           	psect	text10
  1859   0012DC                     __ptext10:
  1860                           	callstack 0
  1861   0012DC                     _DireccionaLCD:
  1862                           	callstack 23
  1863                           
  1864                           ;incstack = 0
  1865                           ;DireccionaLCD@a stored from wreg
  1866   0012DC  6E0C               	movwf	DireccionaLCD@a^0,c
  1867                           
  1868                           ;LibLCDXC8.h: 262: LATE0=0;
  1869   0012DE  908D               	bcf	3981,0,c	;volatile
  1870                           
  1871                           ;LibLCDXC8.h: 263: EnviaDato(a);
  1872   0012E0  500C               	movf	DireccionaLCD@a^0,w,c
  1873   0012E2  EC2A  F008         	call	_EnviaDato
  1874                           
  1875                           ;LibLCDXC8.h: 264: HabilitaLCD();
  1876   0012E6  EC99  F009         	call	_HabilitaLCD	;wreg free
  1877                           
  1878                           ;LibLCDXC8.h: 265: RetardoLCD(4);
  1879   0012EA  0E04               	movlw	4
  1880   0012EC  EC74  F007         	call	_RetardoLCD
  1881   0012F0  0012               	return		;funcret
  1882   0012F2                     __end_of_DireccionaLCD:
  1883                           	callstack 0
  1884                           
  1885 ;; *************** function _NuevoCaracter *****************
  1886 ;; Defined at:
  1887 ;;		line 140 in file "LibLCDXC8.h"
  1888 ;; Parameters:    Size  Location     Type
  1889 ;;  addr            1    wreg     unsigned char 
  1890 ;;  c               1   12[COMRAM] PTR unsigned char 
  1891 ;;		 -> cara(8), 
  1892 ;; Auto vars:     Size  Location     Type
  1893 ;;  addr            1   13[COMRAM] unsigned char 
  1894 ;;  i               2   14[COMRAM] int 
  1895 ;; Return value:  Size  Location     Type
  1896 ;;                  1    wreg      void 
  1897 ;; Registers used:
  1898 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1899 ;; Tracked objects:
  1900 ;;		On entry : 0/0
  1901 ;;		On exit  : 0/0
  1902 ;;		Unchanged: 0/0
  1903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1904 ;;      Params:         1       0       0       0       0       0       0       0       0
  1905 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1906 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1907 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1908 ;;Total ram usage:        4 bytes
  1909 ;; Hardware stack levels used: 1
  1910 ;; Hardware stack levels required when called: 7
  1911 ;; This function calls:
  1912 ;;		_ComandoLCD
  1913 ;;		_EscribeLCD_c
  1914 ;; This function is called by:
  1915 ;;		_main
  1916 ;; This function uses a non-reentrant model
  1917 ;;
  1918                           
  1919                           	psect	text11
  1920   001122                     __ptext11:
  1921                           	callstack 0
  1922   001122                     _NuevoCaracter:
  1923                           	callstack 23
  1924                           
  1925                           ;incstack = 0
  1926                           ;NuevoCaracter@addr stored from wreg
  1927   001122  6E0E               	movwf	NuevoCaracter@addr^0,c
  1928                           
  1929                           ;LibLCDXC8.h: 141: int i;;LibLCDXC8.h: 142: ComandoLCD(0x40 + (addr * 8));
  1930   001124  500E               	movf	NuevoCaracter@addr^0,w,c
  1931   001126  0D08               	mullw	8
  1932   001128  50F3               	movf	243,w,c
  1933   00112A  0F40               	addlw	64
  1934   00112C  EC1E  F009         	call	_ComandoLCD
  1935                           
  1936                           ;LibLCDXC8.h: 143: for (i = 0; i < 8; i++) {
  1937   001130  0E00               	movlw	0
  1938   001132  6E10               	movwf	(NuevoCaracter@i+1)^0,c
  1939   001134  0E00               	movlw	0
  1940   001136  6E0F               	movwf	NuevoCaracter@i^0,c
  1941   001138                     l2340:
  1942                           
  1943                           ;LibLCDXC8.h: 144: EscribeLCD_c(c[i]);
  1944   001138  500D               	movf	NuevoCaracter@c^0,w,c
  1945   00113A  240F               	addwf	NuevoCaracter@i^0,w,c
  1946   00113C  6ED9               	movwf	fsr2l,c
  1947   00113E  6ADA               	clrf	fsr2h,c
  1948   001140  50DF               	movf	indf2,w,c
  1949   001142  EC79  F009         	call	_EscribeLCD_c
  1950   001146  4A0F               	infsnz	NuevoCaracter@i^0,f,c
  1951   001148  2A10               	incf	(NuevoCaracter@i+1)^0,f,c
  1952   00114A  BE10               	btfsc	(NuevoCaracter@i+1)^0,7,c
  1953   00114C  D7F5               	goto	l2340
  1954   00114E  5010               	movf	(NuevoCaracter@i+1)^0,w,c
  1955   001150  E105               	bnz	u1210
  1956   001152  0E08               	movlw	8
  1957   001154  5C0F               	subwf	NuevoCaracter@i^0,w,c
  1958   001156  B0D8               	btfsc	status,0,c
  1959   001158  0012               	return	
  1960   00115A  D7EE               	goto	l2340
  1961   00115C                     u1210:
  1962   00115C  0012               	return		;funcret
  1963   00115E                     __end_of_NuevoCaracter:
  1964                           	callstack 0
  1965                           
  1966 ;; *************** function _EscribeLCD_c *****************
  1967 ;; Defined at:
  1968 ;;		line 148 in file "LibLCDXC8.h"
  1969 ;; Parameters:    Size  Location     Type
  1970 ;;  a               1    wreg     unsigned char 
  1971 ;; Auto vars:     Size  Location     Type
  1972 ;;  a               1   11[COMRAM] unsigned char 
  1973 ;; Return value:  Size  Location     Type
  1974 ;;                  1    wreg      void 
  1975 ;; Registers used:
  1976 ;;		wreg, status,2, status,0, cstack
  1977 ;; Tracked objects:
  1978 ;;		On entry : 0/0
  1979 ;;		On exit  : 0/0
  1980 ;;		Unchanged: 0/0
  1981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1982 ;;      Params:         0       0       0       0       0       0       0       0       0
  1983 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1984 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1985 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1986 ;;Total ram usage:        1 bytes
  1987 ;; Hardware stack levels used: 1
  1988 ;; Hardware stack levels required when called: 6
  1989 ;; This function calls:
  1990 ;;		_EnviaDato
  1991 ;;		_HabilitaLCD
  1992 ;;		_RetardoLCD
  1993 ;; This function is called by:
  1994 ;;		_NuevoCaracter
  1995 ;;		_MensajeLCD_Word
  1996 ;;		_main
  1997 ;;		_TransmitirDatos
  1998 ;; This function uses a non-reentrant model
  1999 ;;
  2000                           
  2001                           	psect	text12
  2002   0012F2                     __ptext12:
  2003                           	callstack 0
  2004   0012F2                     _EscribeLCD_c:
  2005                           	callstack 22
  2006                           
  2007                           ;incstack = 0
  2008                           ;EscribeLCD_c@a stored from wreg
  2009   0012F2  6E0C               	movwf	EscribeLCD_c@a^0,c
  2010                           
  2011                           ;LibLCDXC8.h: 152: LATE0=1;
  2012   0012F4  808D               	bsf	3981,0,c	;volatile
  2013                           
  2014                           ;LibLCDXC8.h: 153: EnviaDato(a);
  2015   0012F6  500C               	movf	EscribeLCD_c@a^0,w,c
  2016   0012F8  EC2A  F008         	call	_EnviaDato
  2017                           
  2018                           ;LibLCDXC8.h: 154: HabilitaLCD();
  2019   0012FC  EC99  F009         	call	_HabilitaLCD	;wreg free
  2020                           
  2021                           ;LibLCDXC8.h: 155: RetardoLCD(4);
  2022   001300  0E04               	movlw	4
  2023   001302  EC74  F007         	call	_RetardoLCD
  2024   001306  0012               	return		;funcret
  2025   001308                     __end_of_EscribeLCD_c:
  2026                           	callstack 0
  2027                           
  2028 ;; *************** function _ComandoLCD *****************
  2029 ;; Defined at:
  2030 ;;		line 129 in file "LibLCDXC8.h"
  2031 ;; Parameters:    Size  Location     Type
  2032 ;;  data            1    wreg     unsigned char 
  2033 ;; Auto vars:     Size  Location     Type
  2034 ;;  data            1    8[COMRAM] unsigned char 
  2035 ;; Return value:  Size  Location     Type
  2036 ;;                  1    wreg      void 
  2037 ;; Registers used:
  2038 ;;		wreg, status,2, cstack
  2039 ;; Tracked objects:
  2040 ;;		On entry : 0/0
  2041 ;;		On exit  : 0/0
  2042 ;;		Unchanged: 0/0
  2043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2044 ;;      Params:         0       0       0       0       0       0       0       0       0
  2045 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2046 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2047 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2048 ;;Total ram usage:        2 bytes
  2049 ;; Hardware stack levels used: 1
  2050 ;; Hardware stack levels required when called: 4
  2051 ;; This function calls:
  2052 ;;		Nothing
  2053 ;; This function is called by:
  2054 ;;		_NuevoCaracter
  2055 ;; This function uses a non-reentrant model
  2056 ;;
  2057                           
  2058                           	psect	text13
  2059   00123C                     __ptext13:
  2060                           	callstack 0
  2061   00123C                     _ComandoLCD:
  2062                           	callstack 25
  2063                           
  2064                           ;incstack = 0
  2065                           ;ComandoLCD@data stored from wreg
  2066   00123C  6E09               	movwf	ComandoLCD@data^0,c
  2067                           
  2068                           ;LibLCDXC8.h: 131: LATE0 = 0;
  2069   00123E  908D               	bcf	3981,0,c	;volatile
  2070                           
  2071                           ;LibLCDXC8.h: 132: LATD = data;
  2072   001240  C009  FF8C         	movff	ComandoLCD@data,3980	;volatile
  2073                           
  2074                           ;LibLCDXC8.h: 133: LATE2 = 1;
  2075   001244  848D               	bsf	3981,2,c	;volatile
  2076                           
  2077                           ;LibLCDXC8.h: 134: _delay((unsigned long)((5)*(8000000/4000000.0)));
  2078   001246  0E03               	movlw	3
  2079   001248                     u1267:
  2080   001248  2EE8               	decfsz	wreg,f,c
  2081   00124A  D7FE               	bra	u1267
  2082   00124C  F000               	nop	
  2083                           
  2084                           ;LibLCDXC8.h: 135: LATE2 = 0;
  2085   00124E  948D               	bcf	3981,2,c	;volatile
  2086                           
  2087                           ;LibLCDXC8.h: 136: _delay((unsigned long)((5)*(8000000/4000000.0)));
  2088   001250  0E03               	movlw	3
  2089   001252                     u1277:
  2090   001252  2EE8               	decfsz	wreg,f,c
  2091   001254  D7FE               	bra	u1277
  2092   001256  F000               	nop	
  2093                           
  2094                           ;LibLCDXC8.h: 137: _delay((unsigned long)((2)*(8000000/4000.0)));
  2095   001258  0E06               	movlw	6
  2096   00125A  6E08               	movwf	??_ComandoLCD^0,c
  2097   00125C  0E30               	movlw	48
  2098   00125E                     u1287:
  2099   00125E  2EE8               	decfsz	wreg,f,c
  2100   001260  D7FE               	bra	u1287
  2101   001262  2E08               	decfsz	??_ComandoLCD^0,f,c
  2102   001264  D7FC               	bra	u1287
  2103   001266  D000               	nop2	
  2104   001268  0012               	return		;funcret
  2105   00126A                     __end_of_ComandoLCD:
  2106                           	callstack 0
  2107                           
  2108 ;; *************** function _LeerHT11 *****************
  2109 ;; Defined at:
  2110 ;;		line 128 in file "Proyecto.c"
  2111 ;; Parameters:    Size  Location     Type
  2112 ;;		None
  2113 ;; Auto vars:     Size  Location     Type
  2114 ;;		None
  2115 ;; Return value:  Size  Location     Type
  2116 ;;                  1    wreg      void 
  2117 ;; Registers used:
  2118 ;;		wreg, status,2, status,0, cstack
  2119 ;; Tracked objects:
  2120 ;;		On entry : 0/0
  2121 ;;		On exit  : 0/0
  2122 ;;		Unchanged: 0/0
  2123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2124 ;;      Params:         0       0       0       0       0       0       0       0       0
  2125 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2126 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2127 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2128 ;;Total ram usage:        1 bytes
  2129 ;; Hardware stack levels used: 1
  2130 ;; Hardware stack levels required when called: 6
  2131 ;; This function calls:
  2132 ;;		_LeerByte
  2133 ;; This function is called by:
  2134 ;;		_main
  2135 ;; This function uses a non-reentrant model
  2136 ;;
  2137                           
  2138                           	psect	text14
  2139   0011D2                     __ptext14:
  2140                           	callstack 0
  2141   0011D2                     _LeerHT11:
  2142                           	callstack 24
  2143                           
  2144                           ;Proyecto.c: 130: TRISC0 = 0;
  2145                           
  2146                           ;incstack = 0
  2147   0011D2  9094               	bcf	3988,0,c	;volatile
  2148                           
  2149                           ;Proyecto.c: 131: _delay((unsigned long)((18)*(8000000/4000.0)));
  2150   0011D4  0E2F               	movlw	47
  2151   0011D6  6E0C               	movwf	??_LeerHT11^0,c
  2152   0011D8  0EC0               	movlw	192
  2153   0011DA                     u1297:
  2154   0011DA  2EE8               	decfsz	wreg,f,c
  2155   0011DC  D7FE               	bra	u1297
  2156   0011DE  2E0C               	decfsz	??_LeerHT11^0,f,c
  2157   0011E0  D7FC               	bra	u1297
  2158                           
  2159                           ;Proyecto.c: 132: TRISC0 = 1;
  2160   0011E2  8094               	bsf	3988,0,c	;volatile
  2161   0011E4                     l206:
  2162   0011E4  B082               	btfsc	3970,0,c	;volatile
  2163   0011E6  D7FE               	goto	l206
  2164                           
  2165                           ;Proyecto.c: 135: _delay((unsigned long)((120)*(8000000/4000000.0)));
  2166   0011E8  0E50               	movlw	80
  2167   0011EA                     u1307:
  2168   0011EA  2EE8               	decfsz	wreg,f,c
  2169   0011EC  D7FE               	bra	u1307
  2170   0011EE                     l209:
  2171   0011EE  B082               	btfsc	3970,0,c	;volatile
  2172   0011F0  D7FE               	goto	l209
  2173                           
  2174                           ;Proyecto.c: 138: Humedad = LeerByte();
  2175   0011F2  EC5D  F009         	call	_LeerByte	;wreg free
  2176   0011F6  6E31               	movwf	_Humedad^0,c
  2177                           
  2178                           ;Proyecto.c: 139: LeerByte();
  2179   0011F8  EC5D  F009         	call	_LeerByte	;wreg free
  2180                           
  2181                           ;Proyecto.c: 140: Temp = LeerByte();
  2182   0011FC  EC5D  F009         	call	_LeerByte	;wreg free
  2183   001200  6E32               	movwf	_Temp^0,c
  2184                           
  2185                           ;Proyecto.c: 141: LeerByte();
  2186   001202  EC5D  F009         	call	_LeerByte	;wreg free
  2187                           
  2188                           ;Proyecto.c: 142: LeerByte();
  2189   001206  EC5D  F009         	call	_LeerByte	;wreg free
  2190   00120A  0012               	return		;funcret
  2191   00120C                     __end_of_LeerHT11:
  2192                           	callstack 0
  2193                           
  2194 ;; *************** function _LeerByte *****************
  2195 ;; Defined at:
  2196 ;;		line 145 in file "Proyecto.c"
  2197 ;; Parameters:    Size  Location     Type
  2198 ;;		None
  2199 ;; Auto vars:     Size  Location     Type
  2200 ;;  i               1   10[COMRAM] unsigned char 
  2201 ;;  res             1    9[COMRAM] unsigned char 
  2202 ;; Return value:  Size  Location     Type
  2203 ;;                  1    wreg      unsigned char 
  2204 ;; Registers used:
  2205 ;;		wreg, status,2, status,0, cstack
  2206 ;; Tracked objects:
  2207 ;;		On entry : 0/0
  2208 ;;		On exit  : 0/0
  2209 ;;		Unchanged: 0/0
  2210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2211 ;;      Params:         0       0       0       0       0       0       0       0       0
  2212 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2213 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2214 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2215 ;;Total ram usage:        3 bytes
  2216 ;; Hardware stack levels used: 1
  2217 ;; Hardware stack levels required when called: 5
  2218 ;; This function calls:
  2219 ;;		_LeerBit
  2220 ;; This function is called by:
  2221 ;;		_LeerHT11
  2222 ;; This function uses a non-reentrant model
  2223 ;;
  2224                           
  2225                           	psect	text15
  2226   0012BA                     __ptext15:
  2227                           	callstack 0
  2228   0012BA                     _LeerByte:
  2229                           	callstack 24
  2230                           
  2231                           ;Proyecto.c: 146: unsigned char res = 0, i;
  2232                           
  2233                           ;incstack = 0
  2234   0012BA  0E00               	movlw	0
  2235   0012BC  6E0A               	movwf	LeerByte@res^0,c
  2236                           
  2237                           ;Proyecto.c: 147: for (i = 8; i > 0; i--) {
  2238   0012BE  0E08               	movlw	8
  2239   0012C0  6E0B               	movwf	LeerByte@i^0,c
  2240   0012C2                     l1848:
  2241                           
  2242                           ;Proyecto.c: 148: res = (res << 1) | LeerBit();
  2243   0012C2  EC06  F009         	call	_LeerBit	;wreg free
  2244   0012C6  6E09               	movwf	??_LeerByte^0,c
  2245   0012C8  500A               	movf	LeerByte@res^0,w,c
  2246   0012CA  240A               	addwf	LeerByte@res^0,w,c
  2247   0012CC  1009               	iorwf	??_LeerByte^0,w,c
  2248   0012CE  6E0A               	movwf	LeerByte@res^0,c
  2249   0012D0  060B               	decf	LeerByte@i^0,f,c
  2250   0012D2  500B               	movf	LeerByte@i^0,w,c
  2251   0012D4  A4D8               	btfss	status,2,c
  2252   0012D6  D7F5               	goto	l1848
  2253                           
  2254                           ;Proyecto.c: 149: };Proyecto.c: 150: return res;
  2255   0012D8  500A               	movf	LeerByte@res^0,w,c
  2256   0012DA  0012               	return		;funcret
  2257   0012DC                     __end_of_LeerByte:
  2258                           	callstack 0
  2259                           
  2260 ;; *************** function _LeerBit *****************
  2261 ;; Defined at:
  2262 ;;		line 153 in file "Proyecto.c"
  2263 ;; Parameters:    Size  Location     Type
  2264 ;;		None
  2265 ;; Auto vars:     Size  Location     Type
  2266 ;;  res             1    7[COMRAM] unsigned char 
  2267 ;; Return value:  Size  Location     Type
  2268 ;;                  1    wreg      unsigned char 
  2269 ;; Registers used:
  2270 ;;		wreg, status,2
  2271 ;; Tracked objects:
  2272 ;;		On entry : 0/0
  2273 ;;		On exit  : 0/0
  2274 ;;		Unchanged: 0/0
  2275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2276 ;;      Params:         0       0       0       0       0       0       0       0       0
  2277 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2278 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2279 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2280 ;;Total ram usage:        1 bytes
  2281 ;; Hardware stack levels used: 1
  2282 ;; Hardware stack levels required when called: 4
  2283 ;; This function calls:
  2284 ;;		Nothing
  2285 ;; This function is called by:
  2286 ;;		_LeerByte
  2287 ;; This function uses a non-reentrant model
  2288 ;;
  2289                           
  2290                           	psect	text16
  2291   00120C                     __ptext16:
  2292                           	callstack 0
  2293   00120C                     _LeerBit:
  2294                           	callstack 24
  2295                           
  2296                           ;Proyecto.c: 154: unsigned char res = 0;
  2297                           
  2298                           ;incstack = 0
  2299   00120C  0E00               	movlw	0
  2300   00120E  6E08               	movwf	LeerBit@res^0,c
  2301   001210                     l220:
  2302   001210  A082               	btfss	3970,0,c	;volatile
  2303   001212  D7FE               	goto	l220
  2304                           
  2305                           ;Proyecto.c: 156: _delay((unsigned long)((13)*(8000000/4000000.0)));
  2306   001214  0E08               	movlw	8
  2307   001216                     u1317:
  2308   001216  2EE8               	decfsz	wreg,f,c
  2309   001218  D7FE               	bra	u1317
  2310   00121A  D000               	nop2	
  2311                           
  2312                           ;Proyecto.c: 157: if (RC0 == 1) res = 0;
  2313   00121C  A082               	btfss	3970,0,c	;volatile
  2314   00121E  D002               	goto	l1768
  2315   001220  0E00               	movlw	0
  2316   001222  6E08               	movwf	LeerBit@res^0,c
  2317   001224                     l1768:
  2318                           
  2319                           ;Proyecto.c: 158: _delay((unsigned long)((22)*(8000000/4000000.0)));
  2320   001224  0E0E               	movlw	14
  2321   001226                     u1327:
  2322   001226  2EE8               	decfsz	wreg,f,c
  2323   001228  D7FE               	bra	u1327
  2324   00122A  D000               	nop2	
  2325                           
  2326                           ;Proyecto.c: 159: if (RC0 == 1) {
  2327   00122C  A082               	btfss	3970,0,c	;volatile
  2328   00122E  D004               	goto	u660
  2329                           
  2330                           ;Proyecto.c: 160: res = 1;
  2331   001230  0E01               	movlw	1
  2332   001232  6E08               	movwf	LeerBit@res^0,c
  2333   001234                     l225:
  2334   001234  B082               	btfsc	3970,0,c	;volatile
  2335   001236  D7FE               	goto	l225
  2336   001238                     u660:
  2337                           
  2338                           ;Proyecto.c: 162: };Proyecto.c: 163: return res;
  2339   001238  5008               	movf	LeerBit@res^0,w,c
  2340   00123A  0012               	return		;funcret
  2341   00123C                     __end_of_LeerBit:
  2342                           	callstack 0
  2343                           
  2344 ;; *************** function _InicializaLCD *****************
  2345 ;; Defined at:
  2346 ;;		line 74 in file "LibLCDXC8.h"
  2347 ;; Parameters:    Size  Location     Type
  2348 ;;		None
  2349 ;; Auto vars:     Size  Location     Type
  2350 ;;		None
  2351 ;; Return value:  Size  Location     Type
  2352 ;;                  1    wreg      void 
  2353 ;; Registers used:
  2354 ;;		wreg, status,2, status,0, cstack
  2355 ;; Tracked objects:
  2356 ;;		On entry : 0/0
  2357 ;;		On exit  : 0/0
  2358 ;;		Unchanged: 0/0
  2359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2360 ;;      Params:         0       0       0       0       0       0       0       0       0
  2361 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2362 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2363 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2364 ;;Total ram usage:        0 bytes
  2365 ;; Hardware stack levels used: 1
  2366 ;; Hardware stack levels required when called: 7
  2367 ;; This function calls:
  2368 ;;		_BorraLCD
  2369 ;;		_EnviaDato
  2370 ;;		_HabilitaLCD
  2371 ;;		_RetardoLCD
  2372 ;; This function is called by:
  2373 ;;		_main
  2374 ;; This function uses a non-reentrant model
  2375 ;;
  2376                           
  2377                           	psect	text17
  2378   000DC8                     __ptext17:
  2379                           	callstack 0
  2380   000DC8                     _InicializaLCD:
  2381                           	callstack 23
  2382                           
  2383                           ;LibLCDXC8.h: 76: LATE0=0;
  2384                           
  2385                           ;incstack = 0
  2386   000DC8  908D               	bcf	3981,0,c	;volatile
  2387                           
  2388                           ;LibLCDXC8.h: 77: if(interfaz==4)
  2389   000DCA  0E04               	movlw	4
  2390   000DCC  1822               	xorwf	_interfaz^0,w,c
  2391   000DCE  A4D8               	btfss	status,2,c
  2392   000DD0  D004               	goto	l2012
  2393                           
  2394                           ;LibLCDXC8.h: 78: LATD=(LATD & 0b00001111) | 0x30;
  2395   000DD2  508C               	movf	140,w,c	;volatile
  2396   000DD4  0B0F               	andlw	15
  2397   000DD6  0930               	iorlw	48
  2398   000DD8  D001               	goto	L4
  2399   000DDA                     l2012:
  2400                           
  2401                           ;LibLCDXC8.h: 79: else;LibLCDXC8.h: 80: LATD=0x3F;
  2402   000DDA  0E3F               	movlw	63
  2403   000DDC                     L4:
  2404   000DDC  6E8C               	movwf	140,c	;volatile
  2405                           
  2406                           ;LibLCDXC8.h: 81: HabilitaLCD();
  2407   000DDE  EC99  F009         	call	_HabilitaLCD	;wreg free
  2408                           
  2409                           ;LibLCDXC8.h: 82: RetardoLCD(1);
  2410   000DE2  0E01               	movlw	1
  2411   000DE4  EC74  F007         	call	_RetardoLCD
  2412                           
  2413                           ;LibLCDXC8.h: 83: if(interfaz==4)
  2414   000DE8  0E04               	movlw	4
  2415   000DEA  1822               	xorwf	_interfaz^0,w,c
  2416   000DEC  A4D8               	btfss	status,2,c
  2417   000DEE  D004               	goto	l2022
  2418                           
  2419                           ;LibLCDXC8.h: 84: LATD=(LATD & 0b00001111) | 0x30;
  2420   000DF0  508C               	movf	140,w,c	;volatile
  2421   000DF2  0B0F               	andlw	15
  2422   000DF4  0930               	iorlw	48
  2423   000DF6  D001               	goto	L5
  2424   000DF8                     l2022:
  2425                           
  2426                           ;LibLCDXC8.h: 85: else;LibLCDXC8.h: 86: LATD=0x3F;
  2427   000DF8  0E3F               	movlw	63
  2428   000DFA                     L5:
  2429   000DFA  6E8C               	movwf	140,c	;volatile
  2430                           
  2431                           ;LibLCDXC8.h: 87: HabilitaLCD();
  2432   000DFC  EC99  F009         	call	_HabilitaLCD	;wreg free
  2433                           
  2434                           ;LibLCDXC8.h: 88: RetardoLCD(3);
  2435   000E00  0E03               	movlw	3
  2436   000E02  EC74  F007         	call	_RetardoLCD
  2437                           
  2438                           ;LibLCDXC8.h: 89: if(interfaz==4)
  2439   000E06  0E04               	movlw	4
  2440   000E08  1822               	xorwf	_interfaz^0,w,c
  2441   000E0A  A4D8               	btfss	status,2,c
  2442   000E0C  D004               	goto	l2032
  2443                           
  2444                           ;LibLCDXC8.h: 90: LATD=(LATD & 0b00001111) | 0x30;
  2445   000E0E  508C               	movf	140,w,c	;volatile
  2446   000E10  0B0F               	andlw	15
  2447   000E12  0930               	iorlw	48
  2448   000E14  D001               	goto	L6
  2449   000E16                     l2032:
  2450                           
  2451                           ;LibLCDXC8.h: 91: else;LibLCDXC8.h: 92: LATD=0x3F;
  2452   000E16  0E3F               	movlw	63
  2453   000E18                     L6:
  2454   000E18  6E8C               	movwf	140,c	;volatile
  2455                           
  2456                           ;LibLCDXC8.h: 93: HabilitaLCD();
  2457   000E1A  EC99  F009         	call	_HabilitaLCD	;wreg free
  2458                           
  2459                           ;LibLCDXC8.h: 94: RetardoLCD(4);
  2460   000E1E  0E04               	movlw	4
  2461   000E20  EC74  F007         	call	_RetardoLCD
  2462                           
  2463                           ;LibLCDXC8.h: 95: if(interfaz==4){
  2464   000E24  0E04               	movlw	4
  2465   000E26  1822               	xorwf	_interfaz^0,w,c
  2466   000E28  A4D8               	btfss	status,2,c
  2467   000E2A  D011               	goto	l2052
  2468                           
  2469                           ;LibLCDXC8.h: 96: LATD=(LATD & 0b00001111) | 0x20;
  2470   000E2C  508C               	movf	140,w,c	;volatile
  2471   000E2E  0B0F               	andlw	15
  2472   000E30  0920               	iorlw	32
  2473   000E32  6E8C               	movwf	140,c	;volatile
  2474                           
  2475                           ;LibLCDXC8.h: 97: HabilitaLCD();
  2476   000E34  EC99  F009         	call	_HabilitaLCD	;wreg free
  2477                           
  2478                           ;LibLCDXC8.h: 98: RetardoLCD(4);
  2479   000E38  0E04               	movlw	4
  2480   000E3A  EC74  F007         	call	_RetardoLCD
  2481                           
  2482                           ;LibLCDXC8.h: 99: EnviaDato(0x2F);
  2483   000E3E  0E2F               	movlw	47
  2484   000E40  EC2A  F008         	call	_EnviaDato
  2485                           
  2486                           ;LibLCDXC8.h: 100: HabilitaLCD();
  2487   000E44  EC99  F009         	call	_HabilitaLCD	;wreg free
  2488                           
  2489                           ;LibLCDXC8.h: 101: RetardoLCD(4);
  2490   000E48  0E04               	movlw	4
  2491   000E4A  EC74  F007         	call	_RetardoLCD
  2492   000E4E                     l2052:
  2493                           
  2494                           ;LibLCDXC8.h: 102: };LibLCDXC8.h: 103: BorraLCD();
  2495   000E4E  EC8F  F009         	call	_BorraLCD	;wreg free
  2496                           
  2497                           ;LibLCDXC8.h: 104: EnviaDato(0xF);
  2498   000E52  0E0F               	movlw	15
  2499   000E54  EC2A  F008         	call	_EnviaDato
  2500                           
  2501                           ;LibLCDXC8.h: 105: HabilitaLCD();
  2502   000E58  EC99  F009         	call	_HabilitaLCD	;wreg free
  2503                           
  2504                           ;LibLCDXC8.h: 106: RetardoLCD(4);
  2505   000E5C  0E04               	movlw	4
  2506   000E5E  EC74  F007         	call	_RetardoLCD
  2507   000E62  0012               	return		;funcret
  2508   000E64                     __end_of_InicializaLCD:
  2509                           	callstack 0
  2510                           
  2511 ;; *************** function _BorraLCD *****************
  2512 ;; Defined at:
  2513 ;;		line 115 in file "LibLCDXC8.h"
  2514 ;; Parameters:    Size  Location     Type
  2515 ;;		None
  2516 ;; Auto vars:     Size  Location     Type
  2517 ;;		None
  2518 ;; Return value:  Size  Location     Type
  2519 ;;                  1    wreg      void 
  2520 ;; Registers used:
  2521 ;;		wreg, status,2, status,0, cstack
  2522 ;; Tracked objects:
  2523 ;;		On entry : 0/0
  2524 ;;		On exit  : 0/0
  2525 ;;		Unchanged: 0/0
  2526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2527 ;;      Params:         0       0       0       0       0       0       0       0       0
  2528 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2529 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2530 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2531 ;;Total ram usage:        0 bytes
  2532 ;; Hardware stack levels used: 1
  2533 ;; Hardware stack levels required when called: 6
  2534 ;; This function calls:
  2535 ;;		_EnviaDato
  2536 ;;		_HabilitaLCD
  2537 ;;		_RetardoLCD
  2538 ;; This function is called by:
  2539 ;;		_InicializaLCD
  2540 ;;		_main
  2541 ;;		_TransmitirDatos
  2542 ;; This function uses a non-reentrant model
  2543 ;;
  2544                           
  2545                           	psect	text18
  2546   00131E                     __ptext18:
  2547                           	callstack 0
  2548   00131E                     _BorraLCD:
  2549                           	callstack 23
  2550                           
  2551                           ;LibLCDXC8.h: 117: LATE0=0;
  2552                           
  2553                           ;incstack = 0
  2554   00131E  908D               	bcf	3981,0,c	;volatile
  2555                           
  2556                           ;LibLCDXC8.h: 118: EnviaDato(0x01);
  2557   001320  0E01               	movlw	1
  2558   001322  EC2A  F008         	call	_EnviaDato
  2559                           
  2560                           ;LibLCDXC8.h: 119: HabilitaLCD();
  2561   001326  EC99  F009         	call	_HabilitaLCD	;wreg free
  2562                           
  2563                           ;LibLCDXC8.h: 120: RetardoLCD(2);
  2564   00132A  0E02               	movlw	2
  2565   00132C  EC74  F007         	call	_RetardoLCD
  2566   001330  0012               	return		;funcret
  2567   001332                     __end_of_BorraLCD:
  2568                           	callstack 0
  2569                           
  2570 ;; *************** function _EnviaDato *****************
  2571 ;; Defined at:
  2572 ;;		line 62 in file "LibLCDXC8.h"
  2573 ;; Parameters:    Size  Location     Type
  2574 ;;  a               1    wreg     unsigned char 
  2575 ;; Auto vars:     Size  Location     Type
  2576 ;;  a               1   10[COMRAM] unsigned char 
  2577 ;; Return value:  Size  Location     Type
  2578 ;;                  1    wreg      void 
  2579 ;; Registers used:
  2580 ;;		wreg, status,2, status,0, cstack
  2581 ;; Tracked objects:
  2582 ;;		On entry : 0/0
  2583 ;;		On exit  : 0/0
  2584 ;;		Unchanged: 0/0
  2585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2586 ;;      Params:         0       0       0       0       0       0       0       0       0
  2587 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2588 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2589 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2590 ;;Total ram usage:        2 bytes
  2591 ;; Hardware stack levels used: 1
  2592 ;; Hardware stack levels required when called: 5
  2593 ;; This function calls:
  2594 ;;		_HabilitaLCD
  2595 ;;		_RetardoLCD
  2596 ;; This function is called by:
  2597 ;;		_InicializaLCD
  2598 ;;		_BorraLCD
  2599 ;;		_EscribeLCD_c
  2600 ;;		_DireccionaLCD
  2601 ;; This function uses a non-reentrant model
  2602 ;;
  2603                           
  2604                           	psect	text19
  2605   001054                     __ptext19:
  2606                           	callstack 0
  2607   001054                     _EnviaDato:
  2608                           	callstack 22
  2609                           
  2610                           ;incstack = 0
  2611                           ;EnviaDato@a stored from wreg
  2612   001054  6E0B               	movwf	EnviaDato@a^0,c
  2613                           
  2614                           ;LibLCDXC8.h: 63: if(interfaz==4){
  2615   001056  0E04               	movlw	4
  2616   001058  1822               	xorwf	_interfaz^0,w,c
  2617   00105A  A4D8               	btfss	status,2,c
  2618   00105C  D017               	goto	l1748
  2619                           
  2620                           ;LibLCDXC8.h: 64: LATD=(LATD & 0b00001111) | (a & 0b11110000);
  2621   00105E  C00B  F00A         	movff	EnviaDato@a,??_EnviaDato
  2622   001062  0EF0               	movlw	240
  2623   001064  160A               	andwf	??_EnviaDato^0,f,c
  2624   001066  508C               	movf	140,w,c	;volatile
  2625   001068  0B0F               	andlw	15
  2626   00106A  100A               	iorwf	??_EnviaDato^0,w,c
  2627   00106C  6E8C               	movwf	140,c	;volatile
  2628                           
  2629                           ;LibLCDXC8.h: 65: HabilitaLCD();
  2630   00106E  EC99  F009         	call	_HabilitaLCD	;wreg free
  2631                           
  2632                           ;LibLCDXC8.h: 66: RetardoLCD(1);
  2633   001072  0E01               	movlw	1
  2634   001074  EC74  F007         	call	_RetardoLCD
  2635                           
  2636                           ;LibLCDXC8.h: 67: LATD=(LATD & 0b00001111) | (a<<4);
  2637   001078  C00B  F00A         	movff	EnviaDato@a,??_EnviaDato
  2638   00107C  3A0A               	swapf	??_EnviaDato^0,f,c
  2639   00107E  0EF0               	movlw	240
  2640   001080  160A               	andwf	??_EnviaDato^0,f,c
  2641   001082  508C               	movf	140,w,c	;volatile
  2642   001084  0B0F               	andlw	15
  2643   001086  100A               	iorwf	??_EnviaDato^0,w,c
  2644   001088  6E8C               	movwf	140,c	;volatile
  2645                           
  2646                           ;LibLCDXC8.h: 70: }else if(interfaz==8){
  2647   00108A  0012               	return	
  2648   00108C                     l1748:
  2649   00108C  0E08               	movlw	8
  2650   00108E  1822               	xorwf	_interfaz^0,w,c
  2651   001090  A4D8               	btfss	status,2,c
  2652   001092  0012               	return	
  2653                           
  2654                           ;LibLCDXC8.h: 71: LATD=a;
  2655   001094  C00B  FF8C         	movff	EnviaDato@a,3980	;volatile
  2656   001098  0012               	return		;funcret
  2657   00109A                     __end_of_EnviaDato:
  2658                           	callstack 0
  2659                           
  2660 ;; *************** function _RetardoLCD *****************
  2661 ;; Defined at:
  2662 ;;		line 295 in file "LibLCDXC8.h"
  2663 ;; Parameters:    Size  Location     Type
  2664 ;;  a               1    wreg     unsigned char 
  2665 ;; Auto vars:     Size  Location     Type
  2666 ;;  a               1    8[COMRAM] unsigned char 
  2667 ;; Return value:  Size  Location     Type
  2668 ;;                  1    wreg      void 
  2669 ;; Registers used:
  2670 ;;		wreg, status,2, status,0
  2671 ;; Tracked objects:
  2672 ;;		On entry : 0/0
  2673 ;;		On exit  : 0/0
  2674 ;;		Unchanged: 0/0
  2675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2676 ;;      Params:         0       0       0       0       0       0       0       0       0
  2677 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2678 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2679 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2680 ;;Total ram usage:        2 bytes
  2681 ;; Hardware stack levels used: 1
  2682 ;; Hardware stack levels required when called: 4
  2683 ;; This function calls:
  2684 ;;		Nothing
  2685 ;; This function is called by:
  2686 ;;		_EnviaDato
  2687 ;;		_InicializaLCD
  2688 ;;		_BorraLCD
  2689 ;;		_EscribeLCD_c
  2690 ;;		_DireccionaLCD
  2691 ;; This function uses a non-reentrant model
  2692 ;;
  2693                           
  2694                           	psect	text20
  2695   000EE8                     __ptext20:
  2696                           	callstack 0
  2697   000EE8                     _RetardoLCD:
  2698                           	callstack 23
  2699                           
  2700                           ;incstack = 0
  2701                           ;RetardoLCD@a stored from wreg
  2702   000EE8  6E09               	movwf	RetardoLCD@a^0,c
  2703                           
  2704                           ;LibLCDXC8.h: 296: switch(a){
  2705   000EEA  D023               	goto	l1736
  2706   000EEC                     l1726:
  2707   000EEC  0E27               	movlw	39
  2708   000EEE  6E08               	movwf	??_RetardoLCD^0,c
  2709   000EF0  0EF5               	movlw	245
  2710   000EF2                     u1337:
  2711   000EF2  2EE8               	decfsz	wreg,f,c
  2712   000EF4  D7FE               	bra	u1337
  2713   000EF6  2E08               	decfsz	??_RetardoLCD^0,f,c
  2714   000EF8  D7FC               	bra	u1337
  2715   000EFA  F000               	nop	
  2716                           
  2717                           ;LibLCDXC8.h: 299: break;
  2718   000EFC  0012               	return	
  2719   000EFE                     l1728:
  2720   000EFE  0E03               	movlw	3
  2721   000F00  6E08               	movwf	??_RetardoLCD^0,c
  2722   000F02  0E98               	movlw	152
  2723   000F04                     u1347:
  2724   000F04  2EE8               	decfsz	wreg,f,c
  2725   000F06  D7FE               	bra	u1347
  2726   000F08  2E08               	decfsz	??_RetardoLCD^0,f,c
  2727   000F0A  D7FC               	bra	u1347
  2728                           
  2729                           ;LibLCDXC8.h: 301: _delay((unsigned long)((640)*(8000000/4000000.0)));
  2730   000F0C  0EB6               	movlw	182
  2731   000F0E                     u1357:
  2732   000F0E  D000               	nop2	
  2733   000F10  D000               	nop2	
  2734   000F12  2EE8               	decfsz	wreg,f,c
  2735   000F14  D7FC               	bra	u1357
  2736   000F16  D000               	nop2	
  2737   000F18  D000               	nop2	
  2738   000F1A  D000               	nop2	
  2739                           
  2740                           ;LibLCDXC8.h: 303: break;
  2741   000F1C  0012               	return	
  2742   000F1E                     l1730:
  2743   000F1E  0E42               	movlw	66
  2744   000F20                     u1367:
  2745   000F20  2EE8               	decfsz	wreg,f,c
  2746   000F22  D7FE               	bra	u1367
  2747   000F24  D000               	nop2	
  2748                           
  2749                           ;LibLCDXC8.h: 306: break;
  2750   000F26  0012               	return	
  2751   000F28                     l1732:
  2752   000F28  0E1A               	movlw	26
  2753   000F2A                     u1377:
  2754   000F2A  2EE8               	decfsz	wreg,f,c
  2755   000F2C  D7FE               	bra	u1377
  2756   000F2E  D000               	nop2	
  2757                           
  2758                           ;LibLCDXC8.h: 309: break;
  2759   000F30  0012               	return	
  2760   000F32                     l1736:
  2761   000F32  5009               	movf	RetardoLCD@a^0,w,c
  2762                           
  2763                           ; Switch size 1, requested type "simple"
  2764                           ; Number of cases is 4, Range of values is 1 to 4
  2765                           ; switch strategies available:
  2766                           ; Name         Instructions Cycles
  2767                           ; simple_byte           13     7 (average)
  2768                           ;	Chosen strategy is simple_byte
  2769   000F34  0A01               	xorlw	1	; case 1
  2770   000F36  B4D8               	btfsc	status,2,c
  2771   000F38  D7D9               	goto	l1726
  2772   000F3A  0A03               	xorlw	3	; case 2
  2773   000F3C  B4D8               	btfsc	status,2,c
  2774   000F3E  D7DF               	goto	l1728
  2775   000F40  0A01               	xorlw	1	; case 3
  2776   000F42  B4D8               	btfsc	status,2,c
  2777   000F44  D7EC               	goto	l1730
  2778   000F46  0A07               	xorlw	7	; case 4
  2779   000F48  A4D8               	btfss	status,2,c
  2780   000F4A  0012               	return	
  2781   000F4C  D7ED               	goto	l1732
  2782   000F4E                     __end_of_RetardoLCD:
  2783                           	callstack 0
  2784                           
  2785 ;; *************** function _HabilitaLCD *****************
  2786 ;; Defined at:
  2787 ;;		line 108 in file "LibLCDXC8.h"
  2788 ;; Parameters:    Size  Location     Type
  2789 ;;		None
  2790 ;; Auto vars:     Size  Location     Type
  2791 ;;		None
  2792 ;; Return value:  Size  Location     Type
  2793 ;;                  1    wreg      void 
  2794 ;; Registers used:
  2795 ;;		wreg
  2796 ;; Tracked objects:
  2797 ;;		On entry : 0/0
  2798 ;;		On exit  : 0/0
  2799 ;;		Unchanged: 0/0
  2800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2801 ;;      Params:         0       0       0       0       0       0       0       0       0
  2802 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2803 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2804 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2805 ;;Total ram usage:        0 bytes
  2806 ;; Hardware stack levels used: 1
  2807 ;; Hardware stack levels required when called: 4
  2808 ;; This function calls:
  2809 ;;		Nothing
  2810 ;; This function is called by:
  2811 ;;		_EnviaDato
  2812 ;;		_InicializaLCD
  2813 ;;		_BorraLCD
  2814 ;;		_EscribeLCD_c
  2815 ;;		_DireccionaLCD
  2816 ;; This function uses a non-reentrant model
  2817 ;;
  2818                           
  2819                           	psect	text21
  2820   001332                     __ptext21:
  2821                           	callstack 0
  2822   001332                     _HabilitaLCD:
  2823                           	callstack 23
  2824                           
  2825                           ;LibLCDXC8.h: 110: LATE2=1;
  2826                           
  2827                           ;incstack = 0
  2828   001332  848D               	bsf	3981,2,c	;volatile
  2829                           
  2830                           ;LibLCDXC8.h: 111: _delay((unsigned long)((40)*(8000000/4000000.0)));
  2831   001334  0E1A               	movlw	26
  2832   001336                     u1387:
  2833   001336  2EE8               	decfsz	wreg,f,c
  2834   001338  D7FE               	bra	u1387
  2835   00133A  D000               	nop2	
  2836                           
  2837                           ;LibLCDXC8.h: 113: LATE2=0;
  2838   00133C  948D               	bcf	3981,2,c	;volatile
  2839   00133E  0012               	return		;funcret
  2840   001340                     __end_of_HabilitaLCD:
  2841                           	callstack 0
  2842                           
  2843 ;; *************** function _ISR *****************
  2844 ;; Defined at:
  2845 ;;		line 294 in file "Proyecto.c"
  2846 ;; Parameters:    Size  Location     Type
  2847 ;;		None
  2848 ;; Auto vars:     Size  Location     Type
  2849 ;;		None
  2850 ;; Return value:  Size  Location     Type
  2851 ;;                  1    wreg      void 
  2852 ;; Registers used:
  2853 ;;		wreg, status,2, status,0, cstack
  2854 ;; Tracked objects:
  2855 ;;		On entry : 0/0
  2856 ;;		On exit  : 0/0
  2857 ;;		Unchanged: 0/0
  2858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2859 ;;      Params:         0       0       0       0       0       0       0       0       0
  2860 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2861 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2862 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2863 ;;Total ram usage:        2 bytes
  2864 ;; Hardware stack levels used: 1
  2865 ;; Hardware stack levels required when called: 3
  2866 ;; This function calls:
  2867 ;;		_LeerTeclado
  2868 ;;		i2_EscribeLCD_c
  2869 ;; This function is called by:
  2870 ;;		Interrupt level 2
  2871 ;; This function uses a non-reentrant model
  2872 ;;
  2873                           
  2874                           	psect	intcode
  2875   000008                     __pintcode:
  2876                           	callstack 0
  2877   000008                     _ISR:
  2878                           	callstack 22
  2879                           
  2880                           ;incstack = 0
  2881   000008  8233               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  2882   00000A  EDFE  F005         	call	int_func,f	;refresh shadow registers
  2883                           
  2884                           	psect	intcode_body
  2885   000BFC                     __pintcode_body:
  2886                           	callstack 22
  2887   000BFC                     int_func:
  2888                           	callstack 22
  2889   000BFC  0006               	pop		; remove dummy address from shadow register refresh
  2890                           
  2891                           ;Proyecto.c: 295: if(TMR0IF == 1){
  2892   000BFE  A4F2               	btfss	4082,2,c	;volatile
  2893   000C00  D019               	goto	i2l276
  2894                           
  2895                           ;Proyecto.c: 296: TMR0IF = 0;
  2896   000C02  94F2               	bcf	4082,2,c	;volatile
  2897                           
  2898                           ;Proyecto.c: 297: TMR0 = 64911;
  2899   000C04  0EFD               	movlw	253
  2900   000C06  6ED7               	movwf	215,c	;volatile
  2901   000C08  0E8F               	movlw	143
  2902   000C0A  6ED6               	movwf	214,c	;volatile
  2903                           
  2904                           ;Proyecto.c: 298: contador += 1;
  2905   000C0C  4A2D               	infsnz	_contador^0,f,c
  2906   000C0E  2A2E               	incf	(_contador+1)^0,f,c
  2907                           
  2908                           ;Proyecto.c: 299: if(contador == 20000){
  2909   000C10  0E20               	movlw	32
  2910   000C12  182D               	xorwf	_contador^0,w,c
  2911   000C14  E106               	bnz	i2l277
  2912   000C16  0E4E               	movlw	78
  2913   000C18  182E               	xorwf	(_contador+1)^0,w,c
  2914   000C1A  A4D8               	btfss	status,2,c
  2915   000C1C  D002               	goto	i2l277
  2916   000C1E  0003               	sleep		;# 
  2917   000C20                     i2l278:
  2918   000C20  D7FF               	goto	i2l278
  2919   000C22                     i2l277:
  2920                           
  2921                           ;Proyecto.c: 302: };Proyecto.c: 303: if(RE1 == 1){
  2922   000C22  A284               	btfss	3972,1,c	;volatile
  2923   000C24  D007               	goto	i2l276
  2924                           
  2925                           ;Proyecto.c: 304: RC5 = !RC5;
  2926   000C26  BA82               	btfsc	3970,5,c	;volatile
  2927   000C28  D002               	goto	i2u101_40
  2928   000C2A  8A82               	bsf	3970,5,c	;volatile
  2929   000C2C  D001               	goto	i2u102_45
  2930   000C2E                     i2u101_40:
  2931   000C2E  9A82               	bcf	3970,5,c	;volatile
  2932   000C30                     i2u102_45:
  2933   000C30  0003               	sleep		;# 
  2934   000C32                     i2l282:
  2935   000C32  D7FF               	goto	i2l282
  2936   000C34                     i2l276:
  2937                           
  2938                           ;Proyecto.c: 307: };Proyecto.c: 308: };Proyecto.c: 309: if(RBIF==1){
  2939   000C34  A0F2               	btfss	4082,0,c	;volatile
  2940   000C36  D063               	goto	i2l318
  2941                           
  2942                           ;Proyecto.c: 310: if(PORTB!=0b11110000){
  2943   000C38  0EF0               	movlw	240
  2944   000C3A  1881               	xorwf	129,w,c	;volatile
  2945   000C3C  B4D8               	btfsc	status,2,c
  2946   000C3E  D053               	goto	i2l2324
  2947                           
  2948                           ;Proyecto.c: 311: Tecla=0;
  2949   000C40  0E00               	movlw	0
  2950   000C42  6E30               	movwf	_Tecla^0,c
  2951                           
  2952                           ;Proyecto.c: 312: LATB=0b11111110;
  2953   000C44  0EFE               	movlw	254
  2954   000C46  6E8A               	movwf	138,c	;volatile
  2955                           
  2956                           ;Proyecto.c: 313: if(RB4==0) Tecla=16;
  2957   000C48  B881               	btfsc	3969,4,c	;volatile
  2958   000C4A  D002               	goto	i2l287
  2959   000C4C  0E10               	movlw	16
  2960   000C4E  D041               	goto	L21
  2961   000C50                     i2l287:
  2962                           
  2963                           ;Proyecto.c: 314: else if(RB5==0) Tecla=12;
  2964   000C50  BA81               	btfsc	3969,5,c	;volatile
  2965   000C52  D002               	goto	i2l289
  2966   000C54  0E0C               	movlw	12
  2967   000C56  D03D               	goto	L21
  2968   000C58                     i2l289:
  2969                           
  2970                           ;Proyecto.c: 315: else if(RB6==0) Tecla=8;
  2971   000C58  BC81               	btfsc	3969,6,c	;volatile
  2972   000C5A  D002               	goto	i2l291
  2973   000C5C  0E08               	movlw	8
  2974   000C5E  D039               	goto	L21
  2975   000C60                     i2l291:
  2976                           
  2977                           ;Proyecto.c: 316: else if(RB7==0) Tecla=4;
  2978   000C60  BE81               	btfsc	3969,7,c	;volatile
  2979   000C62  D002               	goto	i2l2282
  2980   000C64  0E04               	movlw	4
  2981   000C66  D035               	goto	L21
  2982   000C68                     i2l2282:
  2983                           
  2984                           ;Proyecto.c: 317: else{;Proyecto.c: 318: LATB=0b11111101;
  2985   000C68  0EFD               	movlw	253
  2986   000C6A  6E8A               	movwf	138,c	;volatile
  2987                           
  2988                           ;Proyecto.c: 319: if(RB4==0) Tecla=15;
  2989   000C6C  B881               	btfsc	3969,4,c	;volatile
  2990   000C6E  D002               	goto	i2l295
  2991   000C70  0E0F               	movlw	15
  2992   000C72  D02F               	goto	L21
  2993   000C74                     i2l295:
  2994                           
  2995                           ;Proyecto.c: 320: else if(RB5==0) Tecla=11;
  2996   000C74  BA81               	btfsc	3969,5,c	;volatile
  2997   000C76  D002               	goto	i2l297
  2998   000C78  0E0B               	movlw	11
  2999   000C7A  D02B               	goto	L21
  3000   000C7C                     i2l297:
  3001                           
  3002                           ;Proyecto.c: 321: else if(RB6==0) Tecla=7;
  3003   000C7C  BC81               	btfsc	3969,6,c	;volatile
  3004   000C7E  D002               	goto	i2l299
  3005   000C80  0E07               	movlw	7
  3006   000C82  D027               	goto	L21
  3007   000C84                     i2l299:
  3008                           
  3009                           ;Proyecto.c: 322: else if(RB7==0) Tecla=3;
  3010   000C84  BE81               	btfsc	3969,7,c	;volatile
  3011   000C86  D002               	goto	i2l2294
  3012   000C88  0E03               	movlw	3
  3013   000C8A  D023               	goto	L21
  3014   000C8C                     i2l2294:
  3015                           
  3016                           ;Proyecto.c: 323: else{;Proyecto.c: 324: LATB=0b11111011;
  3017   000C8C  0EFB               	movlw	251
  3018   000C8E  6E8A               	movwf	138,c	;volatile
  3019                           
  3020                           ;Proyecto.c: 325: if(RB4==0) Tecla=14;
  3021   000C90  B881               	btfsc	3969,4,c	;volatile
  3022   000C92  D002               	goto	i2l303
  3023   000C94  0E0E               	movlw	14
  3024   000C96  D01D               	goto	L21
  3025   000C98                     i2l303:
  3026                           
  3027                           ;Proyecto.c: 326: else if(RB5==0) Tecla=10;
  3028   000C98  BA81               	btfsc	3969,5,c	;volatile
  3029   000C9A  D002               	goto	i2l305
  3030   000C9C  0E0A               	movlw	10
  3031   000C9E  D019               	goto	L21
  3032   000CA0                     i2l305:
  3033                           
  3034                           ;Proyecto.c: 327: else if(RB6==0) Tecla=6;
  3035   000CA0  BC81               	btfsc	3969,6,c	;volatile
  3036   000CA2  D002               	goto	i2l307
  3037   000CA4  0E06               	movlw	6
  3038   000CA6  D015               	goto	L21
  3039   000CA8                     i2l307:
  3040                           
  3041                           ;Proyecto.c: 328: else if(RB7==0) Tecla=2;
  3042   000CA8  BE81               	btfsc	3969,7,c	;volatile
  3043   000CAA  D002               	goto	i2l2306
  3044   000CAC  0E02               	movlw	2
  3045   000CAE  D011               	goto	L21
  3046   000CB0                     i2l2306:
  3047                           
  3048                           ;Proyecto.c: 329: else{;Proyecto.c: 330: LATB=0b11110111;
  3049   000CB0  0EF7               	movlw	247
  3050   000CB2  6E8A               	movwf	138,c	;volatile
  3051                           
  3052                           ;Proyecto.c: 331: if(RB4==0) Tecla=13;
  3053   000CB4  B881               	btfsc	3969,4,c	;volatile
  3054   000CB6  D002               	goto	i2l311
  3055   000CB8  0E0D               	movlw	13
  3056   000CBA  D00B               	goto	L21
  3057   000CBC                     i2l311:
  3058                           
  3059                           ;Proyecto.c: 332: else if(RB5==0) Tecla=9;
  3060   000CBC  BA81               	btfsc	3969,5,c	;volatile
  3061   000CBE  D002               	goto	i2l313
  3062   000CC0  0E09               	movlw	9
  3063   000CC2  D007               	goto	L21
  3064   000CC4                     i2l313:
  3065                           
  3066                           ;Proyecto.c: 333: else if(RB6==0) Tecla=5;
  3067   000CC4  BC81               	btfsc	3969,6,c	;volatile
  3068   000CC6  D002               	goto	i2l315
  3069   000CC8  0E05               	movlw	5
  3070   000CCA  D003               	goto	L21
  3071   000CCC                     i2l315:
  3072                           
  3073                           ;Proyecto.c: 334: else if(RB7==0) Tecla=1;
  3074   000CCC  BE81               	btfsc	3969,7,c	;volatile
  3075   000CCE  D002               	goto	i2l312
  3076   000CD0  0E01               	movlw	1
  3077   000CD2                     L21:
  3078   000CD2  6E30               	movwf	_Tecla^0,c
  3079   000CD4                     i2l312:
  3080                           
  3081                           ;Proyecto.c: 335: };Proyecto.c: 336: };Proyecto.c: 337: };Proyecto.c: 338: LATB=0b111100
      +                          00;
  3082   000CD4  0EF0               	movlw	240
  3083   000CD6  6E8A               	movwf	138,c	;volatile
  3084                           
  3085                           ;Proyecto.c: 339: ing = Tecla;
  3086   000CD8  C030  F02F         	movff	_Tecla,_ing
  3087                           
  3088                           ;Proyecto.c: 340: LeerTeclado();
  3089   000CDC  EC81  F006         	call	_LeerTeclado	;wreg free
  3090                           
  3091                           ;Proyecto.c: 341: EscribeLCD_c(Tecla);
  3092   000CE0  5030               	movf	_Tecla^0,w,c
  3093   000CE2  EC84  F009         	call	i2_EscribeLCD_c
  3094   000CE6                     i2l2324:
  3095                           
  3096                           ;Proyecto.c: 342: };Proyecto.c: 343: RBIF=0;
  3097   000CE6  90F2               	bcf	4082,0,c	;volatile
  3098                           
  3099                           ;Proyecto.c: 344: _delay((unsigned long)((300)*(8000000/4000.0)));
  3100   000CE8  0E04               	movlw	4
  3101   000CEA  6E07               	movwf	(??_ISR+1)^0,c
  3102   000CEC  0E0C               	movlw	12
  3103   000CEE  6E06               	movwf	??_ISR^0,c
  3104   000CF0  0E34               	movlw	52
  3105   000CF2                     i2u139_47:
  3106   000CF2  2EE8               	decfsz	wreg,f,c
  3107   000CF4  D7FE               	bra	i2u139_47
  3108   000CF6  2E06               	decfsz	??_ISR^0,f,c
  3109   000CF8  D7FC               	bra	i2u139_47
  3110   000CFA  2E07               	decfsz	(??_ISR+1)^0,f,c
  3111   000CFC  D7FA               	bra	i2u139_47
  3112   000CFE                     i2l318:
  3113   000CFE  9233               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  3114   000D00  0011               	retfie		f
  3115   000D02                     __end_of_ISR:
  3116                           	callstack 0
  3117                           
  3118 ;; *************** function i2_EscribeLCD_c *****************
  3119 ;; Defined at:
  3120 ;;		line 148 in file "LibLCDXC8.h"
  3121 ;; Parameters:    Size  Location     Type
  3122 ;;  a               1    wreg     unsigned char 
  3123 ;; Auto vars:     Size  Location     Type
  3124 ;;  a               1    4[COMRAM] unsigned char 
  3125 ;; Return value:  Size  Location     Type
  3126 ;;                  1    wreg      void 
  3127 ;; Registers used:
  3128 ;;		wreg, status,2, status,0, cstack
  3129 ;; Tracked objects:
  3130 ;;		On entry : 0/0
  3131 ;;		On exit  : 0/0
  3132 ;;		Unchanged: 0/0
  3133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3134 ;;      Params:         0       0       0       0       0       0       0       0       0
  3135 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3136 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3137 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3138 ;;Total ram usage:        1 bytes
  3139 ;; Hardware stack levels used: 1
  3140 ;; Hardware stack levels required when called: 2
  3141 ;; This function calls:
  3142 ;;		i2_EnviaDato
  3143 ;;		i2_HabilitaLCD
  3144 ;;		i2_RetardoLCD
  3145 ;; This function is called by:
  3146 ;;		_ISR
  3147 ;; This function uses a non-reentrant model
  3148 ;;
  3149                           
  3150                           	psect	text23
  3151   001308                     __ptext23:
  3152                           	callstack 0
  3153   001308                     i2_EscribeLCD_c:
  3154                           	callstack 22
  3155                           
  3156                           ;incstack = 0
  3157                           ;i2EscribeLCD_c@a stored from wreg
  3158   001308  6E05               	movwf	i2EscribeLCD_c@a^0,c
  3159                           
  3160                           ;LibLCDXC8.h: 152: LATE0=1;
  3161   00130A  808D               	bsf	3981,0,c	;volatile
  3162                           
  3163                           ;LibLCDXC8.h: 153: EnviaDato(a);
  3164   00130C  5005               	movf	i2EscribeLCD_c@a^0,w,c
  3165   00130E  EC4D  F008         	call	i2_EnviaDato
  3166                           
  3167                           ;LibLCDXC8.h: 154: HabilitaLCD();
  3168   001312  ECA0  F009         	call	i2_HabilitaLCD	;wreg free
  3169                           
  3170                           ;LibLCDXC8.h: 155: RetardoLCD(4);
  3171   001316  0E04               	movlw	4
  3172   001318  ECA7  F007         	call	i2_RetardoLCD
  3173   00131C  0012               	return		;funcret
  3174   00131E                     __end_ofi2_EscribeLCD_c:
  3175                           	callstack 0
  3176                           
  3177 ;; *************** function i2_EnviaDato *****************
  3178 ;; Defined at:
  3179 ;;		line 62 in file "LibLCDXC8.h"
  3180 ;; Parameters:    Size  Location     Type
  3181 ;;  a               1    wreg     unsigned char 
  3182 ;; Auto vars:     Size  Location     Type
  3183 ;;  a               1    3[COMRAM] unsigned char 
  3184 ;; Return value:  Size  Location     Type
  3185 ;;                  1    wreg      void 
  3186 ;; Registers used:
  3187 ;;		wreg, status,2, status,0, cstack
  3188 ;; Tracked objects:
  3189 ;;		On entry : 0/0
  3190 ;;		On exit  : 0/0
  3191 ;;		Unchanged: 0/0
  3192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3193 ;;      Params:         0       0       0       0       0       0       0       0       0
  3194 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3195 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3196 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3197 ;;Total ram usage:        2 bytes
  3198 ;; Hardware stack levels used: 1
  3199 ;; Hardware stack levels required when called: 1
  3200 ;; This function calls:
  3201 ;;		i2_HabilitaLCD
  3202 ;;		i2_RetardoLCD
  3203 ;; This function is called by:
  3204 ;;		i2_EscribeLCD_c
  3205 ;; This function uses a non-reentrant model
  3206 ;;
  3207                           
  3208                           	psect	text24
  3209   00109A                     __ptext24:
  3210                           	callstack 0
  3211   00109A                     i2_EnviaDato:
  3212                           	callstack 22
  3213                           
  3214                           ;incstack = 0
  3215                           ;i2EnviaDato@a stored from wreg
  3216   00109A  6E04               	movwf	i2EnviaDato@a^0,c
  3217                           
  3218                           ;LibLCDXC8.h: 63: if(interfaz==4){
  3219   00109C  0E04               	movlw	4
  3220   00109E  1822               	xorwf	_interfaz^0,w,c
  3221   0010A0  A4D8               	btfss	status,2,c
  3222   0010A2  D017               	goto	i2l2002
  3223                           
  3224                           ;LibLCDXC8.h: 64: LATD=(LATD & 0b00001111) | (a & 0b11110000);
  3225   0010A4  C004  F003         	movff	i2EnviaDato@a,??i2_EnviaDato
  3226   0010A8  0EF0               	movlw	240
  3227   0010AA  1603               	andwf	??i2_EnviaDato^0,f,c
  3228   0010AC  508C               	movf	140,w,c	;volatile
  3229   0010AE  0B0F               	andlw	15
  3230   0010B0  1003               	iorwf	??i2_EnviaDato^0,w,c
  3231   0010B2  6E8C               	movwf	140,c	;volatile
  3232                           
  3233                           ;LibLCDXC8.h: 65: HabilitaLCD();
  3234   0010B4  ECA0  F009         	call	i2_HabilitaLCD	;wreg free
  3235                           
  3236                           ;LibLCDXC8.h: 66: RetardoLCD(1);
  3237   0010B8  0E01               	movlw	1
  3238   0010BA  ECA7  F007         	call	i2_RetardoLCD
  3239                           
  3240                           ;LibLCDXC8.h: 67: LATD=(LATD & 0b00001111) | (a<<4);
  3241   0010BE  C004  F003         	movff	i2EnviaDato@a,??i2_EnviaDato
  3242   0010C2  3A03               	swapf	??i2_EnviaDato^0,f,c
  3243   0010C4  0EF0               	movlw	240
  3244   0010C6  1603               	andwf	??i2_EnviaDato^0,f,c
  3245   0010C8  508C               	movf	140,w,c	;volatile
  3246   0010CA  0B0F               	andlw	15
  3247   0010CC  1003               	iorwf	??i2_EnviaDato^0,w,c
  3248   0010CE  6E8C               	movwf	140,c	;volatile
  3249                           
  3250                           ;LibLCDXC8.h: 70: }else if(interfaz==8){
  3251   0010D0  0012               	return	
  3252   0010D2                     i2l2002:
  3253   0010D2  0E08               	movlw	8
  3254   0010D4  1822               	xorwf	_interfaz^0,w,c
  3255   0010D6  A4D8               	btfss	status,2,c
  3256   0010D8  0012               	return	
  3257                           
  3258                           ;LibLCDXC8.h: 71: LATD=a;
  3259   0010DA  C004  FF8C         	movff	i2EnviaDato@a,3980	;volatile
  3260   0010DE  0012               	return		;funcret
  3261   0010E0                     __end_ofi2_EnviaDato:
  3262                           	callstack 0
  3263                           
  3264 ;; *************** function i2_RetardoLCD *****************
  3265 ;; Defined at:
  3266 ;;		line 295 in file "LibLCDXC8.h"
  3267 ;; Parameters:    Size  Location     Type
  3268 ;;  a               1    wreg     unsigned char 
  3269 ;; Auto vars:     Size  Location     Type
  3270 ;;  a               1    1[COMRAM] unsigned char 
  3271 ;; Return value:  Size  Location     Type
  3272 ;;                  1    wreg      void 
  3273 ;; Registers used:
  3274 ;;		wreg, status,2, status,0
  3275 ;; Tracked objects:
  3276 ;;		On entry : 0/0
  3277 ;;		On exit  : 0/0
  3278 ;;		Unchanged: 0/0
  3279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3280 ;;      Params:         0       0       0       0       0       0       0       0       0
  3281 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3282 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3283 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3284 ;;Total ram usage:        2 bytes
  3285 ;; Hardware stack levels used: 1
  3286 ;; This function calls:
  3287 ;;		Nothing
  3288 ;; This function is called by:
  3289 ;;		i2_EnviaDato
  3290 ;;		i2_EscribeLCD_c
  3291 ;; This function uses a non-reentrant model
  3292 ;;
  3293                           
  3294                           	psect	text25
  3295   000F4E                     __ptext25:
  3296                           	callstack 0
  3297   000F4E                     i2_RetardoLCD:
  3298                           	callstack 23
  3299                           
  3300                           ;incstack = 0
  3301                           ;i2RetardoLCD@a stored from wreg
  3302   000F4E  6E02               	movwf	i2RetardoLCD@a^0,c
  3303                           
  3304                           ;LibLCDXC8.h: 296: switch(a){
  3305   000F50  D023               	goto	i2l1796
  3306   000F52                     i2l1786:
  3307   000F52  0E27               	movlw	39
  3308   000F54  6E01               	movwf	??i2_RetardoLCD^0,c
  3309   000F56  0EF5               	movlw	245
  3310   000F58                     i2u140_47:
  3311   000F58  2EE8               	decfsz	wreg,f,c
  3312   000F5A  D7FE               	bra	i2u140_47
  3313   000F5C  2E01               	decfsz	??i2_RetardoLCD^0,f,c
  3314   000F5E  D7FC               	bra	i2u140_47
  3315   000F60  F000               	nop	
  3316                           
  3317                           ;LibLCDXC8.h: 299: break;
  3318   000F62  0012               	return	
  3319   000F64                     i2l1788:
  3320   000F64  0E03               	movlw	3
  3321   000F66  6E01               	movwf	??i2_RetardoLCD^0,c
  3322   000F68  0E98               	movlw	152
  3323   000F6A                     i2u141_47:
  3324   000F6A  2EE8               	decfsz	wreg,f,c
  3325   000F6C  D7FE               	bra	i2u141_47
  3326   000F6E  2E01               	decfsz	??i2_RetardoLCD^0,f,c
  3327   000F70  D7FC               	bra	i2u141_47
  3328                           
  3329                           ;LibLCDXC8.h: 301: _delay((unsigned long)((640)*(8000000/4000000.0)));
  3330   000F72  0EB6               	movlw	182
  3331   000F74                     i2u142_47:
  3332   000F74  D000               	nop2	
  3333   000F76  D000               	nop2	
  3334   000F78  2EE8               	decfsz	wreg,f,c
  3335   000F7A  D7FC               	bra	i2u142_47
  3336   000F7C  D000               	nop2	
  3337   000F7E  D000               	nop2	
  3338   000F80  D000               	nop2	
  3339                           
  3340                           ;LibLCDXC8.h: 303: break;
  3341   000F82  0012               	return	
  3342   000F84                     i2l1790:
  3343   000F84  0E42               	movlw	66
  3344   000F86                     i2u143_47:
  3345   000F86  2EE8               	decfsz	wreg,f,c
  3346   000F88  D7FE               	bra	i2u143_47
  3347   000F8A  D000               	nop2	
  3348                           
  3349                           ;LibLCDXC8.h: 306: break;
  3350   000F8C  0012               	return	
  3351   000F8E                     i2l1792:
  3352   000F8E  0E1A               	movlw	26
  3353   000F90                     i2u144_47:
  3354   000F90  2EE8               	decfsz	wreg,f,c
  3355   000F92  D7FE               	bra	i2u144_47
  3356   000F94  D000               	nop2	
  3357                           
  3358                           ;LibLCDXC8.h: 309: break;
  3359   000F96  0012               	return	
  3360   000F98                     i2l1796:
  3361   000F98  5002               	movf	i2RetardoLCD@a^0,w,c
  3362                           
  3363                           ; Switch size 1, requested type "simple"
  3364                           ; Number of cases is 4, Range of values is 1 to 4
  3365                           ; switch strategies available:
  3366                           ; Name         Instructions Cycles
  3367                           ; simple_byte           13     7 (average)
  3368                           ;	Chosen strategy is simple_byte
  3369   000F9A  0A01               	xorlw	1	; case 1
  3370   000F9C  B4D8               	btfsc	status,2,c
  3371   000F9E  D7D9               	goto	i2l1786
  3372   000FA0  0A03               	xorlw	3	; case 2
  3373   000FA2  B4D8               	btfsc	status,2,c
  3374   000FA4  D7DF               	goto	i2l1788
  3375   000FA6  0A01               	xorlw	1	; case 3
  3376   000FA8  B4D8               	btfsc	status,2,c
  3377   000FAA  D7EC               	goto	i2l1790
  3378   000FAC  0A07               	xorlw	7	; case 4
  3379   000FAE  A4D8               	btfss	status,2,c
  3380   000FB0  0012               	return	
  3381   000FB2  D7ED               	goto	i2l1792
  3382   000FB4                     __end_ofi2_RetardoLCD:
  3383                           	callstack 0
  3384                           
  3385 ;; *************** function i2_HabilitaLCD *****************
  3386 ;; Defined at:
  3387 ;;		line 108 in file "LibLCDXC8.h"
  3388 ;; Parameters:    Size  Location     Type
  3389 ;;		None
  3390 ;; Auto vars:     Size  Location     Type
  3391 ;;		None
  3392 ;; Return value:  Size  Location     Type
  3393 ;;                  1    wreg      void 
  3394 ;; Registers used:
  3395 ;;		wreg
  3396 ;; Tracked objects:
  3397 ;;		On entry : 0/0
  3398 ;;		On exit  : 0/0
  3399 ;;		Unchanged: 0/0
  3400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3401 ;;      Params:         0       0       0       0       0       0       0       0       0
  3402 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3403 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3404 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3405 ;;Total ram usage:        0 bytes
  3406 ;; Hardware stack levels used: 1
  3407 ;; This function calls:
  3408 ;;		Nothing
  3409 ;; This function is called by:
  3410 ;;		i2_EnviaDato
  3411 ;;		i2_EscribeLCD_c
  3412 ;; This function uses a non-reentrant model
  3413 ;;
  3414                           
  3415                           	psect	text26
  3416   001340                     __ptext26:
  3417                           	callstack 0
  3418   001340                     i2_HabilitaLCD:
  3419                           	callstack 23
  3420                           
  3421                           ;LibLCDXC8.h: 110: LATE2=1;
  3422                           
  3423                           ;incstack = 0
  3424   001340  848D               	bsf	3981,2,c	;volatile
  3425                           
  3426                           ;LibLCDXC8.h: 111: _delay((unsigned long)((40)*(8000000/4000000.0)));
  3427   001342  0E1A               	movlw	26
  3428   001344                     i2u145_47:
  3429   001344  2EE8               	decfsz	wreg,f,c
  3430   001346  D7FE               	bra	i2u145_47
  3431   001348  D000               	nop2	
  3432                           
  3433                           ;LibLCDXC8.h: 113: LATE2=0;
  3434   00134A  948D               	bcf	3981,2,c	;volatile
  3435   00134C  0012               	return		;funcret
  3436   00134E                     __end_ofi2_HabilitaLCD:
  3437                           	callstack 0
  3438                           
  3439 ;; *************** function _LeerTeclado *****************
  3440 ;; Defined at:
  3441 ;;		line 166 in file "Proyecto.c"
  3442 ;; Parameters:    Size  Location     Type
  3443 ;;		None
  3444 ;; Auto vars:     Size  Location     Type
  3445 ;;		None
  3446 ;; Return value:  Size  Location     Type
  3447 ;;                  1    wreg      unsigned char 
  3448 ;; Registers used:
  3449 ;;		wreg, status,2, status,0
  3450 ;; Tracked objects:
  3451 ;;		On entry : 0/0
  3452 ;;		On exit  : 0/0
  3453 ;;		Unchanged: 0/0
  3454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3455 ;;      Params:         0       0       0       0       0       0       0       0       0
  3456 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3457 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3458 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3459 ;;Total ram usage:        0 bytes
  3460 ;; Hardware stack levels used: 1
  3461 ;; This function calls:
  3462 ;;		Nothing
  3463 ;; This function is called by:
  3464 ;;		_ISR
  3465 ;; This function uses a non-reentrant model
  3466 ;;
  3467                           
  3468                           	psect	text27
  3469   000D02                     __ptext27:
  3470                           	callstack 0
  3471   000D02                     _LeerTeclado:
  3472                           	callstack 24
  3473                           
  3474                           ;Proyecto.c: 167: switch (Tecla){
  3475                           
  3476                           ;incstack = 0
  3477   000D02  D030               	goto	i2l1554
  3478   000D04                     i2l1520:
  3479                           
  3480                           ;Proyecto.c: 169: Tecla='1';
  3481   000D04  0E31               	movlw	49
  3482   000D06  6E30               	movwf	_Tecla^0,c
  3483                           
  3484                           ;Proyecto.c: 170: break;
  3485   000D08  0012               	return	
  3486   000D0A                     i2l1522:
  3487                           
  3488                           ;Proyecto.c: 172: Tecla='2';
  3489   000D0A  0E32               	movlw	50
  3490   000D0C  6E30               	movwf	_Tecla^0,c
  3491                           
  3492                           ;Proyecto.c: 173: break;
  3493   000D0E  0012               	return	
  3494   000D10                     i2l1524:
  3495                           
  3496                           ;Proyecto.c: 175: Tecla='3';
  3497   000D10  0E33               	movlw	51
  3498   000D12  6E30               	movwf	_Tecla^0,c
  3499                           
  3500                           ;Proyecto.c: 176: break;
  3501   000D14  0012               	return	
  3502   000D16                     i2l1526:
  3503                           
  3504                           ;Proyecto.c: 178: Tecla='+';
  3505   000D16  0E2B               	movlw	43
  3506   000D18  6E30               	movwf	_Tecla^0,c
  3507                           
  3508                           ;Proyecto.c: 179: break;
  3509   000D1A  0012               	return	
  3510   000D1C                     i2l1528:
  3511                           
  3512                           ;Proyecto.c: 181: Tecla='4';
  3513   000D1C  0E34               	movlw	52
  3514   000D1E  6E30               	movwf	_Tecla^0,c
  3515                           
  3516                           ;Proyecto.c: 182: break;
  3517   000D20  0012               	return	
  3518   000D22                     i2l1530:
  3519                           
  3520                           ;Proyecto.c: 184: Tecla ='5';
  3521   000D22  0E35               	movlw	53
  3522   000D24  6E30               	movwf	_Tecla^0,c
  3523                           
  3524                           ;Proyecto.c: 185: break;
  3525   000D26  0012               	return	
  3526   000D28                     i2l1532:
  3527                           
  3528                           ;Proyecto.c: 187: Tecla='6';
  3529   000D28  0E36               	movlw	54
  3530   000D2A  6E30               	movwf	_Tecla^0,c
  3531                           
  3532                           ;Proyecto.c: 188: break;
  3533   000D2C  0012               	return	
  3534   000D2E                     i2l1534:
  3535                           
  3536                           ;Proyecto.c: 190: Tecla='-';
  3537   000D2E  0E2D               	movlw	45
  3538   000D30  6E30               	movwf	_Tecla^0,c
  3539                           
  3540                           ;Proyecto.c: 191: break;
  3541   000D32  0012               	return	
  3542   000D34                     i2l1536:
  3543                           
  3544                           ;Proyecto.c: 193: Tecla='7';
  3545   000D34  0E37               	movlw	55
  3546   000D36  6E30               	movwf	_Tecla^0,c
  3547                           
  3548                           ;Proyecto.c: 194: break;
  3549   000D38  0012               	return	
  3550   000D3A                     i2l1538:
  3551                           
  3552                           ;Proyecto.c: 196: Tecla='8';
  3553   000D3A  0E38               	movlw	56
  3554   000D3C  6E30               	movwf	_Tecla^0,c
  3555                           
  3556                           ;Proyecto.c: 197: break;
  3557   000D3E  0012               	return	
  3558   000D40                     i2l1540:
  3559                           
  3560                           ;Proyecto.c: 199: Tecla='9';
  3561   000D40  0E39               	movlw	57
  3562   000D42  6E30               	movwf	_Tecla^0,c
  3563                           
  3564                           ;Proyecto.c: 200: break;
  3565   000D44  0012               	return	
  3566   000D46                     i2l1542:
  3567                           
  3568                           ;Proyecto.c: 202: Tecla='X';
  3569   000D46  0E58               	movlw	88
  3570   000D48  6E30               	movwf	_Tecla^0,c
  3571                           
  3572                           ;Proyecto.c: 203: break;
  3573   000D4A  0012               	return	
  3574   000D4C                     i2l1544:
  3575                           
  3576                           ;Proyecto.c: 205: Tecla='B';
  3577   000D4C  0E42               	movlw	66
  3578   000D4E  6E30               	movwf	_Tecla^0,c
  3579                           
  3580                           ;Proyecto.c: 206: break;
  3581   000D50  0012               	return	
  3582   000D52                     i2l1546:
  3583                           
  3584                           ;Proyecto.c: 208: Tecla='0';
  3585   000D52  0E30               	movlw	48
  3586   000D54  6E30               	movwf	_Tecla^0,c
  3587                           
  3588                           ;Proyecto.c: 209: break;
  3589   000D56  0012               	return	
  3590   000D58                     i2l1548:
  3591                           
  3592                           ;Proyecto.c: 211: Tecla='=';
  3593   000D58  0E3D               	movlw	61
  3594   000D5A  6E30               	movwf	_Tecla^0,c
  3595                           
  3596                           ;Proyecto.c: 212: break;
  3597   000D5C  0012               	return	
  3598   000D5E                     i2l1550:
  3599                           
  3600                           ;Proyecto.c: 214: Tecla='/';
  3601   000D5E  0E2F               	movlw	47
  3602   000D60  6E30               	movwf	_Tecla^0,c
  3603                           
  3604                           ;Proyecto.c: 215: break;
  3605   000D62  0012               	return	
  3606   000D64                     i2l1554:
  3607   000D64  5030               	movf	_Tecla^0,w,c
  3608                           
  3609                           ; Switch size 1, requested type "simple"
  3610                           ; Number of cases is 16, Range of values is 1 to 16
  3611                           ; switch strategies available:
  3612                           ; Name         Instructions Cycles
  3613                           ; simple_byte           49    25 (average)
  3614                           ;	Chosen strategy is simple_byte
  3615   000D66  0A01               	xorlw	1	; case 1
  3616   000D68  B4D8               	btfsc	status,2,c
  3617   000D6A  D7CC               	goto	i2l1520
  3618   000D6C  0A03               	xorlw	3	; case 2
  3619   000D6E  B4D8               	btfsc	status,2,c
  3620   000D70  D7CC               	goto	i2l1522
  3621   000D72  0A01               	xorlw	1	; case 3
  3622   000D74  B4D8               	btfsc	status,2,c
  3623   000D76  D7CC               	goto	i2l1524
  3624   000D78  0A07               	xorlw	7	; case 4
  3625   000D7A  B4D8               	btfsc	status,2,c
  3626   000D7C  D7CC               	goto	i2l1526
  3627   000D7E  0A01               	xorlw	1	; case 5
  3628   000D80  B4D8               	btfsc	status,2,c
  3629   000D82  D7CC               	goto	i2l1528
  3630   000D84  0A03               	xorlw	3	; case 6
  3631   000D86  B4D8               	btfsc	status,2,c
  3632   000D88  D7CC               	goto	i2l1530
  3633   000D8A  0A01               	xorlw	1	; case 7
  3634   000D8C  B4D8               	btfsc	status,2,c
  3635   000D8E  D7CC               	goto	i2l1532
  3636   000D90  0A0F               	xorlw	15	; case 8
  3637   000D92  B4D8               	btfsc	status,2,c
  3638   000D94  D7CC               	goto	i2l1534
  3639   000D96  0A01               	xorlw	1	; case 9
  3640   000D98  B4D8               	btfsc	status,2,c
  3641   000D9A  D7CC               	goto	i2l1536
  3642   000D9C  0A03               	xorlw	3	; case 10
  3643   000D9E  B4D8               	btfsc	status,2,c
  3644   000DA0  D7CC               	goto	i2l1538
  3645   000DA2  0A01               	xorlw	1	; case 11
  3646   000DA4  B4D8               	btfsc	status,2,c
  3647   000DA6  D7CC               	goto	i2l1540
  3648   000DA8  0A07               	xorlw	7	; case 12
  3649   000DAA  B4D8               	btfsc	status,2,c
  3650   000DAC  D7CC               	goto	i2l1542
  3651   000DAE  0A01               	xorlw	1	; case 13
  3652   000DB0  B4D8               	btfsc	status,2,c
  3653   000DB2  D7CC               	goto	i2l1544
  3654   000DB4  0A03               	xorlw	3	; case 14
  3655   000DB6  B4D8               	btfsc	status,2,c
  3656   000DB8  D7CC               	goto	i2l1546
  3657   000DBA  0A01               	xorlw	1	; case 15
  3658   000DBC  B4D8               	btfsc	status,2,c
  3659   000DBE  D7CC               	goto	i2l1548
  3660   000DC0  0A1F               	xorlw	31	; case 16
  3661   000DC2  A4D8               	btfss	status,2,c
  3662   000DC4  0012               	return	
  3663   000DC6  D7CB               	goto	i2l1550
  3664   000DC8                     __end_of_LeerTeclado:
  3665                           	callstack 0
  3666                           
  3667                           	psect	rparam
  3668   000000                     
  3669                           	psect	temp
  3670   000033                     btemp:
  3671                           	callstack 0
  3672   000033                     	ds	1
  3673   000000                     int$flags	set	btemp
  3674   000000                     wtemp8	set	btemp+1
  3675   000000                     ttemp5	set	btemp+1
  3676   000000                     ttemp6	set	btemp+4
  3677   000000                     ttemp7	set	btemp+8
  3678                           
  3679                           	psect	idloc
  3680                           
  3681                           ;Config register IDLOC0 @ 0x200000
  3682                           ;	unspecified, using default values
  3683   200000                     	org	2097152
  3684   200000  FF                 	db	255
  3685                           
  3686                           ;Config register IDLOC1 @ 0x200001
  3687                           ;	unspecified, using default values
  3688   200001                     	org	2097153
  3689   200001  FF                 	db	255
  3690                           
  3691                           ;Config register IDLOC2 @ 0x200002
  3692                           ;	unspecified, using default values
  3693   200002                     	org	2097154
  3694   200002  FF                 	db	255
  3695                           
  3696                           ;Config register IDLOC3 @ 0x200003
  3697                           ;	unspecified, using default values
  3698   200003                     	org	2097155
  3699   200003  FF                 	db	255
  3700                           
  3701                           ;Config register IDLOC4 @ 0x200004
  3702                           ;	unspecified, using default values
  3703   200004                     	org	2097156
  3704   200004  FF                 	db	255
  3705                           
  3706                           ;Config register IDLOC5 @ 0x200005
  3707                           ;	unspecified, using default values
  3708   200005                     	org	2097157
  3709   200005  FF                 	db	255
  3710                           
  3711                           ;Config register IDLOC6 @ 0x200006
  3712                           ;	unspecified, using default values
  3713   200006                     	org	2097158
  3714   200006  FF                 	db	255
  3715                           
  3716                           ;Config register IDLOC7 @ 0x200007
  3717                           ;	unspecified, using default values
  3718   200007                     	org	2097159
  3719   200007  FF                 	db	255
  3720                           
  3721                           	psect	config
  3722                           
  3723                           ;Config register CONFIG1L @ 0x300000
  3724                           ;	unspecified, using default values
  3725                           ;	PLL Prescaler Selection bits
  3726                           ;	PLLDIV = 0x0, unprogrammed default
  3727                           ;	System Clock Postscaler Selection bits
  3728                           ;	CPUDIV = 0x0, unprogrammed default
  3729                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  3730                           ;	USBDIV = 0x0, unprogrammed default
  3731   300000                     	org	3145728
  3732   300000  00                 	db	0
  3733                           
  3734                           ;Config register CONFIG1H @ 0x300001
  3735                           ;	unspecified, using default values
  3736                           ;	Oscillator Selection bits
  3737                           ;	FOSC = 0x5, unprogrammed default
  3738                           ;	Fail-Safe Clock Monitor Enable bit
  3739                           ;	FCMEN = 0x0, unprogrammed default
  3740                           ;	Internal/External Oscillator Switchover bit
  3741                           ;	IESO = 0x0, unprogrammed default
  3742   300001                     	org	3145729
  3743   300001  05                 	db	5
  3744                           
  3745                           ;Config register CONFIG2L @ 0x300002
  3746                           ;	unspecified, using default values
  3747                           ;	Power-up Timer Enable bit
  3748                           ;	PWRT = 0x1, unprogrammed default
  3749                           ;	Brown-out Reset Enable bits
  3750                           ;	BOR = 0x3, unprogrammed default
  3751                           ;	Brown-out Reset Voltage bits
  3752                           ;	BORV = 0x3, unprogrammed default
  3753                           ;	USB Voltage Regulator Enable bit
  3754                           ;	VREGEN = 0x0, unprogrammed default
  3755   300002                     	org	3145730
  3756   300002  1F                 	db	31
  3757                           
  3758                           ;Config register CONFIG2H @ 0x300003
  3759                           ;	Watchdog Timer Enable bit
  3760                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  3761                           ;	Watchdog Timer Postscale Select bits
  3762                           ;	WDTPS = 0xF, unprogrammed default
  3763   300003                     	org	3145731
  3764   300003  1E                 	db	30
  3765                           
  3766                           ; Padding undefined space
  3767   300004                     	org	3145732
  3768   300004  FF                 	db	255
  3769                           
  3770                           ;Config register CONFIG3H @ 0x300005
  3771                           ;	CCP2 MUX bit
  3772                           ;	CCP2MX = 0x1, unprogrammed default
  3773                           ;	PORTB A/D Enable bit
  3774                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  3775                           ;	Low-Power Timer 1 Oscillator Enable bit
  3776                           ;	LPT1OSC = 0x0, unprogrammed default
  3777                           ;	MCLR Pin Enable bit
  3778                           ;	MCLRE = 0x1, unprogrammed default
  3779   300005                     	org	3145733
  3780   300005  81                 	db	129
  3781                           
  3782                           ;Config register CONFIG4L @ 0x300006
  3783                           ;	Stack Full/Underflow Reset Enable bit
  3784                           ;	STVREN = 0x1, unprogrammed default
  3785                           ;	Single-Supply ICSP Enable bit
  3786                           ;	LVP = OFF, Single-Supply ICSP disabled
  3787                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  3788                           ;	ICPRT = 0x0, unprogrammed default
  3789                           ;	Extended Instruction Set Enable bit
  3790                           ;	XINST = 0x0, unprogrammed default
  3791                           ;	Background Debugger Enable bit
  3792                           ;	DEBUG = 0x1, unprogrammed default
  3793   300006                     	org	3145734
  3794   300006  81                 	db	129
  3795                           
  3796                           ; Padding undefined space
  3797   300007                     	org	3145735
  3798   300007  FF                 	db	255
  3799                           
  3800                           ;Config register CONFIG5L @ 0x300008
  3801                           ;	unspecified, using default values
  3802                           ;	Code Protection bit
  3803                           ;	CP0 = 0x1, unprogrammed default
  3804                           ;	Code Protection bit
  3805                           ;	CP1 = 0x1, unprogrammed default
  3806                           ;	Code Protection bit
  3807                           ;	CP2 = 0x1, unprogrammed default
  3808                           ;	Code Protection bit
  3809                           ;	CP3 = 0x1, unprogrammed default
  3810   300008                     	org	3145736
  3811   300008  0F                 	db	15
  3812                           
  3813                           ;Config register CONFIG5H @ 0x300009
  3814                           ;	unspecified, using default values
  3815                           ;	Boot Block Code Protection bit
  3816                           ;	CPB = 0x1, unprogrammed default
  3817                           ;	Data EEPROM Code Protection bit
  3818                           ;	CPD = 0x1, unprogrammed default
  3819   300009                     	org	3145737
  3820   300009  C0                 	db	192
  3821                           
  3822                           ;Config register CONFIG6L @ 0x30000A
  3823                           ;	unspecified, using default values
  3824                           ;	Write Protection bit
  3825                           ;	WRT0 = 0x1, unprogrammed default
  3826                           ;	Write Protection bit
  3827                           ;	WRT1 = 0x1, unprogrammed default
  3828                           ;	Write Protection bit
  3829                           ;	WRT2 = 0x1, unprogrammed default
  3830                           ;	Write Protection bit
  3831                           ;	WRT3 = 0x1, unprogrammed default
  3832   30000A                     	org	3145738
  3833   30000A  0F                 	db	15
  3834                           
  3835                           ;Config register CONFIG6H @ 0x30000B
  3836                           ;	unspecified, using default values
  3837                           ;	Configuration Register Write Protection bit
  3838                           ;	WRTC = 0x1, unprogrammed default
  3839                           ;	Boot Block Write Protection bit
  3840                           ;	WRTB = 0x1, unprogrammed default
  3841                           ;	Data EEPROM Write Protection bit
  3842                           ;	WRTD = 0x1, unprogrammed default
  3843   30000B                     	org	3145739
  3844   30000B  E0                 	db	224
  3845                           
  3846                           ;Config register CONFIG7L @ 0x30000C
  3847                           ;	unspecified, using default values
  3848                           ;	Table Read Protection bit
  3849                           ;	EBTR0 = 0x1, unprogrammed default
  3850                           ;	Table Read Protection bit
  3851                           ;	EBTR1 = 0x1, unprogrammed default
  3852                           ;	Table Read Protection bit
  3853                           ;	EBTR2 = 0x1, unprogrammed default
  3854                           ;	Table Read Protection bit
  3855                           ;	EBTR3 = 0x1, unprogrammed default
  3856   30000C                     	org	3145740
  3857   30000C  0F                 	db	15
  3858                           
  3859                           ;Config register CONFIG7H @ 0x30000D
  3860                           ;	unspecified, using default values
  3861                           ;	Boot Block Table Read Protection bit
  3862                           ;	EBTRB = 0x1, unprogrammed default
  3863   30000D                     	org	3145741
  3864   30000D  40                 	db	64
  3865                           tosu	equ	0xFFF
  3866                           tosh	equ	0xFFE
  3867                           tosl	equ	0xFFD
  3868                           stkptr	equ	0xFFC
  3869                           pclatu	equ	0xFFB
  3870                           pclath	equ	0xFFA
  3871                           pcl	equ	0xFF9
  3872                           tblptru	equ	0xFF8
  3873                           tblptrh	equ	0xFF7
  3874                           tblptrl	equ	0xFF6
  3875                           tablat	equ	0xFF5
  3876                           prodh	equ	0xFF4
  3877                           prodl	equ	0xFF3
  3878                           indf0	equ	0xFEF
  3879                           postinc0	equ	0xFEE
  3880                           postdec0	equ	0xFED
  3881                           preinc0	equ	0xFEC
  3882                           plusw0	equ	0xFEB
  3883                           fsr0h	equ	0xFEA
  3884                           fsr0l	equ	0xFE9
  3885                           wreg	equ	0xFE8
  3886                           indf1	equ	0xFE7
  3887                           postinc1	equ	0xFE6
  3888                           postdec1	equ	0xFE5
  3889                           preinc1	equ	0xFE4
  3890                           plusw1	equ	0xFE3
  3891                           fsr1h	equ	0xFE2
  3892                           fsr1l	equ	0xFE1
  3893                           bsr	equ	0xFE0
  3894                           indf2	equ	0xFDF
  3895                           postinc2	equ	0xFDE
  3896                           postdec2	equ	0xFDD
  3897                           preinc2	equ	0xFDC
  3898                           plusw2	equ	0xFDB
  3899                           fsr2h	equ	0xFDA
  3900                           fsr2l	equ	0xFD9
  3901                           status	equ	0xFD8

Data Sizes:
    Strings     49
    Constant    0
    Data        12
    BSS         8
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     30      50
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    MensajeLCD_Word@a	PTR unsigned char  size(1) Largest target is 17
		 -> STR_7(CODE[5]), STR_6(CODE[6]), STR_5(CODE[17]), STR_4(CODE[17]), 
		 -> STR_3(CODE[10]), STR_2(CODE[17]), STR_1(CODE[11]), 

    NuevoCaracter@c	PTR unsigned char  size(1) Largest target is 8
		 -> cara(COMRAM[8]), 


Critical Paths under _main in COMRAM

    _main->_TransmitirDatos
    _TransmitirDatos->_MensajeLCD_Word
    _MensajeLCD_Word->_EscribeLCD_c
    _DireccionaLCD->_EnviaDato
    _NuevoCaracter->_EscribeLCD_c
    _EscribeLCD_c->_EnviaDato
    _LeerHT11->_LeerByte
    _LeerByte->_LeerBit
    _InicializaLCD->_EnviaDato
    _BorraLCD->_EnviaDato
    _EnviaDato->_RetardoLCD

Critical Paths under _ISR in COMRAM

    _ISR->i2_EscribeLCD_c
    i2_EscribeLCD_c->i2_EnviaDato
    i2_EnviaDato->i2_RetardoLCD

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    6636
                                             28 COMRAM     2     2      0
                           _BorraLCD
                      _DireccionaLCD
                       _EscribeLCD_c
                      _InicializaLCD
                           _LeerHT11
                    _MensajeLCD_Word
                      _NuevoCaracter
                    _TransmitirDatos
 ---------------------------------------------------------------------------------
 (1) _TransmitirDatos                                     14    10      4    4722
                                             16 COMRAM    12     8      4
                           _BorraLCD
                      _DireccionaLCD
                       _EscribeLCD_c
                    _MensajeLCD_Word
                         _Transmitir
                            ___awdiv
                            ___lbdiv
                            ___lbmod
                            ___lwdiv
                            ___lwmod
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     311
                                              7 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     615
                                              7 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     922
                                              7 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___lbmod                                              4     3      1     311
                                              7 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (2) ___lbdiv                                              4     3      1     314
                                              7 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     604
                                              7 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _Transmitir                                           1     1      0      22
                                              7 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _MensajeLCD_Word                                      4     3      1     798
                                             12 COMRAM     4     3      1
                       _EscribeLCD_c
 ---------------------------------------------------------------------------------
 (2) _DireccionaLCD                                        1     1      0     132
                                             11 COMRAM     1     1      0
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (1) _NuevoCaracter                                        4     3      1     405
                                             12 COMRAM     4     3      1
                         _ComandoLCD
                       _EscribeLCD_c
 ---------------------------------------------------------------------------------
 (3) _EscribeLCD_c                                         1     1      0     132
                                             11 COMRAM     1     1      0
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (2) _ComandoLCD                                           2     2      0      22
                                              7 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _LeerHT11                                             1     1      0     117
                                             11 COMRAM     1     1      0
                           _LeerByte
 ---------------------------------------------------------------------------------
 (2) _LeerByte                                             3     3      0     117
                                              8 COMRAM     3     3      0
                            _LeerBit
 ---------------------------------------------------------------------------------
 (3) _LeerBit                                              1     1      0      25
                                              7 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _InicializaLCD                                        0     0      0     220
                           _BorraLCD
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (2) _BorraLCD                                             0     0      0     110
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (4) _EnviaDato                                            2     2      0      88
                                              9 COMRAM     2     2      0
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (4) _RetardoLCD                                           2     2      0      22
                                              7 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (4) _HabilitaLCD                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISR                                                  2     2      0     132
                                              5 COMRAM     2     2      0
                        _LeerTeclado
                     i2_EscribeLCD_c
 ---------------------------------------------------------------------------------
 (7) i2_EscribeLCD_c                                       1     1      0     132
                                              4 COMRAM     1     1      0
                        i2_EnviaDato
                      i2_HabilitaLCD
                       i2_RetardoLCD
 ---------------------------------------------------------------------------------
 (8) i2_EnviaDato                                          2     2      0      88
                                              2 COMRAM     2     2      0
                      i2_HabilitaLCD
                       i2_RetardoLCD
 ---------------------------------------------------------------------------------
 (8) i2_RetardoLCD                                         2     2      0      22
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (8) i2_HabilitaLCD                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _LeerTeclado                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BorraLCD
     _EnviaDato
       _HabilitaLCD
       _RetardoLCD
     _HabilitaLCD
     _RetardoLCD
   _DireccionaLCD
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _EscribeLCD_c
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _InicializaLCD
     _BorraLCD
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _LeerHT11
     _LeerByte
       _LeerBit
   _MensajeLCD_Word
     _EscribeLCD_c
   _NuevoCaracter
     _ComandoLCD
     _EscribeLCD_c
   _TransmitirDatos
     _BorraLCD
     _DireccionaLCD
     _EscribeLCD_c
     _MensajeLCD_Word
     _Transmitir
     ___awdiv
     ___lbdiv
     ___lbmod
     ___lwdiv
     ___lwmod
     ___wmul

 _ISR (ROOT)
   _LeerTeclado
   i2_EscribeLCD_c
     i2_EnviaDato
       i2_HabilitaLCD
       i2_RetardoLCD
     i2_HabilitaLCD
     i2_RetardoLCD

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      35        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     1E      32       1       53.2%
BITBIGSFRll         21      0       0      33        0.0%
BITBIGSFRhhhlh      19      0       0      21        0.0%
BITBIGSFRhhlllh      D      0       0      26        0.0%
BITBIGSFRhhhh        D      0       0      20        0.0%
BITBIGSFRhhllll      C      0       0      27        0.0%
BITBIGSFRhhlhl       7      0       0      24        0.0%
BITBIGSFRhhllll      7      0       0      28        0.0%
BITBIGSFRhhlhh       6      0       0      23        0.0%
BITBIGSFRlhhl        5      0       0      31        0.0%
BITBIGSFRhl          5      0       0      29        0.0%
BITBIGSFRlhhh        1      0       0      30        0.0%
BITBIGSFRlhl         1      0       0      32        0.0%
BITBIGSFRhhllh       1      0       0      25        0.0%
BITBIGSFRhhhll       1      0       0      22        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      32      34        0.0%
DATA                 0      0      32       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Tue Jun 06 15:57:30 2023

                      _c 001F        Transmitir@BufferT 0008             ___awdiv@sign 000D  
             EnviaDato@a 000B      ___wmul@multiplicand 000A            ??_LeerTeclado 0001  
                    l220 1210            _InicializaLCD 0DC8                      l206 11E4  
                    l225 1234                      l209 11EE                      l270 09AA  
                    l265 0868                      l800 0FFC                      l810 1118  
                    _GIE 007F97                      _RC0 007C10                      _RB4 007C0C  
                    _RB5 007C0D                      _RB6 007C0E                      _RE1 007C21  
                    _RC5 007C15                      _RB7 007C0F                      _PR2 000FCB  
                    _ISR 0008                      u660 1238                      u740 0EAA  
                    u820 0FD6                      u680 1052                      u850 10FA  
                    u780 11B4         TransmitirDatos@n 0017                      _ing 002F  
                    wreg 000FE8                     ?_ISR 0001         ??i2_EscribeLCD_c 0005  
                   l2012 0DDA                     l2100 088A                     l2022 0DF8  
                   l2110 08E4                     l2032 0E16                     l2104 08B6  
                   l2112 090E                     l2052 0E4E                     l2410 0BB6  
                   l2340 1138                     l2406 0BA8                     l2096 0876  
                   l2416 0BCC                     l1730 0F1E                     l1732 0F28  
                   l1900 0EC6                     l1726 0EEC                     l1728 0EFE  
                   l1736 0F32                     l1904 0ED0                     l1826 100E  
                   l1930 11C6                     l1922 11B0                     l1748 108C  
                   l1908 0EDE                     l1940 1274                     l1918 11AA  
                   l1934 11CE                     l1768 1224                     l1848 12C2  
                   l1960 0FCA                     l1858 135C                     l1890 0EA6  
                   l1882 0E88                     l1962 0FD2                     l1876 0E78  
                   l1948 128C                     l1972 0FF2                     l1980 10EE  
                   l1982 10F6                     l1888 0E9E                     l1988 110E  
                   STR_1 0812                     STR_2 0801                     STR_3 081D  
                   STR_4 0801                     STR_5 0801                     STR_6 0827  
                   STR_7 082D                     u1210 115C                     u1307 11EA  
                   u1317 1216                     u1237 0B3A                     _LATB 000F8A  
                   u1327 1226                     u1247 0B7E                     _LATD 000F8C  
                   u1337 0EF2                     u1257 0BD6                     u1347 0F04  
                   u1267 1248                     u1357 0F0E                     u1277 1252  
                   u1367 0F20                     u1287 125E                     u1377 0F2A  
                   u1297 11DA                     u1387 1336                     _RBIE 007F93  
                   _RBIF 007F90                     _RCIF 007CF5                     _RBPU 007F8F  
                   _TMR0 000FD6                     _TMR2 000FCC                     _TRMT 007D61  
                   _Cont 0021           ??_EscribeLCD_c 000C                     _Temp 0032  
                   _cara 0023                     _main 0AC4                     _duty 002B  
                   fsr2h 000FDA                     indf2 000FDF                     fsr1l 000FE1  
                   fsr2l 000FD9                     btemp 0033                     prodh 000FF4  
                   prodl 000FF3                     start 000E          __end_of_LeerBit 123C  
           ___param_bank 000000                    ??_ISR 0006           ?_InicializaLCD 0001  
                  ?_main 0001          __end_of___awdiv 0EE8          __end_of___lbdiv 11D2  
             _ComandoLCD 123C            EscribeLCD_c@a 000C          __end_of___lbmod 1294  
                  _T0CON 000FD5          ___awdiv@divisor 000A                    _T2CON 000FCA  
                  _LATE0 007C68                    _LATE2 007C6A          __end_of___lwdiv 1006  
        __end_of___lwmod 1122                    i2l311 0CBC                    i2l303 0C98  
                  i2l312 0CD4                    i2l313 0CC4                    i2l305 0CA0  
                  i2l315 0CCC                    i2l307 0CA8                    i2l318 0CFE  
                  i2l282 0C32                    i2l291 0C60                    i2l276 0C34  
                  i2l277 0C22                    i2l278 0C20                    i2l295 0C74  
                  i2l287 0C50                    i2l297 0C7C                    i2l289 0C58  
                  i2l299 0C84          ___awdiv@counter 000C                    _RCREG 000FAE  
                  _RCSTA 000FAB                    _SPBRG 000FAF                    _PORTB 000F81  
                  _TRISB 000F93                    _TRISC 000F94                    _TRISD 000F95  
                  _TXREG 000FAD                    _TXSTA 000FAC                    _Tecla 0030  
    __end_of_LeerTeclado 0DC8           NuevoCaracter@c 000D           NuevoCaracter@i 000F  
                  tablat 000FF5              _HabilitaLCD 1332                    ttemp5 0034  
                  ttemp6 0037                    ttemp7 003B                    status 000FD8  
                  wtemp8 0034          ___lbdiv@divisor 0008          ___lbdiv@counter 000A  
       __end_of_BorraLCD 1332         __end_of_LeerHT11 120C          __initialization 115E  
       __end_of_LeerByte 12DC             __end_of_main 0BFC                   ??_main 001D  
          __activetblptr 000002                   _ADCON0 000FC2                   _ADCON1 000FC1  
                 _ADCON2 000FC0    __end_of_NuevoCaracter 115E           DireccionaLCD@a 000C  
                 _CCPR1L 000FBE         ___awdiv@dividend 0008                   i2l2002 10D2  
                 i2l1520 0D04                   i2l1530 0D22                   i2l1522 0D0A  
                 i2l2306 0CB0                   i2l1540 0D40                   i2l1532 0D28  
                 i2l1524 0D10                   i2l2324 0CE6                   i2l1550 0D5E  
                 i2l1542 0D46                   i2l1534 0D2E                   i2l1526 0D16  
                 i2l1544 0D4C                   i2l1536 0D34                   i2l1528 0D1C  
                 i2l1546 0D52                   i2l1538 0D3A                   i2l1554 0D64  
                 i2l2282 0C68                   i2l1548 0D58                   i2l2294 0C8C  
                 i2l1790 0F84                   i2l1792 0F8E                   i2l1786 0F52  
                 i2l1788 0F64                   i2l1796 0F98                   _OSCCON 000FD3  
                 _TMR0IE 007F95                   _TMR0IF 007F92                   _TMR0ON 007EAF  
                 _TMR2ON 007E52                   _TRISC0 007CA0                   _TRISC2 007CA2  
                 _TRISE0 007CB0                   _TRISE1 007CB1                   _TRISE2 007CB2  
                 _TRISC6 007CA6                   _TRISC7 007CA7                ??_LeerBit 0008  
  __end_of_DireccionaLCD 12F2               _RetardoLCD 0EE8      TransmitirDatos@Ent1 0011  
    TransmitirDatos@Ent2 0013      TransmitirDatos@Simb 0019                   ___wmul 1294  
              ??___awdiv 000C                ??___lbdiv 0009                ??___lbmod 0009  
              ??___lwdiv 000C                ??___lwmod 000C          ??_InicializaLCD 000C  
                 clear_0 1184         ___awdiv@quotient 000E                   isa$std 000001  
   __end_of_EscribeLCD_c 1308              ?_ComandoLCD 0001              _LeerTeclado 0D02  
           ?i2_EnviaDato 0001             __pdataCOMRAM 001F             __mediumconst 0000  
                 tblptrh 000FF7                   tblptrl 000FF6                   tblptru 000FF8  
             _Transmitir 135A         ___lbdiv@dividend 0009          ___lbmod@divisor 0008  
  __end_ofi2_HabilitaLCD 134E               __accesstop 0060  __end_of__initialization 118A  
        ___lbmod@counter 000A            ___rparam_used 000001           __pcstackCOMRAM 0001  
      __end_of_EnviaDato 109A         ___lbdiv@quotient 000B                ?_BorraLCD 0001  
              ?_LeerHT11 0001                ?_LeerByte 0001              ?_RetardoLCD 0001  
            RetardoLCD@a 0009           ComandoLCD@data 0009                  ?___wmul 0008  
                _CCP1CON 000FBD               ??_BorraLCD 000C               ??_LeerHT11 000C  
            ?_Transmitir 0001        ??_MensajeLCD_Word 000E               ??_LeerByte 0009  
           ?_HabilitaLCD 0001                  _LeerBit 120C                  _Humedad 0031  
                __Hparam 0000                  __Lparam 0000     TransmitirDatos@TempC 001B  
                ___awdiv 0E64                  ___lbdiv 1198                  ___lbmod 126A  
                ___lwdiv 0FB4                  ___lwmod 10E0             __psmallconst 0800  
                __pcinit 115E                  __ramtop 0800                  __ptext0 0AC4  
                __ptext1 0834                  __ptext2 1294                  __ptext3 10E0  
                __ptext4 0FB4                  __ptext5 126A                  __ptext6 1198  
                __ptext7 0E64                  __ptext8 135A                  __ptext9 1006  
         __pintcode_body 0BFC     end_of_initialization 118A            __Lmediumconst 0000  
                int_func 0BFC             _EscribeLCD_c 12F2                  postdec1 000FE5  
      ??_TransmitirDatos 0015                  postinc0 000FEE             ??_ComandoLCD 0008  
           ?_LeerTeclado 0001         ___lbmod@dividend 0009                LeerByte@i 000B  
        i2EscribeLCD_c@a 0005              ___lbmod@rem 000B            ?i2_RetardoLCD 0001  
     __end_of_ComandoLCD 126A           __end_of___wmul 12BA            __pidataCOMRAM 134E  
  __end_of_InicializaLCD 0E64                _EnviaDato 1054      start_initialization 115E  
            __end_of_ISR 0D02           ??i2_RetardoLCD 0001             ??_RetardoLCD 0008  
               ??___wmul 000C          _MensajeLCD_Word 1006               ?_EnviaDato 0001  
            __pbssCOMRAM 002B       __end_of_RetardoLCD 0F4E         MensajeLCD_Word@a 000D  
       MensajeLCD_Word@i 000F             ??_Transmitir 0008            _NuevoCaracter 1122  
               ?_LeerBit 0001            _DireccionaLCD 12DC           i2_EscribeLCD_c 1308  
       ___lwdiv@dividend 0008                __pintcode 0008                 ?___awdiv 0008  
               ?___lbdiv 0008                 ?___lbmod 0008                 ?___lwdiv 0008  
               ?___lwmod 0008       __end_of_Transmitir 1366              __smallconst 0800  
       ___lwdiv@quotient 000C           ?_NuevoCaracter 000D          _TransmitirDatos 0834  
         ___wmul@product 000C            i2_HabilitaLCD 1340           ?_DireccionaLCD 0001  
 __end_ofi2_EscribeLCD_c 131E                 i2u101_40 0C2E                 i2u102_45 0C30  
               i2u140_47 0F58                 i2u141_47 0F6A                 i2u142_47 0F74  
               i2u143_47 0F86                 i2u144_47 0F90                 i2u145_47 1344  
               i2u139_47 0CF2  __end_of_MensajeLCD_Word 1054        ___wmul@multiplier 0008  
          ??i2_EnviaDato 0003     __end_ofi2_RetardoLCD 0FB4              ??_EnviaDato 000A  
               _BorraLCD 131E                 _LeerHT11 11D2                copy_data0 1172  
               _LeerByte 12BA           ?i2_HabilitaLCD 0001          ?i2_EscribeLCD_c 0001  
               __Hrparam 0000                 __Lrparam 0000             i2EnviaDato@a 0004  
        ??_NuevoCaracter 000E  __end_of_TransmitirDatos 0AC4          ___lwdiv@divisor 000A  
        ___lwdiv@counter 000E                 __ptext10 12DC                 __ptext11 1122  
               __ptext20 0EE8                 __ptext12 12F2                 __ptext21 1332  
               __ptext13 123C                 __ptext14 11D2                 __ptext23 1308  
               __ptext15 12BA                 __ptext24 109A                 __ptext16 120C  
               __ptext25 0F4E                 __ptext17 0DC8                 __ptext26 1340  
               __ptext18 131E                 __ptext27 0D02                 __ptext19 1054  
    __end_ofi2_EnviaDato 10E0                 _contador 002D          ??_DireccionaLCD 000C  
               _interfaz 0022                 isa$xinst 000000         ?_MensajeLCD_Word 000D  
               int$flags 0033        NuevoCaracter@addr 000E          ??i2_HabilitaLCD 0001  
               intlevel2 0000            ??_HabilitaLCD 0008         ___lwmod@dividend 0008  
          i2RetardoLCD@a 0002              i2_EnviaDato 109A          ___lwmod@divisor 000A  
        ___lwmod@counter 000C         ?_TransmitirDatos 0011            ?_EscribeLCD_c 0001  
             LeerBit@res 0008             i2_RetardoLCD 0F4E      __end_of_HabilitaLCD 1340  
            LeerByte@res 000A  
