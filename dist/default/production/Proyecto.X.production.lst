

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Tue Jun 06 17:48:33 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og9 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    35                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    42                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    43                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    44                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    45                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    46   000000                     
    47                           ; Version 2.40
    48                           ; Generated 04/07/2022 GMT
    49                           ; 
    50                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    51                           ; All rights reserved.
    52                           ; 
    53                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    54                           ; 
    55                           ; Redistribution and use in source and binary forms, with or without modification, are
    56                           ; permitted provided that the following conditions are met:
    57                           ; 
    58                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    59                           ;        conditions and the following disclaimer.
    60                           ; 
    61                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    62                           ;        of conditions and the following disclaimer in the documentation and/or other
    63                           ;        materials provided with the distribution. Publication is not required when
    64                           ;        this file is used in an embedded application.
    65                           ; 
    66                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    67                           ;        software without specific prior written permission.
    68                           ; 
    69                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    70                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    71                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    72                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    73                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    74                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    75                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    76                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    77                           ; 
    78                           ; 
    79                           ; Code-generator required, PIC18F4550 Definitions
    80                           ; 
    81                           ; SFR Addresses
    82   000000                     
    83                           	psect	idataCOMRAM
    84   001454                     __pidataCOMRAM:
    85                           	callstack 0
    86                           
    87                           ;initializer for _c
    88   001454  4240               	dw	16960
    89                           
    90                           ;initializer for _Cont
    91   001456  06                 	db	6
    92                           
    93                           ;initializer for _interfaz
    94   001457  08                 	db	8
    95                           
    96                           ;initializer for _cara
    97   001458  00                 	db	0
    98   001459  0A                 	db	10
    99   00145A  0A                 	db	10
   100   00145B  0A                 	db	10
   101   00145C  00                 	db	0
   102   00145D  1F                 	db	31
   103   00145E  0E                 	db	14
   104   00145F  00                 	db	0
   105   000000                     _RCREG	set	4014
   106   000000                     _TXREG	set	4013
   107   000000                     _SPBRG	set	4015
   108   000000                     _RB7	set	31759
   109   000000                     _RB6	set	31758
   110   000000                     _RB5	set	31757
   111   000000                     _RB4	set	31756
   112   000000                     _TRMT	set	32097
   113   000000                     _TRISC0	set	31904
   114   000000                     _TRISC7	set	31911
   115   000000                     _TRISC6	set	31910
   116   000000                     _TMR2ON	set	32338
   117   000000                     _TRISC2	set	31906
   118   000000                     _TMR0ON	set	32431
   119   000000                     _GIE	set	32663
   120   000000                     _TMR0IE	set	32661
   121   000000                     _TMR0IF	set	32658
   122   000000                     _RBIE	set	32659
   123   000000                     _TRISE1	set	31921
   124   000000                     _TRISE2	set	31922
   125   000000                     _LATE2	set	31850
   126   000000                     _LATD	set	3980
   127   000000                     _USBEN	set	31595
   128   000000                     _UTRDIS	set	31611
   129   000000                     _TRISB	set	3987
   130   000000                     _TRISC	set	3988
   131   000000                     _LATE1	set	31849
   132   000000                     _RCSTA	set	4011
   133   000000                     _TXSTA	set	4012
   134   000000                     _CCP1CON	set	4029
   135   000000                     _CCPR1L	set	4030
   136   000000                     _ADCON2	set	4032
   137   000000                     _ADCON1	set	4033
   138   000000                     _ADCON0	set	4034
   139   000000                     _TRISD	set	3989
   140   000000                     _OSCCON	set	4051
   141   000000                     _RCIF	set	31989
   142   000000                     _TRISE0	set	31920
   143   000000                     _T0CON	set	4053
   144   000000                     _RBPU	set	32655
   145   000000                     _T2CON	set	4042
   146   000000                     _PR2	set	4043
   147   000000                     _RBIF	set	32656
   148   000000                     _TMR0	set	4054
   149   000000                     _TMR2	set	4044
   150   000000                     _PORTB	set	3969
   151   000000                     _RC0	set	31760
   152   000000                     _RE0	set	31776
   153   000000                     _LATB	set	3978
   154                           
   155                           	psect	smallconst
   156   000800                     __psmallconst:
   157                           	callstack 0
   158   000800  00                 	db	0
   159   000801                     STR_2:
   160   000801  20                 	db	32
   161   000802  20                 	db	32
   162   000803  20                 	db	32
   163   000804  20                 	db	32
   164   000805  20                 	db	32
   165   000806  20                 	db	32
   166   000807  20                 	db	32
   167   000808  20                 	db	32
   168   000809  20                 	db	32
   169   00080A  20                 	db	32
   170   00080B  20                 	db	32
   171   00080C  20                 	db	32
   172   00080D  20                 	db	32
   173   00080E  20                 	db	32
   174   00080F  20                 	db	32
   175   000810  20                 	db	32
   176   000811  00                 	db	0
   177   000812                     STR_1:
   178   000812  42                 	db	66	;'B'
   179   000813  69                 	db	105	;'i'
   180   000814  65                 	db	101	;'e'
   181   000815  6E                 	db	110	;'n'
   182   000816  76                 	db	118	;'v'
   183   000817  65                 	db	101	;'e'
   184   000818  6E                 	db	110	;'n'
   185   000819  69                 	db	105	;'i'
   186   00081A  64                 	db	100	;'d'
   187   00081B  6F                 	db	111	;'o'
   188   00081C  00                 	db	0
   189   00081D                     STR_3:
   190   00081D  50                 	db	80	;'P'
   191   00081E  61                 	db	97	;'a'
   192   00081F  73                 	db	115	;'s'
   193   000820  73                 	db	115	;'s'
   194   000821  77                 	db	119	;'w'
   195   000822  6F                 	db	111	;'o'
   196   000823  72                 	db	114	;'r'
   197   000824  64                 	db	100	;'d'
   198   000825  3A                 	db	58	;':'
   199   000826  00                 	db	0
   200   000827                     STR_7:
   201   000827  54                 	db	84	;'T'
   202   000828  65                 	db	101	;'e'
   203   000829  6D                 	db	109	;'m'
   204   00082A  70                 	db	112	;'p'
   205   00082B  3A                 	db	58	;':'
   206   00082C  00                 	db	0
   207   00082D                     STR_8:
   208   00082D  48                 	db	72	;'H'
   209   00082E  75                 	db	117	;'u'
   210   00082F  6D                 	db	109	;'m'
   211   000830  3A                 	db	58	;':'
   212   000831  00                 	db	0
   213   000832  00                 	db	0	; dummy byte at the end
   214   000000                     
   215                           ; #config settings
   216                           
   217                           	psect	cinit
   218   001264                     __pcinit:
   219                           	callstack 0
   220   001264                     start_initialization:
   221                           	callstack 0
   222   001264                     __initialization:
   223                           	callstack 0
   224                           
   225                           ; Initialize objects allocated to COMRAM (12 bytes)
   226                           ; load TBLPTR registers with __pidataCOMRAM
   227   001264  0E54               	movlw	low __pidataCOMRAM
   228   001266  6EF6               	movwf	tblptrl,c
   229   001268  0E14               	movlw	high __pidataCOMRAM
   230   00126A  6EF7               	movwf	tblptrh,c
   231   00126C  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   232   00126E  6EF8               	movwf	tblptru,c
   233   001270  EE00  F01F         	lfsr	0,__pdataCOMRAM
   234   001274  EE10 F00C          	lfsr	1,12
   235   001278                     copy_data0:
   236   001278  0009               	tblrd		*+
   237   00127A  CFF5 FFEE          	movff	tablat,postinc0
   238   00127E  50E5               	movf	postdec1,w,c
   239   001280  50E1               	movf	fsr1l,w,c
   240   001282  E1FA               	bnz	copy_data0
   241                           
   242                           ; Clear objects allocated to COMRAM (8 bytes)
   243   001284  EE00  F02B         	lfsr	0,__pbssCOMRAM
   244   001288  0E08               	movlw	8
   245   00128A                     clear_0:
   246   00128A  6AEE               	clrf	postinc0,c
   247   00128C  06E8               	decf	wreg,f,c
   248   00128E  E1FD               	bnz	clear_0
   249   001290                     end_of_initialization:
   250                           	callstack 0
   251   001290                     __end_of__initialization:
   252                           	callstack 0
   253   001290  9033               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   254   001292  9233               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   255   001294  0E00               	movlw	low (__Lmediumconst shr (0+16))
   256   001296  6EF8               	movwf	tblptru,c
   257   001298  0100               	movlb	0
   258   00129A  EF62  F005         	goto	_main	;jump to C main() function
   259                           
   260                           	psect	bssCOMRAM
   261   00002B                     __pbssCOMRAM:
   262                           	callstack 0
   263   00002B                     _duty:
   264                           	callstack 0
   265   00002B                     	ds	2
   266   00002D                     _contador:
   267                           	callstack 0
   268   00002D                     	ds	2
   269   00002F                     _ing:
   270                           	callstack 0
   271   00002F                     	ds	1
   272   000030                     _Tecla:
   273                           	callstack 0
   274   000030                     	ds	1
   275   000031                     _Humedad:
   276                           	callstack 0
   277   000031                     	ds	1
   278   000032                     _Temp:
   279                           	callstack 0
   280   000032                     	ds	1
   281                           
   282                           	psect	dataCOMRAM
   283   00001F                     __pdataCOMRAM:
   284                           	callstack 0
   285   00001F                     _c:
   286                           	callstack 0
   287   00001F                     	ds	2
   288   000021                     _Cont:
   289                           	callstack 0
   290   000021                     	ds	1
   291   000022                     _interfaz:
   292                           	callstack 0
   293   000022                     	ds	1
   294   000023                     _cara:
   295                           	callstack 0
   296   000023                     	ds	8
   297                           
   298                           	psect	cstackCOMRAM
   299   000001                     __pcstackCOMRAM:
   300                           	callstack 0
   301   000001                     ??i2_RetardoLCD:
   302                           
   303                           ; 1 bytes @ 0x0
   304   000001                     	ds	1
   305   000002                     i2RetardoLCD@a:
   306                           	callstack 0
   307                           
   308                           ; 1 bytes @ 0x1
   309   000002                     	ds	1
   310   000003                     ??i2_EnviaDato:
   311                           
   312                           ; 1 bytes @ 0x2
   313   000003                     	ds	1
   314   000004                     i2EnviaDato@a:
   315                           	callstack 0
   316                           
   317                           ; 1 bytes @ 0x3
   318   000004                     	ds	1
   319   000005                     i2EscribeLCD_c@a:
   320                           	callstack 0
   321                           
   322                           ; 1 bytes @ 0x4
   323   000005                     	ds	1
   324   000006                     ??_ISR:
   325                           
   326                           ; 1 bytes @ 0x5
   327   000006                     	ds	2
   328   000008                     ??_RetardoLCD:
   329   000008                     ??_ComandoLCD:
   330   000008                     ?___wmul:
   331                           	callstack 0
   332   000008                     ?___awdiv:
   333                           	callstack 0
   334   000008                     ?___lwdiv:
   335                           	callstack 0
   336   000008                     ?___lwmod:
   337                           	callstack 0
   338   000008                     LeerBit@res:
   339                           	callstack 0
   340   000008                     Transmitir@BufferT:
   341                           	callstack 0
   342   000008                     ___lbdiv@divisor:
   343                           	callstack 0
   344   000008                     ___lbmod@divisor:
   345                           	callstack 0
   346   000008                     Velocidad@val:
   347                           	callstack 0
   348   000008                     ___wmul@multiplier:
   349                           	callstack 0
   350   000008                     ___awdiv@dividend:
   351                           	callstack 0
   352   000008                     ___lwdiv@dividend:
   353                           	callstack 0
   354   000008                     ___lwmod@dividend:
   355                           	callstack 0
   356                           
   357                           ; 2 bytes @ 0x7
   358   000008                     	ds	1
   359   000009                     ??_LeerByte:
   360   000009                     ComandoLCD@data:
   361                           	callstack 0
   362   000009                     RetardoLCD@a:
   363                           	callstack 0
   364   000009                     ___lbdiv@dividend:
   365                           	callstack 0
   366   000009                     ___lbmod@dividend:
   367                           	callstack 0
   368                           
   369                           ; 1 bytes @ 0x8
   370   000009                     	ds	1
   371   00000A                     ??_EnviaDato:
   372   00000A                     LeerByte@res:
   373                           	callstack 0
   374   00000A                     ___lbdiv@counter:
   375                           	callstack 0
   376   00000A                     ___lbmod@counter:
   377                           	callstack 0
   378   00000A                     ___wmul@multiplicand:
   379                           	callstack 0
   380   00000A                     ___awdiv@divisor:
   381                           	callstack 0
   382   00000A                     ___lwdiv@divisor:
   383                           	callstack 0
   384   00000A                     ___lwmod@divisor:
   385                           	callstack 0
   386                           
   387                           ; 2 bytes @ 0x9
   388   00000A                     	ds	1
   389   00000B                     EnviaDato@a:
   390                           	callstack 0
   391   00000B                     LeerByte@i:
   392                           	callstack 0
   393   00000B                     ___lbdiv@quotient:
   394                           	callstack 0
   395   00000B                     ___lbmod@rem:
   396                           	callstack 0
   397                           
   398                           ; 1 bytes @ 0xA
   399   00000B                     	ds	1
   400   00000C                     ??_LeerHT11:
   401   00000C                     EscribeLCD_c@a:
   402                           	callstack 0
   403   00000C                     DireccionaLCD@a:
   404                           	callstack 0
   405   00000C                     ___awdiv@counter:
   406                           	callstack 0
   407   00000C                     ___lwmod@counter:
   408                           	callstack 0
   409   00000C                     ___wmul@product:
   410                           	callstack 0
   411   00000C                     ___lwdiv@quotient:
   412                           	callstack 0
   413                           
   414                           ; 2 bytes @ 0xB
   415   00000C                     	ds	1
   416   00000D                     NuevoCaracter@c:
   417                           	callstack 0
   418   00000D                     MensajeLCD_Word@a:
   419                           	callstack 0
   420   00000D                     ___awdiv@sign:
   421                           	callstack 0
   422                           
   423                           ; 1 bytes @ 0xC
   424   00000D                     	ds	1
   425   00000E                     ??_MensajeLCD_Word:
   426   00000E                     NuevoCaracter@addr:
   427                           	callstack 0
   428   00000E                     ___lwdiv@counter:
   429                           	callstack 0
   430   00000E                     ___awdiv@quotient:
   431                           	callstack 0
   432                           
   433                           ; 2 bytes @ 0xD
   434   00000E                     	ds	1
   435   00000F                     NuevoCaracter@i:
   436                           	callstack 0
   437   00000F                     MensajeLCD_Word@i:
   438                           	callstack 0
   439                           
   440                           ; 2 bytes @ 0xE
   441   00000F                     	ds	2
   442   000011                     TransmitirDatos@Ent1:
   443                           	callstack 0
   444                           
   445                           ; 2 bytes @ 0x10
   446   000011                     	ds	2
   447   000013                     TransmitirDatos@Ent2:
   448                           	callstack 0
   449                           
   450                           ; 2 bytes @ 0x12
   451   000013                     	ds	2
   452   000015                     ??_TransmitirDatos:
   453                           
   454                           ; 1 bytes @ 0x14
   455   000015                     	ds	2
   456   000017                     TransmitirDatos@n:
   457                           	callstack 0
   458                           
   459                           ; 2 bytes @ 0x16
   460   000017                     	ds	2
   461   000019                     TransmitirDatos@Simb:
   462                           	callstack 0
   463                           
   464                           ; 2 bytes @ 0x18
   465   000019                     	ds	2
   466   00001B                     TransmitirDatos@TempC:
   467                           	callstack 0
   468                           
   469                           ; 2 bytes @ 0x1A
   470   00001B                     	ds	2
   471   00001D                     ??_main:
   472                           
   473                           ; 1 bytes @ 0x1C
   474   00001D                     	ds	2
   475                           
   476 ;;
   477 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   478 ;;
   479 ;; *************** function _main *****************
   480 ;; Defined at:
   481 ;;		line 56 in file "Proyecto.c"
   482 ;; Parameters:    Size  Location     Type
   483 ;;		None
   484 ;; Auto vars:     Size  Location     Type
   485 ;;		None
   486 ;; Return value:  Size  Location     Type
   487 ;;                  1    wreg      void 
   488 ;; Registers used:
   489 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   490 ;; Tracked objects:
   491 ;;		On entry : 0/0
   492 ;;		On exit  : 0/0
   493 ;;		Unchanged: 0/0
   494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   495 ;;      Params:         0       0       0       0       0       0       0       0       0
   496 ;;      Locals:         0       0       0       0       0       0       0       0       0
   497 ;;      Temps:          2       0       0       0       0       0       0       0       0
   498 ;;      Totals:         2       0       0       0       0       0       0       0       0
   499 ;;Total ram usage:        2 bytes
   500 ;; Hardware stack levels required when called: 9
   501 ;; This function calls:
   502 ;;		_BorraLCD
   503 ;;		_DireccionaLCD
   504 ;;		_EscribeLCD_c
   505 ;;		_InicializaLCD
   506 ;;		_LeerHT11
   507 ;;		_MensajeLCD_Word
   508 ;;		_NuevoCaracter
   509 ;;		_TransmitirDatos
   510 ;;		_Velocidad
   511 ;; This function is called by:
   512 ;;		Startup code after reset
   513 ;; This function uses a non-reentrant model
   514 ;;
   515                           
   516                           	psect	text0
   517   000AC4                     __ptext0:
   518                           	callstack 0
   519   000AC4                     _main:
   520                           	callstack 22
   521                           
   522                           ;Proyecto.c: 58: TRISC = 0;
   523                           
   524                           ;incstack = 0
   525   000AC4  0E00               	movlw	0
   526   000AC6  6E94               	movwf	148,c	;volatile
   527                           
   528                           ;Proyecto.c: 59: OSCCON = 0b11110110;
   529   000AC8  0EF6               	movlw	246
   530   000ACA  6ED3               	movwf	211,c	;volatile
   531                           
   532                           ;Proyecto.c: 61: TRISD = 0;
   533   000ACC  0E00               	movlw	0
   534   000ACE  6E95               	movwf	149,c	;volatile
   535                           
   536                           ;Proyecto.c: 62: TRISE0 = 1;
   537   000AD0  8096               	bsf	3990,0,c	;volatile
   538                           
   539                           ;Proyecto.c: 63: TRISE2 = 0;
   540   000AD2  9496               	bcf	3990,2,c	;volatile
   541                           
   542                           ;Proyecto.c: 64: TRISE1 = 0;
   543   000AD4  9296               	bcf	3990,1,c	;volatile
   544                           
   545                           ;Proyecto.c: 65: InicializaLCD();
   546   000AD6  EC67  F007         	call	_InicializaLCD	;wreg free
   547                           
   548                           ;Proyecto.c: 66: BorraLCD();
   549   000ADA  EC12  F00A         	call	_BorraLCD	;wreg free
   550                           
   551                           ;Proyecto.c: 69: ADCON0 = 0b00000001;
   552   000ADE  0E01               	movlw	1
   553   000AE0  6EC2               	movwf	194,c	;volatile
   554                           
   555                           ;Proyecto.c: 70: ADCON1 = 0b00001100;
   556   000AE2  0E0C               	movlw	12
   557   000AE4  6EC1               	movwf	193,c	;volatile
   558                           
   559                           ;Proyecto.c: 71: ADCON2 = 0b10001000;
   560   000AE6  0E88               	movlw	136
   561   000AE8  6EC0               	movwf	192,c	;volatile
   562                           
   563                           ;Proyecto.c: 74: TRISB=0b11110000;
   564   000AEA  0EF0               	movlw	240
   565   000AEC  6E93               	movwf	147,c	;volatile
   566                           
   567                           ;Proyecto.c: 75: RBPU=0;
   568   000AEE  9EF1               	bcf	4081,7,c	;volatile
   569                           
   570                           ;Proyecto.c: 76: RBIF=0;
   571   000AF0  90F2               	bcf	4082,0,c	;volatile
   572                           
   573                           ;Proyecto.c: 77: RBIE=1;
   574   000AF2  86F2               	bsf	4082,3,c	;volatile
   575                           
   576                           ;Proyecto.c: 80: T0CON=0b00000011;
   577   000AF4  0E03               	movlw	3
   578   000AF6  6ED5               	movwf	213,c	;volatile
   579                           
   580                           ;Proyecto.c: 81: TMR0IF=0;
   581   000AF8  94F2               	bcf	4082,2,c	;volatile
   582                           
   583                           ;Proyecto.c: 82: TMR0=64911;
   584   000AFA  0EFD               	movlw	253
   585   000AFC  6ED7               	movwf	215,c	;volatile
   586   000AFE  0E8F               	movlw	143
   587   000B00  6ED6               	movwf	214,c	;volatile
   588                           
   589                           ;Proyecto.c: 83: TMR0IE=1;
   590   000B02  8AF2               	bsf	4082,5,c	;volatile
   591                           
   592                           ;Proyecto.c: 84: GIE=1;
   593   000B04  8EF2               	bsf	4082,7,c	;volatile
   594                           
   595                           ;Proyecto.c: 85: TMR0ON=1;
   596   000B06  8ED5               	bsf	4053,7,c	;volatile
   597                           
   598                           ;Proyecto.c: 88: TRISC2 = 0;
   599   000B08  9494               	bcf	3988,2,c	;volatile
   600                           
   601                           ;Proyecto.c: 89: PR2 = 125;
   602   000B0A  0E7D               	movlw	125
   603   000B0C  6ECB               	movwf	203,c	;volatile
   604                           
   605                           ;Proyecto.c: 90: CCPR1L = 0;
   606   000B0E  0E00               	movlw	0
   607   000B10  6EBE               	movwf	190,c	;volatile
   608                           
   609                           ;Proyecto.c: 91: T2CON = 0b00000010;
   610   000B12  0E02               	movlw	2
   611   000B14  6ECA               	movwf	202,c	;volatile
   612                           
   613                           ;Proyecto.c: 92: CCP1CON = 0b00001100;
   614   000B16  0E0C               	movlw	12
   615   000B18  6EBD               	movwf	189,c	;volatile
   616                           
   617                           ;Proyecto.c: 93: TMR2 = 0;
   618   000B1A  0E00               	movlw	0
   619   000B1C  6ECC               	movwf	204,c	;volatile
   620                           
   621                           ;Proyecto.c: 94: TMR2ON = 1;
   622   000B1E  84CA               	bsf	4042,2,c	;volatile
   623                           
   624                           ;Proyecto.c: 97: TRISC6 = 1;
   625   000B20  8C94               	bsf	3988,6,c	;volatile
   626                           
   627                           ;Proyecto.c: 98: TRISC7 = 1;
   628   000B22  8E94               	bsf	3988,7,c	;volatile
   629                           
   630                           ;Proyecto.c: 99: TXSTA = 0b00100000;
   631   000B24  0E20               	movlw	32
   632   000B26  6EAC               	movwf	172,c	;volatile
   633                           
   634                           ;Proyecto.c: 100: RCSTA = 0b10010000;
   635   000B28  0E90               	movlw	144
   636   000B2A  6EAB               	movwf	171,c	;volatile
   637                           
   638                           ;Proyecto.c: 101: SPBRG = 12;
   639   000B2C  0E0C               	movlw	12
   640   000B2E  6EAF               	movwf	175,c	;volatile
   641                           
   642                           ;Proyecto.c: 104: UTRDIS = 1;
   643   000B30  866F               	bsf	3951,3,c	;volatile
   644                           
   645                           ;Proyecto.c: 105: USBEN = 0;
   646   000B32  966D               	bcf	3949,3,c	;volatile
   647                           
   648                           ;Proyecto.c: 107: _delay((unsigned long)((1000)*(8000000/4000.0)));
   649   000B34  0E0B               	movlw	11
   650   000B36  6E1E               	movwf	(??_main+1)^0,c
   651   000B38  0E26               	movlw	38
   652   000B3A  6E1D               	movwf	??_main^0,c
   653   000B3C  0E5E               	movlw	94
   654   000B3E                     u1477:
   655   000B3E  2EE8               	decfsz	wreg,f,c
   656   000B40  D7FE               	bra	u1477
   657   000B42  2E1D               	decfsz	??_main^0,f,c
   658   000B44  D7FC               	bra	u1477
   659   000B46  2E1E               	decfsz	(??_main+1)^0,f,c
   660   000B48  D7FA               	bra	u1477
   661                           
   662                           ;Proyecto.c: 108: BorraLCD();
   663   000B4A  EC12  F00A         	call	_BorraLCD	;wreg free
   664                           
   665                           ;Proyecto.c: 109: NuevoCaracter(0,cara);
   666   000B4E  0E23               	movlw	low _cara
   667   000B50  6E0D               	movwf	NuevoCaracter@c^0,c
   668   000B52  0E00               	movlw	0
   669   000B54  EC14  F009         	call	_NuevoCaracter
   670                           
   671                           ;Proyecto.c: 110: DireccionaLCD(0x82);
   672   000B58  0E82               	movlw	130
   673   000B5A  ECF1  F009         	call	_DireccionaLCD
   674                           
   675                           ;Proyecto.c: 111: EscribeLCD_c(0);
   676   000B5E  0E00               	movlw	0
   677   000B60  ECFC  F009         	call	_EscribeLCD_c
   678                           
   679                           ;Proyecto.c: 112: MensajeLCD_Word("Bienvenido");
   680   000B64  0E12               	movlw	low STR_1
   681   000B66  6E0D               	movwf	MensajeLCD_Word@a^0,c
   682   000B68  EC86  F008         	call	_MensajeLCD_Word	;wreg free
   683                           
   684                           ;Proyecto.c: 113: EscribeLCD_c(0);
   685   000B6C  0E00               	movlw	0
   686   000B6E  ECFC  F009         	call	_EscribeLCD_c
   687                           
   688                           ;Proyecto.c: 114: DireccionaLCD(0xC7);
   689   000B72  0EC7               	movlw	199
   690   000B74  ECF1  F009         	call	_DireccionaLCD
   691                           
   692                           ;Proyecto.c: 115: _delay((unsigned long)((1500)*(8000000/4000.0)));
   693   000B78  0E10               	movlw	16
   694   000B7A  6E1E               	movwf	(??_main+1)^0,c
   695   000B7C  0E39               	movlw	57
   696   000B7E  6E1D               	movwf	??_main^0,c
   697   000B80  0E0E               	movlw	14
   698   000B82                     u1487:
   699   000B82  2EE8               	decfsz	wreg,f,c
   700   000B84  D7FE               	bra	u1487
   701   000B86  2E1D               	decfsz	??_main^0,f,c
   702   000B88  D7FC               	bra	u1487
   703   000B8A  2E1E               	decfsz	(??_main+1)^0,f,c
   704   000B8C  D7FA               	bra	u1487
   705                           
   706                           ;Proyecto.c: 116: DireccionaLCD(0x80);
   707   000B8E  0E80               	movlw	128
   708   000B90  ECF1  F009         	call	_DireccionaLCD
   709                           
   710                           ;Proyecto.c: 117: MensajeLCD_Word("                ");
   711   000B94  0E01               	movlw	low STR_2
   712   000B96  6E0D               	movwf	MensajeLCD_Word@a^0,c
   713   000B98  EC86  F008         	call	_MensajeLCD_Word	;wreg free
   714                           
   715                           ;Proyecto.c: 118: DireccionaLCD(0x80);
   716   000B9C  0E80               	movlw	128
   717   000B9E  ECF1  F009         	call	_DireccionaLCD
   718                           
   719                           ;Proyecto.c: 119: MensajeLCD_Word("Password:");
   720   000BA2  0E1D               	movlw	low STR_3
   721   000BA4  6E0D               	movwf	MensajeLCD_Word@a^0,c
   722   000BA6  EC86  F008         	call	_MensajeLCD_Word	;wreg free
   723   000BAA  D007               	goto	l2544
   724   000BAC                     l2540:
   725                           
   726                           ;Proyecto.c: 122: DireccionaLCD(0xC1);
   727   000BAC  0EC1               	movlw	193
   728   000BAE  ECF1  F009         	call	_DireccionaLCD
   729                           
   730                           ;Proyecto.c: 123: MensajeLCD_Word("                ");
   731   000BB2  0E01               	movlw	low STR_2
   732   000BB4  6E0D               	movwf	MensajeLCD_Word@a^0,c
   733   000BB6  EC86  F008         	call	_MensajeLCD_Word	;wreg free
   734   000BBA                     l2544:
   735   000BBA  0E06               	movlw	6
   736   000BBC  182F               	xorwf	_ing^0,w,c
   737   000BBE  A4D8               	btfss	status,2,c
   738   000BC0  D7F5               	goto	l2540
   739                           
   740                           ;Proyecto.c: 124: };Proyecto.c: 125: DireccionaLCD(0x80);
   741   000BC2  0E80               	movlw	128
   742   000BC4  ECF1  F009         	call	_DireccionaLCD
   743                           
   744                           ;Proyecto.c: 126: MensajeLCD_Word("                ");
   745   000BC8  0E01               	movlw	low STR_2
   746   000BCA  6E0D               	movwf	MensajeLCD_Word@a^0,c
   747   000BCC  EC86  F008         	call	_MensajeLCD_Word	;wreg free
   748                           
   749                           ;Proyecto.c: 127: DireccionaLCD(0xC1);
   750   000BD0  0EC1               	movlw	193
   751   000BD2  ECF1  F009         	call	_DireccionaLCD
   752                           
   753                           ;Proyecto.c: 128: MensajeLCD_Word("                ");
   754   000BD6  0E01               	movlw	low STR_2
   755   000BD8  6E0D               	movwf	MensajeLCD_Word@a^0,c
   756   000BDA  EC86  F008         	call	_MensajeLCD_Word	;wreg free
   757                           
   758                           ;Proyecto.c: 129: _delay((unsigned long)((500)*(8000000/4000.0)));
   759   000BDE  0E06               	movlw	6
   760   000BE0  6E1E               	movwf	(??_main+1)^0,c
   761   000BE2  0E13               	movlw	19
   762   000BE4  6E1D               	movwf	??_main^0,c
   763   000BE6  0EAE               	movlw	174
   764   000BE8                     u1497:
   765   000BE8  2EE8               	decfsz	wreg,f,c
   766   000BEA  D7FE               	bra	u1497
   767   000BEC  2E1D               	decfsz	??_main^0,f,c
   768   000BEE  D7FC               	bra	u1497
   769   000BF0  2E1E               	decfsz	(??_main+1)^0,f,c
   770   000BF2  D7FA               	bra	u1497
   771                           
   772                           ;Proyecto.c: 130: LeerHT11();
   773   000BF4  EC6C  F009         	call	_LeerHT11	;wreg free
   774                           
   775                           ;Proyecto.c: 131: TransmitirDatos(0, 0);
   776   000BF8  0E00               	movlw	0
   777   000BFA  6E12               	movwf	(TransmitirDatos@Ent1+1)^0,c
   778   000BFC  0E00               	movlw	0
   779   000BFE  6E11               	movwf	TransmitirDatos@Ent1^0,c
   780   000C00  0E00               	movlw	0
   781   000C02  6E14               	movwf	(TransmitirDatos@Ent2+1)^0,c
   782   000C04  0E00               	movlw	0
   783   000C06  6E13               	movwf	TransmitirDatos@Ent2^0,c
   784   000C08  EC1A  F004         	call	_TransmitirDatos	;wreg free
   785                           
   786                           ;Proyecto.c: 132: Velocidad(Temp);
   787   000C0C  C032  F008         	movff	_Temp,Velocidad@val
   788   000C10  6A09               	clrf	(Velocidad@val+1)^0,c
   789   000C12  EC98  F006         	call	_Velocidad	;wreg free
   790   000C16  D7D1               	goto	l2544
   791   000C18                     __end_of_main:
   792                           	callstack 0
   793                           
   794 ;; *************** function _Velocidad *****************
   795 ;; Defined at:
   796 ;;		line 136 in file "Proyecto.c"
   797 ;; Parameters:    Size  Location     Type
   798 ;;  val             2    7[COMRAM] unsigned int 
   799 ;; Auto vars:     Size  Location     Type
   800 ;;		None
   801 ;; Return value:  Size  Location     Type
   802 ;;                  1    wreg      void 
   803 ;; Registers used:
   804 ;;		wreg, status,2, status,0
   805 ;; Tracked objects:
   806 ;;		On entry : 0/0
   807 ;;		On exit  : 0/0
   808 ;;		Unchanged: 0/0
   809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   810 ;;      Params:         2       0       0       0       0       0       0       0       0
   811 ;;      Locals:         0       0       0       0       0       0       0       0       0
   812 ;;      Temps:          0       0       0       0       0       0       0       0       0
   813 ;;      Totals:         2       0       0       0       0       0       0       0       0
   814 ;;Total ram usage:        2 bytes
   815 ;; Hardware stack levels used: 1
   816 ;; Hardware stack levels required when called: 4
   817 ;; This function calls:
   818 ;;		Nothing
   819 ;; This function is called by:
   820 ;;		_main
   821 ;; This function uses a non-reentrant model
   822 ;;
   823                           
   824                           	psect	text1
   825   000D30                     __ptext1:
   826                           	callstack 0
   827   000D30                     _Velocidad:
   828                           	callstack 26
   829                           
   830                           ;Proyecto.c: 137: if (val < 22) {
   831                           
   832                           ;incstack = 0
   833   000D30  5009               	movf	(Velocidad@val+1)^0,w,c
   834   000D32  E107               	bnz	l2250
   835   000D34  0E16               	movlw	22
   836   000D36  5C08               	subwf	Velocidad@val^0,w,c
   837   000D38  B0D8               	btfsc	status,0,c
   838   000D3A  D003               	goto	l2250
   839                           
   840                           ;Proyecto.c: 138: CCPR1L = 0;
   841   000D3C  0E00               	movlw	0
   842   000D3E  6EBE               	movwf	190,c	;volatile
   843                           
   844                           ;Proyecto.c: 139: } else if (val >= 22 && val < 25) {
   845   000D40  0012               	return	
   846   000D42                     l2250:
   847   000D42  5009               	movf	(Velocidad@val+1)^0,w,c
   848   000D44  E104               	bnz	u1100
   849   000D46  0E16               	movlw	22
   850   000D48  5C08               	subwf	Velocidad@val^0,w,c
   851   000D4A  A0D8               	btfss	status,0,c
   852   000D4C  D009               	goto	l2256
   853   000D4E                     u1100:
   854   000D4E  5009               	movf	(Velocidad@val+1)^0,w,c
   855   000D50  E107               	bnz	l2256
   856   000D52  0E19               	movlw	25
   857   000D54  5C08               	subwf	Velocidad@val^0,w,c
   858   000D56  B0D8               	btfsc	status,0,c
   859   000D58  D003               	goto	l2256
   860                           
   861                           ;Proyecto.c: 140: CCPR1L = 19;
   862   000D5A  0E13               	movlw	19
   863   000D5C  6EBE               	movwf	190,c	;volatile
   864                           
   865                           ;Proyecto.c: 141: } else if (val >= 25 && val < 28) {
   866   000D5E  0012               	return	
   867   000D60                     l2256:
   868   000D60  5009               	movf	(Velocidad@val+1)^0,w,c
   869   000D62  E104               	bnz	u1120
   870   000D64  0E19               	movlw	25
   871   000D66  5C08               	subwf	Velocidad@val^0,w,c
   872   000D68  A0D8               	btfss	status,0,c
   873   000D6A  D009               	goto	l2262
   874   000D6C                     u1120:
   875   000D6C  5009               	movf	(Velocidad@val+1)^0,w,c
   876   000D6E  E107               	bnz	l2262
   877   000D70  0E1C               	movlw	28
   878   000D72  5C08               	subwf	Velocidad@val^0,w,c
   879   000D74  B0D8               	btfsc	status,0,c
   880   000D76  D003               	goto	l2262
   881                           
   882                           ;Proyecto.c: 142: CCPR1L = 38;
   883   000D78  0E26               	movlw	38
   884   000D7A  6EBE               	movwf	190,c	;volatile
   885                           
   886                           ;Proyecto.c: 143: } else if (val >= 28 && val < 31) {
   887   000D7C  0012               	return	
   888   000D7E                     l2262:
   889   000D7E  5009               	movf	(Velocidad@val+1)^0,w,c
   890   000D80  E104               	bnz	u1140
   891   000D82  0E1C               	movlw	28
   892   000D84  5C08               	subwf	Velocidad@val^0,w,c
   893   000D86  A0D8               	btfss	status,0,c
   894   000D88  D009               	goto	l2268
   895   000D8A                     u1140:
   896   000D8A  5009               	movf	(Velocidad@val+1)^0,w,c
   897   000D8C  E107               	bnz	l2268
   898   000D8E  0E1F               	movlw	31
   899   000D90  5C08               	subwf	Velocidad@val^0,w,c
   900   000D92  B0D8               	btfsc	status,0,c
   901   000D94  D003               	goto	l2268
   902                           
   903                           ;Proyecto.c: 144: CCPR1L = 57;
   904   000D96  0E39               	movlw	57
   905   000D98  6EBE               	movwf	190,c	;volatile
   906                           
   907                           ;Proyecto.c: 145: } else if (val >= 31 && val < 34) {
   908   000D9A  0012               	return	
   909   000D9C                     l2268:
   910   000D9C  5009               	movf	(Velocidad@val+1)^0,w,c
   911   000D9E  E104               	bnz	u1160
   912   000DA0  0E1F               	movlw	31
   913   000DA2  5C08               	subwf	Velocidad@val^0,w,c
   914   000DA4  A0D8               	btfss	status,0,c
   915   000DA6  D009               	goto	l2274
   916   000DA8                     u1160:
   917   000DA8  5009               	movf	(Velocidad@val+1)^0,w,c
   918   000DAA  E107               	bnz	l2274
   919   000DAC  0E22               	movlw	34
   920   000DAE  5C08               	subwf	Velocidad@val^0,w,c
   921   000DB0  B0D8               	btfsc	status,0,c
   922   000DB2  D003               	goto	l2274
   923                           
   924                           ;Proyecto.c: 146: CCPR1L = 76;
   925   000DB4  0E4C               	movlw	76
   926   000DB6  6EBE               	movwf	190,c	;volatile
   927                           
   928                           ;Proyecto.c: 147: } else if (val >= 34 && val < 37) {
   929   000DB8  0012               	return	
   930   000DBA                     l2274:
   931   000DBA  5009               	movf	(Velocidad@val+1)^0,w,c
   932   000DBC  E104               	bnz	u1180
   933   000DBE  0E22               	movlw	34
   934   000DC0  5C08               	subwf	Velocidad@val^0,w,c
   935   000DC2  A0D8               	btfss	status,0,c
   936   000DC4  D009               	goto	l2280
   937   000DC6                     u1180:
   938   000DC6  5009               	movf	(Velocidad@val+1)^0,w,c
   939   000DC8  E107               	bnz	l2280
   940   000DCA  0E25               	movlw	37
   941   000DCC  5C08               	subwf	Velocidad@val^0,w,c
   942   000DCE  B0D8               	btfsc	status,0,c
   943   000DD0  D003               	goto	l2280
   944                           
   945                           ;Proyecto.c: 148: CCPR1L = 95;
   946   000DD2  0E5F               	movlw	95
   947   000DD4  6EBE               	movwf	190,c	;volatile
   948                           
   949                           ;Proyecto.c: 149: } else if (val >= 37 && val < 40) {
   950   000DD6  0012               	return	
   951   000DD8                     l2280:
   952   000DD8  5009               	movf	(Velocidad@val+1)^0,w,c
   953   000DDA  E104               	bnz	u1200
   954   000DDC  0E25               	movlw	37
   955   000DDE  5C08               	subwf	Velocidad@val^0,w,c
   956   000DE0  A0D8               	btfss	status,0,c
   957   000DE2  D009               	goto	l2286
   958   000DE4                     u1200:
   959   000DE4  5009               	movf	(Velocidad@val+1)^0,w,c
   960   000DE6  E107               	bnz	l2286
   961   000DE8  0E28               	movlw	40
   962   000DEA  5C08               	subwf	Velocidad@val^0,w,c
   963   000DEC  B0D8               	btfsc	status,0,c
   964   000DEE  D003               	goto	l2286
   965                           
   966                           ;Proyecto.c: 150: CCPR1L = 113;
   967   000DF0  0E71               	movlw	113
   968   000DF2  6EBE               	movwf	190,c	;volatile
   969                           
   970                           ;Proyecto.c: 151: } else if (val >= 40) {
   971   000DF4  0012               	return	
   972   000DF6                     l2286:
   973   000DF6  5009               	movf	(Velocidad@val+1)^0,w,c
   974   000DF8  E104               	bnz	u1220
   975   000DFA  0E28               	movlw	40
   976   000DFC  5C08               	subwf	Velocidad@val^0,w,c
   977   000DFE  A0D8               	btfss	status,0,c
   978   000E00  0012               	return	
   979   000E02                     u1220:
   980                           
   981                           ;Proyecto.c: 152: CCPR1L = 126;
   982   000E02  0E7E               	movlw	126
   983   000E04  6EBE               	movwf	190,c	;volatile
   984   000E06  0012               	return	
   985   000E08                     __end_of_Velocidad:
   986                           	callstack 0
   987                           
   988 ;; *************** function _TransmitirDatos *****************
   989 ;; Defined at:
   990 ;;		line 259 in file "Proyecto.c"
   991 ;; Parameters:    Size  Location     Type
   992 ;;  Ent1            2   16[COMRAM] unsigned int 
   993 ;;  Ent2            2   18[COMRAM] unsigned int 
   994 ;; Auto vars:     Size  Location     Type
   995 ;;  TempC           2   26[COMRAM] unsigned int 
   996 ;;  Simb            2   24[COMRAM] unsigned int 
   997 ;;  n               2   22[COMRAM] unsigned int 
   998 ;;  HumedadC        2    0        unsigned int 
   999 ;; Return value:  Size  Location     Type
  1000 ;;                  1    wreg      void 
  1001 ;; Registers used:
  1002 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1003 ;; Tracked objects:
  1004 ;;		On entry : 0/0
  1005 ;;		On exit  : 0/0
  1006 ;;		Unchanged: 0/0
  1007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1008 ;;      Params:         4       0       0       0       0       0       0       0       0
  1009 ;;      Locals:         6       0       0       0       0       0       0       0       0
  1010 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1011 ;;      Totals:        12       0       0       0       0       0       0       0       0
  1012 ;;Total ram usage:       12 bytes
  1013 ;; Hardware stack levels used: 1
  1014 ;; Hardware stack levels required when called: 8
  1015 ;; This function calls:
  1016 ;;		_BorraLCD
  1017 ;;		_DireccionaLCD
  1018 ;;		_EscribeLCD_c
  1019 ;;		_MensajeLCD_Word
  1020 ;;		_Transmitir
  1021 ;;		___awdiv
  1022 ;;		___lbdiv
  1023 ;;		___lbmod
  1024 ;;		___lwdiv
  1025 ;;		___lwmod
  1026 ;;		___wmul
  1027 ;; This function is called by:
  1028 ;;		_main
  1029 ;; This function uses a non-reentrant model
  1030 ;;
  1031                           
  1032                           	psect	text2
  1033   000834                     __ptext2:
  1034                           	callstack 0
  1035   000834                     _TransmitirDatos:
  1036                           	callstack 22
  1037                           
  1038                           ;Proyecto.c: 260: unsigned int n = Ent1 * 10 + Ent2, TempC = Temp, HumedadC = Humedad;
  1039                           
  1040                           ;incstack = 0
  1041   000834  C011  F008         	movff	TransmitirDatos@Ent1,___wmul@multiplier
  1042   000838  C012  F009         	movff	TransmitirDatos@Ent1+1,___wmul@multiplier+1
  1043   00083C  0E00               	movlw	0
  1044   00083E  6E0B               	movwf	(___wmul@multiplicand+1)^0,c
  1045   000840  0E0A               	movlw	10
  1046   000842  6E0A               	movwf	___wmul@multiplicand^0,c
  1047   000844  ECCD  F009         	call	___wmul	;wreg free
  1048   000848  5013               	movf	TransmitirDatos@Ent2^0,w,c
  1049   00084A  2408               	addwf	?___wmul^0,w,c
  1050   00084C  6E17               	movwf	TransmitirDatos@n^0,c
  1051   00084E  5014               	movf	(TransmitirDatos@Ent2+1)^0,w,c
  1052   000850  2009               	addwfc	(?___wmul+1)^0,w,c
  1053   000852  6E18               	movwf	(TransmitirDatos@n+1)^0,c
  1054   000854  C032  F01B         	movff	_Temp,TransmitirDatos@TempC
  1055   000858  6A1C               	clrf	(TransmitirDatos@TempC+1)^0,c
  1056                           
  1057                           ;Proyecto.c: 261: unsigned int Simb = 67;
  1058   00085A  0E00               	movlw	0
  1059   00085C  6E1A               	movwf	(TransmitirDatos@Simb+1)^0,c
  1060   00085E  0E43               	movlw	67
  1061   000860  6E19               	movwf	TransmitirDatos@Simb^0,c
  1062                           
  1063                           ;Proyecto.c: 262: BorraLCD();
  1064   000862  EC12  F00A         	call	_BorraLCD	;wreg free
  1065                           
  1066                           ;Proyecto.c: 263: switch (n) {
  1067   000866  D03E               	goto	l2186
  1068   000868                     l287:
  1069                           
  1070                           ;Proyecto.c: 265: TempC = Temp;
  1071   000868  C032  F01B         	movff	_Temp,TransmitirDatos@TempC
  1072   00086C  6A1C               	clrf	(TransmitirDatos@TempC+1)^0,c
  1073                           
  1074                           ;Proyecto.c: 266: Simb = 67;
  1075   00086E  0E00               	movlw	0
  1076   000870  6E1A               	movwf	(TransmitirDatos@Simb+1)^0,c
  1077   000872  0E43               	movlw	67
  1078   000874  D035               	goto	L3
  1079   000876                     l2172:
  1080                           
  1081                           ;Proyecto.c: 269: TempC = Temp + 273;
  1082   000876  0E11               	movlw	17
  1083   000878  2432               	addwf	_Temp^0,w,c
  1084   00087A  6E1B               	movwf	TransmitirDatos@TempC^0,c
  1085   00087C  6A1C               	clrf	(TransmitirDatos@TempC+1)^0,c
  1086   00087E  0E01               	movlw	1
  1087   000880  221C               	addwfc	(TransmitirDatos@TempC+1)^0,f,c
  1088                           
  1089                           ;Proyecto.c: 270: Simb = 75;
  1090   000882  0E00               	movlw	0
  1091   000884  6E1A               	movwf	(TransmitirDatos@Simb+1)^0,c
  1092   000886  0E4B               	movlw	75
  1093   000888  D02B               	goto	L3
  1094   00088A                     l2176:
  1095                           
  1096                           ;Proyecto.c: 273: TempC = Temp * 9 / 5 + 492;
  1097   00088A  5032               	movf	_Temp^0,w,c
  1098   00088C  0D09               	mullw	9
  1099   00088E  CFF3 F008          	movff	prodl,___awdiv@dividend
  1100   000892  CFF4 F009          	movff	prodh,___awdiv@dividend+1
  1101   000896  0E00               	movlw	0
  1102   000898  6E0B               	movwf	(___awdiv@divisor+1)^0,c
  1103   00089A  0E05               	movlw	5
  1104   00089C  6E0A               	movwf	___awdiv@divisor^0,c
  1105   00089E  ECB5  F007         	call	___awdiv	;wreg free
  1106   0008A2  0EEC               	movlw	236
  1107   0008A4  2408               	addwf	?___awdiv^0,w,c
  1108   0008A6  6E1B               	movwf	TransmitirDatos@TempC^0,c
  1109   0008A8  0E01               	movlw	1
  1110   0008AA  2009               	addwfc	(?___awdiv+1)^0,w,c
  1111   0008AC  6E1C               	movwf	(TransmitirDatos@TempC+1)^0,c
  1112                           
  1113                           ;Proyecto.c: 274: Simb = 82;
  1114   0008AE  0E00               	movlw	0
  1115   0008B0  6E1A               	movwf	(TransmitirDatos@Simb+1)^0,c
  1116   0008B2  0E52               	movlw	82
  1117   0008B4  D015               	goto	L3
  1118   0008B6                     l2180:
  1119                           
  1120                           ;Proyecto.c: 277: TempC = Temp * 9 / 5 + 32;
  1121   0008B6  5032               	movf	_Temp^0,w,c
  1122   0008B8  0D09               	mullw	9
  1123   0008BA  CFF3 F008          	movff	prodl,___awdiv@dividend
  1124   0008BE  CFF4 F009          	movff	prodh,___awdiv@dividend+1
  1125   0008C2  0E00               	movlw	0
  1126   0008C4  6E0B               	movwf	(___awdiv@divisor+1)^0,c
  1127   0008C6  0E05               	movlw	5
  1128   0008C8  6E0A               	movwf	___awdiv@divisor^0,c
  1129   0008CA  ECB5  F007         	call	___awdiv	;wreg free
  1130   0008CE  0E20               	movlw	32
  1131   0008D0  2408               	addwf	?___awdiv^0,w,c
  1132   0008D2  6E1B               	movwf	TransmitirDatos@TempC^0,c
  1133   0008D4  0E00               	movlw	0
  1134   0008D6  2009               	addwfc	(?___awdiv+1)^0,w,c
  1135   0008D8  6E1C               	movwf	(TransmitirDatos@TempC+1)^0,c
  1136                           
  1137                           ;Proyecto.c: 278: Simb = 70;
  1138   0008DA  0E00               	movlw	0
  1139   0008DC  6E1A               	movwf	(TransmitirDatos@Simb+1)^0,c
  1140   0008DE  0E46               	movlw	70
  1141   0008E0                     L3:
  1142   0008E0  6E19               	movwf	TransmitirDatos@Simb^0,c
  1143                           
  1144                           ;Proyecto.c: 279: break;
  1145   0008E2  D015               	goto	l2188
  1146   0008E4                     l2186:
  1147   0008E4  C017  F015         	movff	TransmitirDatos@n,??_TransmitirDatos
  1148   0008E8  C018  F016         	movff	TransmitirDatos@n+1,??_TransmitirDatos+1
  1149                           
  1150                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1151                           ; Switch size 1, requested type "simple"
  1152                           ; Number of cases is 1, Range of values is 0 to 0
  1153                           ; switch strategies available:
  1154                           ; Name         Instructions Cycles
  1155                           ; simple_byte            4     3 (average)
  1156                           ;	Chosen strategy is simple_byte
  1157   0008EC  5016               	movf	(??_TransmitirDatos+1)^0,w,c
  1158   0008EE  0A00               	xorlw	0	; case 0
  1159   0008F0  A4D8               	btfss	status,2,c
  1160   0008F2  D00D               	goto	l2188
  1161                           
  1162                           ; Switch size 1, requested type "simple"
  1163                           ; Number of cases is 4, Range of values is 0 to 11
  1164                           ; switch strategies available:
  1165                           ; Name         Instructions Cycles
  1166                           ; simple_byte           13     7 (average)
  1167                           ;	Chosen strategy is simple_byte
  1168   0008F4  5015               	movf	??_TransmitirDatos^0,w,c
  1169   0008F6  0A00               	xorlw	0	; case 0
  1170   0008F8  B4D8               	btfsc	status,2,c
  1171   0008FA  D7B6               	goto	l287
  1172   0008FC  0A01               	xorlw	1	; case 1
  1173   0008FE  B4D8               	btfsc	status,2,c
  1174   000900  D7BA               	goto	l2172
  1175   000902  0A0B               	xorlw	11	; case 10
  1176   000904  B4D8               	btfsc	status,2,c
  1177   000906  D7C1               	goto	l2176
  1178   000908  0A01               	xorlw	1	; case 11
  1179   00090A  B4D8               	btfsc	status,2,c
  1180   00090C  D7D4               	goto	l2180
  1181   00090E                     l2188:
  1182                           
  1183                           ;Proyecto.c: 281: Transmitir('T');
  1184   00090E  0E54               	movlw	84
  1185   000910  EC30  F00A         	call	_Transmitir
  1186                           
  1187                           ;Proyecto.c: 282: Transmitir('e');
  1188   000914  0E65               	movlw	101
  1189   000916  EC30  F00A         	call	_Transmitir
  1190                           
  1191                           ;Proyecto.c: 283: Transmitir('m');
  1192   00091A  0E6D               	movlw	109
  1193   00091C  EC30  F00A         	call	_Transmitir
  1194                           
  1195                           ;Proyecto.c: 284: Transmitir('p');
  1196   000920  0E70               	movlw	112
  1197   000922  EC30  F00A         	call	_Transmitir
  1198                           
  1199                           ;Proyecto.c: 285: Transmitir(':');
  1200   000926  0E3A               	movlw	58
  1201   000928  EC30  F00A         	call	_Transmitir
  1202                           
  1203                           ;Proyecto.c: 286: Transmitir(' ');
  1204   00092C  0E20               	movlw	32
  1205   00092E  EC30  F00A         	call	_Transmitir
  1206                           
  1207                           ;Proyecto.c: 288: MensajeLCD_Word("Temp:");
  1208   000932  0E27               	movlw	low STR_7
  1209   000934  6E0D               	movwf	MensajeLCD_Word@a^0,c
  1210   000936  EC86  F008         	call	_MensajeLCD_Word	;wreg free
  1211                           
  1212                           ;Proyecto.c: 289: if (TempC / 100 > 0) {
  1213   00093A  C01B  F008         	movff	TransmitirDatos@TempC,___lwdiv@dividend
  1214   00093E  C01C  F009         	movff	TransmitirDatos@TempC+1,___lwdiv@dividend+1
  1215   000942  0E00               	movlw	0
  1216   000944  6E0B               	movwf	(___lwdiv@divisor+1)^0,c
  1217   000946  0E64               	movlw	100
  1218   000948  6E0A               	movwf	___lwdiv@divisor^0,c
  1219   00094A  EC5D  F008         	call	___lwdiv	;wreg free
  1220   00094E  5008               	movf	?___lwdiv^0,w,c
  1221   000950  1009               	iorwf	(?___lwdiv+1)^0,w,c
  1222   000952  B4D8               	btfsc	status,2,c
  1223   000954  D02A               	goto	l292
  1224                           
  1225                           ;Proyecto.c: 290: Transmitir(TempC / 100 + 48);
  1226   000956  C01B  F008         	movff	TransmitirDatos@TempC,___lwdiv@dividend
  1227   00095A  C01C  F009         	movff	TransmitirDatos@TempC+1,___lwdiv@dividend+1
  1228   00095E  0E00               	movlw	0
  1229   000960  6E0B               	movwf	(___lwdiv@divisor+1)^0,c
  1230   000962  0E64               	movlw	100
  1231   000964  6E0A               	movwf	___lwdiv@divisor^0,c
  1232   000966  EC5D  F008         	call	___lwdiv	;wreg free
  1233   00096A  5008               	movf	?___lwdiv^0,w,c
  1234   00096C  0F30               	addlw	48
  1235   00096E  EC30  F00A         	call	_Transmitir
  1236                           
  1237                           ;Proyecto.c: 291: EscribeLCD_c(TempC / 100 + 48);
  1238   000972  C01B  F008         	movff	TransmitirDatos@TempC,___lwdiv@dividend
  1239   000976  C01C  F009         	movff	TransmitirDatos@TempC+1,___lwdiv@dividend+1
  1240   00097A  0E00               	movlw	0
  1241   00097C  6E0B               	movwf	(___lwdiv@divisor+1)^0,c
  1242   00097E  0E64               	movlw	100
  1243   000980  6E0A               	movwf	___lwdiv@divisor^0,c
  1244   000982  EC5D  F008         	call	___lwdiv	;wreg free
  1245   000986  5008               	movf	?___lwdiv^0,w,c
  1246   000988  0F30               	addlw	48
  1247   00098A  ECFC  F009         	call	_EscribeLCD_c
  1248                           
  1249                           ;Proyecto.c: 292: TempC = TempC % 100;
  1250   00098E  C01B  F008         	movff	TransmitirDatos@TempC,___lwmod@dividend
  1251   000992  C01C  F009         	movff	TransmitirDatos@TempC+1,___lwmod@dividend+1
  1252   000996  0E00               	movlw	0
  1253   000998  6E0B               	movwf	(___lwmod@divisor+1)^0,c
  1254   00099A  0E64               	movlw	100
  1255   00099C  6E0A               	movwf	___lwmod@divisor^0,c
  1256   00099E  ECF3  F008         	call	___lwmod	;wreg free
  1257   0009A2  C008  F01B         	movff	?___lwmod,TransmitirDatos@TempC
  1258   0009A6  C009  F01C         	movff	?___lwmod+1,TransmitirDatos@TempC+1
  1259   0009AA                     l292:
  1260                           
  1261                           ;Proyecto.c: 293: };Proyecto.c: 294: Transmitir(TempC / 10 + 48);
  1262   0009AA  C01B  F008         	movff	TransmitirDatos@TempC,___lwdiv@dividend
  1263   0009AE  C01C  F009         	movff	TransmitirDatos@TempC+1,___lwdiv@dividend+1
  1264   0009B2  0E00               	movlw	0
  1265   0009B4  6E0B               	movwf	(___lwdiv@divisor+1)^0,c
  1266   0009B6  0E0A               	movlw	10
  1267   0009B8  6E0A               	movwf	___lwdiv@divisor^0,c
  1268   0009BA  EC5D  F008         	call	___lwdiv	;wreg free
  1269   0009BE  5008               	movf	?___lwdiv^0,w,c
  1270   0009C0  0F30               	addlw	48
  1271   0009C2  EC30  F00A         	call	_Transmitir
  1272                           
  1273                           ;Proyecto.c: 295: Transmitir(TempC % 10 + 48);
  1274   0009C6  C01B  F008         	movff	TransmitirDatos@TempC,___lwmod@dividend
  1275   0009CA  C01C  F009         	movff	TransmitirDatos@TempC+1,___lwmod@dividend+1
  1276   0009CE  0E00               	movlw	0
  1277   0009D0  6E0B               	movwf	(___lwmod@divisor+1)^0,c
  1278   0009D2  0E0A               	movlw	10
  1279   0009D4  6E0A               	movwf	___lwmod@divisor^0,c
  1280   0009D6  ECF3  F008         	call	___lwmod	;wreg free
  1281   0009DA  5008               	movf	?___lwmod^0,w,c
  1282   0009DC  0F30               	addlw	48
  1283   0009DE  EC30  F00A         	call	_Transmitir
  1284                           
  1285                           ;Proyecto.c: 296: Transmitir(167);
  1286   0009E2  0EA7               	movlw	167
  1287   0009E4  EC30  F00A         	call	_Transmitir
  1288                           
  1289                           ;Proyecto.c: 297: Transmitir(Simb);
  1290   0009E8  5019               	movf	TransmitirDatos@Simb^0,w,c
  1291   0009EA  EC30  F00A         	call	_Transmitir
  1292                           
  1293                           ;Proyecto.c: 298: Transmitir(' ');
  1294   0009EE  0E20               	movlw	32
  1295   0009F0  EC30  F00A         	call	_Transmitir
  1296                           
  1297                           ;Proyecto.c: 299: Transmitir('\n');
  1298   0009F4  0E0A               	movlw	10
  1299   0009F6  EC30  F00A         	call	_Transmitir
  1300                           
  1301                           ;Proyecto.c: 300: Transmitir('H');
  1302   0009FA  0E48               	movlw	72
  1303   0009FC  EC30  F00A         	call	_Transmitir
  1304                           
  1305                           ;Proyecto.c: 301: Transmitir('u');
  1306   000A00  0E75               	movlw	117
  1307   000A02  EC30  F00A         	call	_Transmitir
  1308                           
  1309                           ;Proyecto.c: 302: Transmitir('m');
  1310   000A06  0E6D               	movlw	109
  1311   000A08  EC30  F00A         	call	_Transmitir
  1312                           
  1313                           ;Proyecto.c: 303: Transmitir(':');
  1314   000A0C  0E3A               	movlw	58
  1315   000A0E  EC30  F00A         	call	_Transmitir
  1316                           
  1317                           ;Proyecto.c: 304: Transmitir(' ');
  1318   000A12  0E20               	movlw	32
  1319   000A14  EC30  F00A         	call	_Transmitir
  1320                           
  1321                           ;Proyecto.c: 305: Transmitir(Humedad / 10 + 48);
  1322   000A18  0E0A               	movlw	10
  1323   000A1A  6E08               	movwf	___lbdiv@divisor^0,c
  1324   000A1C  5031               	movf	_Humedad^0,w,c
  1325   000A1E  EC4F  F009         	call	___lbdiv
  1326   000A22  0F30               	addlw	48
  1327   000A24  EC30  F00A         	call	_Transmitir
  1328                           
  1329                           ;Proyecto.c: 306: Transmitir(Humedad % 10 + 48);
  1330   000A28  0E0A               	movlw	10
  1331   000A2A  6E08               	movwf	___lbmod@divisor^0,c
  1332   000A2C  5031               	movf	_Humedad^0,w,c
  1333   000A2E  ECB8  F009         	call	___lbmod
  1334   000A32  0F30               	addlw	48
  1335   000A34  EC30  F00A         	call	_Transmitir
  1336                           
  1337                           ;Proyecto.c: 307: Transmitir(' ');
  1338   000A38  0E20               	movlw	32
  1339   000A3A  EC30  F00A         	call	_Transmitir
  1340                           
  1341                           ;Proyecto.c: 308: Transmitir('%');
  1342   000A3E  0E25               	movlw	37
  1343   000A40  EC30  F00A         	call	_Transmitir
  1344                           
  1345                           ;Proyecto.c: 309: Transmitir('\n');
  1346   000A44  0E0A               	movlw	10
  1347   000A46  EC30  F00A         	call	_Transmitir
  1348                           
  1349                           ;Proyecto.c: 310: Transmitir(' ');
  1350   000A4A  0E20               	movlw	32
  1351   000A4C  EC30  F00A         	call	_Transmitir
  1352                           
  1353                           ;Proyecto.c: 312: EscribeLCD_c(TempC / 10 + 48);
  1354   000A50  C01B  F008         	movff	TransmitirDatos@TempC,___lwdiv@dividend
  1355   000A54  C01C  F009         	movff	TransmitirDatos@TempC+1,___lwdiv@dividend+1
  1356   000A58  0E00               	movlw	0
  1357   000A5A  6E0B               	movwf	(___lwdiv@divisor+1)^0,c
  1358   000A5C  0E0A               	movlw	10
  1359   000A5E  6E0A               	movwf	___lwdiv@divisor^0,c
  1360   000A60  EC5D  F008         	call	___lwdiv	;wreg free
  1361   000A64  5008               	movf	?___lwdiv^0,w,c
  1362   000A66  0F30               	addlw	48
  1363   000A68  ECFC  F009         	call	_EscribeLCD_c
  1364                           
  1365                           ;Proyecto.c: 313: EscribeLCD_c(TempC % 10 + 48);
  1366   000A6C  C01B  F008         	movff	TransmitirDatos@TempC,___lwmod@dividend
  1367   000A70  C01C  F009         	movff	TransmitirDatos@TempC+1,___lwmod@dividend+1
  1368   000A74  0E00               	movlw	0
  1369   000A76  6E0B               	movwf	(___lwmod@divisor+1)^0,c
  1370   000A78  0E0A               	movlw	10
  1371   000A7A  6E0A               	movwf	___lwmod@divisor^0,c
  1372   000A7C  ECF3  F008         	call	___lwmod	;wreg free
  1373   000A80  5008               	movf	?___lwmod^0,w,c
  1374   000A82  0F30               	addlw	48
  1375   000A84  ECFC  F009         	call	_EscribeLCD_c
  1376                           
  1377                           ;Proyecto.c: 314: EscribeLCD_c(Simb);
  1378   000A88  5019               	movf	TransmitirDatos@Simb^0,w,c
  1379   000A8A  ECFC  F009         	call	_EscribeLCD_c
  1380                           
  1381                           ;Proyecto.c: 315: DireccionaLCD(192);
  1382   000A8E  0EC0               	movlw	192
  1383   000A90  ECF1  F009         	call	_DireccionaLCD
  1384                           
  1385                           ;Proyecto.c: 316: MensajeLCD_Word("Hum:");
  1386   000A94  0E2D               	movlw	low STR_8
  1387   000A96  6E0D               	movwf	MensajeLCD_Word@a^0,c
  1388   000A98  EC86  F008         	call	_MensajeLCD_Word	;wreg free
  1389                           
  1390                           ;Proyecto.c: 317: EscribeLCD_c(Humedad / 10 + 48);
  1391   000A9C  0E0A               	movlw	10
  1392   000A9E  6E08               	movwf	___lbdiv@divisor^0,c
  1393   000AA0  5031               	movf	_Humedad^0,w,c
  1394   000AA2  EC4F  F009         	call	___lbdiv
  1395   000AA6  0F30               	addlw	48
  1396   000AA8  ECFC  F009         	call	_EscribeLCD_c
  1397                           
  1398                           ;Proyecto.c: 318: EscribeLCD_c(Humedad % 10 + 48);
  1399   000AAC  0E0A               	movlw	10
  1400   000AAE  6E08               	movwf	___lbmod@divisor^0,c
  1401   000AB0  5031               	movf	_Humedad^0,w,c
  1402   000AB2  ECB8  F009         	call	___lbmod
  1403   000AB6  0F30               	addlw	48
  1404   000AB8  ECFC  F009         	call	_EscribeLCD_c
  1405                           
  1406                           ;Proyecto.c: 319: EscribeLCD_c('%');
  1407   000ABC  0E25               	movlw	37
  1408   000ABE  ECFC  F009         	call	_EscribeLCD_c
  1409   000AC2  0012               	return		;funcret
  1410   000AC4                     __end_of_TransmitirDatos:
  1411                           	callstack 0
  1412                           
  1413 ;; *************** function ___wmul *****************
  1414 ;; Defined at:
  1415 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul16.c"
  1416 ;; Parameters:    Size  Location     Type
  1417 ;;  multiplier      2    7[COMRAM] unsigned int 
  1418 ;;  multiplicand    2    9[COMRAM] unsigned int 
  1419 ;; Auto vars:     Size  Location     Type
  1420 ;;  product         2   11[COMRAM] unsigned int 
  1421 ;; Return value:  Size  Location     Type
  1422 ;;                  2    7[COMRAM] unsigned int 
  1423 ;; Registers used:
  1424 ;;		wreg, status,2, status,0, prodl, prodh
  1425 ;; Tracked objects:
  1426 ;;		On entry : 0/0
  1427 ;;		On exit  : 0/0
  1428 ;;		Unchanged: 0/0
  1429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1430 ;;      Params:         4       0       0       0       0       0       0       0       0
  1431 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1432 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1433 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1434 ;;Total ram usage:        6 bytes
  1435 ;; Hardware stack levels used: 1
  1436 ;; Hardware stack levels required when called: 4
  1437 ;; This function calls:
  1438 ;;		Nothing
  1439 ;; This function is called by:
  1440 ;;		_TransmitirDatos
  1441 ;; This function uses a non-reentrant model
  1442 ;;
  1443                           
  1444                           	psect	text3
  1445   00139A                     __ptext3:
  1446                           	callstack 0
  1447   00139A                     ___wmul:
  1448                           	callstack 25
  1449                           
  1450                           ;incstack = 0
  1451   00139A  5008               	movf	___wmul@multiplier^0,w,c
  1452   00139C  020A               	mulwf	___wmul@multiplicand^0,c
  1453   00139E  CFF3 F00C          	movff	prodl,___wmul@product
  1454   0013A2  CFF4 F00D          	movff	prodh,___wmul@product+1
  1455   0013A6  5008               	movf	___wmul@multiplier^0,w,c
  1456   0013A8  020B               	mulwf	(___wmul@multiplicand+1)^0,c
  1457   0013AA  50F3               	movf	243,w,c
  1458   0013AC  260D               	addwf	(___wmul@product+1)^0,f,c
  1459   0013AE  5009               	movf	(___wmul@multiplier+1)^0,w,c
  1460   0013B0  020A               	mulwf	___wmul@multiplicand^0,c
  1461   0013B2  50F3               	movf	243,w,c
  1462   0013B4  260D               	addwf	(___wmul@product+1)^0,f,c
  1463   0013B6  C00C  F008         	movff	___wmul@product,?___wmul
  1464   0013BA  C00D  F009         	movff	___wmul@product+1,?___wmul+1
  1465   0013BE  0012               	return		;funcret
  1466   0013C0                     __end_of___wmul:
  1467                           	callstack 0
  1468                           
  1469 ;; *************** function ___lwmod *****************
  1470 ;; Defined at:
  1471 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwmod.c"
  1472 ;; Parameters:    Size  Location     Type
  1473 ;;  dividend        2    7[COMRAM] unsigned int 
  1474 ;;  divisor         2    9[COMRAM] unsigned int 
  1475 ;; Auto vars:     Size  Location     Type
  1476 ;;  counter         1   11[COMRAM] unsigned char 
  1477 ;; Return value:  Size  Location     Type
  1478 ;;                  2    7[COMRAM] unsigned int 
  1479 ;; Registers used:
  1480 ;;		wreg, status,2, status,0
  1481 ;; Tracked objects:
  1482 ;;		On entry : 0/0
  1483 ;;		On exit  : 0/0
  1484 ;;		Unchanged: 0/0
  1485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1486 ;;      Params:         4       0       0       0       0       0       0       0       0
  1487 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1488 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1489 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1490 ;;Total ram usage:        5 bytes
  1491 ;; Hardware stack levels used: 1
  1492 ;; Hardware stack levels required when called: 4
  1493 ;; This function calls:
  1494 ;;		Nothing
  1495 ;; This function is called by:
  1496 ;;		_TransmitirDatos
  1497 ;; This function uses a non-reentrant model
  1498 ;;
  1499                           
  1500                           	psect	text4
  1501   0011E6                     __ptext4:
  1502                           	callstack 0
  1503   0011E6                     ___lwmod:
  1504                           	callstack 25
  1505                           
  1506                           ;incstack = 0
  1507   0011E6  500A               	movf	___lwmod@divisor^0,w,c
  1508   0011E8  100B               	iorwf	(___lwmod@divisor+1)^0,w,c
  1509   0011EA  B4D8               	btfsc	status,2,c
  1510   0011EC  D018               	goto	l832
  1511   0011EE  0E01               	movlw	1
  1512   0011F0  6E0C               	movwf	___lwmod@counter^0,c
  1513   0011F2  D004               	goto	l2058
  1514   0011F4                     l2056:
  1515   0011F4  90D8               	bcf	status,0,c
  1516   0011F6  360A               	rlcf	___lwmod@divisor^0,f,c
  1517   0011F8  360B               	rlcf	(___lwmod@divisor+1)^0,f,c
  1518   0011FA  2A0C               	incf	___lwmod@counter^0,f,c
  1519   0011FC                     l2058:
  1520   0011FC  AE0B               	btfss	(___lwmod@divisor+1)^0,7,c
  1521   0011FE  D7FA               	goto	l2056
  1522   001200                     u970:
  1523   001200  500A               	movf	___lwmod@divisor^0,w,c
  1524   001202  5C08               	subwf	___lwmod@dividend^0,w,c
  1525   001204  500B               	movf	(___lwmod@divisor+1)^0,w,c
  1526   001206  5809               	subwfb	(___lwmod@dividend+1)^0,w,c
  1527   001208  A0D8               	btfss	status,0,c
  1528   00120A  D004               	goto	l2064
  1529   00120C  500A               	movf	___lwmod@divisor^0,w,c
  1530   00120E  5E08               	subwf	___lwmod@dividend^0,f,c
  1531   001210  500B               	movf	(___lwmod@divisor+1)^0,w,c
  1532   001212  5A09               	subwfb	(___lwmod@dividend+1)^0,f,c
  1533   001214                     l2064:
  1534   001214  90D8               	bcf	status,0,c
  1535   001216  320B               	rrcf	(___lwmod@divisor+1)^0,f,c
  1536   001218  320A               	rrcf	___lwmod@divisor^0,f,c
  1537   00121A  2E0C               	decfsz	___lwmod@counter^0,f,c
  1538   00121C  D7F1               	goto	u970
  1539   00121E                     l832:
  1540   00121E  C008  F008         	movff	___lwmod@dividend,?___lwmod
  1541   001222  C009  F009         	movff	___lwmod@dividend+1,?___lwmod+1
  1542   001226  0012               	return		;funcret
  1543   001228                     __end_of___lwmod:
  1544                           	callstack 0
  1545                           
  1546 ;; *************** function ___lwdiv *****************
  1547 ;; Defined at:
  1548 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwdiv.c"
  1549 ;; Parameters:    Size  Location     Type
  1550 ;;  dividend        2    7[COMRAM] unsigned int 
  1551 ;;  divisor         2    9[COMRAM] unsigned int 
  1552 ;; Auto vars:     Size  Location     Type
  1553 ;;  quotient        2   11[COMRAM] unsigned int 
  1554 ;;  counter         1   13[COMRAM] unsigned char 
  1555 ;; Return value:  Size  Location     Type
  1556 ;;                  2    7[COMRAM] unsigned int 
  1557 ;; Registers used:
  1558 ;;		wreg, status,2, status,0
  1559 ;; Tracked objects:
  1560 ;;		On entry : 0/0
  1561 ;;		On exit  : 0/0
  1562 ;;		Unchanged: 0/0
  1563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1564 ;;      Params:         4       0       0       0       0       0       0       0       0
  1565 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1566 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1567 ;;      Totals:         7       0       0       0       0       0       0       0       0
  1568 ;;Total ram usage:        7 bytes
  1569 ;; Hardware stack levels used: 1
  1570 ;; Hardware stack levels required when called: 4
  1571 ;; This function calls:
  1572 ;;		Nothing
  1573 ;; This function is called by:
  1574 ;;		_TransmitirDatos
  1575 ;; This function uses a non-reentrant model
  1576 ;;
  1577                           
  1578                           	psect	text5
  1579   0010BA                     __ptext5:
  1580                           	callstack 0
  1581   0010BA                     ___lwdiv:
  1582                           	callstack 25
  1583                           
  1584                           ;incstack = 0
  1585   0010BA  0E00               	movlw	0
  1586   0010BC  6E0D               	movwf	(___lwdiv@quotient+1)^0,c
  1587   0010BE  0E00               	movlw	0
  1588   0010C0  6E0C               	movwf	___lwdiv@quotient^0,c
  1589   0010C2  500A               	movf	___lwdiv@divisor^0,w,c
  1590   0010C4  100B               	iorwf	(___lwdiv@divisor+1)^0,w,c
  1591   0010C6  B4D8               	btfsc	status,2,c
  1592   0010C8  D01C               	goto	l822
  1593   0010CA  0E01               	movlw	1
  1594   0010CC  6E0E               	movwf	___lwdiv@counter^0,c
  1595   0010CE  D004               	goto	l2038
  1596   0010D0                     l2036:
  1597   0010D0  90D8               	bcf	status,0,c
  1598   0010D2  360A               	rlcf	___lwdiv@divisor^0,f,c
  1599   0010D4  360B               	rlcf	(___lwdiv@divisor+1)^0,f,c
  1600   0010D6  2A0E               	incf	___lwdiv@counter^0,f,c
  1601   0010D8                     l2038:
  1602   0010D8  AE0B               	btfss	(___lwdiv@divisor+1)^0,7,c
  1603   0010DA  D7FA               	goto	l2036
  1604   0010DC                     u940:
  1605   0010DC  90D8               	bcf	status,0,c
  1606   0010DE  360C               	rlcf	___lwdiv@quotient^0,f,c
  1607   0010E0  360D               	rlcf	(___lwdiv@quotient+1)^0,f,c
  1608   0010E2  500A               	movf	___lwdiv@divisor^0,w,c
  1609   0010E4  5C08               	subwf	___lwdiv@dividend^0,w,c
  1610   0010E6  500B               	movf	(___lwdiv@divisor+1)^0,w,c
  1611   0010E8  5809               	subwfb	(___lwdiv@dividend+1)^0,w,c
  1612   0010EA  A0D8               	btfss	status,0,c
  1613   0010EC  D005               	goto	l2048
  1614   0010EE  500A               	movf	___lwdiv@divisor^0,w,c
  1615   0010F0  5E08               	subwf	___lwdiv@dividend^0,f,c
  1616   0010F2  500B               	movf	(___lwdiv@divisor+1)^0,w,c
  1617   0010F4  5A09               	subwfb	(___lwdiv@dividend+1)^0,f,c
  1618   0010F6  800C               	bsf	___lwdiv@quotient^0,0,c
  1619   0010F8                     l2048:
  1620   0010F8  90D8               	bcf	status,0,c
  1621   0010FA  320B               	rrcf	(___lwdiv@divisor+1)^0,f,c
  1622   0010FC  320A               	rrcf	___lwdiv@divisor^0,f,c
  1623   0010FE  2E0E               	decfsz	___lwdiv@counter^0,f,c
  1624   001100  D7ED               	goto	u940
  1625   001102                     l822:
  1626   001102  C00C  F008         	movff	___lwdiv@quotient,?___lwdiv
  1627   001106  C00D  F009         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1628   00110A  0012               	return		;funcret
  1629   00110C                     __end_of___lwdiv:
  1630                           	callstack 0
  1631                           
  1632 ;; *************** function ___lbmod *****************
  1633 ;; Defined at:
  1634 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lbmod.c"
  1635 ;; Parameters:    Size  Location     Type
  1636 ;;  dividend        1    wreg     unsigned char 
  1637 ;;  divisor         1    7[COMRAM] unsigned char 
  1638 ;; Auto vars:     Size  Location     Type
  1639 ;;  dividend        1    8[COMRAM] unsigned char 
  1640 ;;  rem             1   10[COMRAM] unsigned char 
  1641 ;;  counter         1    9[COMRAM] unsigned char 
  1642 ;; Return value:  Size  Location     Type
  1643 ;;                  1    wreg      unsigned char 
  1644 ;; Registers used:
  1645 ;;		wreg, status,2, status,0
  1646 ;; Tracked objects:
  1647 ;;		On entry : 0/0
  1648 ;;		On exit  : 0/0
  1649 ;;		Unchanged: 0/0
  1650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1651 ;;      Params:         1       0       0       0       0       0       0       0       0
  1652 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1653 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1654 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1655 ;;Total ram usage:        4 bytes
  1656 ;; Hardware stack levels used: 1
  1657 ;; Hardware stack levels required when called: 4
  1658 ;; This function calls:
  1659 ;;		Nothing
  1660 ;; This function is called by:
  1661 ;;		_TransmitirDatos
  1662 ;; This function uses a non-reentrant model
  1663 ;;
  1664                           
  1665                           	psect	text6
  1666   001370                     __ptext6:
  1667                           	callstack 0
  1668   001370                     ___lbmod:
  1669                           	callstack 25
  1670                           
  1671                           ;incstack = 0
  1672                           ;___lbmod@dividend stored from wreg
  1673   001370  6E09               	movwf	___lbmod@dividend^0,c
  1674   001372  0E08               	movlw	8
  1675   001374  6E0A               	movwf	___lbmod@counter^0,c
  1676   001376  0E00               	movlw	0
  1677   001378  6E0B               	movwf	___lbmod@rem^0,c
  1678   00137A                     l2016:
  1679   00137A  90D8               	bcf	status,0,c
  1680   00137C  3409               	rlcf	___lbmod@dividend^0,w,c
  1681   00137E  340B               	rlcf	___lbmod@rem^0,w,c
  1682   001380  6E0B               	movwf	___lbmod@rem^0,c
  1683   001382  90D8               	bcf	status,0,c
  1684   001384  3609               	rlcf	___lbmod@dividend^0,f,c
  1685   001386  5008               	movf	___lbmod@divisor^0,w,c
  1686   001388  5C0B               	subwf	___lbmod@rem^0,w,c
  1687   00138A  A0D8               	btfss	status,0,c
  1688   00138C  D002               	goto	l2024
  1689   00138E  5008               	movf	___lbmod@divisor^0,w,c
  1690   001390  5E0B               	subwf	___lbmod@rem^0,f,c
  1691   001392                     l2024:
  1692   001392  2E0A               	decfsz	___lbmod@counter^0,f,c
  1693   001394  D7F2               	goto	l2016
  1694   001396  500B               	movf	___lbmod@rem^0,w,c
  1695   001398  0012               	return		;funcret
  1696   00139A                     __end_of___lbmod:
  1697                           	callstack 0
  1698                           
  1699 ;; *************** function ___lbdiv *****************
  1700 ;; Defined at:
  1701 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lbdiv.c"
  1702 ;; Parameters:    Size  Location     Type
  1703 ;;  dividend        1    wreg     unsigned char 
  1704 ;;  divisor         1    7[COMRAM] unsigned char 
  1705 ;; Auto vars:     Size  Location     Type
  1706 ;;  dividend        1    8[COMRAM] unsigned char 
  1707 ;;  quotient        1   10[COMRAM] unsigned char 
  1708 ;;  counter         1    9[COMRAM] unsigned char 
  1709 ;; Return value:  Size  Location     Type
  1710 ;;                  1    wreg      unsigned char 
  1711 ;; Registers used:
  1712 ;;		wreg, status,2, status,0
  1713 ;; Tracked objects:
  1714 ;;		On entry : 0/0
  1715 ;;		On exit  : 0/0
  1716 ;;		Unchanged: 0/0
  1717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1718 ;;      Params:         1       0       0       0       0       0       0       0       0
  1719 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1720 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1721 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1722 ;;Total ram usage:        4 bytes
  1723 ;; Hardware stack levels used: 1
  1724 ;; Hardware stack levels required when called: 4
  1725 ;; This function calls:
  1726 ;;		Nothing
  1727 ;; This function is called by:
  1728 ;;		_TransmitirDatos
  1729 ;; This function uses a non-reentrant model
  1730 ;;
  1731                           
  1732                           	psect	text7
  1733   00129E                     __ptext7:
  1734                           	callstack 0
  1735   00129E                     ___lbdiv:
  1736                           	callstack 25
  1737                           
  1738                           ;incstack = 0
  1739                           ;___lbdiv@dividend stored from wreg
  1740   00129E  6E09               	movwf	___lbdiv@dividend^0,c
  1741   0012A0  0E00               	movlw	0
  1742   0012A2  6E0B               	movwf	___lbdiv@quotient^0,c
  1743   0012A4  5008               	movf	___lbdiv@divisor^0,w,c
  1744   0012A6  B4D8               	btfsc	status,2,c
  1745   0012A8  D015               	goto	l2010
  1746   0012AA  0E01               	movlw	1
  1747   0012AC  6E0A               	movwf	___lbdiv@counter^0,c
  1748   0012AE  D003               	goto	l1998
  1749   0012B0                     l1994:
  1750   0012B0  90D8               	bcf	status,0,c
  1751   0012B2  3608               	rlcf	___lbdiv@divisor^0,f,c
  1752   0012B4  2A0A               	incf	___lbdiv@counter^0,f,c
  1753   0012B6                     l1998:
  1754   0012B6  AE08               	btfss	___lbdiv@divisor^0,7,c
  1755   0012B8  D7FB               	goto	l1994
  1756   0012BA                     u900:
  1757   0012BA  90D8               	bcf	status,0,c
  1758   0012BC  360B               	rlcf	___lbdiv@quotient^0,f,c
  1759   0012BE  5008               	movf	___lbdiv@divisor^0,w,c
  1760   0012C0  5C09               	subwf	___lbdiv@dividend^0,w,c
  1761   0012C2  A0D8               	btfss	status,0,c
  1762   0012C4  D003               	goto	l2006
  1763   0012C6  5008               	movf	___lbdiv@divisor^0,w,c
  1764   0012C8  5E09               	subwf	___lbdiv@dividend^0,f,c
  1765   0012CA  800B               	bsf	___lbdiv@quotient^0,0,c
  1766   0012CC                     l2006:
  1767   0012CC  90D8               	bcf	status,0,c
  1768   0012CE  3208               	rrcf	___lbdiv@divisor^0,f,c
  1769   0012D0  2E0A               	decfsz	___lbdiv@counter^0,f,c
  1770   0012D2  D7F3               	goto	u900
  1771   0012D4                     l2010:
  1772   0012D4  500B               	movf	___lbdiv@quotient^0,w,c
  1773   0012D6  0012               	return		;funcret
  1774   0012D8                     __end_of___lbdiv:
  1775                           	callstack 0
  1776                           
  1777 ;; *************** function ___awdiv *****************
  1778 ;; Defined at:
  1779 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awdiv.c"
  1780 ;; Parameters:    Size  Location     Type
  1781 ;;  dividend        2    7[COMRAM] int 
  1782 ;;  divisor         2    9[COMRAM] int 
  1783 ;; Auto vars:     Size  Location     Type
  1784 ;;  quotient        2   13[COMRAM] int 
  1785 ;;  sign            1   12[COMRAM] unsigned char 
  1786 ;;  counter         1   11[COMRAM] unsigned char 
  1787 ;; Return value:  Size  Location     Type
  1788 ;;                  2    7[COMRAM] int 
  1789 ;; Registers used:
  1790 ;;		wreg, status,2, status,0
  1791 ;; Tracked objects:
  1792 ;;		On entry : 0/0
  1793 ;;		On exit  : 0/0
  1794 ;;		Unchanged: 0/0
  1795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1796 ;;      Params:         4       0       0       0       0       0       0       0       0
  1797 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1798 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1799 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1800 ;;Total ram usage:        8 bytes
  1801 ;; Hardware stack levels used: 1
  1802 ;; Hardware stack levels required when called: 4
  1803 ;; This function calls:
  1804 ;;		Nothing
  1805 ;; This function is called by:
  1806 ;;		_TransmitirDatos
  1807 ;; This function uses a non-reentrant model
  1808 ;;
  1809                           
  1810                           	psect	text8
  1811   000F6A                     __ptext8:
  1812                           	callstack 0
  1813   000F6A                     ___awdiv:
  1814                           	callstack 25
  1815                           
  1816                           ;incstack = 0
  1817   000F6A  0E00               	movlw	0
  1818   000F6C  6E0D               	movwf	___awdiv@sign^0,c
  1819   000F6E  AE0B               	btfss	(___awdiv@divisor+1)^0,7,c
  1820   000F70  D006               	goto	l1952
  1821   000F72  6C0A               	negf	___awdiv@divisor^0,c
  1822   000F74  1E0B               	comf	(___awdiv@divisor+1)^0,f,c
  1823   000F76  B0D8               	btfsc	status,0,c
  1824   000F78  2A0B               	incf	(___awdiv@divisor+1)^0,f,c
  1825   000F7A  0E01               	movlw	1
  1826   000F7C  6E0D               	movwf	___awdiv@sign^0,c
  1827   000F7E                     l1952:
  1828   000F7E  AE09               	btfss	(___awdiv@dividend+1)^0,7,c
  1829   000F80  D006               	goto	l1958
  1830   000F82  6C08               	negf	___awdiv@dividend^0,c
  1831   000F84  1E09               	comf	(___awdiv@dividend+1)^0,f,c
  1832   000F86  B0D8               	btfsc	status,0,c
  1833   000F88  2A09               	incf	(___awdiv@dividend+1)^0,f,c
  1834   000F8A  0E01               	movlw	1
  1835   000F8C  1A0D               	xorwf	___awdiv@sign^0,f,c
  1836   000F8E                     l1958:
  1837   000F8E  0E00               	movlw	0
  1838   000F90  6E0F               	movwf	(___awdiv@quotient+1)^0,c
  1839   000F92  0E00               	movlw	0
  1840   000F94  6E0E               	movwf	___awdiv@quotient^0,c
  1841   000F96  500A               	movf	___awdiv@divisor^0,w,c
  1842   000F98  100B               	iorwf	(___awdiv@divisor+1)^0,w,c
  1843   000F9A  B4D8               	btfsc	status,2,c
  1844   000F9C  D01C               	goto	l1980
  1845   000F9E  0E01               	movlw	1
  1846   000FA0  6E0C               	movwf	___awdiv@counter^0,c
  1847   000FA2  D004               	goto	l1966
  1848   000FA4                     l1964:
  1849   000FA4  90D8               	bcf	status,0,c
  1850   000FA6  360A               	rlcf	___awdiv@divisor^0,f,c
  1851   000FA8  360B               	rlcf	(___awdiv@divisor+1)^0,f,c
  1852   000FAA  2A0C               	incf	___awdiv@counter^0,f,c
  1853   000FAC                     l1966:
  1854   000FAC  AE0B               	btfss	(___awdiv@divisor+1)^0,7,c
  1855   000FAE  D7FA               	goto	l1964
  1856   000FB0                     u860:
  1857   000FB0  90D8               	bcf	status,0,c
  1858   000FB2  360E               	rlcf	___awdiv@quotient^0,f,c
  1859   000FB4  360F               	rlcf	(___awdiv@quotient+1)^0,f,c
  1860   000FB6  500A               	movf	___awdiv@divisor^0,w,c
  1861   000FB8  5C08               	subwf	___awdiv@dividend^0,w,c
  1862   000FBA  500B               	movf	(___awdiv@divisor+1)^0,w,c
  1863   000FBC  5809               	subwfb	(___awdiv@dividend+1)^0,w,c
  1864   000FBE  A0D8               	btfss	status,0,c
  1865   000FC0  D005               	goto	l1976
  1866   000FC2  500A               	movf	___awdiv@divisor^0,w,c
  1867   000FC4  5E08               	subwf	___awdiv@dividend^0,f,c
  1868   000FC6  500B               	movf	(___awdiv@divisor+1)^0,w,c
  1869   000FC8  5A09               	subwfb	(___awdiv@dividend+1)^0,f,c
  1870   000FCA  800E               	bsf	___awdiv@quotient^0,0,c
  1871   000FCC                     l1976:
  1872   000FCC  90D8               	bcf	status,0,c
  1873   000FCE  320B               	rrcf	(___awdiv@divisor+1)^0,f,c
  1874   000FD0  320A               	rrcf	___awdiv@divisor^0,f,c
  1875   000FD2  2E0C               	decfsz	___awdiv@counter^0,f,c
  1876   000FD4  D7ED               	goto	u860
  1877   000FD6                     l1980:
  1878   000FD6  500D               	movf	___awdiv@sign^0,w,c
  1879   000FD8  B4D8               	btfsc	status,2,c
  1880   000FDA  D004               	goto	l1984
  1881   000FDC  6C0E               	negf	___awdiv@quotient^0,c
  1882   000FDE  1E0F               	comf	(___awdiv@quotient+1)^0,f,c
  1883   000FE0  B0D8               	btfsc	status,0,c
  1884   000FE2  2A0F               	incf	(___awdiv@quotient+1)^0,f,c
  1885   000FE4                     l1984:
  1886   000FE4  C00E  F008         	movff	___awdiv@quotient,?___awdiv
  1887   000FE8  C00F  F009         	movff	___awdiv@quotient+1,?___awdiv+1
  1888   000FEC  0012               	return		;funcret
  1889   000FEE                     __end_of___awdiv:
  1890                           	callstack 0
  1891                           
  1892 ;; *************** function _Transmitir *****************
  1893 ;; Defined at:
  1894 ;;		line 249 in file "Proyecto.c"
  1895 ;; Parameters:    Size  Location     Type
  1896 ;;  BufferT         1    wreg     unsigned char 
  1897 ;; Auto vars:     Size  Location     Type
  1898 ;;  BufferT         1    7[COMRAM] unsigned char 
  1899 ;; Return value:  Size  Location     Type
  1900 ;;                  1    wreg      void 
  1901 ;; Registers used:
  1902 ;;		wreg
  1903 ;; Tracked objects:
  1904 ;;		On entry : 0/0
  1905 ;;		On exit  : 0/0
  1906 ;;		Unchanged: 0/0
  1907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1908 ;;      Params:         0       0       0       0       0       0       0       0       0
  1909 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1910 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1911 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1912 ;;Total ram usage:        1 bytes
  1913 ;; Hardware stack levels used: 1
  1914 ;; Hardware stack levels required when called: 4
  1915 ;; This function calls:
  1916 ;;		Nothing
  1917 ;; This function is called by:
  1918 ;;		_TransmitirDatos
  1919 ;; This function uses a non-reentrant model
  1920 ;;
  1921                           
  1922                           	psect	text9
  1923   001460                     __ptext9:
  1924                           	callstack 0
  1925   001460                     _Transmitir:
  1926                           	callstack 25
  1927                           
  1928                           ;incstack = 0
  1929                           ;Transmitir@BufferT stored from wreg
  1930   001460  6E08               	movwf	Transmitir@BufferT^0,c
  1931   001462                     
  1932                           ;Proyecto.c: 250: while (TRMT == 0);
  1933   001462  A2AC               	btfss	4012,1,c	;volatile
  1934   001464  D7FE               	goto	l1934
  1935                           
  1936                           ;Proyecto.c: 251: TXREG = BufferT;
  1937   001466  C008  FFAD         	movff	Transmitir@BufferT,4013	;volatile
  1938   00146A  0012               	return		;funcret
  1939   00146C                     __end_of_Transmitir:
  1940                           	callstack 0
  1941                           
  1942 ;; *************** function _MensajeLCD_Word *****************
  1943 ;; Defined at:
  1944 ;;		line 247 in file "LibLCDXC8.h"
  1945 ;; Parameters:    Size  Location     Type
  1946 ;;  a               1   12[COMRAM] PTR unsigned char 
  1947 ;;		 -> STR_8(5), STR_7(6), STR_6(17), STR_5(17), 
  1948 ;;		 -> STR_4(17), STR_3(10), STR_2(17), STR_1(11), 
  1949 ;; Auto vars:     Size  Location     Type
  1950 ;;  i               2   14[COMRAM] int 
  1951 ;; Return value:  Size  Location     Type
  1952 ;;                  1    wreg      void 
  1953 ;; Registers used:
  1954 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1955 ;; Tracked objects:
  1956 ;;		On entry : 0/0
  1957 ;;		On exit  : 0/0
  1958 ;;		Unchanged: 0/0
  1959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1960 ;;      Params:         1       0       0       0       0       0       0       0       0
  1961 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1962 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1963 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1964 ;;Total ram usage:        4 bytes
  1965 ;; Hardware stack levels used: 1
  1966 ;; Hardware stack levels required when called: 7
  1967 ;; This function calls:
  1968 ;;		_EscribeLCD_c
  1969 ;; This function is called by:
  1970 ;;		_main
  1971 ;;		_TransmitirDatos
  1972 ;; This function uses a non-reentrant model
  1973 ;;
  1974                           
  1975                           	psect	text10
  1976   00110C                     __ptext10:
  1977                           	callstack 0
  1978   00110C                     _MensajeLCD_Word:
  1979                           	callstack 22
  1980                           
  1981                           ;LibLCDXC8.h: 251: for(int i = 0; i<16; i++){
  1982                           
  1983                           ;incstack = 0
  1984   00110C  0E00               	movlw	0
  1985   00110E  6E10               	movwf	(MensajeLCD_Word@i+1)^0,c
  1986   001110  0E00               	movlw	0
  1987   001112  6E0F               	movwf	MensajeLCD_Word@i^0,c
  1988   001114                     l1902:
  1989                           
  1990                           ;LibLCDXC8.h: 252: if(a[i] == (0)){
  1991   001114  500D               	movf	MensajeLCD_Word@a^0,w,c
  1992   001116  240F               	addwf	MensajeLCD_Word@i^0,w,c
  1993   001118  6E0E               	movwf	??_MensajeLCD_Word^0,c
  1994   00111A  C00E  FFF6         	movff	??_MensajeLCD_Word,tblptrl
  1995   00111E                     	if	1	;There is more than 1 active tblptr byte
  1996   00111E  0E08               	movlw	high __smallconst
  1997   001120  6EF7               	movwf	tblptrh,c
  1998   001122                     	endif
  1999   001122                     	if	0	;tblptru may be non-zero
  2000   001122                     	endif
  2001   001122                     	if	0	;tblptru may be non-zero
  2002   001122                     	endif
  2003   001122  0008               	tblrd		*
  2004   001124  50F5               	movf	tablat,w,c
  2005   001126  0900               	iorlw	0
  2006   001128  B4D8               	btfsc	status,2,c
  2007   00112A  0012               	return	
  2008                           
  2009                           ;LibLCDXC8.h: 254: };LibLCDXC8.h: 255: EscribeLCD_c(a[i]);
  2010   00112C  500D               	movf	MensajeLCD_Word@a^0,w,c
  2011   00112E  240F               	addwf	MensajeLCD_Word@i^0,w,c
  2012   001130  6E0E               	movwf	??_MensajeLCD_Word^0,c
  2013   001132  C00E  FFF6         	movff	??_MensajeLCD_Word,tblptrl
  2014   001136                     	if	1	;There is more than 1 active tblptr byte
  2015   001136  0E08               	movlw	high __smallconst
  2016   001138  6EF7               	movwf	tblptrh,c
  2017   00113A                     	endif
  2018   00113A                     	if	0	;tblptru may be non-zero
  2019   00113A                     	endif
  2020   00113A                     	if	0	;tblptru may be non-zero
  2021   00113A                     	endif
  2022   00113A  0008               	tblrd		*
  2023   00113C  50F5               	movf	tablat,w,c
  2024   00113E  ECFC  F009         	call	_EscribeLCD_c
  2025   001142  4A0F               	infsnz	MensajeLCD_Word@i^0,f,c
  2026   001144  2A10               	incf	(MensajeLCD_Word@i+1)^0,f,c
  2027   001146  BE10               	btfsc	(MensajeLCD_Word@i+1)^0,7,c
  2028   001148  D7E5               	goto	l1902
  2029   00114A  5010               	movf	(MensajeLCD_Word@i+1)^0,w,c
  2030   00114C  E105               	bnz	u800
  2031   00114E  0E10               	movlw	16
  2032   001150  5C0F               	subwf	MensajeLCD_Word@i^0,w,c
  2033   001152  B0D8               	btfsc	status,0,c
  2034   001154  0012               	return	
  2035   001156  D7DE               	goto	l1902
  2036   001158                     u800:
  2037   001158  0012               	return		;funcret
  2038   00115A                     __end_of_MensajeLCD_Word:
  2039                           	callstack 0
  2040                           
  2041 ;; *************** function _DireccionaLCD *****************
  2042 ;; Defined at:
  2043 ;;		line 259 in file "LibLCDXC8.h"
  2044 ;; Parameters:    Size  Location     Type
  2045 ;;  a               1    wreg     unsigned char 
  2046 ;; Auto vars:     Size  Location     Type
  2047 ;;  a               1   11[COMRAM] unsigned char 
  2048 ;; Return value:  Size  Location     Type
  2049 ;;                  1    wreg      void 
  2050 ;; Registers used:
  2051 ;;		wreg, status,2, status,0, cstack
  2052 ;; Tracked objects:
  2053 ;;		On entry : 0/0
  2054 ;;		On exit  : 0/0
  2055 ;;		Unchanged: 0/0
  2056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2057 ;;      Params:         0       0       0       0       0       0       0       0       0
  2058 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2059 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2060 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2061 ;;Total ram usage:        1 bytes
  2062 ;; Hardware stack levels used: 1
  2063 ;; Hardware stack levels required when called: 6
  2064 ;; This function calls:
  2065 ;;		_EnviaDato
  2066 ;;		_HabilitaLCD
  2067 ;;		_RetardoLCD
  2068 ;; This function is called by:
  2069 ;;		_main
  2070 ;;		_TransmitirDatos
  2071 ;; This function uses a non-reentrant model
  2072 ;;
  2073                           
  2074                           	psect	text11
  2075   0013E2                     __ptext11:
  2076                           	callstack 0
  2077   0013E2                     _DireccionaLCD:
  2078                           	callstack 23
  2079                           
  2080                           ;incstack = 0
  2081                           ;DireccionaLCD@a stored from wreg
  2082   0013E2  6E0C               	movwf	DireccionaLCD@a^0,c
  2083                           
  2084                           ;LibLCDXC8.h: 262: LATE1=0;
  2085   0013E4  928D               	bcf	3981,1,c	;volatile
  2086                           
  2087                           ;LibLCDXC8.h: 263: EnviaDato(a);
  2088   0013E6  500C               	movf	DireccionaLCD@a^0,w,c
  2089   0013E8  ECAD  F008         	call	_EnviaDato
  2090                           
  2091                           ;LibLCDXC8.h: 264: HabilitaLCD();
  2092   0013EC  EC1C  F00A         	call	_HabilitaLCD	;wreg free
  2093                           
  2094                           ;LibLCDXC8.h: 265: RetardoLCD(4);
  2095   0013F0  0E04               	movlw	4
  2096   0013F2  ECF7  F007         	call	_RetardoLCD
  2097   0013F6  0012               	return		;funcret
  2098   0013F8                     __end_of_DireccionaLCD:
  2099                           	callstack 0
  2100                           
  2101 ;; *************** function _NuevoCaracter *****************
  2102 ;; Defined at:
  2103 ;;		line 140 in file "LibLCDXC8.h"
  2104 ;; Parameters:    Size  Location     Type
  2105 ;;  addr            1    wreg     unsigned char 
  2106 ;;  c               1   12[COMRAM] PTR unsigned char 
  2107 ;;		 -> cara(8), 
  2108 ;; Auto vars:     Size  Location     Type
  2109 ;;  addr            1   13[COMRAM] unsigned char 
  2110 ;;  i               2   14[COMRAM] int 
  2111 ;; Return value:  Size  Location     Type
  2112 ;;                  1    wreg      void 
  2113 ;; Registers used:
  2114 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2115 ;; Tracked objects:
  2116 ;;		On entry : 0/0
  2117 ;;		On exit  : 0/0
  2118 ;;		Unchanged: 0/0
  2119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2120 ;;      Params:         1       0       0       0       0       0       0       0       0
  2121 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2122 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2123 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2124 ;;Total ram usage:        4 bytes
  2125 ;; Hardware stack levels used: 1
  2126 ;; Hardware stack levels required when called: 7
  2127 ;; This function calls:
  2128 ;;		_ComandoLCD
  2129 ;;		_EscribeLCD_c
  2130 ;; This function is called by:
  2131 ;;		_main
  2132 ;; This function uses a non-reentrant model
  2133 ;;
  2134                           
  2135                           	psect	text12
  2136   001228                     __ptext12:
  2137                           	callstack 0
  2138   001228                     _NuevoCaracter:
  2139                           	callstack 23
  2140                           
  2141                           ;incstack = 0
  2142                           ;NuevoCaracter@addr stored from wreg
  2143   001228  6E0E               	movwf	NuevoCaracter@addr^0,c
  2144                           
  2145                           ;LibLCDXC8.h: 141: int i;;LibLCDXC8.h: 142: ComandoLCD(0x40 + (addr * 8));
  2146   00122A  500E               	movf	NuevoCaracter@addr^0,w,c
  2147   00122C  0D08               	mullw	8
  2148   00122E  50F3               	movf	243,w,c
  2149   001230  0F40               	addlw	64
  2150   001232  ECA1  F009         	call	_ComandoLCD
  2151                           
  2152                           ;LibLCDXC8.h: 143: for (i = 0; i < 8; i++) {
  2153   001236  0E00               	movlw	0
  2154   001238  6E10               	movwf	(NuevoCaracter@i+1)^0,c
  2155   00123A  0E00               	movlw	0
  2156   00123C  6E0F               	movwf	NuevoCaracter@i^0,c
  2157   00123E                     l2470:
  2158                           
  2159                           ;LibLCDXC8.h: 144: EscribeLCD_c(c[i]);
  2160   00123E  500D               	movf	NuevoCaracter@c^0,w,c
  2161   001240  240F               	addwf	NuevoCaracter@i^0,w,c
  2162   001242  6ED9               	movwf	fsr2l,c
  2163   001244  6ADA               	clrf	fsr2h,c
  2164   001246  50DF               	movf	indf2,w,c
  2165   001248  ECFC  F009         	call	_EscribeLCD_c
  2166   00124C  4A0F               	infsnz	NuevoCaracter@i^0,f,c
  2167   00124E  2A10               	incf	(NuevoCaracter@i+1)^0,f,c
  2168   001250  BE10               	btfsc	(NuevoCaracter@i+1)^0,7,c
  2169   001252  D7F5               	goto	l2470
  2170   001254  5010               	movf	(NuevoCaracter@i+1)^0,w,c
  2171   001256  E105               	bnz	u1450
  2172   001258  0E08               	movlw	8
  2173   00125A  5C0F               	subwf	NuevoCaracter@i^0,w,c
  2174   00125C  B0D8               	btfsc	status,0,c
  2175   00125E  0012               	return	
  2176   001260  D7EE               	goto	l2470
  2177   001262                     u1450:
  2178   001262  0012               	return		;funcret
  2179   001264                     __end_of_NuevoCaracter:
  2180                           	callstack 0
  2181                           
  2182 ;; *************** function _EscribeLCD_c *****************
  2183 ;; Defined at:
  2184 ;;		line 148 in file "LibLCDXC8.h"
  2185 ;; Parameters:    Size  Location     Type
  2186 ;;  a               1    wreg     unsigned char 
  2187 ;; Auto vars:     Size  Location     Type
  2188 ;;  a               1   11[COMRAM] unsigned char 
  2189 ;; Return value:  Size  Location     Type
  2190 ;;                  1    wreg      void 
  2191 ;; Registers used:
  2192 ;;		wreg, status,2, status,0, cstack
  2193 ;; Tracked objects:
  2194 ;;		On entry : 0/0
  2195 ;;		On exit  : 0/0
  2196 ;;		Unchanged: 0/0
  2197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2198 ;;      Params:         0       0       0       0       0       0       0       0       0
  2199 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2200 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2201 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2202 ;;Total ram usage:        1 bytes
  2203 ;; Hardware stack levels used: 1
  2204 ;; Hardware stack levels required when called: 6
  2205 ;; This function calls:
  2206 ;;		_EnviaDato
  2207 ;;		_HabilitaLCD
  2208 ;;		_RetardoLCD
  2209 ;; This function is called by:
  2210 ;;		_NuevoCaracter
  2211 ;;		_MensajeLCD_Word
  2212 ;;		_main
  2213 ;;		_TransmitirDatos
  2214 ;; This function uses a non-reentrant model
  2215 ;;
  2216                           
  2217                           	psect	text13
  2218   0013F8                     __ptext13:
  2219                           	callstack 0
  2220   0013F8                     _EscribeLCD_c:
  2221                           	callstack 22
  2222                           
  2223                           ;incstack = 0
  2224                           ;EscribeLCD_c@a stored from wreg
  2225   0013F8  6E0C               	movwf	EscribeLCD_c@a^0,c
  2226                           
  2227                           ;LibLCDXC8.h: 152: LATE1=1;
  2228   0013FA  828D               	bsf	3981,1,c	;volatile
  2229                           
  2230                           ;LibLCDXC8.h: 153: EnviaDato(a);
  2231   0013FC  500C               	movf	EscribeLCD_c@a^0,w,c
  2232   0013FE  ECAD  F008         	call	_EnviaDato
  2233                           
  2234                           ;LibLCDXC8.h: 154: HabilitaLCD();
  2235   001402  EC1C  F00A         	call	_HabilitaLCD	;wreg free
  2236                           
  2237                           ;LibLCDXC8.h: 155: RetardoLCD(4);
  2238   001406  0E04               	movlw	4
  2239   001408  ECF7  F007         	call	_RetardoLCD
  2240   00140C  0012               	return		;funcret
  2241   00140E                     __end_of_EscribeLCD_c:
  2242                           	callstack 0
  2243                           
  2244 ;; *************** function _ComandoLCD *****************
  2245 ;; Defined at:
  2246 ;;		line 129 in file "LibLCDXC8.h"
  2247 ;; Parameters:    Size  Location     Type
  2248 ;;  data            1    wreg     unsigned char 
  2249 ;; Auto vars:     Size  Location     Type
  2250 ;;  data            1    8[COMRAM] unsigned char 
  2251 ;; Return value:  Size  Location     Type
  2252 ;;                  1    wreg      void 
  2253 ;; Registers used:
  2254 ;;		wreg, status,2, cstack
  2255 ;; Tracked objects:
  2256 ;;		On entry : 0/0
  2257 ;;		On exit  : 0/0
  2258 ;;		Unchanged: 0/0
  2259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2260 ;;      Params:         0       0       0       0       0       0       0       0       0
  2261 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2262 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2263 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2264 ;;Total ram usage:        2 bytes
  2265 ;; Hardware stack levels used: 1
  2266 ;; Hardware stack levels required when called: 4
  2267 ;; This function calls:
  2268 ;;		Nothing
  2269 ;; This function is called by:
  2270 ;;		_NuevoCaracter
  2271 ;; This function uses a non-reentrant model
  2272 ;;
  2273                           
  2274                           	psect	text14
  2275   001342                     __ptext14:
  2276                           	callstack 0
  2277   001342                     _ComandoLCD:
  2278                           	callstack 25
  2279                           
  2280                           ;incstack = 0
  2281                           ;ComandoLCD@data stored from wreg
  2282   001342  6E09               	movwf	ComandoLCD@data^0,c
  2283                           
  2284                           ;LibLCDXC8.h: 131: LATE1 = 0;
  2285   001344  928D               	bcf	3981,1,c	;volatile
  2286                           
  2287                           ;LibLCDXC8.h: 132: LATD = data;
  2288   001346  C009  FF8C         	movff	ComandoLCD@data,3980	;volatile
  2289                           
  2290                           ;LibLCDXC8.h: 133: LATE2 = 1;
  2291   00134A  848D               	bsf	3981,2,c	;volatile
  2292                           
  2293                           ;LibLCDXC8.h: 134: _delay((unsigned long)((5)*(8000000/4000000.0)));
  2294   00134C  0E03               	movlw	3
  2295   00134E                     u1507:
  2296   00134E  2EE8               	decfsz	wreg,f,c
  2297   001350  D7FE               	bra	u1507
  2298   001352  F000               	nop	
  2299                           
  2300                           ;LibLCDXC8.h: 135: LATE2 = 0;
  2301   001354  948D               	bcf	3981,2,c	;volatile
  2302                           
  2303                           ;LibLCDXC8.h: 136: _delay((unsigned long)((5)*(8000000/4000000.0)));
  2304   001356  0E03               	movlw	3
  2305   001358                     u1517:
  2306   001358  2EE8               	decfsz	wreg,f,c
  2307   00135A  D7FE               	bra	u1517
  2308   00135C  F000               	nop	
  2309                           
  2310                           ;LibLCDXC8.h: 137: _delay((unsigned long)((2)*(8000000/4000.0)));
  2311   00135E  0E06               	movlw	6
  2312   001360  6E08               	movwf	??_ComandoLCD^0,c
  2313   001362  0E30               	movlw	48
  2314   001364                     u1527:
  2315   001364  2EE8               	decfsz	wreg,f,c
  2316   001366  D7FE               	bra	u1527
  2317   001368  2E08               	decfsz	??_ComandoLCD^0,f,c
  2318   00136A  D7FC               	bra	u1527
  2319   00136C  D000               	nop2	
  2320   00136E  0012               	return		;funcret
  2321   001370                     __end_of_ComandoLCD:
  2322                           	callstack 0
  2323                           
  2324 ;; *************** function _LeerHT11 *****************
  2325 ;; Defined at:
  2326 ;;		line 157 in file "Proyecto.c"
  2327 ;; Parameters:    Size  Location     Type
  2328 ;;		None
  2329 ;; Auto vars:     Size  Location     Type
  2330 ;;		None
  2331 ;; Return value:  Size  Location     Type
  2332 ;;                  1    wreg      void 
  2333 ;; Registers used:
  2334 ;;		wreg, status,2, status,0, cstack
  2335 ;; Tracked objects:
  2336 ;;		On entry : 0/0
  2337 ;;		On exit  : 0/0
  2338 ;;		Unchanged: 0/0
  2339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2340 ;;      Params:         0       0       0       0       0       0       0       0       0
  2341 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2342 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2343 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2344 ;;Total ram usage:        1 bytes
  2345 ;; Hardware stack levels used: 1
  2346 ;; Hardware stack levels required when called: 6
  2347 ;; This function calls:
  2348 ;;		_LeerByte
  2349 ;; This function is called by:
  2350 ;;		_main
  2351 ;; This function uses a non-reentrant model
  2352 ;;
  2353                           
  2354                           	psect	text15
  2355   0012D8                     __ptext15:
  2356                           	callstack 0
  2357   0012D8                     _LeerHT11:
  2358                           	callstack 24
  2359                           
  2360                           ;Proyecto.c: 159: TRISC0 = 0;
  2361                           
  2362                           ;incstack = 0
  2363   0012D8  9094               	bcf	3988,0,c	;volatile
  2364                           
  2365                           ;Proyecto.c: 160: _delay((unsigned long)((18)*(8000000/4000.0)));
  2366   0012DA  0E2F               	movlw	47
  2367   0012DC  6E0C               	movwf	??_LeerHT11^0,c
  2368   0012DE  0EC0               	movlw	192
  2369   0012E0                     u1537:
  2370   0012E0  2EE8               	decfsz	wreg,f,c
  2371   0012E2  D7FE               	bra	u1537
  2372   0012E4  2E0C               	decfsz	??_LeerHT11^0,f,c
  2373   0012E6  D7FC               	bra	u1537
  2374                           
  2375                           ;Proyecto.c: 161: TRISC0 = 1;
  2376   0012E8  8094               	bsf	3988,0,c	;volatile
  2377   0012EA                     l228:
  2378   0012EA  B082               	btfsc	3970,0,c	;volatile
  2379   0012EC  D7FE               	goto	l228
  2380                           
  2381                           ;Proyecto.c: 164: _delay((unsigned long)((120)*(8000000/4000000.0)));
  2382   0012EE  0E50               	movlw	80
  2383   0012F0                     u1547:
  2384   0012F0  2EE8               	decfsz	wreg,f,c
  2385   0012F2  D7FE               	bra	u1547
  2386   0012F4                     l231:
  2387   0012F4  B082               	btfsc	3970,0,c	;volatile
  2388   0012F6  D7FE               	goto	l231
  2389                           
  2390                           ;Proyecto.c: 167: Humedad = LeerByte();
  2391   0012F8  ECE0  F009         	call	_LeerByte	;wreg free
  2392   0012FC  6E31               	movwf	_Humedad^0,c
  2393                           
  2394                           ;Proyecto.c: 168: LeerByte();
  2395   0012FE  ECE0  F009         	call	_LeerByte	;wreg free
  2396                           
  2397                           ;Proyecto.c: 169: Temp = LeerByte();
  2398   001302  ECE0  F009         	call	_LeerByte	;wreg free
  2399   001306  6E32               	movwf	_Temp^0,c
  2400                           
  2401                           ;Proyecto.c: 170: LeerByte();
  2402   001308  ECE0  F009         	call	_LeerByte	;wreg free
  2403                           
  2404                           ;Proyecto.c: 171: LeerByte();
  2405   00130C  ECE0  F009         	call	_LeerByte	;wreg free
  2406   001310  0012               	return		;funcret
  2407   001312                     __end_of_LeerHT11:
  2408                           	callstack 0
  2409                           
  2410 ;; *************** function _LeerByte *****************
  2411 ;; Defined at:
  2412 ;;		line 174 in file "Proyecto.c"
  2413 ;; Parameters:    Size  Location     Type
  2414 ;;		None
  2415 ;; Auto vars:     Size  Location     Type
  2416 ;;  i               1   10[COMRAM] unsigned char 
  2417 ;;  res             1    9[COMRAM] unsigned char 
  2418 ;; Return value:  Size  Location     Type
  2419 ;;                  1    wreg      unsigned char 
  2420 ;; Registers used:
  2421 ;;		wreg, status,2, status,0, cstack
  2422 ;; Tracked objects:
  2423 ;;		On entry : 0/0
  2424 ;;		On exit  : 0/0
  2425 ;;		Unchanged: 0/0
  2426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2427 ;;      Params:         0       0       0       0       0       0       0       0       0
  2428 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2429 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2430 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2431 ;;Total ram usage:        3 bytes
  2432 ;; Hardware stack levels used: 1
  2433 ;; Hardware stack levels required when called: 5
  2434 ;; This function calls:
  2435 ;;		_LeerBit
  2436 ;; This function is called by:
  2437 ;;		_LeerHT11
  2438 ;; This function uses a non-reentrant model
  2439 ;;
  2440                           
  2441                           	psect	text16
  2442   0013C0                     __ptext16:
  2443                           	callstack 0
  2444   0013C0                     _LeerByte:
  2445                           	callstack 24
  2446                           
  2447                           ;Proyecto.c: 175: unsigned char res = 0, i;
  2448                           
  2449                           ;incstack = 0
  2450   0013C0  0E00               	movlw	0
  2451   0013C2  6E0A               	movwf	LeerByte@res^0,c
  2452                           
  2453                           ;Proyecto.c: 176: for (i = 8; i > 0; i--) {
  2454   0013C4  0E08               	movlw	8
  2455   0013C6  6E0B               	movwf	LeerByte@i^0,c
  2456   0013C8                     l1924:
  2457                           
  2458                           ;Proyecto.c: 177: res = (res << 1) | LeerBit();
  2459   0013C8  EC89  F009         	call	_LeerBit	;wreg free
  2460   0013CC  6E09               	movwf	??_LeerByte^0,c
  2461   0013CE  500A               	movf	LeerByte@res^0,w,c
  2462   0013D0  240A               	addwf	LeerByte@res^0,w,c
  2463   0013D2  1009               	iorwf	??_LeerByte^0,w,c
  2464   0013D4  6E0A               	movwf	LeerByte@res^0,c
  2465   0013D6  060B               	decf	LeerByte@i^0,f,c
  2466   0013D8  500B               	movf	LeerByte@i^0,w,c
  2467   0013DA  A4D8               	btfss	status,2,c
  2468   0013DC  D7F5               	goto	l1924
  2469                           
  2470                           ;Proyecto.c: 178: };Proyecto.c: 179: return res;
  2471   0013DE  500A               	movf	LeerByte@res^0,w,c
  2472   0013E0  0012               	return		;funcret
  2473   0013E2                     __end_of_LeerByte:
  2474                           	callstack 0
  2475                           
  2476 ;; *************** function _LeerBit *****************
  2477 ;; Defined at:
  2478 ;;		line 182 in file "Proyecto.c"
  2479 ;; Parameters:    Size  Location     Type
  2480 ;;		None
  2481 ;; Auto vars:     Size  Location     Type
  2482 ;;  res             1    7[COMRAM] unsigned char 
  2483 ;; Return value:  Size  Location     Type
  2484 ;;                  1    wreg      unsigned char 
  2485 ;; Registers used:
  2486 ;;		wreg, status,2
  2487 ;; Tracked objects:
  2488 ;;		On entry : 0/0
  2489 ;;		On exit  : 0/0
  2490 ;;		Unchanged: 0/0
  2491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2492 ;;      Params:         0       0       0       0       0       0       0       0       0
  2493 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2494 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2495 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2496 ;;Total ram usage:        1 bytes
  2497 ;; Hardware stack levels used: 1
  2498 ;; Hardware stack levels required when called: 4
  2499 ;; This function calls:
  2500 ;;		Nothing
  2501 ;; This function is called by:
  2502 ;;		_LeerByte
  2503 ;; This function uses a non-reentrant model
  2504 ;;
  2505                           
  2506                           	psect	text17
  2507   001312                     __ptext17:
  2508                           	callstack 0
  2509   001312                     _LeerBit:
  2510                           	callstack 24
  2511                           
  2512                           ;Proyecto.c: 183: unsigned char res = 0;
  2513                           
  2514                           ;incstack = 0
  2515   001312  0E00               	movlw	0
  2516   001314  6E08               	movwf	LeerBit@res^0,c
  2517   001316                     l242:
  2518   001316  A082               	btfss	3970,0,c	;volatile
  2519   001318  D7FE               	goto	l242
  2520                           
  2521                           ;Proyecto.c: 185: _delay((unsigned long)((13)*(8000000/4000000.0)));
  2522   00131A  0E08               	movlw	8
  2523   00131C                     u1557:
  2524   00131C  2EE8               	decfsz	wreg,f,c
  2525   00131E  D7FE               	bra	u1557
  2526   001320  D000               	nop2	
  2527                           
  2528                           ;Proyecto.c: 186: if (RC0 == 1) res = 0;
  2529   001322  A082               	btfss	3970,0,c	;volatile
  2530   001324  D002               	goto	l1844
  2531   001326  0E00               	movlw	0
  2532   001328  6E08               	movwf	LeerBit@res^0,c
  2533   00132A                     l1844:
  2534                           
  2535                           ;Proyecto.c: 187: _delay((unsigned long)((22)*(8000000/4000000.0)));
  2536   00132A  0E0E               	movlw	14
  2537   00132C                     u1567:
  2538   00132C  2EE8               	decfsz	wreg,f,c
  2539   00132E  D7FE               	bra	u1567
  2540   001330  D000               	nop2	
  2541                           
  2542                           ;Proyecto.c: 188: if (RC0 == 1) {
  2543   001332  A082               	btfss	3970,0,c	;volatile
  2544   001334  D004               	goto	u780
  2545                           
  2546                           ;Proyecto.c: 189: res = 1;
  2547   001336  0E01               	movlw	1
  2548   001338  6E08               	movwf	LeerBit@res^0,c
  2549   00133A                     l247:
  2550   00133A  B082               	btfsc	3970,0,c	;volatile
  2551   00133C  D7FE               	goto	l247
  2552   00133E                     u780:
  2553                           
  2554                           ;Proyecto.c: 191: };Proyecto.c: 192: return res;
  2555   00133E  5008               	movf	LeerBit@res^0,w,c
  2556   001340  0012               	return		;funcret
  2557   001342                     __end_of_LeerBit:
  2558                           	callstack 0
  2559                           
  2560 ;; *************** function _InicializaLCD *****************
  2561 ;; Defined at:
  2562 ;;		line 74 in file "LibLCDXC8.h"
  2563 ;; Parameters:    Size  Location     Type
  2564 ;;		None
  2565 ;; Auto vars:     Size  Location     Type
  2566 ;;		None
  2567 ;; Return value:  Size  Location     Type
  2568 ;;                  1    wreg      void 
  2569 ;; Registers used:
  2570 ;;		wreg, status,2, status,0, cstack
  2571 ;; Tracked objects:
  2572 ;;		On entry : 0/0
  2573 ;;		On exit  : 0/0
  2574 ;;		Unchanged: 0/0
  2575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2576 ;;      Params:         0       0       0       0       0       0       0       0       0
  2577 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2578 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2579 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2580 ;;Total ram usage:        0 bytes
  2581 ;; Hardware stack levels used: 1
  2582 ;; Hardware stack levels required when called: 7
  2583 ;; This function calls:
  2584 ;;		_BorraLCD
  2585 ;;		_EnviaDato
  2586 ;;		_HabilitaLCD
  2587 ;;		_RetardoLCD
  2588 ;; This function is called by:
  2589 ;;		_main
  2590 ;; This function uses a non-reentrant model
  2591 ;;
  2592                           
  2593                           	psect	text18
  2594   000ECE                     __ptext18:
  2595                           	callstack 0
  2596   000ECE                     _InicializaLCD:
  2597                           	callstack 23
  2598                           
  2599                           ;LibLCDXC8.h: 76: LATE1=0;
  2600                           
  2601                           ;incstack = 0
  2602   000ECE  928D               	bcf	3981,1,c	;volatile
  2603                           
  2604                           ;LibLCDXC8.h: 77: if(interfaz==4)
  2605   000ED0  0E04               	movlw	4
  2606   000ED2  1822               	xorwf	_interfaz^0,w,c
  2607   000ED4  A4D8               	btfss	status,2,c
  2608   000ED6  D004               	goto	l2088
  2609                           
  2610                           ;LibLCDXC8.h: 78: LATD=(LATD & 0b00001111) | 0x30;
  2611   000ED8  508C               	movf	140,w,c	;volatile
  2612   000EDA  0B0F               	andlw	15
  2613   000EDC  0930               	iorlw	48
  2614   000EDE  D001               	goto	L4
  2615   000EE0                     l2088:
  2616                           
  2617                           ;LibLCDXC8.h: 79: else;LibLCDXC8.h: 80: LATD=0x3F;
  2618   000EE0  0E3F               	movlw	63
  2619   000EE2                     L4:
  2620   000EE2  6E8C               	movwf	140,c	;volatile
  2621                           
  2622                           ;LibLCDXC8.h: 81: HabilitaLCD();
  2623   000EE4  EC1C  F00A         	call	_HabilitaLCD	;wreg free
  2624                           
  2625                           ;LibLCDXC8.h: 82: RetardoLCD(1);
  2626   000EE8  0E01               	movlw	1
  2627   000EEA  ECF7  F007         	call	_RetardoLCD
  2628                           
  2629                           ;LibLCDXC8.h: 83: if(interfaz==4)
  2630   000EEE  0E04               	movlw	4
  2631   000EF0  1822               	xorwf	_interfaz^0,w,c
  2632   000EF2  A4D8               	btfss	status,2,c
  2633   000EF4  D004               	goto	l2098
  2634                           
  2635                           ;LibLCDXC8.h: 84: LATD=(LATD & 0b00001111) | 0x30;
  2636   000EF6  508C               	movf	140,w,c	;volatile
  2637   000EF8  0B0F               	andlw	15
  2638   000EFA  0930               	iorlw	48
  2639   000EFC  D001               	goto	L5
  2640   000EFE                     l2098:
  2641                           
  2642                           ;LibLCDXC8.h: 85: else;LibLCDXC8.h: 86: LATD=0x3F;
  2643   000EFE  0E3F               	movlw	63
  2644   000F00                     L5:
  2645   000F00  6E8C               	movwf	140,c	;volatile
  2646                           
  2647                           ;LibLCDXC8.h: 87: HabilitaLCD();
  2648   000F02  EC1C  F00A         	call	_HabilitaLCD	;wreg free
  2649                           
  2650                           ;LibLCDXC8.h: 88: RetardoLCD(3);
  2651   000F06  0E03               	movlw	3
  2652   000F08  ECF7  F007         	call	_RetardoLCD
  2653                           
  2654                           ;LibLCDXC8.h: 89: if(interfaz==4)
  2655   000F0C  0E04               	movlw	4
  2656   000F0E  1822               	xorwf	_interfaz^0,w,c
  2657   000F10  A4D8               	btfss	status,2,c
  2658   000F12  D004               	goto	l2108
  2659                           
  2660                           ;LibLCDXC8.h: 90: LATD=(LATD & 0b00001111) | 0x30;
  2661   000F14  508C               	movf	140,w,c	;volatile
  2662   000F16  0B0F               	andlw	15
  2663   000F18  0930               	iorlw	48
  2664   000F1A  D001               	goto	L6
  2665   000F1C                     l2108:
  2666                           
  2667                           ;LibLCDXC8.h: 91: else;LibLCDXC8.h: 92: LATD=0x3F;
  2668   000F1C  0E3F               	movlw	63
  2669   000F1E                     L6:
  2670   000F1E  6E8C               	movwf	140,c	;volatile
  2671                           
  2672                           ;LibLCDXC8.h: 93: HabilitaLCD();
  2673   000F20  EC1C  F00A         	call	_HabilitaLCD	;wreg free
  2674                           
  2675                           ;LibLCDXC8.h: 94: RetardoLCD(4);
  2676   000F24  0E04               	movlw	4
  2677   000F26  ECF7  F007         	call	_RetardoLCD
  2678                           
  2679                           ;LibLCDXC8.h: 95: if(interfaz==4){
  2680   000F2A  0E04               	movlw	4
  2681   000F2C  1822               	xorwf	_interfaz^0,w,c
  2682   000F2E  A4D8               	btfss	status,2,c
  2683   000F30  D011               	goto	l2128
  2684                           
  2685                           ;LibLCDXC8.h: 96: LATD=(LATD & 0b00001111) | 0x20;
  2686   000F32  508C               	movf	140,w,c	;volatile
  2687   000F34  0B0F               	andlw	15
  2688   000F36  0920               	iorlw	32
  2689   000F38  6E8C               	movwf	140,c	;volatile
  2690                           
  2691                           ;LibLCDXC8.h: 97: HabilitaLCD();
  2692   000F3A  EC1C  F00A         	call	_HabilitaLCD	;wreg free
  2693                           
  2694                           ;LibLCDXC8.h: 98: RetardoLCD(4);
  2695   000F3E  0E04               	movlw	4
  2696   000F40  ECF7  F007         	call	_RetardoLCD
  2697                           
  2698                           ;LibLCDXC8.h: 99: EnviaDato(0x2F);
  2699   000F44  0E2F               	movlw	47
  2700   000F46  ECAD  F008         	call	_EnviaDato
  2701                           
  2702                           ;LibLCDXC8.h: 100: HabilitaLCD();
  2703   000F4A  EC1C  F00A         	call	_HabilitaLCD	;wreg free
  2704                           
  2705                           ;LibLCDXC8.h: 101: RetardoLCD(4);
  2706   000F4E  0E04               	movlw	4
  2707   000F50  ECF7  F007         	call	_RetardoLCD
  2708   000F54                     l2128:
  2709                           
  2710                           ;LibLCDXC8.h: 102: };LibLCDXC8.h: 103: BorraLCD();
  2711   000F54  EC12  F00A         	call	_BorraLCD	;wreg free
  2712                           
  2713                           ;LibLCDXC8.h: 104: EnviaDato(0xF);
  2714   000F58  0E0F               	movlw	15
  2715   000F5A  ECAD  F008         	call	_EnviaDato
  2716                           
  2717                           ;LibLCDXC8.h: 105: HabilitaLCD();
  2718   000F5E  EC1C  F00A         	call	_HabilitaLCD	;wreg free
  2719                           
  2720                           ;LibLCDXC8.h: 106: RetardoLCD(4);
  2721   000F62  0E04               	movlw	4
  2722   000F64  ECF7  F007         	call	_RetardoLCD
  2723   000F68  0012               	return		;funcret
  2724   000F6A                     __end_of_InicializaLCD:
  2725                           	callstack 0
  2726                           
  2727 ;; *************** function _BorraLCD *****************
  2728 ;; Defined at:
  2729 ;;		line 115 in file "LibLCDXC8.h"
  2730 ;; Parameters:    Size  Location     Type
  2731 ;;		None
  2732 ;; Auto vars:     Size  Location     Type
  2733 ;;		None
  2734 ;; Return value:  Size  Location     Type
  2735 ;;                  1    wreg      void 
  2736 ;; Registers used:
  2737 ;;		wreg, status,2, status,0, cstack
  2738 ;; Tracked objects:
  2739 ;;		On entry : 0/0
  2740 ;;		On exit  : 0/0
  2741 ;;		Unchanged: 0/0
  2742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2743 ;;      Params:         0       0       0       0       0       0       0       0       0
  2744 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2745 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2746 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2747 ;;Total ram usage:        0 bytes
  2748 ;; Hardware stack levels used: 1
  2749 ;; Hardware stack levels required when called: 6
  2750 ;; This function calls:
  2751 ;;		_EnviaDato
  2752 ;;		_HabilitaLCD
  2753 ;;		_RetardoLCD
  2754 ;; This function is called by:
  2755 ;;		_InicializaLCD
  2756 ;;		_main
  2757 ;;		_TransmitirDatos
  2758 ;; This function uses a non-reentrant model
  2759 ;;
  2760                           
  2761                           	psect	text19
  2762   001424                     __ptext19:
  2763                           	callstack 0
  2764   001424                     _BorraLCD:
  2765                           	callstack 23
  2766                           
  2767                           ;LibLCDXC8.h: 117: LATE1=0;
  2768                           
  2769                           ;incstack = 0
  2770   001424  928D               	bcf	3981,1,c	;volatile
  2771                           
  2772                           ;LibLCDXC8.h: 118: EnviaDato(0x01);
  2773   001426  0E01               	movlw	1
  2774   001428  ECAD  F008         	call	_EnviaDato
  2775                           
  2776                           ;LibLCDXC8.h: 119: HabilitaLCD();
  2777   00142C  EC1C  F00A         	call	_HabilitaLCD	;wreg free
  2778                           
  2779                           ;LibLCDXC8.h: 120: RetardoLCD(2);
  2780   001430  0E02               	movlw	2
  2781   001432  ECF7  F007         	call	_RetardoLCD
  2782   001436  0012               	return		;funcret
  2783   001438                     __end_of_BorraLCD:
  2784                           	callstack 0
  2785                           
  2786 ;; *************** function _EnviaDato *****************
  2787 ;; Defined at:
  2788 ;;		line 62 in file "LibLCDXC8.h"
  2789 ;; Parameters:    Size  Location     Type
  2790 ;;  a               1    wreg     unsigned char 
  2791 ;; Auto vars:     Size  Location     Type
  2792 ;;  a               1   10[COMRAM] unsigned char 
  2793 ;; Return value:  Size  Location     Type
  2794 ;;                  1    wreg      void 
  2795 ;; Registers used:
  2796 ;;		wreg, status,2, status,0, cstack
  2797 ;; Tracked objects:
  2798 ;;		On entry : 0/0
  2799 ;;		On exit  : 0/0
  2800 ;;		Unchanged: 0/0
  2801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2802 ;;      Params:         0       0       0       0       0       0       0       0       0
  2803 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2804 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2805 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2806 ;;Total ram usage:        2 bytes
  2807 ;; Hardware stack levels used: 1
  2808 ;; Hardware stack levels required when called: 5
  2809 ;; This function calls:
  2810 ;;		_HabilitaLCD
  2811 ;;		_RetardoLCD
  2812 ;; This function is called by:
  2813 ;;		_InicializaLCD
  2814 ;;		_BorraLCD
  2815 ;;		_EscribeLCD_c
  2816 ;;		_DireccionaLCD
  2817 ;; This function uses a non-reentrant model
  2818 ;;
  2819                           
  2820                           	psect	text20
  2821   00115A                     __ptext20:
  2822                           	callstack 0
  2823   00115A                     _EnviaDato:
  2824                           	callstack 22
  2825                           
  2826                           ;incstack = 0
  2827                           ;EnviaDato@a stored from wreg
  2828   00115A  6E0B               	movwf	EnviaDato@a^0,c
  2829                           
  2830                           ;LibLCDXC8.h: 63: if(interfaz==4){
  2831   00115C  0E04               	movlw	4
  2832   00115E  1822               	xorwf	_interfaz^0,w,c
  2833   001160  A4D8               	btfss	status,2,c
  2834   001162  D017               	goto	l1824
  2835                           
  2836                           ;LibLCDXC8.h: 64: LATD=(LATD & 0b00001111) | (a & 0b11110000);
  2837   001164  C00B  F00A         	movff	EnviaDato@a,??_EnviaDato
  2838   001168  0EF0               	movlw	240
  2839   00116A  160A               	andwf	??_EnviaDato^0,f,c
  2840   00116C  508C               	movf	140,w,c	;volatile
  2841   00116E  0B0F               	andlw	15
  2842   001170  100A               	iorwf	??_EnviaDato^0,w,c
  2843   001172  6E8C               	movwf	140,c	;volatile
  2844                           
  2845                           ;LibLCDXC8.h: 65: HabilitaLCD();
  2846   001174  EC1C  F00A         	call	_HabilitaLCD	;wreg free
  2847                           
  2848                           ;LibLCDXC8.h: 66: RetardoLCD(1);
  2849   001178  0E01               	movlw	1
  2850   00117A  ECF7  F007         	call	_RetardoLCD
  2851                           
  2852                           ;LibLCDXC8.h: 67: LATD=(LATD & 0b00001111) | (a<<4);
  2853   00117E  C00B  F00A         	movff	EnviaDato@a,??_EnviaDato
  2854   001182  3A0A               	swapf	??_EnviaDato^0,f,c
  2855   001184  0EF0               	movlw	240
  2856   001186  160A               	andwf	??_EnviaDato^0,f,c
  2857   001188  508C               	movf	140,w,c	;volatile
  2858   00118A  0B0F               	andlw	15
  2859   00118C  100A               	iorwf	??_EnviaDato^0,w,c
  2860   00118E  6E8C               	movwf	140,c	;volatile
  2861                           
  2862                           ;LibLCDXC8.h: 70: }else if(interfaz==8){
  2863   001190  0012               	return	
  2864   001192                     l1824:
  2865   001192  0E08               	movlw	8
  2866   001194  1822               	xorwf	_interfaz^0,w,c
  2867   001196  A4D8               	btfss	status,2,c
  2868   001198  0012               	return	
  2869                           
  2870                           ;LibLCDXC8.h: 71: LATD=a;
  2871   00119A  C00B  FF8C         	movff	EnviaDato@a,3980	;volatile
  2872   00119E  0012               	return		;funcret
  2873   0011A0                     __end_of_EnviaDato:
  2874                           	callstack 0
  2875                           
  2876 ;; *************** function _RetardoLCD *****************
  2877 ;; Defined at:
  2878 ;;		line 295 in file "LibLCDXC8.h"
  2879 ;; Parameters:    Size  Location     Type
  2880 ;;  a               1    wreg     unsigned char 
  2881 ;; Auto vars:     Size  Location     Type
  2882 ;;  a               1    8[COMRAM] unsigned char 
  2883 ;; Return value:  Size  Location     Type
  2884 ;;                  1    wreg      void 
  2885 ;; Registers used:
  2886 ;;		wreg, status,2, status,0
  2887 ;; Tracked objects:
  2888 ;;		On entry : 0/0
  2889 ;;		On exit  : 0/0
  2890 ;;		Unchanged: 0/0
  2891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2892 ;;      Params:         0       0       0       0       0       0       0       0       0
  2893 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2894 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2895 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2896 ;;Total ram usage:        2 bytes
  2897 ;; Hardware stack levels used: 1
  2898 ;; Hardware stack levels required when called: 4
  2899 ;; This function calls:
  2900 ;;		Nothing
  2901 ;; This function is called by:
  2902 ;;		_EnviaDato
  2903 ;;		_InicializaLCD
  2904 ;;		_BorraLCD
  2905 ;;		_EscribeLCD_c
  2906 ;;		_DireccionaLCD
  2907 ;; This function uses a non-reentrant model
  2908 ;;
  2909                           
  2910                           	psect	text21
  2911   000FEE                     __ptext21:
  2912                           	callstack 0
  2913   000FEE                     _RetardoLCD:
  2914                           	callstack 23
  2915                           
  2916                           ;incstack = 0
  2917                           ;RetardoLCD@a stored from wreg
  2918   000FEE  6E09               	movwf	RetardoLCD@a^0,c
  2919                           
  2920                           ;LibLCDXC8.h: 296: switch(a){
  2921   000FF0  D023               	goto	l1812
  2922   000FF2                     l1802:
  2923   000FF2  0E27               	movlw	39
  2924   000FF4  6E08               	movwf	??_RetardoLCD^0,c
  2925   000FF6  0EF5               	movlw	245
  2926   000FF8                     u1577:
  2927   000FF8  2EE8               	decfsz	wreg,f,c
  2928   000FFA  D7FE               	bra	u1577
  2929   000FFC  2E08               	decfsz	??_RetardoLCD^0,f,c
  2930   000FFE  D7FC               	bra	u1577
  2931   001000  F000               	nop	
  2932                           
  2933                           ;LibLCDXC8.h: 299: break;
  2934   001002  0012               	return	
  2935   001004                     l1804:
  2936   001004  0E03               	movlw	3
  2937   001006  6E08               	movwf	??_RetardoLCD^0,c
  2938   001008  0E98               	movlw	152
  2939   00100A                     u1587:
  2940   00100A  2EE8               	decfsz	wreg,f,c
  2941   00100C  D7FE               	bra	u1587
  2942   00100E  2E08               	decfsz	??_RetardoLCD^0,f,c
  2943   001010  D7FC               	bra	u1587
  2944                           
  2945                           ;LibLCDXC8.h: 301: _delay((unsigned long)((640)*(8000000/4000000.0)));
  2946   001012  0EB6               	movlw	182
  2947   001014                     u1597:
  2948   001014  D000               	nop2	
  2949   001016  D000               	nop2	
  2950   001018  2EE8               	decfsz	wreg,f,c
  2951   00101A  D7FC               	bra	u1597
  2952   00101C  D000               	nop2	
  2953   00101E  D000               	nop2	
  2954   001020  D000               	nop2	
  2955                           
  2956                           ;LibLCDXC8.h: 303: break;
  2957   001022  0012               	return	
  2958   001024                     l1806:
  2959   001024  0E42               	movlw	66
  2960   001026                     u1607:
  2961   001026  2EE8               	decfsz	wreg,f,c
  2962   001028  D7FE               	bra	u1607
  2963   00102A  D000               	nop2	
  2964                           
  2965                           ;LibLCDXC8.h: 306: break;
  2966   00102C  0012               	return	
  2967   00102E                     l1808:
  2968   00102E  0E1A               	movlw	26
  2969   001030                     u1617:
  2970   001030  2EE8               	decfsz	wreg,f,c
  2971   001032  D7FE               	bra	u1617
  2972   001034  D000               	nop2	
  2973                           
  2974                           ;LibLCDXC8.h: 309: break;
  2975   001036  0012               	return	
  2976   001038                     l1812:
  2977   001038  5009               	movf	RetardoLCD@a^0,w,c
  2978                           
  2979                           ; Switch size 1, requested type "simple"
  2980                           ; Number of cases is 4, Range of values is 1 to 4
  2981                           ; switch strategies available:
  2982                           ; Name         Instructions Cycles
  2983                           ; simple_byte           13     7 (average)
  2984                           ;	Chosen strategy is simple_byte
  2985   00103A  0A01               	xorlw	1	; case 1
  2986   00103C  B4D8               	btfsc	status,2,c
  2987   00103E  D7D9               	goto	l1802
  2988   001040  0A03               	xorlw	3	; case 2
  2989   001042  B4D8               	btfsc	status,2,c
  2990   001044  D7DF               	goto	l1804
  2991   001046  0A01               	xorlw	1	; case 3
  2992   001048  B4D8               	btfsc	status,2,c
  2993   00104A  D7EC               	goto	l1806
  2994   00104C  0A07               	xorlw	7	; case 4
  2995   00104E  A4D8               	btfss	status,2,c
  2996   001050  0012               	return	
  2997   001052  D7ED               	goto	l1808
  2998   001054                     __end_of_RetardoLCD:
  2999                           	callstack 0
  3000                           
  3001 ;; *************** function _HabilitaLCD *****************
  3002 ;; Defined at:
  3003 ;;		line 108 in file "LibLCDXC8.h"
  3004 ;; Parameters:    Size  Location     Type
  3005 ;;		None
  3006 ;; Auto vars:     Size  Location     Type
  3007 ;;		None
  3008 ;; Return value:  Size  Location     Type
  3009 ;;                  1    wreg      void 
  3010 ;; Registers used:
  3011 ;;		wreg
  3012 ;; Tracked objects:
  3013 ;;		On entry : 0/0
  3014 ;;		On exit  : 0/0
  3015 ;;		Unchanged: 0/0
  3016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3017 ;;      Params:         0       0       0       0       0       0       0       0       0
  3018 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3019 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3020 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3021 ;;Total ram usage:        0 bytes
  3022 ;; Hardware stack levels used: 1
  3023 ;; Hardware stack levels required when called: 4
  3024 ;; This function calls:
  3025 ;;		Nothing
  3026 ;; This function is called by:
  3027 ;;		_EnviaDato
  3028 ;;		_InicializaLCD
  3029 ;;		_BorraLCD
  3030 ;;		_EscribeLCD_c
  3031 ;;		_DireccionaLCD
  3032 ;; This function uses a non-reentrant model
  3033 ;;
  3034                           
  3035                           	psect	text22
  3036   001438                     __ptext22:
  3037                           	callstack 0
  3038   001438                     _HabilitaLCD:
  3039                           	callstack 23
  3040                           
  3041                           ;LibLCDXC8.h: 110: LATE2=1;
  3042                           
  3043                           ;incstack = 0
  3044   001438  848D               	bsf	3981,2,c	;volatile
  3045                           
  3046                           ;LibLCDXC8.h: 111: _delay((unsigned long)((40)*(8000000/4000000.0)));
  3047   00143A  0E1A               	movlw	26
  3048   00143C                     u1627:
  3049   00143C  2EE8               	decfsz	wreg,f,c
  3050   00143E  D7FE               	bra	u1627
  3051   001440  D000               	nop2	
  3052                           
  3053                           ;LibLCDXC8.h: 113: LATE2=0;
  3054   001442  948D               	bcf	3981,2,c	;volatile
  3055   001444  0012               	return		;funcret
  3056   001446                     __end_of_HabilitaLCD:
  3057                           	callstack 0
  3058                           
  3059 ;; *************** function _ISR *****************
  3060 ;; Defined at:
  3061 ;;		line 323 in file "Proyecto.c"
  3062 ;; Parameters:    Size  Location     Type
  3063 ;;		None
  3064 ;; Auto vars:     Size  Location     Type
  3065 ;;		None
  3066 ;; Return value:  Size  Location     Type
  3067 ;;                  1    wreg      void 
  3068 ;; Registers used:
  3069 ;;		wreg, status,2, status,0, cstack
  3070 ;; Tracked objects:
  3071 ;;		On entry : 0/0
  3072 ;;		On exit  : 0/0
  3073 ;;		Unchanged: 0/0
  3074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3075 ;;      Params:         0       0       0       0       0       0       0       0       0
  3076 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3077 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3078 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3079 ;;Total ram usage:        2 bytes
  3080 ;; Hardware stack levels used: 1
  3081 ;; Hardware stack levels required when called: 3
  3082 ;; This function calls:
  3083 ;;		_LeerTeclado
  3084 ;;		i2_EscribeLCD_c
  3085 ;; This function is called by:
  3086 ;;		Interrupt level 2
  3087 ;; This function uses a non-reentrant model
  3088 ;;
  3089                           
  3090                           	psect	intcode
  3091   000008                     __pintcode:
  3092                           	callstack 0
  3093   000008                     _ISR:
  3094                           	callstack 22
  3095                           
  3096                           ;incstack = 0
  3097   000008  8233               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  3098   00000A  ED0C  F006         	call	int_func,f	;refresh shadow registers
  3099                           
  3100                           	psect	intcode_body
  3101   000C18                     __pintcode_body:
  3102                           	callstack 22
  3103   000C18                     int_func:
  3104                           	callstack 22
  3105   000C18  0006               	pop		; remove dummy address from shadow register refresh
  3106                           
  3107                           ;Proyecto.c: 324: if(TMR0IF == 1){
  3108   000C1A  A4F2               	btfss	4082,2,c	;volatile
  3109   000C1C  D022               	goto	i2l298
  3110                           
  3111                           ;Proyecto.c: 325: TMR0IF = 0;
  3112   000C1E  94F2               	bcf	4082,2,c	;volatile
  3113                           
  3114                           ;Proyecto.c: 326: TMR0 = 64911;
  3115   000C20  0EFD               	movlw	253
  3116   000C22  6ED7               	movwf	215,c	;volatile
  3117   000C24  0E8F               	movlw	143
  3118   000C26  6ED6               	movwf	214,c	;volatile
  3119                           
  3120                           ;Proyecto.c: 327: contador += 1;
  3121   000C28  4A2D               	infsnz	_contador^0,f,c
  3122   000C2A  2A2E               	incf	(_contador+1)^0,f,c
  3123                           
  3124                           ;Proyecto.c: 328: if(contador == 20000){
  3125   000C2C  0E20               	movlw	32
  3126   000C2E  182D               	xorwf	_contador^0,w,c
  3127   000C30  E106               	bnz	i2l299
  3128   000C32  0E4E               	movlw	78
  3129   000C34  182E               	xorwf	(_contador+1)^0,w,c
  3130   000C36  A4D8               	btfss	status,2,c
  3131   000C38  D002               	goto	i2l299
  3132   000C3A  0003               	sleep		;# 
  3133   000C3C                     i2l300:
  3134   000C3C  D7FF               	goto	i2l300
  3135   000C3E                     i2l299:
  3136                           
  3137                           ;Proyecto.c: 331: };Proyecto.c: 332: if(RE0 == 1){
  3138   000C3E  A084               	btfss	3972,0,c	;volatile
  3139   000C40  D010               	goto	i2l298
  3140                           
  3141                           ;Proyecto.c: 333: CCP1CON = 0 ;
  3142   000C42  0E00               	movlw	0
  3143   000C44  6EBD               	movwf	189,c	;volatile
  3144                           
  3145                           ;Proyecto.c: 334: _delay((unsigned long)((100)*(8000000/4000.0)));
  3146   000C46  0E02               	movlw	2
  3147   000C48  6E07               	movwf	(??_ISR+1)^0,c
  3148   000C4A  0E04               	movlw	4
  3149   000C4C  6E06               	movwf	??_ISR^0,c
  3150   000C4E  0EBA               	movlw	186
  3151   000C50                     i2u163_47:
  3152   000C50  2EE8               	decfsz	wreg,f,c
  3153   000C52  D7FE               	bra	i2u163_47
  3154   000C54  2E06               	decfsz	??_ISR^0,f,c
  3155   000C56  D7FC               	bra	i2u163_47
  3156   000C58  2E07               	decfsz	(??_ISR+1)^0,f,c
  3157   000C5A  D7FA               	bra	i2u163_47
  3158   000C5C  D000               	nop2	
  3159   000C5E  0003               	sleep		;# 
  3160   000C60                     i2l304:
  3161   000C60  D7FF               	goto	i2l304
  3162   000C62                     i2l298:
  3163                           
  3164                           ;Proyecto.c: 337: };Proyecto.c: 338: };Proyecto.c: 339: if(RBIF==1){
  3165   000C62  A0F2               	btfss	4082,0,c	;volatile
  3166   000C64  D063               	goto	i2l340
  3167                           
  3168                           ;Proyecto.c: 340: if(PORTB!=0b11110000){
  3169   000C66  0EF0               	movlw	240
  3170   000C68  1881               	xorwf	129,w,c	;volatile
  3171   000C6A  B4D8               	btfsc	status,2,c
  3172   000C6C  D053               	goto	i2l2454
  3173                           
  3174                           ;Proyecto.c: 341: Tecla=0;
  3175   000C6E  0E00               	movlw	0
  3176   000C70  6E30               	movwf	_Tecla^0,c
  3177                           
  3178                           ;Proyecto.c: 342: LATB=0b11111110;
  3179   000C72  0EFE               	movlw	254
  3180   000C74  6E8A               	movwf	138,c	;volatile
  3181                           
  3182                           ;Proyecto.c: 343: if(RB4==0) Tecla=16;
  3183   000C76  B881               	btfsc	3969,4,c	;volatile
  3184   000C78  D002               	goto	i2l309
  3185   000C7A  0E10               	movlw	16
  3186   000C7C  D041               	goto	L21
  3187   000C7E                     i2l309:
  3188                           
  3189                           ;Proyecto.c: 344: else if(RB5==0) Tecla=12;
  3190   000C7E  BA81               	btfsc	3969,5,c	;volatile
  3191   000C80  D002               	goto	i2l311
  3192   000C82  0E0C               	movlw	12
  3193   000C84  D03D               	goto	L21
  3194   000C86                     i2l311:
  3195                           
  3196                           ;Proyecto.c: 345: else if(RB6==0) Tecla=8;
  3197   000C86  BC81               	btfsc	3969,6,c	;volatile
  3198   000C88  D002               	goto	i2l313
  3199   000C8A  0E08               	movlw	8
  3200   000C8C  D039               	goto	L21
  3201   000C8E                     i2l313:
  3202                           
  3203                           ;Proyecto.c: 346: else if(RB7==0) Tecla=4;
  3204   000C8E  BE81               	btfsc	3969,7,c	;volatile
  3205   000C90  D002               	goto	i2l2412
  3206   000C92  0E04               	movlw	4
  3207   000C94  D035               	goto	L21
  3208   000C96                     i2l2412:
  3209                           
  3210                           ;Proyecto.c: 347: else{;Proyecto.c: 348: LATB=0b11111101;
  3211   000C96  0EFD               	movlw	253
  3212   000C98  6E8A               	movwf	138,c	;volatile
  3213                           
  3214                           ;Proyecto.c: 349: if(RB4==0) Tecla=15;
  3215   000C9A  B881               	btfsc	3969,4,c	;volatile
  3216   000C9C  D002               	goto	i2l317
  3217   000C9E  0E0F               	movlw	15
  3218   000CA0  D02F               	goto	L21
  3219   000CA2                     i2l317:
  3220                           
  3221                           ;Proyecto.c: 350: else if(RB5==0) Tecla=11;
  3222   000CA2  BA81               	btfsc	3969,5,c	;volatile
  3223   000CA4  D002               	goto	i2l319
  3224   000CA6  0E0B               	movlw	11
  3225   000CA8  D02B               	goto	L21
  3226   000CAA                     i2l319:
  3227                           
  3228                           ;Proyecto.c: 351: else if(RB6==0) Tecla=7;
  3229   000CAA  BC81               	btfsc	3969,6,c	;volatile
  3230   000CAC  D002               	goto	i2l321
  3231   000CAE  0E07               	movlw	7
  3232   000CB0  D027               	goto	L21
  3233   000CB2                     i2l321:
  3234                           
  3235                           ;Proyecto.c: 352: else if(RB7==0) Tecla=3;
  3236   000CB2  BE81               	btfsc	3969,7,c	;volatile
  3237   000CB4  D002               	goto	i2l2424
  3238   000CB6  0E03               	movlw	3
  3239   000CB8  D023               	goto	L21
  3240   000CBA                     i2l2424:
  3241                           
  3242                           ;Proyecto.c: 353: else{;Proyecto.c: 354: LATB=0b11111011;
  3243   000CBA  0EFB               	movlw	251
  3244   000CBC  6E8A               	movwf	138,c	;volatile
  3245                           
  3246                           ;Proyecto.c: 355: if(RB4==0) Tecla=14;
  3247   000CBE  B881               	btfsc	3969,4,c	;volatile
  3248   000CC0  D002               	goto	i2l325
  3249   000CC2  0E0E               	movlw	14
  3250   000CC4  D01D               	goto	L21
  3251   000CC6                     i2l325:
  3252                           
  3253                           ;Proyecto.c: 356: else if(RB5==0) Tecla=10;
  3254   000CC6  BA81               	btfsc	3969,5,c	;volatile
  3255   000CC8  D002               	goto	i2l327
  3256   000CCA  0E0A               	movlw	10
  3257   000CCC  D019               	goto	L21
  3258   000CCE                     i2l327:
  3259                           
  3260                           ;Proyecto.c: 357: else if(RB6==0) Tecla=6;
  3261   000CCE  BC81               	btfsc	3969,6,c	;volatile
  3262   000CD0  D002               	goto	i2l329
  3263   000CD2  0E06               	movlw	6
  3264   000CD4  D015               	goto	L21
  3265   000CD6                     i2l329:
  3266                           
  3267                           ;Proyecto.c: 358: else if(RB7==0) Tecla=2;
  3268   000CD6  BE81               	btfsc	3969,7,c	;volatile
  3269   000CD8  D002               	goto	i2l2436
  3270   000CDA  0E02               	movlw	2
  3271   000CDC  D011               	goto	L21
  3272   000CDE                     i2l2436:
  3273                           
  3274                           ;Proyecto.c: 359: else{;Proyecto.c: 360: LATB=0b11110111;
  3275   000CDE  0EF7               	movlw	247
  3276   000CE0  6E8A               	movwf	138,c	;volatile
  3277                           
  3278                           ;Proyecto.c: 361: if(RB4==0) Tecla=13;
  3279   000CE2  B881               	btfsc	3969,4,c	;volatile
  3280   000CE4  D002               	goto	i2l333
  3281   000CE6  0E0D               	movlw	13
  3282   000CE8  D00B               	goto	L21
  3283   000CEA                     i2l333:
  3284                           
  3285                           ;Proyecto.c: 362: else if(RB5==0) Tecla=9;
  3286   000CEA  BA81               	btfsc	3969,5,c	;volatile
  3287   000CEC  D002               	goto	i2l335
  3288   000CEE  0E09               	movlw	9
  3289   000CF0  D007               	goto	L21
  3290   000CF2                     i2l335:
  3291                           
  3292                           ;Proyecto.c: 363: else if(RB6==0) Tecla=5;
  3293   000CF2  BC81               	btfsc	3969,6,c	;volatile
  3294   000CF4  D002               	goto	i2l337
  3295   000CF6  0E05               	movlw	5
  3296   000CF8  D003               	goto	L21
  3297   000CFA                     i2l337:
  3298                           
  3299                           ;Proyecto.c: 364: else if(RB7==0) Tecla=1;
  3300   000CFA  BE81               	btfsc	3969,7,c	;volatile
  3301   000CFC  D002               	goto	i2l334
  3302   000CFE  0E01               	movlw	1
  3303   000D00                     L21:
  3304   000D00  6E30               	movwf	_Tecla^0,c
  3305   000D02                     i2l334:
  3306                           
  3307                           ;Proyecto.c: 365: };Proyecto.c: 366: };Proyecto.c: 367: };Proyecto.c: 368: LATB=0b111100
      +                          00;
  3308   000D02  0EF0               	movlw	240
  3309   000D04  6E8A               	movwf	138,c	;volatile
  3310                           
  3311                           ;Proyecto.c: 369: ing = Tecla;
  3312   000D06  C030  F02F         	movff	_Tecla,_ing
  3313                           
  3314                           ;Proyecto.c: 370: LeerTeclado();
  3315   000D0A  EC04  F007         	call	_LeerTeclado	;wreg free
  3316                           
  3317                           ;Proyecto.c: 371: EscribeLCD_c(Tecla);
  3318   000D0E  5030               	movf	_Tecla^0,w,c
  3319   000D10  EC07  F00A         	call	i2_EscribeLCD_c
  3320   000D14                     i2l2454:
  3321                           
  3322                           ;Proyecto.c: 372: };Proyecto.c: 373: RBIF=0;
  3323   000D14  90F2               	bcf	4082,0,c	;volatile
  3324                           
  3325                           ;Proyecto.c: 374: _delay((unsigned long)((300)*(8000000/4000.0)));
  3326   000D16  0E04               	movlw	4
  3327   000D18  6E07               	movwf	(??_ISR+1)^0,c
  3328   000D1A  0E0C               	movlw	12
  3329   000D1C  6E06               	movwf	??_ISR^0,c
  3330   000D1E  0E34               	movlw	52
  3331   000D20                     i2u164_47:
  3332   000D20  2EE8               	decfsz	wreg,f,c
  3333   000D22  D7FE               	bra	i2u164_47
  3334   000D24  2E06               	decfsz	??_ISR^0,f,c
  3335   000D26  D7FC               	bra	i2u164_47
  3336   000D28  2E07               	decfsz	(??_ISR+1)^0,f,c
  3337   000D2A  D7FA               	bra	i2u164_47
  3338   000D2C                     i2l340:
  3339   000D2C  9233               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  3340   000D2E  0011               	retfie		f
  3341   000D30                     __end_of_ISR:
  3342                           	callstack 0
  3343                           
  3344 ;; *************** function i2_EscribeLCD_c *****************
  3345 ;; Defined at:
  3346 ;;		line 148 in file "LibLCDXC8.h"
  3347 ;; Parameters:    Size  Location     Type
  3348 ;;  a               1    wreg     unsigned char 
  3349 ;; Auto vars:     Size  Location     Type
  3350 ;;  a               1    4[COMRAM] unsigned char 
  3351 ;; Return value:  Size  Location     Type
  3352 ;;                  1    wreg      void 
  3353 ;; Registers used:
  3354 ;;		wreg, status,2, status,0, cstack
  3355 ;; Tracked objects:
  3356 ;;		On entry : 0/0
  3357 ;;		On exit  : 0/0
  3358 ;;		Unchanged: 0/0
  3359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3360 ;;      Params:         0       0       0       0       0       0       0       0       0
  3361 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3362 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3363 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3364 ;;Total ram usage:        1 bytes
  3365 ;; Hardware stack levels used: 1
  3366 ;; Hardware stack levels required when called: 2
  3367 ;; This function calls:
  3368 ;;		i2_EnviaDato
  3369 ;;		i2_HabilitaLCD
  3370 ;;		i2_RetardoLCD
  3371 ;; This function is called by:
  3372 ;;		_ISR
  3373 ;; This function uses a non-reentrant model
  3374 ;;
  3375                           
  3376                           	psect	text24
  3377   00140E                     __ptext24:
  3378                           	callstack 0
  3379   00140E                     i2_EscribeLCD_c:
  3380                           	callstack 22
  3381                           
  3382                           ;incstack = 0
  3383                           ;i2EscribeLCD_c@a stored from wreg
  3384   00140E  6E05               	movwf	i2EscribeLCD_c@a^0,c
  3385                           
  3386                           ;LibLCDXC8.h: 152: LATE1=1;
  3387   001410  828D               	bsf	3981,1,c	;volatile
  3388                           
  3389                           ;LibLCDXC8.h: 153: EnviaDato(a);
  3390   001412  5005               	movf	i2EscribeLCD_c@a^0,w,c
  3391   001414  ECD0  F008         	call	i2_EnviaDato
  3392                           
  3393                           ;LibLCDXC8.h: 154: HabilitaLCD();
  3394   001418  EC23  F00A         	call	i2_HabilitaLCD	;wreg free
  3395                           
  3396                           ;LibLCDXC8.h: 155: RetardoLCD(4);
  3397   00141C  0E04               	movlw	4
  3398   00141E  EC2A  F008         	call	i2_RetardoLCD
  3399   001422  0012               	return		;funcret
  3400   001424                     __end_ofi2_EscribeLCD_c:
  3401                           	callstack 0
  3402                           
  3403 ;; *************** function i2_EnviaDato *****************
  3404 ;; Defined at:
  3405 ;;		line 62 in file "LibLCDXC8.h"
  3406 ;; Parameters:    Size  Location     Type
  3407 ;;  a               1    wreg     unsigned char 
  3408 ;; Auto vars:     Size  Location     Type
  3409 ;;  a               1    3[COMRAM] unsigned char 
  3410 ;; Return value:  Size  Location     Type
  3411 ;;                  1    wreg      void 
  3412 ;; Registers used:
  3413 ;;		wreg, status,2, status,0, cstack
  3414 ;; Tracked objects:
  3415 ;;		On entry : 0/0
  3416 ;;		On exit  : 0/0
  3417 ;;		Unchanged: 0/0
  3418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3419 ;;      Params:         0       0       0       0       0       0       0       0       0
  3420 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3421 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3422 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3423 ;;Total ram usage:        2 bytes
  3424 ;; Hardware stack levels used: 1
  3425 ;; Hardware stack levels required when called: 1
  3426 ;; This function calls:
  3427 ;;		i2_HabilitaLCD
  3428 ;;		i2_RetardoLCD
  3429 ;; This function is called by:
  3430 ;;		i2_EscribeLCD_c
  3431 ;; This function uses a non-reentrant model
  3432 ;;
  3433                           
  3434                           	psect	text25
  3435   0011A0                     __ptext25:
  3436                           	callstack 0
  3437   0011A0                     i2_EnviaDato:
  3438                           	callstack 22
  3439                           
  3440                           ;incstack = 0
  3441                           ;i2EnviaDato@a stored from wreg
  3442   0011A0  6E04               	movwf	i2EnviaDato@a^0,c
  3443                           
  3444                           ;LibLCDXC8.h: 63: if(interfaz==4){
  3445   0011A2  0E04               	movlw	4
  3446   0011A4  1822               	xorwf	_interfaz^0,w,c
  3447   0011A6  A4D8               	btfss	status,2,c
  3448   0011A8  D017               	goto	i2l2078
  3449                           
  3450                           ;LibLCDXC8.h: 64: LATD=(LATD & 0b00001111) | (a & 0b11110000);
  3451   0011AA  C004  F003         	movff	i2EnviaDato@a,??i2_EnviaDato
  3452   0011AE  0EF0               	movlw	240
  3453   0011B0  1603               	andwf	??i2_EnviaDato^0,f,c
  3454   0011B2  508C               	movf	140,w,c	;volatile
  3455   0011B4  0B0F               	andlw	15
  3456   0011B6  1003               	iorwf	??i2_EnviaDato^0,w,c
  3457   0011B8  6E8C               	movwf	140,c	;volatile
  3458                           
  3459                           ;LibLCDXC8.h: 65: HabilitaLCD();
  3460   0011BA  EC23  F00A         	call	i2_HabilitaLCD	;wreg free
  3461                           
  3462                           ;LibLCDXC8.h: 66: RetardoLCD(1);
  3463   0011BE  0E01               	movlw	1
  3464   0011C0  EC2A  F008         	call	i2_RetardoLCD
  3465                           
  3466                           ;LibLCDXC8.h: 67: LATD=(LATD & 0b00001111) | (a<<4);
  3467   0011C4  C004  F003         	movff	i2EnviaDato@a,??i2_EnviaDato
  3468   0011C8  3A03               	swapf	??i2_EnviaDato^0,f,c
  3469   0011CA  0EF0               	movlw	240
  3470   0011CC  1603               	andwf	??i2_EnviaDato^0,f,c
  3471   0011CE  508C               	movf	140,w,c	;volatile
  3472   0011D0  0B0F               	andlw	15
  3473   0011D2  1003               	iorwf	??i2_EnviaDato^0,w,c
  3474   0011D4  6E8C               	movwf	140,c	;volatile
  3475                           
  3476                           ;LibLCDXC8.h: 70: }else if(interfaz==8){
  3477   0011D6  0012               	return	
  3478   0011D8                     i2l2078:
  3479   0011D8  0E08               	movlw	8
  3480   0011DA  1822               	xorwf	_interfaz^0,w,c
  3481   0011DC  A4D8               	btfss	status,2,c
  3482   0011DE  0012               	return	
  3483                           
  3484                           ;LibLCDXC8.h: 71: LATD=a;
  3485   0011E0  C004  FF8C         	movff	i2EnviaDato@a,3980	;volatile
  3486   0011E4  0012               	return		;funcret
  3487   0011E6                     __end_ofi2_EnviaDato:
  3488                           	callstack 0
  3489                           
  3490 ;; *************** function i2_RetardoLCD *****************
  3491 ;; Defined at:
  3492 ;;		line 295 in file "LibLCDXC8.h"
  3493 ;; Parameters:    Size  Location     Type
  3494 ;;  a               1    wreg     unsigned char 
  3495 ;; Auto vars:     Size  Location     Type
  3496 ;;  a               1    1[COMRAM] unsigned char 
  3497 ;; Return value:  Size  Location     Type
  3498 ;;                  1    wreg      void 
  3499 ;; Registers used:
  3500 ;;		wreg, status,2, status,0
  3501 ;; Tracked objects:
  3502 ;;		On entry : 0/0
  3503 ;;		On exit  : 0/0
  3504 ;;		Unchanged: 0/0
  3505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3506 ;;      Params:         0       0       0       0       0       0       0       0       0
  3507 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3508 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3509 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3510 ;;Total ram usage:        2 bytes
  3511 ;; Hardware stack levels used: 1
  3512 ;; This function calls:
  3513 ;;		Nothing
  3514 ;; This function is called by:
  3515 ;;		i2_EnviaDato
  3516 ;;		i2_EscribeLCD_c
  3517 ;; This function uses a non-reentrant model
  3518 ;;
  3519                           
  3520                           	psect	text26
  3521   001054                     __ptext26:
  3522                           	callstack 0
  3523   001054                     i2_RetardoLCD:
  3524                           	callstack 23
  3525                           
  3526                           ;incstack = 0
  3527                           ;i2RetardoLCD@a stored from wreg
  3528   001054  6E02               	movwf	i2RetardoLCD@a^0,c
  3529                           
  3530                           ;LibLCDXC8.h: 296: switch(a){
  3531   001056  D023               	goto	i2l1872
  3532   001058                     i2l1862:
  3533   001058  0E27               	movlw	39
  3534   00105A  6E01               	movwf	??i2_RetardoLCD^0,c
  3535   00105C  0EF5               	movlw	245
  3536   00105E                     i2u165_47:
  3537   00105E  2EE8               	decfsz	wreg,f,c
  3538   001060  D7FE               	bra	i2u165_47
  3539   001062  2E01               	decfsz	??i2_RetardoLCD^0,f,c
  3540   001064  D7FC               	bra	i2u165_47
  3541   001066  F000               	nop	
  3542                           
  3543                           ;LibLCDXC8.h: 299: break;
  3544   001068  0012               	return	
  3545   00106A                     i2l1864:
  3546   00106A  0E03               	movlw	3
  3547   00106C  6E01               	movwf	??i2_RetardoLCD^0,c
  3548   00106E  0E98               	movlw	152
  3549   001070                     i2u166_47:
  3550   001070  2EE8               	decfsz	wreg,f,c
  3551   001072  D7FE               	bra	i2u166_47
  3552   001074  2E01               	decfsz	??i2_RetardoLCD^0,f,c
  3553   001076  D7FC               	bra	i2u166_47
  3554                           
  3555                           ;LibLCDXC8.h: 301: _delay((unsigned long)((640)*(8000000/4000000.0)));
  3556   001078  0EB6               	movlw	182
  3557   00107A                     i2u167_47:
  3558   00107A  D000               	nop2	
  3559   00107C  D000               	nop2	
  3560   00107E  2EE8               	decfsz	wreg,f,c
  3561   001080  D7FC               	bra	i2u167_47
  3562   001082  D000               	nop2	
  3563   001084  D000               	nop2	
  3564   001086  D000               	nop2	
  3565                           
  3566                           ;LibLCDXC8.h: 303: break;
  3567   001088  0012               	return	
  3568   00108A                     i2l1866:
  3569   00108A  0E42               	movlw	66
  3570   00108C                     i2u168_47:
  3571   00108C  2EE8               	decfsz	wreg,f,c
  3572   00108E  D7FE               	bra	i2u168_47
  3573   001090  D000               	nop2	
  3574                           
  3575                           ;LibLCDXC8.h: 306: break;
  3576   001092  0012               	return	
  3577   001094                     i2l1868:
  3578   001094  0E1A               	movlw	26
  3579   001096                     i2u169_47:
  3580   001096  2EE8               	decfsz	wreg,f,c
  3581   001098  D7FE               	bra	i2u169_47
  3582   00109A  D000               	nop2	
  3583                           
  3584                           ;LibLCDXC8.h: 309: break;
  3585   00109C  0012               	return	
  3586   00109E                     i2l1872:
  3587   00109E  5002               	movf	i2RetardoLCD@a^0,w,c
  3588                           
  3589                           ; Switch size 1, requested type "simple"
  3590                           ; Number of cases is 4, Range of values is 1 to 4
  3591                           ; switch strategies available:
  3592                           ; Name         Instructions Cycles
  3593                           ; simple_byte           13     7 (average)
  3594                           ;	Chosen strategy is simple_byte
  3595   0010A0  0A01               	xorlw	1	; case 1
  3596   0010A2  B4D8               	btfsc	status,2,c
  3597   0010A4  D7D9               	goto	i2l1862
  3598   0010A6  0A03               	xorlw	3	; case 2
  3599   0010A8  B4D8               	btfsc	status,2,c
  3600   0010AA  D7DF               	goto	i2l1864
  3601   0010AC  0A01               	xorlw	1	; case 3
  3602   0010AE  B4D8               	btfsc	status,2,c
  3603   0010B0  D7EC               	goto	i2l1866
  3604   0010B2  0A07               	xorlw	7	; case 4
  3605   0010B4  A4D8               	btfss	status,2,c
  3606   0010B6  0012               	return	
  3607   0010B8  D7ED               	goto	i2l1868
  3608   0010BA                     __end_ofi2_RetardoLCD:
  3609                           	callstack 0
  3610                           
  3611 ;; *************** function i2_HabilitaLCD *****************
  3612 ;; Defined at:
  3613 ;;		line 108 in file "LibLCDXC8.h"
  3614 ;; Parameters:    Size  Location     Type
  3615 ;;		None
  3616 ;; Auto vars:     Size  Location     Type
  3617 ;;		None
  3618 ;; Return value:  Size  Location     Type
  3619 ;;                  1    wreg      void 
  3620 ;; Registers used:
  3621 ;;		wreg
  3622 ;; Tracked objects:
  3623 ;;		On entry : 0/0
  3624 ;;		On exit  : 0/0
  3625 ;;		Unchanged: 0/0
  3626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3627 ;;      Params:         0       0       0       0       0       0       0       0       0
  3628 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3629 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3630 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3631 ;;Total ram usage:        0 bytes
  3632 ;; Hardware stack levels used: 1
  3633 ;; This function calls:
  3634 ;;		Nothing
  3635 ;; This function is called by:
  3636 ;;		i2_EnviaDato
  3637 ;;		i2_EscribeLCD_c
  3638 ;; This function uses a non-reentrant model
  3639 ;;
  3640                           
  3641                           	psect	text27
  3642   001446                     __ptext27:
  3643                           	callstack 0
  3644   001446                     i2_HabilitaLCD:
  3645                           	callstack 23
  3646                           
  3647                           ;LibLCDXC8.h: 110: LATE2=1;
  3648                           
  3649                           ;incstack = 0
  3650   001446  848D               	bsf	3981,2,c	;volatile
  3651                           
  3652                           ;LibLCDXC8.h: 111: _delay((unsigned long)((40)*(8000000/4000000.0)));
  3653   001448  0E1A               	movlw	26
  3654   00144A                     i2u170_47:
  3655   00144A  2EE8               	decfsz	wreg,f,c
  3656   00144C  D7FE               	bra	i2u170_47
  3657   00144E  D000               	nop2	
  3658                           
  3659                           ;LibLCDXC8.h: 113: LATE2=0;
  3660   001450  948D               	bcf	3981,2,c	;volatile
  3661   001452  0012               	return		;funcret
  3662   001454                     __end_ofi2_HabilitaLCD:
  3663                           	callstack 0
  3664                           
  3665 ;; *************** function _LeerTeclado *****************
  3666 ;; Defined at:
  3667 ;;		line 195 in file "Proyecto.c"
  3668 ;; Parameters:    Size  Location     Type
  3669 ;;		None
  3670 ;; Auto vars:     Size  Location     Type
  3671 ;;		None
  3672 ;; Return value:  Size  Location     Type
  3673 ;;                  1    wreg      unsigned char 
  3674 ;; Registers used:
  3675 ;;		wreg, status,2, status,0
  3676 ;; Tracked objects:
  3677 ;;		On entry : 0/0
  3678 ;;		On exit  : 0/0
  3679 ;;		Unchanged: 0/0
  3680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3681 ;;      Params:         0       0       0       0       0       0       0       0       0
  3682 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3683 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3684 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3685 ;;Total ram usage:        0 bytes
  3686 ;; Hardware stack levels used: 1
  3687 ;; This function calls:
  3688 ;;		Nothing
  3689 ;; This function is called by:
  3690 ;;		_ISR
  3691 ;; This function uses a non-reentrant model
  3692 ;;
  3693                           
  3694                           	psect	text28
  3695   000E08                     __ptext28:
  3696                           	callstack 0
  3697   000E08                     _LeerTeclado:
  3698                           	callstack 24
  3699                           
  3700                           ;Proyecto.c: 196: switch (Tecla){
  3701                           
  3702                           ;incstack = 0
  3703   000E08  D030               	goto	i2l1620
  3704   000E0A                     i2l1586:
  3705                           
  3706                           ;Proyecto.c: 198: Tecla='1';
  3707   000E0A  0E31               	movlw	49
  3708   000E0C  6E30               	movwf	_Tecla^0,c
  3709                           
  3710                           ;Proyecto.c: 199: break;
  3711   000E0E  0012               	return	
  3712   000E10                     i2l1588:
  3713                           
  3714                           ;Proyecto.c: 201: Tecla='2';
  3715   000E10  0E32               	movlw	50
  3716   000E12  6E30               	movwf	_Tecla^0,c
  3717                           
  3718                           ;Proyecto.c: 202: break;
  3719   000E14  0012               	return	
  3720   000E16                     i2l1590:
  3721                           
  3722                           ;Proyecto.c: 204: Tecla='3';
  3723   000E16  0E33               	movlw	51
  3724   000E18  6E30               	movwf	_Tecla^0,c
  3725                           
  3726                           ;Proyecto.c: 205: break;
  3727   000E1A  0012               	return	
  3728   000E1C                     i2l1592:
  3729                           
  3730                           ;Proyecto.c: 207: Tecla='+';
  3731   000E1C  0E2B               	movlw	43
  3732   000E1E  6E30               	movwf	_Tecla^0,c
  3733                           
  3734                           ;Proyecto.c: 208: break;
  3735   000E20  0012               	return	
  3736   000E22                     i2l1594:
  3737                           
  3738                           ;Proyecto.c: 210: Tecla='4';
  3739   000E22  0E34               	movlw	52
  3740   000E24  6E30               	movwf	_Tecla^0,c
  3741                           
  3742                           ;Proyecto.c: 211: break;
  3743   000E26  0012               	return	
  3744   000E28                     i2l1596:
  3745                           
  3746                           ;Proyecto.c: 213: Tecla ='5';
  3747   000E28  0E35               	movlw	53
  3748   000E2A  6E30               	movwf	_Tecla^0,c
  3749                           
  3750                           ;Proyecto.c: 214: break;
  3751   000E2C  0012               	return	
  3752   000E2E                     i2l1598:
  3753                           
  3754                           ;Proyecto.c: 216: Tecla='6';
  3755   000E2E  0E36               	movlw	54
  3756   000E30  6E30               	movwf	_Tecla^0,c
  3757                           
  3758                           ;Proyecto.c: 217: break;
  3759   000E32  0012               	return	
  3760   000E34                     i2l1600:
  3761                           
  3762                           ;Proyecto.c: 219: Tecla='-';
  3763   000E34  0E2D               	movlw	45
  3764   000E36  6E30               	movwf	_Tecla^0,c
  3765                           
  3766                           ;Proyecto.c: 220: break;
  3767   000E38  0012               	return	
  3768   000E3A                     i2l1602:
  3769                           
  3770                           ;Proyecto.c: 222: Tecla='7';
  3771   000E3A  0E37               	movlw	55
  3772   000E3C  6E30               	movwf	_Tecla^0,c
  3773                           
  3774                           ;Proyecto.c: 223: break;
  3775   000E3E  0012               	return	
  3776   000E40                     i2l1604:
  3777                           
  3778                           ;Proyecto.c: 225: Tecla='8';
  3779   000E40  0E38               	movlw	56
  3780   000E42  6E30               	movwf	_Tecla^0,c
  3781                           
  3782                           ;Proyecto.c: 226: break;
  3783   000E44  0012               	return	
  3784   000E46                     i2l1606:
  3785                           
  3786                           ;Proyecto.c: 228: Tecla='9';
  3787   000E46  0E39               	movlw	57
  3788   000E48  6E30               	movwf	_Tecla^0,c
  3789                           
  3790                           ;Proyecto.c: 229: break;
  3791   000E4A  0012               	return	
  3792   000E4C                     i2l1608:
  3793                           
  3794                           ;Proyecto.c: 231: Tecla='X';
  3795   000E4C  0E58               	movlw	88
  3796   000E4E  6E30               	movwf	_Tecla^0,c
  3797                           
  3798                           ;Proyecto.c: 232: break;
  3799   000E50  0012               	return	
  3800   000E52                     i2l1610:
  3801                           
  3802                           ;Proyecto.c: 234: Tecla='B';
  3803   000E52  0E42               	movlw	66
  3804   000E54  6E30               	movwf	_Tecla^0,c
  3805                           
  3806                           ;Proyecto.c: 235: break;
  3807   000E56  0012               	return	
  3808   000E58                     i2l1612:
  3809                           
  3810                           ;Proyecto.c: 237: Tecla='0';
  3811   000E58  0E30               	movlw	48
  3812   000E5A  6E30               	movwf	_Tecla^0,c
  3813                           
  3814                           ;Proyecto.c: 238: break;
  3815   000E5C  0012               	return	
  3816   000E5E                     i2l1614:
  3817                           
  3818                           ;Proyecto.c: 240: Tecla='=';
  3819   000E5E  0E3D               	movlw	61
  3820   000E60  6E30               	movwf	_Tecla^0,c
  3821                           
  3822                           ;Proyecto.c: 241: break;
  3823   000E62  0012               	return	
  3824   000E64                     i2l1616:
  3825                           
  3826                           ;Proyecto.c: 243: Tecla='/';
  3827   000E64  0E2F               	movlw	47
  3828   000E66  6E30               	movwf	_Tecla^0,c
  3829                           
  3830                           ;Proyecto.c: 244: break;
  3831   000E68  0012               	return	
  3832   000E6A                     i2l1620:
  3833   000E6A  5030               	movf	_Tecla^0,w,c
  3834                           
  3835                           ; Switch size 1, requested type "simple"
  3836                           ; Number of cases is 16, Range of values is 1 to 16
  3837                           ; switch strategies available:
  3838                           ; Name         Instructions Cycles
  3839                           ; simple_byte           49    25 (average)
  3840                           ;	Chosen strategy is simple_byte
  3841   000E6C  0A01               	xorlw	1	; case 1
  3842   000E6E  B4D8               	btfsc	status,2,c
  3843   000E70  D7CC               	goto	i2l1586
  3844   000E72  0A03               	xorlw	3	; case 2
  3845   000E74  B4D8               	btfsc	status,2,c
  3846   000E76  D7CC               	goto	i2l1588
  3847   000E78  0A01               	xorlw	1	; case 3
  3848   000E7A  B4D8               	btfsc	status,2,c
  3849   000E7C  D7CC               	goto	i2l1590
  3850   000E7E  0A07               	xorlw	7	; case 4
  3851   000E80  B4D8               	btfsc	status,2,c
  3852   000E82  D7CC               	goto	i2l1592
  3853   000E84  0A01               	xorlw	1	; case 5
  3854   000E86  B4D8               	btfsc	status,2,c
  3855   000E88  D7CC               	goto	i2l1594
  3856   000E8A  0A03               	xorlw	3	; case 6
  3857   000E8C  B4D8               	btfsc	status,2,c
  3858   000E8E  D7CC               	goto	i2l1596
  3859   000E90  0A01               	xorlw	1	; case 7
  3860   000E92  B4D8               	btfsc	status,2,c
  3861   000E94  D7CC               	goto	i2l1598
  3862   000E96  0A0F               	xorlw	15	; case 8
  3863   000E98  B4D8               	btfsc	status,2,c
  3864   000E9A  D7CC               	goto	i2l1600
  3865   000E9C  0A01               	xorlw	1	; case 9
  3866   000E9E  B4D8               	btfsc	status,2,c
  3867   000EA0  D7CC               	goto	i2l1602
  3868   000EA2  0A03               	xorlw	3	; case 10
  3869   000EA4  B4D8               	btfsc	status,2,c
  3870   000EA6  D7CC               	goto	i2l1604
  3871   000EA8  0A01               	xorlw	1	; case 11
  3872   000EAA  B4D8               	btfsc	status,2,c
  3873   000EAC  D7CC               	goto	i2l1606
  3874   000EAE  0A07               	xorlw	7	; case 12
  3875   000EB0  B4D8               	btfsc	status,2,c
  3876   000EB2  D7CC               	goto	i2l1608
  3877   000EB4  0A01               	xorlw	1	; case 13
  3878   000EB6  B4D8               	btfsc	status,2,c
  3879   000EB8  D7CC               	goto	i2l1610
  3880   000EBA  0A03               	xorlw	3	; case 14
  3881   000EBC  B4D8               	btfsc	status,2,c
  3882   000EBE  D7CC               	goto	i2l1612
  3883   000EC0  0A01               	xorlw	1	; case 15
  3884   000EC2  B4D8               	btfsc	status,2,c
  3885   000EC4  D7CC               	goto	i2l1614
  3886   000EC6  0A1F               	xorlw	31	; case 16
  3887   000EC8  A4D8               	btfss	status,2,c
  3888   000ECA  0012               	return	
  3889   000ECC  D7CB               	goto	i2l1616
  3890   000ECE                     __end_of_LeerTeclado:
  3891                           	callstack 0
  3892                           
  3893                           	psect	rparam
  3894   000000                     
  3895                           	psect	temp
  3896   000033                     btemp:
  3897                           	callstack 0
  3898   000033                     	ds	1
  3899   000000                     int$flags	set	btemp
  3900   000000                     wtemp8	set	btemp+1
  3901   000000                     ttemp5	set	btemp+1
  3902   000000                     ttemp6	set	btemp+4
  3903   000000                     ttemp7	set	btemp+8
  3904                           
  3905                           	psect	idloc
  3906                           
  3907                           ;Config register IDLOC0 @ 0x200000
  3908                           ;	unspecified, using default values
  3909   200000                     	org	2097152
  3910   200000  FF                 	db	255
  3911                           
  3912                           ;Config register IDLOC1 @ 0x200001
  3913                           ;	unspecified, using default values
  3914   200001                     	org	2097153
  3915   200001  FF                 	db	255
  3916                           
  3917                           ;Config register IDLOC2 @ 0x200002
  3918                           ;	unspecified, using default values
  3919   200002                     	org	2097154
  3920   200002  FF                 	db	255
  3921                           
  3922                           ;Config register IDLOC3 @ 0x200003
  3923                           ;	unspecified, using default values
  3924   200003                     	org	2097155
  3925   200003  FF                 	db	255
  3926                           
  3927                           ;Config register IDLOC4 @ 0x200004
  3928                           ;	unspecified, using default values
  3929   200004                     	org	2097156
  3930   200004  FF                 	db	255
  3931                           
  3932                           ;Config register IDLOC5 @ 0x200005
  3933                           ;	unspecified, using default values
  3934   200005                     	org	2097157
  3935   200005  FF                 	db	255
  3936                           
  3937                           ;Config register IDLOC6 @ 0x200006
  3938                           ;	unspecified, using default values
  3939   200006                     	org	2097158
  3940   200006  FF                 	db	255
  3941                           
  3942                           ;Config register IDLOC7 @ 0x200007
  3943                           ;	unspecified, using default values
  3944   200007                     	org	2097159
  3945   200007  FF                 	db	255
  3946                           
  3947                           	psect	config
  3948                           
  3949                           ;Config register CONFIG1L @ 0x300000
  3950                           ;	unspecified, using default values
  3951                           ;	PLL Prescaler Selection bits
  3952                           ;	PLLDIV = 0x0, unprogrammed default
  3953                           ;	System Clock Postscaler Selection bits
  3954                           ;	CPUDIV = 0x0, unprogrammed default
  3955                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  3956                           ;	USBDIV = 0x0, unprogrammed default
  3957   300000                     	org	3145728
  3958   300000  00                 	db	0
  3959                           
  3960                           ;Config register CONFIG1H @ 0x300001
  3961                           ;	Oscillator Selection bits
  3962                           ;	FOSC = INTOSC_EC, Internal oscillator, CLKO function on RA6, EC used by USB (INTCKO)
  3963                           ;	Fail-Safe Clock Monitor Enable bit
  3964                           ;	FCMEN = 0x0, unprogrammed default
  3965                           ;	Internal/External Oscillator Switchover bit
  3966                           ;	IESO = 0x0, unprogrammed default
  3967   300001                     	org	3145729
  3968   300001  09                 	db	9
  3969                           
  3970                           ;Config register CONFIG2L @ 0x300002
  3971                           ;	unspecified, using default values
  3972                           ;	Power-up Timer Enable bit
  3973                           ;	PWRT = 0x1, unprogrammed default
  3974                           ;	Brown-out Reset Enable bits
  3975                           ;	BOR = 0x3, unprogrammed default
  3976                           ;	Brown-out Reset Voltage bits
  3977                           ;	BORV = 0x3, unprogrammed default
  3978                           ;	USB Voltage Regulator Enable bit
  3979                           ;	VREGEN = 0x0, unprogrammed default
  3980   300002                     	org	3145730
  3981   300002  1F                 	db	31
  3982                           
  3983                           ;Config register CONFIG2H @ 0x300003
  3984                           ;	Watchdog Timer Enable bit
  3985                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  3986                           ;	Watchdog Timer Postscale Select bits
  3987                           ;	WDTPS = 0xF, unprogrammed default
  3988   300003                     	org	3145731
  3989   300003  1E                 	db	30
  3990                           
  3991                           ; Padding undefined space
  3992   300004                     	org	3145732
  3993   300004  FF                 	db	255
  3994                           
  3995                           ;Config register CONFIG3H @ 0x300005
  3996                           ;	CCP2 MUX bit
  3997                           ;	CCP2MX = 0x1, unprogrammed default
  3998                           ;	PORTB A/D Enable bit
  3999                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  4000                           ;	Low-Power Timer 1 Oscillator Enable bit
  4001                           ;	LPT1OSC = 0x0, unprogrammed default
  4002                           ;	MCLR Pin Enable bit
  4003                           ;	MCLRE = 0x1, unprogrammed default
  4004   300005                     	org	3145733
  4005   300005  81                 	db	129
  4006                           
  4007                           ;Config register CONFIG4L @ 0x300006
  4008                           ;	Stack Full/Underflow Reset Enable bit
  4009                           ;	STVREN = 0x1, unprogrammed default
  4010                           ;	Single-Supply ICSP Enable bit
  4011                           ;	LVP = OFF, Single-Supply ICSP disabled
  4012                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  4013                           ;	ICPRT = 0x0, unprogrammed default
  4014                           ;	Extended Instruction Set Enable bit
  4015                           ;	XINST = 0x0, unprogrammed default
  4016                           ;	Background Debugger Enable bit
  4017                           ;	DEBUG = 0x1, unprogrammed default
  4018   300006                     	org	3145734
  4019   300006  81                 	db	129
  4020                           
  4021                           ; Padding undefined space
  4022   300007                     	org	3145735
  4023   300007  FF                 	db	255
  4024                           
  4025                           ;Config register CONFIG5L @ 0x300008
  4026                           ;	unspecified, using default values
  4027                           ;	Code Protection bit
  4028                           ;	CP0 = 0x1, unprogrammed default
  4029                           ;	Code Protection bit
  4030                           ;	CP1 = 0x1, unprogrammed default
  4031                           ;	Code Protection bit
  4032                           ;	CP2 = 0x1, unprogrammed default
  4033                           ;	Code Protection bit
  4034                           ;	CP3 = 0x1, unprogrammed default
  4035   300008                     	org	3145736
  4036   300008  0F                 	db	15
  4037                           
  4038                           ;Config register CONFIG5H @ 0x300009
  4039                           ;	unspecified, using default values
  4040                           ;	Boot Block Code Protection bit
  4041                           ;	CPB = 0x1, unprogrammed default
  4042                           ;	Data EEPROM Code Protection bit
  4043                           ;	CPD = 0x1, unprogrammed default
  4044   300009                     	org	3145737
  4045   300009  C0                 	db	192
  4046                           
  4047                           ;Config register CONFIG6L @ 0x30000A
  4048                           ;	unspecified, using default values
  4049                           ;	Write Protection bit
  4050                           ;	WRT0 = 0x1, unprogrammed default
  4051                           ;	Write Protection bit
  4052                           ;	WRT1 = 0x1, unprogrammed default
  4053                           ;	Write Protection bit
  4054                           ;	WRT2 = 0x1, unprogrammed default
  4055                           ;	Write Protection bit
  4056                           ;	WRT3 = 0x1, unprogrammed default
  4057   30000A                     	org	3145738
  4058   30000A  0F                 	db	15
  4059                           
  4060                           ;Config register CONFIG6H @ 0x30000B
  4061                           ;	unspecified, using default values
  4062                           ;	Configuration Register Write Protection bit
  4063                           ;	WRTC = 0x1, unprogrammed default
  4064                           ;	Boot Block Write Protection bit
  4065                           ;	WRTB = 0x1, unprogrammed default
  4066                           ;	Data EEPROM Write Protection bit
  4067                           ;	WRTD = 0x1, unprogrammed default
  4068   30000B                     	org	3145739
  4069   30000B  E0                 	db	224
  4070                           
  4071                           ;Config register CONFIG7L @ 0x30000C
  4072                           ;	unspecified, using default values
  4073                           ;	Table Read Protection bit
  4074                           ;	EBTR0 = 0x1, unprogrammed default
  4075                           ;	Table Read Protection bit
  4076                           ;	EBTR1 = 0x1, unprogrammed default
  4077                           ;	Table Read Protection bit
  4078                           ;	EBTR2 = 0x1, unprogrammed default
  4079                           ;	Table Read Protection bit
  4080                           ;	EBTR3 = 0x1, unprogrammed default
  4081   30000C                     	org	3145740
  4082   30000C  0F                 	db	15
  4083                           
  4084                           ;Config register CONFIG7H @ 0x30000D
  4085                           ;	unspecified, using default values
  4086                           ;	Boot Block Table Read Protection bit
  4087                           ;	EBTRB = 0x1, unprogrammed default
  4088   30000D                     	org	3145741
  4089   30000D  40                 	db	64
  4090                           tosu	equ	0xFFF
  4091                           tosh	equ	0xFFE
  4092                           tosl	equ	0xFFD
  4093                           stkptr	equ	0xFFC
  4094                           pclatu	equ	0xFFB
  4095                           pclath	equ	0xFFA
  4096                           pcl	equ	0xFF9
  4097                           tblptru	equ	0xFF8
  4098                           tblptrh	equ	0xFF7
  4099                           tblptrl	equ	0xFF6
  4100                           tablat	equ	0xFF5
  4101                           prodh	equ	0xFF4
  4102                           prodl	equ	0xFF3
  4103                           indf0	equ	0xFEF
  4104                           postinc0	equ	0xFEE
  4105                           postdec0	equ	0xFED
  4106                           preinc0	equ	0xFEC
  4107                           plusw0	equ	0xFEB
  4108                           fsr0h	equ	0xFEA
  4109                           fsr0l	equ	0xFE9
  4110                           wreg	equ	0xFE8
  4111                           indf1	equ	0xFE7
  4112                           postinc1	equ	0xFE6
  4113                           postdec1	equ	0xFE5
  4114                           preinc1	equ	0xFE4
  4115                           plusw1	equ	0xFE3
  4116                           fsr1h	equ	0xFE2
  4117                           fsr1l	equ	0xFE1
  4118                           bsr	equ	0xFE0
  4119                           indf2	equ	0xFDF
  4120                           postinc2	equ	0xFDE
  4121                           postdec2	equ	0xFDD
  4122                           preinc2	equ	0xFDC
  4123                           plusw2	equ	0xFDB
  4124                           fsr2h	equ	0xFDA
  4125                           fsr2l	equ	0xFD9
  4126                           status	equ	0xFD8

Data Sizes:
    Strings     49
    Constant    0
    Data        12
    BSS         8
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     30      50
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    MensajeLCD_Word@a	PTR unsigned char  size(1) Largest target is 17
		 -> STR_8(CODE[5]), STR_7(CODE[6]), STR_6(CODE[17]), STR_5(CODE[17]), 
		 -> STR_4(CODE[17]), STR_3(CODE[10]), STR_2(CODE[17]), STR_1(CODE[11]), 

    NuevoCaracter@c	PTR unsigned char  size(1) Largest target is 8
		 -> cara(COMRAM[8]), 


Critical Paths under _main in COMRAM

    _main->_TransmitirDatos
    _TransmitirDatos->_MensajeLCD_Word
    _MensajeLCD_Word->_EscribeLCD_c
    _DireccionaLCD->_EnviaDato
    _NuevoCaracter->_EscribeLCD_c
    _EscribeLCD_c->_EnviaDato
    _LeerHT11->_LeerByte
    _LeerByte->_LeerBit
    _InicializaLCD->_EnviaDato
    _BorraLCD->_EnviaDato
    _EnviaDato->_RetardoLCD

Critical Paths under _ISR in COMRAM

    _ISR->i2_EscribeLCD_c
    i2_EscribeLCD_c->i2_EnviaDato
    i2_EnviaDato->i2_RetardoLCD

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    7172
                                             28 COMRAM     2     2      0
                           _BorraLCD
                      _DireccionaLCD
                       _EscribeLCD_c
                      _InicializaLCD
                           _LeerHT11
                    _MensajeLCD_Word
                      _NuevoCaracter
                    _TransmitirDatos
                          _Velocidad
 ---------------------------------------------------------------------------------
 (1) _Velocidad                                            2     0      2     384
                                              7 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _TransmitirDatos                                     14    10      4    4798
                                             16 COMRAM    12     8      4
                           _BorraLCD
                      _DireccionaLCD
                       _EscribeLCD_c
                    _MensajeLCD_Word
                         _Transmitir
                            ___awdiv
                            ___lbdiv
                            ___lbmod
                            ___lwdiv
                            ___lwmod
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     311
                                              7 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     615
                                              7 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     922
                                              7 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___lbmod                                              4     3      1     311
                                              7 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (2) ___lbdiv                                              4     3      1     314
                                              7 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     604
                                              7 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _Transmitir                                           1     1      0      22
                                              7 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _MensajeLCD_Word                                      4     3      1     874
                                             12 COMRAM     4     3      1
                       _EscribeLCD_c
 ---------------------------------------------------------------------------------
 (2) _DireccionaLCD                                        1     1      0     132
                                             11 COMRAM     1     1      0
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (1) _NuevoCaracter                                        4     3      1     405
                                             12 COMRAM     4     3      1
                         _ComandoLCD
                       _EscribeLCD_c
 ---------------------------------------------------------------------------------
 (3) _EscribeLCD_c                                         1     1      0     132
                                             11 COMRAM     1     1      0
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (2) _ComandoLCD                                           2     2      0      22
                                              7 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _LeerHT11                                             1     1      0     117
                                             11 COMRAM     1     1      0
                           _LeerByte
 ---------------------------------------------------------------------------------
 (2) _LeerByte                                             3     3      0     117
                                              8 COMRAM     3     3      0
                            _LeerBit
 ---------------------------------------------------------------------------------
 (3) _LeerBit                                              1     1      0      25
                                              7 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _InicializaLCD                                        0     0      0     220
                           _BorraLCD
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (2) _BorraLCD                                             0     0      0     110
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (4) _EnviaDato                                            2     2      0      88
                                              9 COMRAM     2     2      0
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (4) _RetardoLCD                                           2     2      0      22
                                              7 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (4) _HabilitaLCD                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISR                                                  2     2      0     132
                                              5 COMRAM     2     2      0
                        _LeerTeclado
                     i2_EscribeLCD_c
 ---------------------------------------------------------------------------------
 (7) i2_EscribeLCD_c                                       1     1      0     132
                                              4 COMRAM     1     1      0
                        i2_EnviaDato
                      i2_HabilitaLCD
                       i2_RetardoLCD
 ---------------------------------------------------------------------------------
 (8) i2_EnviaDato                                          2     2      0      88
                                              2 COMRAM     2     2      0
                      i2_HabilitaLCD
                       i2_RetardoLCD
 ---------------------------------------------------------------------------------
 (8) i2_RetardoLCD                                         2     2      0      22
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (8) i2_HabilitaLCD                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _LeerTeclado                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BorraLCD
     _EnviaDato
       _HabilitaLCD
       _RetardoLCD
     _HabilitaLCD
     _RetardoLCD
   _DireccionaLCD
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _EscribeLCD_c
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _InicializaLCD
     _BorraLCD
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _LeerHT11
     _LeerByte
       _LeerBit
   _MensajeLCD_Word
     _EscribeLCD_c
   _NuevoCaracter
     _ComandoLCD
     _EscribeLCD_c
   _TransmitirDatos
     _BorraLCD
     _DireccionaLCD
     _EscribeLCD_c
     _MensajeLCD_Word
     _Transmitir
     ___awdiv
     ___lbdiv
     ___lbmod
     ___lwdiv
     ___lwmod
     ___wmul
   _Velocidad

 _ISR (ROOT)
   _LeerTeclado
   i2_EscribeLCD_c
     i2_EnviaDato
       i2_HabilitaLCD
       i2_RetardoLCD
     i2_HabilitaLCD
     i2_RetardoLCD

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      37        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     1E      32       1       53.2%
BITBIGSFRhhhlh      19      0       0      21        0.0%
BITBIGSFRlhl        11      0       0      33        0.0%
BITBIGSFRhhlllh      D      0       0      26        0.0%
BITBIGSFRhhhh        D      0       0      20        0.0%
BITBIGSFRlll         D      0       0      35        0.0%
BITBIGSFRhhllll      C      0       0      27        0.0%
BITBIGSFRhhlhl       7      0       0      24        0.0%
BITBIGSFRhhllll      7      0       0      28        0.0%
BITBIGSFRhhlhh       6      0       0      23        0.0%
BITBIGSFRlhhhl       5      0       0      31        0.0%
BITBIGSFRhl          5      0       0      29        0.0%
BITBIGSFRlhhhh       1      0       0      30        0.0%
BITBIGSFRlhhl        1      0       0      32        0.0%
BITBIGSFRllh         1      0       0      34        0.0%
BITBIGSFRhhllh       1      0       0      25        0.0%
BITBIGSFRhhhll       1      0       0      22        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      32      36        0.0%
DATA                 0      0      32       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Tue Jun 06 17:48:33 2023

                      _c 001F        Transmitir@BufferT 0008             ___awdiv@sign 000D  
             EnviaDato@a 000B      ___wmul@multiplicand 000A            ??_LeerTeclado 0001  
          _InicializaLCD 0ECE                      l231 12F4                      l242 1316  
                    l228 12EA                      l247 133A                      l292 09AA  
                    l287 0868                      l822 1102                      l832 121E  
                    _GIE 007F97                      _RC0 007C10                      _RB4 007C0C  
                    _RB5 007C0D                      _RE0 007C20                      _RB6 007C0E  
                    _RB7 007C0F                      _PR2 000FCB                      _ISR 0008  
                    u800 1158                      u900 12BA                      u780 133E  
                    u860 0FB0                      u940 10DC                      u970 1200  
       TransmitirDatos@n 0017                      _ing 002F                      wreg 000FE8  
                   ?_ISR 0001         ??i2_EscribeLCD_c 0005                     l2010 12D4  
                   l2006 12CC                     l2024 1392                     l2016 137A  
                   l2108 0F1C                     l2036 10D0                     l2038 10D8  
                   l2128 0F54                     l2048 10F8                     l2064 1214  
                   l2056 11F4                     l2058 11FC                     l2250 0D42  
                   l2180 08B6                     l2172 0876                     l2262 0D7E  
                   l2088 0EE0                     l2176 088A                     l2280 0DD8  
                   l2256 0D60                     l1802 0FF2                     l2098 0EFE  
                   l2186 08E4                     l2274 0DBA                     l1804 1004  
                   l1812 1038                     l2188 090E                     l2268 0D9C  
                   l2540 0BAC                     l1806 1024                     l2470 123E  
                   l1902 1114                     l2286 0DF6                     l1808 102E  
                   l1824 1192                     l2544 0BBA                     l1844 132A  
                   l1924 13C8                     l1934 1462                     l1952 0F7E  
                   l1964 0FA4                     l1980 0FD6                     l1966 0FAC  
                   l1958 0F8E                     l1984 0FE4                     l1976 0FCC  
                   l1994 12B0                     l1998 12B6                     STR_1 0812  
                   STR_2 0801                     STR_3 081D                     STR_4 0801  
                   STR_5 0801                     STR_6 0801                     STR_7 0827  
                   STR_8 082D                     u1100 0D4E                     u1200 0DE4  
                   u1120 0D6C                     u1220 0E02                     u1140 0D8A  
                   u1160 0DA8                     u1180 0DC6                     _LATB 000F8A  
                   _LATD 000F8C                     u1450 1262                     u1507 134E  
                   u1517 1358                     u1607 1026                     u1527 1364  
                   u1617 1030                     u1537 12E0                     u1627 143C  
                   u1547 12F0                     u1557 131C                     u1477 0B3E  
                   u1567 132C                     u1487 0B82                     u1577 0FF8  
                   u1497 0BE8                     u1587 100A                     u1597 1014  
                   _RBIE 007F93                     _RBIF 007F90                     _RCIF 007CF5  
                   _RBPU 007F8F                     _TMR0 000FD6                     _TMR2 000FCC  
                   _TRMT 007D61                     _Cont 0021           ??_EscribeLCD_c 000C  
                   _Temp 0032                     _cara 0023                     _main 0AC4  
                   _duty 002B                     fsr2h 000FDA                     indf2 000FDF  
                   fsr1l 000FE1                     fsr2l 000FD9                     btemp 0033  
                   prodh 000FF4                     prodl 000FF3                     start 000E  
        __end_of_LeerBit 1342             ___param_bank 000000                    ??_ISR 0006  
         ?_InicializaLCD 0001                    ?_main 0001          __end_of___awdiv 0FEE  
        __end_of___lbdiv 12D8               _ComandoLCD 1342            EscribeLCD_c@a 000C  
        __end_of___lbmod 139A                    _T0CON 000FD5          ___awdiv@divisor 000A  
                  _T2CON 000FCA                    _LATE1 007C69                    _LATE2 007C6A  
        __end_of___lwdiv 110C          __end_of___lwmod 1228                    i2l300 0C3C  
                  i2l311 0C86                    i2l304 0C60                    i2l321 0CB2  
                  i2l313 0C8E                    i2l340 0D2C                    i2l333 0CEA  
                  i2l325 0CC6                    i2l317 0CA2                    i2l309 0C7E  
                  i2l334 0D02                    i2l335 0CF2                    i2l327 0CCE  
                  i2l319 0CAA                    i2l337 0CFA                    i2l329 0CD6  
                  i2l298 0C62                    i2l299 0C3E          ___awdiv@counter 000C  
                  _RCREG 000FAE                    _RCSTA 000FAB                    _SPBRG 000FAF  
                  _PORTB 000F81                    _USBEN 007B6B                    _TRISB 000F93  
                  _TRISC 000F94                    _TRISD 000F95                    _TXREG 000FAD  
                  _TXSTA 000FAC                    _Tecla 0030      __end_of_LeerTeclado 0ECE  
         NuevoCaracter@c 000D           NuevoCaracter@i 000F                    tablat 000FF5  
            _HabilitaLCD 1438                    ttemp5 0034                    ttemp6 0037  
                  ttemp7 003B                    status 000FD8                    wtemp8 0034  
        ___lbdiv@divisor 0008          ___lbdiv@counter 000A         __end_of_BorraLCD 1438  
       __end_of_LeerHT11 1312          __initialization 1264         __end_of_LeerByte 13E2  
           __end_of_main 0C18                   ??_main 001D            __activetblptr 000002  
                 _ADCON0 000FC2                   _ADCON1 000FC1                   _ADCON2 000FC0  
  __end_of_NuevoCaracter 1264           DireccionaLCD@a 000C                   _CCPR1L 000FBE  
       ___awdiv@dividend 0008                   i2l1600 0E34                   i2l1610 0E52  
                 i2l1602 0E3A                   i2l1612 0E58                   i2l1604 0E40  
                 i2l1620 0E6A                   i2l2412 0C96                   i2l1614 0E5E  
                 i2l1606 0E46                   i2l2078 11D8                   i2l1616 0E64  
                 i2l1608 0E4C                   i2l2424 0CBA                   i2l2436 0CDE  
                 i2l1590 0E16                   i2l2454 0D14                   i2l1592 0E1C  
                 i2l1594 0E22                   i2l1586 0E0A                   i2l1596 0E28  
                 i2l1588 0E10                   i2l1598 0E2E                   i2l1862 1058  
                 i2l1864 106A                   i2l1872 109E                   i2l1866 108A  
                 i2l1868 1094                   _OSCCON 000FD3                   _TMR0IE 007F95  
                 _TMR0IF 007F92                   _TMR0ON 007EAF                   _TMR2ON 007E52  
                 _TRISC0 007CA0                   _TRISC2 007CA2                   _TRISE0 007CB0  
                 _TRISE1 007CB1                   _TRISE2 007CB2                   _TRISC6 007CA6  
                 _TRISC7 007CA7                ??_LeerBit 0008    __end_of_DireccionaLCD 13F8  
                 _UTRDIS 007B7B               _RetardoLCD 0FEE      TransmitirDatos@Ent1 0011  
    TransmitirDatos@Ent2 0013      TransmitirDatos@Simb 0019                   ___wmul 139A  
              ??___awdiv 000C                ??___lbdiv 0009                ??___lbmod 0009  
              ??___lwdiv 000C                ??___lwmod 000C          ??_InicializaLCD 000C  
                 clear_0 128A         ___awdiv@quotient 000E                   isa$std 000001  
   __end_of_EscribeLCD_c 140E              ?_ComandoLCD 0001              _LeerTeclado 0E08  
           ?i2_EnviaDato 0001             __pdataCOMRAM 001F             __mediumconst 0000  
                 tblptrh 000FF7                   tblptrl 000FF6                   tblptru 000FF8  
             _Transmitir 1460         ___lbdiv@dividend 0009          ___lbmod@divisor 0008  
  __end_ofi2_HabilitaLCD 1454               __accesstop 0060  __end_of__initialization 1290  
        ___lbmod@counter 000A            ___rparam_used 000001           __pcstackCOMRAM 0001  
      __end_of_EnviaDato 11A0         ___lbdiv@quotient 000B                ?_BorraLCD 0001  
              ?_LeerHT11 0001                ?_LeerByte 0001              ?_RetardoLCD 0001  
            RetardoLCD@a 0009        __end_of_Velocidad 0E08           ComandoLCD@data 0009  
                ?___wmul 0008                  _CCP1CON 000FBD               ??_BorraLCD 000C  
             ??_LeerHT11 000C              ?_Transmitir 0001        ??_MensajeLCD_Word 000E  
             ??_LeerByte 0009             ?_HabilitaLCD 0001                  _LeerBit 1312  
                _Humedad 0031                  __Hparam 0000                  __Lparam 0000  
   TransmitirDatos@TempC 001B                  ___awdiv 0F6A                  ___lbdiv 129E  
                ___lbmod 1370                  ___lwdiv 10BA                  ___lwmod 11E6  
           __psmallconst 0800                  __pcinit 1264                  __ramtop 0800  
                __ptext0 0AC4                  __ptext1 0D30                  __ptext2 0834  
                __ptext3 139A                  __ptext4 11E6                  __ptext5 10BA  
                __ptext6 1370                  __ptext7 129E                  __ptext8 0F6A  
                __ptext9 1460           __pintcode_body 0C18     end_of_initialization 1290  
          __Lmediumconst 0000                  int_func 0C18             _EscribeLCD_c 13F8  
                postdec1 000FE5        ??_TransmitirDatos 0015                  postinc0 000FEE  
           ??_ComandoLCD 0008             ?_LeerTeclado 0001         ___lbmod@dividend 0009  
              LeerByte@i 000B          i2EscribeLCD_c@a 0005              ___lbmod@rem 000B  
          ?i2_RetardoLCD 0001       __end_of_ComandoLCD 1370           __end_of___wmul 13C0  
          __pidataCOMRAM 1454    __end_of_InicializaLCD 0F6A                _EnviaDato 115A  
    start_initialization 1264              __end_of_ISR 0D30           ??i2_RetardoLCD 0001  
           ??_RetardoLCD 0008                 ??___wmul 000C                _Velocidad 0D30  
        _MensajeLCD_Word 110C               ?_EnviaDato 0001              __pbssCOMRAM 002B  
     __end_of_RetardoLCD 1054         MensajeLCD_Word@a 000D         MensajeLCD_Word@i 000F  
           ??_Transmitir 0008            _NuevoCaracter 1228                 ?_LeerBit 0001  
          _DireccionaLCD 13E2           i2_EscribeLCD_c 140E         ___lwdiv@dividend 0008  
              __pintcode 0008                 ?___awdiv 0008                 ?___lbdiv 0008  
               ?___lbmod 0008               ?_Velocidad 0008                 ?___lwdiv 0008  
               ?___lwmod 0008       __end_of_Transmitir 146C              __smallconst 0800  
       ___lwdiv@quotient 000C           ?_NuevoCaracter 000D          _TransmitirDatos 0834  
         ___wmul@product 000C            i2_HabilitaLCD 1446           ?_DireccionaLCD 0001  
 __end_ofi2_EscribeLCD_c 1424                 i2u170_47 144A                 i2u163_47 0C50  
               i2u164_47 0D20                 i2u165_47 105E                 i2u166_47 1070  
               i2u167_47 107A                 i2u168_47 108C                 i2u169_47 1096  
__end_of_MensajeLCD_Word 115A        ___wmul@multiplier 0008            ??i2_EnviaDato 0003  
   __end_ofi2_RetardoLCD 10BA              ??_EnviaDato 000A                 _BorraLCD 1424  
               _LeerHT11 12D8                copy_data0 1278                 _LeerByte 13C0  
         ?i2_HabilitaLCD 0001          ?i2_EscribeLCD_c 0001                 __Hrparam 0000  
               __Lrparam 0000              ??_Velocidad 000A             i2EnviaDato@a 0004  
        ??_NuevoCaracter 000E  __end_of_TransmitirDatos 0AC4          ___lwdiv@divisor 000A  
        ___lwdiv@counter 000E                 __ptext10 110C                 __ptext11 13E2  
               __ptext20 115A                 __ptext12 1228                 __ptext21 0FEE  
               __ptext13 13F8                 __ptext22 1438                 __ptext14 1342  
               __ptext15 12D8                 __ptext24 140E                 __ptext16 13C0  
               __ptext25 11A0                 __ptext17 1312                 __ptext26 1054  
               __ptext18 0ECE                 __ptext27 1446                 __ptext19 1424  
               __ptext28 0E08      __end_ofi2_EnviaDato 11E6                 _contador 002D  
        ??_DireccionaLCD 000C                 _interfaz 0022             Velocidad@val 0008  
               isa$xinst 000000         ?_MensajeLCD_Word 000D                 int$flags 0033  
      NuevoCaracter@addr 000E          ??i2_HabilitaLCD 0001                 intlevel2 0000  
          ??_HabilitaLCD 0008         ___lwmod@dividend 0008            i2RetardoLCD@a 0002  
            i2_EnviaDato 11A0          ___lwmod@divisor 000A          ___lwmod@counter 000C  
       ?_TransmitirDatos 0011            ?_EscribeLCD_c 0001               LeerBit@res 0008  
           i2_RetardoLCD 1054      __end_of_HabilitaLCD 1446              LeerByte@res 000A  
