

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Tue May 30 09:00:47 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og9 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    17                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    18                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    19                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    20                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    21                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    22                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    23   000000                     
    24                           ; Version 2.40
    25                           ; Generated 04/07/2022 GMT
    26                           ; 
    27                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    28                           ; All rights reserved.
    29                           ; 
    30                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    31                           ; 
    32                           ; Redistribution and use in source and binary forms, with or without modification, are
    33                           ; permitted provided that the following conditions are met:
    34                           ; 
    35                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    36                           ;        conditions and the following disclaimer.
    37                           ; 
    38                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    39                           ;        of conditions and the following disclaimer in the documentation and/or other
    40                           ;        materials provided with the distribution. Publication is not required when
    41                           ;        this file is used in an embedded application.
    42                           ; 
    43                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    44                           ;        software without specific prior written permission.
    45                           ; 
    46                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    47                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    48                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    49                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    50                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    51                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    52                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    53                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    54                           ; 
    55                           ; 
    56                           ; Code-generator required, PIC18F4550 Definitions
    57                           ; 
    58                           ; SFR Addresses
    59   000000                     
    60                           	psect	idataCOMRAM
    61   000184                     __pidataCOMRAM:
    62                           	callstack 0
    63                           
    64                           ;initializer for _interfaz
    65   000184  08                 	db	8
    66   000000                     _TRISD	set	3989
    67   000000                     _OSCCON	set	4051
    68   000000                     _TRISC2	set	31906
    69   000000                     _TRISC7	set	31911
    70   000000                     _TRISC6	set	31910
    71   000000                     _TMR2ON	set	32338
    72   000000                     _GIE	set	32663
    73   000000                     _TMR0ON	set	32431
    74   000000                     _TMR0IE	set	32661
    75   000000                     _TRISE1	set	31921
    76   000000                     _LATE1	set	31849
    77   000000                     _LATD	set	3980
    78   000000                     _RB4	set	31756
    79   000000                     _TRISB	set	3987
    80   000000                     _LATE0	set	31848
    81   000000                     _T0CON	set	4053
    82   000000                     _RCSTA	set	4011
    83   000000                     _TXSTA	set	4012
    84   000000                     _CCP1CON	set	4029
    85   000000                     _CCPR1L	set	4030
    86   000000                     _PR2	set	4043
    87   000000                     _TRISE0	set	31920
    88   000000                     _TMR0	set	4054
    89   000000                     _TMR0IF	set	32658
    90   000000                     _TMR2	set	4044
    91   000000                     _T2CON	set	4042
    92   000000                     _LATB	set	3978
    93   000000                     _RC6	set	31766
    94                           
    95                           ; #config settings
    96                           
    97                           	psect	cinit
    98   00010C                     __pcinit:
    99                           	callstack 0
   100   00010C                     start_initialization:
   101                           	callstack 0
   102   00010C                     __initialization:
   103                           	callstack 0
   104                           
   105                           ; Initialize objects allocated to COMRAM (1 bytes)
   106                           ; load TBLPTR registers with __pidataCOMRAM
   107   00010C  0E84               	movlw	low __pidataCOMRAM
   108   00010E  6EF6               	movwf	tblptrl,c
   109   000110  0E01               	movlw	high __pidataCOMRAM
   110   000112  6EF7               	movwf	tblptrh,c
   111   000114  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   112   000116  6EF8               	movwf	tblptru,c
   113   000118  0009               	tblrd		*+	;fetch initializer
   114   00011A  CFF5 F008          	movff	tablat,__pdataCOMRAM
   115                           
   116                           ; Clear objects allocated to COMRAM (4 bytes)
   117   00011E  6A04               	clrf	(__pbssCOMRAM+3)& (0+255),c
   118   000120  6A03               	clrf	(__pbssCOMRAM+2)& (0+255),c
   119   000122  6A02               	clrf	(__pbssCOMRAM+1)& (0+255),c
   120   000124  6A01               	clrf	__pbssCOMRAM& (0+255),c
   121   000126                     end_of_initialization:
   122                           	callstack 0
   123   000126                     __end_of__initialization:
   124                           	callstack 0
   125   000126  9009               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   126   000128  9209               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   127   00012A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   128   00012C  6EF8               	movwf	tblptru,c
   129   00012E  0100               	movlb	0
   130   000130  EF3C  F000         	goto	_main	;jump to C main() function
   131                           
   132                           	psect	bssCOMRAM
   133   000001                     __pbssCOMRAM:
   134                           	callstack 0
   135   000001                     _duty:
   136                           	callstack 0
   137   000001                     	ds	2
   138   000003                     _contador:
   139                           	callstack 0
   140   000003                     	ds	2
   141                           
   142                           	psect	dataCOMRAM
   143   000008                     __pdataCOMRAM:
   144                           	callstack 0
   145   000008                     _interfaz:
   146                           	callstack 0
   147   000008                     	ds	1
   148                           
   149                           	psect	cstackCOMRAM
   150   000005                     __pcstackCOMRAM:
   151                           	callstack 0
   152   000005                     ??_RetardoLCD:
   153   000005                     
   154                           ; 1 bytes @ 0x0
   155   000005                     	ds	1
   156   000006                     RetardoLCD@a:
   157                           	callstack 0
   158                           
   159                           ; 1 bytes @ 0x1
   160   000006                     	ds	1
   161   000007                     EnviaDato@a:
   162                           	callstack 0
   163                           
   164                           ; 1 bytes @ 0x2
   165   000007                     	ds	1
   166   000008                     
   167                           ; 1 bytes @ 0x3
   168 ;;
   169 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   170 ;;
   171 ;; *************** function _main *****************
   172 ;; Defined at:
   173 ;;		line 17 in file "Proyecto.c"
   174 ;; Parameters:    Size  Location     Type
   175 ;;		None
   176 ;; Auto vars:     Size  Location     Type
   177 ;;		None
   178 ;; Return value:  Size  Location     Type
   179 ;;                  1    wreg      void 
   180 ;; Registers used:
   181 ;;		wreg, status,2, status,0, cstack
   182 ;; Tracked objects:
   183 ;;		On entry : 0/0
   184 ;;		On exit  : 0/0
   185 ;;		Unchanged: 0/0
   186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   187 ;;      Params:         0       0       0       0       0       0       0       0       0
   188 ;;      Locals:         0       0       0       0       0       0       0       0       0
   189 ;;      Temps:          0       0       0       0       0       0       0       0       0
   190 ;;      Totals:         0       0       0       0       0       0       0       0       0
   191 ;;Total ram usage:        0 bytes
   192 ;; Hardware stack levels required when called: 5
   193 ;; This function calls:
   194 ;;		_BorraLCD
   195 ;;		_InicializaLCD
   196 ;; This function is called by:
   197 ;;		Startup code after reset
   198 ;; This function uses a non-reentrant model
   199 ;;
   200                           
   201                           	psect	text0
   202   000078                     __ptext0:
   203                           	callstack 0
   204   000078                     _main:
   205                           	callstack 26
   206                           
   207                           ;Proyecto.c: 19: TRISB = 0;
   208                           
   209                           ;incstack = 0
   210   000078  0E00               	movlw	0
   211   00007A  6E93               	movwf	147,c	;volatile
   212                           
   213                           ;Proyecto.c: 20: OSCCON = 0b11110110;
   214   00007C  0EF6               	movlw	246
   215   00007E  6ED3               	movwf	211,c	;volatile
   216                           
   217                           ;Proyecto.c: 22: TRISD = 0;
   218   000080  0E00               	movlw	0
   219   000082  6E95               	movwf	149,c	;volatile
   220                           
   221                           ;Proyecto.c: 23: TRISE0 = 0;
   222   000084  9096               	bcf	3990,0,c	;volatile
   223                           
   224                           ;Proyecto.c: 24: TRISE1 = 0;
   225   000086  9296               	bcf	3990,1,c	;volatile
   226                           
   227                           ;Proyecto.c: 25: InicializaLCD();
   228   000088  EC65  F000         	call	_InicializaLCD	;wreg free
   229                           
   230                           ;Proyecto.c: 26: BorraLCD();
   231   00008C  ECAD  F000         	call	_BorraLCD	;wreg free
   232                           
   233                           ;Proyecto.c: 29: T0CON = 0b0000110;
   234   000090  0E06               	movlw	6
   235   000092  6ED5               	movwf	213,c	;volatile
   236                           
   237                           ;Proyecto.c: 30: TMR0 = 49911;
   238   000094  0EC2               	movlw	194
   239   000096  6ED7               	movwf	215,c	;volatile
   240   000098  0EF7               	movlw	247
   241   00009A  6ED6               	movwf	214,c	;volatile
   242                           
   243                           ;Proyecto.c: 31: TMR0IF = 0;
   244   00009C  94F2               	bcf	4082,2,c	;volatile
   245                           
   246                           ;Proyecto.c: 32: TMR0IE = 1;
   247   00009E  8AF2               	bsf	4082,5,c	;volatile
   248                           
   249                           ;Proyecto.c: 33: TMR0ON=1;
   250   0000A0  8ED5               	bsf	4053,7,c	;volatile
   251                           
   252                           ;Proyecto.c: 34: GIE = 1;
   253   0000A2  8EF2               	bsf	4082,7,c	;volatile
   254                           
   255                           ;Proyecto.c: 37: TRISC2 = 0;
   256   0000A4  9494               	bcf	3988,2,c	;volatile
   257                           
   258                           ;Proyecto.c: 38: PR2 = 249;
   259   0000A6  0EF9               	movlw	249
   260   0000A8  6ECB               	movwf	203,c	;volatile
   261                           
   262                           ;Proyecto.c: 39: CCPR1L = 0;
   263   0000AA  0E00               	movlw	0
   264   0000AC  6EBE               	movwf	190,c	;volatile
   265                           
   266                           ;Proyecto.c: 40: T2CON=0b00000000;
   267   0000AE  0E00               	movlw	0
   268   0000B0  6ECA               	movwf	202,c	;volatile
   269                           
   270                           ;Proyecto.c: 41: CCP1CON=0b00001100;
   271   0000B2  0E0C               	movlw	12
   272   0000B4  6EBD               	movwf	189,c	;volatile
   273                           
   274                           ;Proyecto.c: 42: TMR2=0;
   275   0000B6  0E00               	movlw	0
   276   0000B8  6ECC               	movwf	204,c	;volatile
   277                           
   278                           ;Proyecto.c: 43: TMR2ON=1;
   279   0000BA  84CA               	bsf	4042,2,c	;volatile
   280                           
   281                           ;Proyecto.c: 46: TRISC6 = 1;
   282   0000BC  8C94               	bsf	3988,6,c	;volatile
   283                           
   284                           ;Proyecto.c: 47: TRISC7 = 1;
   285   0000BE  8E94               	bsf	3988,7,c	;volatile
   286                           
   287                           ;Proyecto.c: 48: TXSTA = 0b00100000;
   288   0000C0  0E20               	movlw	32
   289   0000C2  6EAC               	movwf	172,c	;volatile
   290                           
   291                           ;Proyecto.c: 49: RCSTA = 0b10010000;
   292   0000C4  0E90               	movlw	144
   293   0000C6  6EAB               	movwf	171,c	;volatile
   294   0000C8                     l141:
   295   0000C8  D7FF               	goto	l141
   296   0000CA                     __end_of_main:
   297                           	callstack 0
   298                           
   299 ;; *************** function _InicializaLCD *****************
   300 ;; Defined at:
   301 ;;		line 73 in file "LibLCDXC8.h"
   302 ;; Parameters:    Size  Location     Type
   303 ;;		None
   304 ;; Auto vars:     Size  Location     Type
   305 ;;		None
   306 ;; Return value:  Size  Location     Type
   307 ;;                  1    wreg      void 
   308 ;; Registers used:
   309 ;;		wreg, status,2, status,0, cstack
   310 ;; Tracked objects:
   311 ;;		On entry : 0/0
   312 ;;		On exit  : 0/0
   313 ;;		Unchanged: 0/0
   314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   315 ;;      Params:         0       0       0       0       0       0       0       0       0
   316 ;;      Locals:         0       0       0       0       0       0       0       0       0
   317 ;;      Temps:          0       0       0       0       0       0       0       0       0
   318 ;;      Totals:         0       0       0       0       0       0       0       0       0
   319 ;;Total ram usage:        0 bytes
   320 ;; Hardware stack levels used: 1
   321 ;; Hardware stack levels required when called: 4
   322 ;; This function calls:
   323 ;;		_BorraLCD
   324 ;;		_EnviaDato
   325 ;;		_HabilitaLCD
   326 ;;		_RetardoLCD
   327 ;; This function is called by:
   328 ;;		_main
   329 ;; This function uses a non-reentrant model
   330 ;;
   331                           
   332                           	psect	text1
   333   0000CA                     __ptext1:
   334                           	callstack 0
   335   0000CA                     _InicializaLCD:
   336                           	callstack 26
   337                           
   338                           ;LibLCDXC8.h: 75: LATE0=0;
   339                           
   340                           ;incstack = 0
   341   0000CA  908D               	bcf	3981,0,c	;volatile
   342                           
   343                           ;LibLCDXC8.h: 78: else;LibLCDXC8.h: 79: LATD=0x3F;
   344                           
   345                           ;LibLCDXC8.h: 76: if(interfaz==4)
   346   0000CC  0E3F               	movlw	63
   347   0000CE  6E8C               	movwf	140,c	;volatile
   348                           
   349                           ;LibLCDXC8.h: 80: HabilitaLCD();
   350   0000D0  ECB7  F000         	call	_HabilitaLCD	;wreg free
   351                           
   352                           ;LibLCDXC8.h: 81: RetardoLCD(1);
   353   0000D4  0E01               	movlw	1
   354   0000D6  EC09  F000         	call	_RetardoLCD
   355                           
   356                           ;LibLCDXC8.h: 84: else;LibLCDXC8.h: 85: LATD=0x3F;
   357                           
   358                           ;LibLCDXC8.h: 82: if(interfaz==4)
   359   0000DA  0E3F               	movlw	63
   360   0000DC  6E8C               	movwf	140,c	;volatile
   361                           
   362                           ;LibLCDXC8.h: 86: HabilitaLCD();
   363   0000DE  ECB7  F000         	call	_HabilitaLCD	;wreg free
   364                           
   365                           ;LibLCDXC8.h: 87: RetardoLCD(3);
   366   0000E2  0E03               	movlw	3
   367   0000E4  EC09  F000         	call	_RetardoLCD
   368                           
   369                           ;LibLCDXC8.h: 90: else;LibLCDXC8.h: 91: LATD=0x3F;
   370                           
   371                           ;LibLCDXC8.h: 88: if(interfaz==4)
   372   0000E8  0E3F               	movlw	63
   373   0000EA  6E8C               	movwf	140,c	;volatile
   374                           
   375                           ;LibLCDXC8.h: 92: HabilitaLCD();
   376   0000EC  ECB7  F000         	call	_HabilitaLCD	;wreg free
   377                           
   378                           ;LibLCDXC8.h: 93: RetardoLCD(4);
   379   0000F0  0E04               	movlw	4
   380   0000F2  EC09  F000         	call	_RetardoLCD
   381                           
   382                           ;LibLCDXC8.h: 101: };LibLCDXC8.h: 102: BorraLCD();
   383                           
   384                           ;LibLCDXC8.h: 94: if(interfaz==4){
   385   0000F6  ECAD  F000         	call	_BorraLCD	;wreg free
   386                           
   387                           ;LibLCDXC8.h: 103: EnviaDato(0xF);
   388   0000FA  0E0F               	movlw	15
   389   0000FC  ECBE  F000         	call	_EnviaDato
   390                           
   391                           ;LibLCDXC8.h: 104: HabilitaLCD();
   392   000100  ECB7  F000         	call	_HabilitaLCD	;wreg free
   393                           
   394                           ;LibLCDXC8.h: 105: RetardoLCD(4);
   395   000104  0E04               	movlw	4
   396   000106  EC09  F000         	call	_RetardoLCD
   397   00010A  0012               	return		;funcret
   398   00010C                     __end_of_InicializaLCD:
   399                           	callstack 0
   400                           
   401 ;; *************** function _BorraLCD *****************
   402 ;; Defined at:
   403 ;;		line 114 in file "LibLCDXC8.h"
   404 ;; Parameters:    Size  Location     Type
   405 ;;		None
   406 ;; Auto vars:     Size  Location     Type
   407 ;;		None
   408 ;; Return value:  Size  Location     Type
   409 ;;                  1    wreg      void 
   410 ;; Registers used:
   411 ;;		wreg, status,2, status,0, cstack
   412 ;; Tracked objects:
   413 ;;		On entry : 0/0
   414 ;;		On exit  : 0/0
   415 ;;		Unchanged: 0/0
   416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   417 ;;      Params:         0       0       0       0       0       0       0       0       0
   418 ;;      Locals:         0       0       0       0       0       0       0       0       0
   419 ;;      Temps:          0       0       0       0       0       0       0       0       0
   420 ;;      Totals:         0       0       0       0       0       0       0       0       0
   421 ;;Total ram usage:        0 bytes
   422 ;; Hardware stack levels used: 1
   423 ;; Hardware stack levels required when called: 3
   424 ;; This function calls:
   425 ;;		_EnviaDato
   426 ;;		_HabilitaLCD
   427 ;;		_RetardoLCD
   428 ;; This function is called by:
   429 ;;		_InicializaLCD
   430 ;;		_main
   431 ;; This function uses a non-reentrant model
   432 ;;
   433                           
   434                           	psect	text2
   435   00015A                     __ptext2:
   436                           	callstack 0
   437   00015A                     _BorraLCD:
   438                           	callstack 26
   439                           
   440                           ;LibLCDXC8.h: 116: LATE0=0;
   441                           
   442                           ;incstack = 0
   443   00015A  908D               	bcf	3981,0,c	;volatile
   444                           
   445                           ;LibLCDXC8.h: 117: EnviaDato(0x01);
   446   00015C  0E01               	movlw	1
   447   00015E  ECBE  F000         	call	_EnviaDato
   448                           
   449                           ;LibLCDXC8.h: 118: HabilitaLCD();
   450   000162  ECB7  F000         	call	_HabilitaLCD	;wreg free
   451                           
   452                           ;LibLCDXC8.h: 119: RetardoLCD(2);
   453   000166  0E02               	movlw	2
   454   000168  EC09  F000         	call	_RetardoLCD
   455   00016C  0012               	return		;funcret
   456   00016E                     __end_of_BorraLCD:
   457                           	callstack 0
   458                           
   459 ;; *************** function _EnviaDato *****************
   460 ;; Defined at:
   461 ;;		line 61 in file "LibLCDXC8.h"
   462 ;; Parameters:    Size  Location     Type
   463 ;;  a               1    wreg     unsigned char 
   464 ;; Auto vars:     Size  Location     Type
   465 ;;  a               1    2[COMRAM] unsigned char 
   466 ;; Return value:  Size  Location     Type
   467 ;;                  1    wreg      void 
   468 ;; Registers used:
   469 ;;		wreg
   470 ;; Tracked objects:
   471 ;;		On entry : 0/0
   472 ;;		On exit  : 0/0
   473 ;;		Unchanged: 0/0
   474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   475 ;;      Params:         0       0       0       0       0       0       0       0       0
   476 ;;      Locals:         1       0       0       0       0       0       0       0       0
   477 ;;      Temps:          0       0       0       0       0       0       0       0       0
   478 ;;      Totals:         1       0       0       0       0       0       0       0       0
   479 ;;Total ram usage:        1 bytes
   480 ;; Hardware stack levels used: 1
   481 ;; Hardware stack levels required when called: 2
   482 ;; This function calls:
   483 ;;		_HabilitaLCD
   484 ;;		_RetardoLCD
   485 ;; This function is called by:
   486 ;;		_InicializaLCD
   487 ;;		_BorraLCD
   488 ;; This function uses a non-reentrant model
   489 ;;
   490                           
   491                           	psect	text3
   492   00017C                     __ptext3:
   493                           	callstack 0
   494   00017C                     _EnviaDato:
   495                           	callstack 27
   496                           
   497                           ;incstack = 0
   498                           ;EnviaDato@a stored from wreg
   499   00017C  6E07               	movwf	EnviaDato@a^0,c
   500                           
   501                           ;LibLCDXC8.h: 70: LATD=a;
   502                           
   503                           ;LibLCDXC8.h: 62: if(interfaz==4){
   504   00017E  C007  FF8C         	movff	EnviaDato@a,3980	;volatile
   505   000182  0012               	return		;funcret
   506   000184                     __end_of_EnviaDato:
   507                           	callstack 0
   508                           
   509 ;; *************** function _RetardoLCD *****************
   510 ;; Defined at:
   511 ;;		line 294 in file "LibLCDXC8.h"
   512 ;; Parameters:    Size  Location     Type
   513 ;;  a               1    wreg     unsigned char 
   514 ;; Auto vars:     Size  Location     Type
   515 ;;  a               1    1[COMRAM] unsigned char 
   516 ;; Return value:  Size  Location     Type
   517 ;;                  1    wreg      void 
   518 ;; Registers used:
   519 ;;		wreg, status,2, status,0
   520 ;; Tracked objects:
   521 ;;		On entry : 0/0
   522 ;;		On exit  : 0/0
   523 ;;		Unchanged: 0/0
   524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   525 ;;      Params:         0       0       0       0       0       0       0       0       0
   526 ;;      Locals:         1       0       0       0       0       0       0       0       0
   527 ;;      Temps:          1       0       0       0       0       0       0       0       0
   528 ;;      Totals:         2       0       0       0       0       0       0       0       0
   529 ;;Total ram usage:        2 bytes
   530 ;; Hardware stack levels used: 1
   531 ;; Hardware stack levels required when called: 1
   532 ;; This function calls:
   533 ;;		Nothing
   534 ;; This function is called by:
   535 ;;		_EnviaDato
   536 ;;		_InicializaLCD
   537 ;;		_BorraLCD
   538 ;; This function uses a non-reentrant model
   539 ;;
   540                           
   541                           	psect	text4
   542   000012                     __ptext4:
   543                           	callstack 0
   544   000012                     _RetardoLCD:
   545                           	callstack 28
   546                           
   547                           ;incstack = 0
   548                           ;RetardoLCD@a stored from wreg
   549   000012  6E06               	movwf	RetardoLCD@a^0,c
   550                           
   551                           ;LibLCDXC8.h: 295: switch(a){
   552   000014  D023               	goto	l963
   553   000016                     l953:
   554   000016  0E27               	movlw	39
   555   000018  6E05               	movwf	??_RetardoLCD^0,c
   556   00001A  0EF5               	movlw	245
   557   00001C                     u37:
   558   00001C  2EE8               	decfsz	wreg,f,c
   559   00001E  D7FE               	bra	u37
   560   000020  2E05               	decfsz	??_RetardoLCD^0,f,c
   561   000022  D7FC               	bra	u37
   562   000024  F000               	nop	
   563                           
   564                           ;LibLCDXC8.h: 298: break;
   565   000026  0012               	return	
   566   000028                     l955:
   567   000028  0E03               	movlw	3
   568   00002A  6E05               	movwf	??_RetardoLCD^0,c
   569   00002C  0E98               	movlw	152
   570   00002E                     u47:
   571   00002E  2EE8               	decfsz	wreg,f,c
   572   000030  D7FE               	bra	u47
   573   000032  2E05               	decfsz	??_RetardoLCD^0,f,c
   574   000034  D7FC               	bra	u47
   575                           
   576                           ;LibLCDXC8.h: 300: _delay((unsigned long)((640)*(8000000/4000000.0)));
   577   000036  0EB6               	movlw	182
   578   000038                     u57:
   579   000038  D000               	nop2	
   580   00003A  D000               	nop2	
   581   00003C  2EE8               	decfsz	wreg,f,c
   582   00003E  D7FC               	bra	u57
   583   000040  D000               	nop2	
   584   000042  D000               	nop2	
   585   000044  D000               	nop2	
   586                           
   587                           ;LibLCDXC8.h: 302: break;
   588   000046  0012               	return	
   589   000048                     l957:
   590   000048  0E42               	movlw	66
   591   00004A                     u67:
   592   00004A  2EE8               	decfsz	wreg,f,c
   593   00004C  D7FE               	bra	u67
   594   00004E  D000               	nop2	
   595                           
   596                           ;LibLCDXC8.h: 305: break;
   597   000050  0012               	return	
   598   000052                     l959:
   599   000052  0E1A               	movlw	26
   600   000054                     u77:
   601   000054  2EE8               	decfsz	wreg,f,c
   602   000056  D7FE               	bra	u77
   603   000058  D000               	nop2	
   604                           
   605                           ;LibLCDXC8.h: 308: break;
   606   00005A  0012               	return	
   607   00005C                     l963:
   608   00005C  5006               	movf	RetardoLCD@a^0,w,c
   609                           
   610                           ; Switch size 1, requested type "simple"
   611                           ; Number of cases is 4, Range of values is 1 to 4
   612                           ; switch strategies available:
   613                           ; Name         Instructions Cycles
   614                           ; simple_byte           13     7 (average)
   615                           ;	Chosen strategy is simple_byte
   616   00005E  0A01               	xorlw	1	; case 1
   617   000060  B4D8               	btfsc	status,2,c
   618   000062  D7D9               	goto	l953
   619   000064  0A03               	xorlw	3	; case 2
   620   000066  B4D8               	btfsc	status,2,c
   621   000068  D7DF               	goto	l955
   622   00006A  0A01               	xorlw	1	; case 3
   623   00006C  B4D8               	btfsc	status,2,c
   624   00006E  D7EC               	goto	l957
   625   000070  0A07               	xorlw	7	; case 4
   626   000072  A4D8               	btfss	status,2,c
   627   000074  0012               	return	
   628   000076  D7ED               	goto	l959
   629   000078                     __end_of_RetardoLCD:
   630                           	callstack 0
   631                           
   632 ;; *************** function _HabilitaLCD *****************
   633 ;; Defined at:
   634 ;;		line 107 in file "LibLCDXC8.h"
   635 ;; Parameters:    Size  Location     Type
   636 ;;		None
   637 ;; Auto vars:     Size  Location     Type
   638 ;;		None
   639 ;; Return value:  Size  Location     Type
   640 ;;                  1    wreg      void 
   641 ;; Registers used:
   642 ;;		wreg
   643 ;; Tracked objects:
   644 ;;		On entry : 0/0
   645 ;;		On exit  : 0/0
   646 ;;		Unchanged: 0/0
   647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   648 ;;      Params:         0       0       0       0       0       0       0       0       0
   649 ;;      Locals:         0       0       0       0       0       0       0       0       0
   650 ;;      Temps:          0       0       0       0       0       0       0       0       0
   651 ;;      Totals:         0       0       0       0       0       0       0       0       0
   652 ;;Total ram usage:        0 bytes
   653 ;; Hardware stack levels used: 1
   654 ;; Hardware stack levels required when called: 1
   655 ;; This function calls:
   656 ;;		Nothing
   657 ;; This function is called by:
   658 ;;		_EnviaDato
   659 ;;		_InicializaLCD
   660 ;;		_BorraLCD
   661 ;; This function uses a non-reentrant model
   662 ;;
   663                           
   664                           	psect	text5
   665   00016E                     __ptext5:
   666                           	callstack 0
   667   00016E                     _HabilitaLCD:
   668                           	callstack 28
   669                           
   670                           ;LibLCDXC8.h: 109: LATE1=1;
   671                           
   672                           ;incstack = 0
   673   00016E  828D               	bsf	3981,1,c	;volatile
   674                           
   675                           ;LibLCDXC8.h: 110: _delay((unsigned long)((40)*(8000000/4000000.0)));
   676   000170  0E1A               	movlw	26
   677   000172                     u87:
   678   000172  2EE8               	decfsz	wreg,f,c
   679   000174  D7FE               	bra	u87
   680   000176  D000               	nop2	
   681                           
   682                           ;LibLCDXC8.h: 112: LATE1=0;
   683   000178  928D               	bcf	3981,1,c	;volatile
   684   00017A  0012               	return		;funcret
   685   00017C                     __end_of_HabilitaLCD:
   686                           	callstack 0
   687                           
   688 ;; *************** function _ISR *****************
   689 ;; Defined at:
   690 ;;		line 90 in file "Proyecto.c"
   691 ;; Parameters:    Size  Location     Type
   692 ;;		None
   693 ;; Auto vars:     Size  Location     Type
   694 ;;		None
   695 ;; Return value:  Size  Location     Type
   696 ;;                  1    wreg      void 
   697 ;; Registers used:
   698 ;;		wreg, status,2, status,0
   699 ;; Tracked objects:
   700 ;;		On entry : 0/0
   701 ;;		On exit  : 0/0
   702 ;;		Unchanged: 0/0
   703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   704 ;;      Params:         0       0       0       0       0       0       0       0       0
   705 ;;      Locals:         0       0       0       0       0       0       0       0       0
   706 ;;      Temps:          0       0       0       0       0       0       0       0       0
   707 ;;      Totals:         0       0       0       0       0       0       0       0       0
   708 ;;Total ram usage:        0 bytes
   709 ;; Hardware stack levels used: 1
   710 ;; This function calls:
   711 ;;		Nothing
   712 ;; This function is called by:
   713 ;;		Interrupt level 2
   714 ;; This function uses a non-reentrant model
   715 ;;
   716                           
   717                           	psect	intcode
   718   000008                     __pintcode:
   719                           	callstack 0
   720   000008                     _ISR:
   721                           	callstack 26
   722                           
   723                           ;incstack = 0
   724   000008  8209               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
   725   00000A  ED9A  F000         	call	int_func,f	;refresh shadow registers
   726                           
   727                           	psect	intcode_body
   728   000134                     __pintcode_body:
   729                           	callstack 26
   730   000134                     int_func:
   731                           	callstack 26
   732   000134  0006               	pop		; remove dummy address from shadow register refresh
   733                           
   734                           ;Proyecto.c: 91: if(TMR0IF == 1){
   735   000136  A4F2               	btfss	4082,2,c	;volatile
   736   000138  D00E               	goto	i2l197
   737                           
   738                           ;Proyecto.c: 92: TMR0IF=0;
   739   00013A  94F2               	bcf	4082,2,c	;volatile
   740                           
   741                           ;Proyecto.c: 93: TMR0 = 49911;
   742   00013C  0EC2               	movlw	194
   743   00013E  6ED7               	movwf	215,c	;volatile
   744   000140  0EF7               	movlw	247
   745   000142  6ED6               	movwf	214,c	;volatile
   746                           
   747                           ;Proyecto.c: 94: contador += 1;
   748   000144  4A03               	infsnz	_contador^0,f,c
   749   000146  2A04               	incf	(_contador+1)^0,f,c
   750                           
   751                           ;Proyecto.c: 95: if(contador == 20){
   752   000148  0E14               	movlw	20
   753   00014A  1803               	xorwf	_contador^0,w,c
   754   00014C  1004               	iorwf	(_contador+1)^0,w,c
   755   00014E  A4D8               	btfss	status,2,c
   756   000150  D002               	goto	i2l197
   757   000152  0003               	sleep		;# 
   758   000154                     i2l194:
   759   000154  D7FF               	goto	i2l194
   760   000156                     i2l197:
   761   000156  9209               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
   762   000158  0011               	retfie		f
   763   00015A                     __end_of_ISR:
   764                           	callstack 0
   765   000000                     
   766                           	psect	rparam
   767   000000                     
   768                           	psect	temp
   769   000009                     btemp:
   770                           	callstack 0
   771   000009                     	ds	1
   772   000000                     int$flags	set	btemp
   773   000000                     wtemp8	set	btemp+1
   774   000000                     ttemp5	set	btemp+1
   775   000000                     ttemp6	set	btemp+4
   776   000000                     ttemp7	set	btemp+8
   777                           
   778                           	psect	idloc
   779                           
   780                           ;Config register IDLOC0 @ 0x200000
   781                           ;	unspecified, using default values
   782   200000                     	org	2097152
   783   200000  FF                 	db	255
   784                           
   785                           ;Config register IDLOC1 @ 0x200001
   786                           ;	unspecified, using default values
   787   200001                     	org	2097153
   788   200001  FF                 	db	255
   789                           
   790                           ;Config register IDLOC2 @ 0x200002
   791                           ;	unspecified, using default values
   792   200002                     	org	2097154
   793   200002  FF                 	db	255
   794                           
   795                           ;Config register IDLOC3 @ 0x200003
   796                           ;	unspecified, using default values
   797   200003                     	org	2097155
   798   200003  FF                 	db	255
   799                           
   800                           ;Config register IDLOC4 @ 0x200004
   801                           ;	unspecified, using default values
   802   200004                     	org	2097156
   803   200004  FF                 	db	255
   804                           
   805                           ;Config register IDLOC5 @ 0x200005
   806                           ;	unspecified, using default values
   807   200005                     	org	2097157
   808   200005  FF                 	db	255
   809                           
   810                           ;Config register IDLOC6 @ 0x200006
   811                           ;	unspecified, using default values
   812   200006                     	org	2097158
   813   200006  FF                 	db	255
   814                           
   815                           ;Config register IDLOC7 @ 0x200007
   816                           ;	unspecified, using default values
   817   200007                     	org	2097159
   818   200007  FF                 	db	255
   819                           
   820                           	psect	config
   821                           
   822                           ;Config register CONFIG1L @ 0x300000
   823                           ;	unspecified, using default values
   824                           ;	PLL Prescaler Selection bits
   825                           ;	PLLDIV = 0x0, unprogrammed default
   826                           ;	System Clock Postscaler Selection bits
   827                           ;	CPUDIV = 0x0, unprogrammed default
   828                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
   829                           ;	USBDIV = 0x0, unprogrammed default
   830   300000                     	org	3145728
   831   300000  00                 	db	0
   832                           
   833                           ;Config register CONFIG1H @ 0x300001
   834                           ;	unspecified, using default values
   835                           ;	Oscillator Selection bits
   836                           ;	FOSC = 0x5, unprogrammed default
   837                           ;	Fail-Safe Clock Monitor Enable bit
   838                           ;	FCMEN = 0x0, unprogrammed default
   839                           ;	Internal/External Oscillator Switchover bit
   840                           ;	IESO = 0x0, unprogrammed default
   841   300001                     	org	3145729
   842   300001  05                 	db	5
   843                           
   844                           ;Config register CONFIG2L @ 0x300002
   845                           ;	unspecified, using default values
   846                           ;	Power-up Timer Enable bit
   847                           ;	PWRT = 0x1, unprogrammed default
   848                           ;	Brown-out Reset Enable bits
   849                           ;	BOR = 0x3, unprogrammed default
   850                           ;	Brown-out Reset Voltage bits
   851                           ;	BORV = 0x3, unprogrammed default
   852                           ;	USB Voltage Regulator Enable bit
   853                           ;	VREGEN = 0x0, unprogrammed default
   854   300002                     	org	3145730
   855   300002  1F                 	db	31
   856                           
   857                           ;Config register CONFIG2H @ 0x300003
   858                           ;	unspecified, using default values
   859                           ;	Watchdog Timer Enable bit
   860                           ;	WDT = 0x1, unprogrammed default
   861                           ;	Watchdog Timer Postscale Select bits
   862                           ;	WDTPS = 0xF, unprogrammed default
   863   300003                     	org	3145731
   864   300003  1F                 	db	31
   865                           
   866                           ; Padding undefined space
   867   300004                     	org	3145732
   868   300004  FF                 	db	255
   869                           
   870                           ;Config register CONFIG3H @ 0x300005
   871                           ;	unspecified, using default values
   872                           ;	CCP2 MUX bit
   873                           ;	CCP2MX = 0x1, unprogrammed default
   874                           ;	PORTB A/D Enable bit
   875                           ;	PBADEN = 0x1, unprogrammed default
   876                           ;	Low-Power Timer 1 Oscillator Enable bit
   877                           ;	LPT1OSC = 0x0, unprogrammed default
   878                           ;	MCLR Pin Enable bit
   879                           ;	MCLRE = 0x1, unprogrammed default
   880   300005                     	org	3145733
   881   300005  83                 	db	131
   882                           
   883                           ;Config register CONFIG4L @ 0x300006
   884                           ;	unspecified, using default values
   885                           ;	Stack Full/Underflow Reset Enable bit
   886                           ;	STVREN = 0x1, unprogrammed default
   887                           ;	Single-Supply ICSP Enable bit
   888                           ;	LVP = 0x1, unprogrammed default
   889                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
   890                           ;	ICPRT = 0x0, unprogrammed default
   891                           ;	Extended Instruction Set Enable bit
   892                           ;	XINST = 0x0, unprogrammed default
   893                           ;	Background Debugger Enable bit
   894                           ;	DEBUG = 0x1, unprogrammed default
   895   300006                     	org	3145734
   896   300006  85                 	db	133
   897                           
   898                           ; Padding undefined space
   899   300007                     	org	3145735
   900   300007  FF                 	db	255
   901                           
   902                           ;Config register CONFIG5L @ 0x300008
   903                           ;	unspecified, using default values
   904                           ;	Code Protection bit
   905                           ;	CP0 = 0x1, unprogrammed default
   906                           ;	Code Protection bit
   907                           ;	CP1 = 0x1, unprogrammed default
   908                           ;	Code Protection bit
   909                           ;	CP2 = 0x1, unprogrammed default
   910                           ;	Code Protection bit
   911                           ;	CP3 = 0x1, unprogrammed default
   912   300008                     	org	3145736
   913   300008  0F                 	db	15
   914                           
   915                           ;Config register CONFIG5H @ 0x300009
   916                           ;	unspecified, using default values
   917                           ;	Boot Block Code Protection bit
   918                           ;	CPB = 0x1, unprogrammed default
   919                           ;	Data EEPROM Code Protection bit
   920                           ;	CPD = 0x1, unprogrammed default
   921   300009                     	org	3145737
   922   300009  C0                 	db	192
   923                           
   924                           ;Config register CONFIG6L @ 0x30000A
   925                           ;	unspecified, using default values
   926                           ;	Write Protection bit
   927                           ;	WRT0 = 0x1, unprogrammed default
   928                           ;	Write Protection bit
   929                           ;	WRT1 = 0x1, unprogrammed default
   930                           ;	Write Protection bit
   931                           ;	WRT2 = 0x1, unprogrammed default
   932                           ;	Write Protection bit
   933                           ;	WRT3 = 0x1, unprogrammed default
   934   30000A                     	org	3145738
   935   30000A  0F                 	db	15
   936                           
   937                           ;Config register CONFIG6H @ 0x30000B
   938                           ;	unspecified, using default values
   939                           ;	Configuration Register Write Protection bit
   940                           ;	WRTC = 0x1, unprogrammed default
   941                           ;	Boot Block Write Protection bit
   942                           ;	WRTB = 0x1, unprogrammed default
   943                           ;	Data EEPROM Write Protection bit
   944                           ;	WRTD = 0x1, unprogrammed default
   945   30000B                     	org	3145739
   946   30000B  E0                 	db	224
   947                           
   948                           ;Config register CONFIG7L @ 0x30000C
   949                           ;	unspecified, using default values
   950                           ;	Table Read Protection bit
   951                           ;	EBTR0 = 0x1, unprogrammed default
   952                           ;	Table Read Protection bit
   953                           ;	EBTR1 = 0x1, unprogrammed default
   954                           ;	Table Read Protection bit
   955                           ;	EBTR2 = 0x1, unprogrammed default
   956                           ;	Table Read Protection bit
   957                           ;	EBTR3 = 0x1, unprogrammed default
   958   30000C                     	org	3145740
   959   30000C  0F                 	db	15
   960                           
   961                           ;Config register CONFIG7H @ 0x30000D
   962                           ;	unspecified, using default values
   963                           ;	Boot Block Table Read Protection bit
   964                           ;	EBTRB = 0x1, unprogrammed default
   965   30000D                     	org	3145741
   966   30000D  40                 	db	64
   967                           tosu	equ	0xFFF
   968                           tosh	equ	0xFFE
   969                           tosl	equ	0xFFD
   970                           stkptr	equ	0xFFC
   971                           pclatu	equ	0xFFB
   972                           pclath	equ	0xFFA
   973                           pcl	equ	0xFF9
   974                           tblptru	equ	0xFF8
   975                           tblptrh	equ	0xFF7
   976                           tblptrl	equ	0xFF6
   977                           tablat	equ	0xFF5
   978                           prodh	equ	0xFF4
   979                           prodl	equ	0xFF3
   980                           indf0	equ	0xFEF
   981                           postinc0	equ	0xFEE
   982                           postdec0	equ	0xFED
   983                           preinc0	equ	0xFEC
   984                           plusw0	equ	0xFEB
   985                           fsr0h	equ	0xFEA
   986                           fsr0l	equ	0xFE9
   987                           wreg	equ	0xFE8
   988                           indf1	equ	0xFE7
   989                           postinc1	equ	0xFE6
   990                           postdec1	equ	0xFE5
   991                           preinc1	equ	0xFE4
   992                           plusw1	equ	0xFE3
   993                           fsr1h	equ	0xFE2
   994                           fsr1l	equ	0xFE1
   995                           bsr	equ	0xFE0
   996                           indf2	equ	0xFDF
   997                           postinc2	equ	0xFDE
   998                           postdec2	equ	0xFDD
   999                           preinc2	equ	0xFDC
  1000                           plusw2	equ	0xFDB
  1001                           fsr2h	equ	0xFDA
  1002                           fsr2l	equ	0xFD9
  1003                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94      3       8
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _InicializaLCD->_EnviaDato
    _BorraLCD->_EnviaDato
    _EnviaDato->_RetardoLCD

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     225
                           _BorraLCD
                      _InicializaLCD
 ---------------------------------------------------------------------------------
 (1) _InicializaLCD                                        0     0      0     150
                           _BorraLCD
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (2) _BorraLCD                                             0     0      0      75
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (2) _EnviaDato                                            1     1      0      60
                                              2 COMRAM     1     1      0
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (2) _RetardoLCD                                           2     2      0      15
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _HabilitaLCD                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BorraLCD
     _EnviaDato
       _HabilitaLCD
       _RetardoLCD
     _HabilitaLCD
     _RetardoLCD
   _InicializaLCD
     _BorraLCD
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      32        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      3       8       1        8.5%
BITBIGSFRll         21      0       0      30        0.0%
BITBIGSFRhhhhl      1A      0       0      21        0.0%
BITBIGSFRhhlhll     14      0       0      26        0.0%
BITBIGSFRhhlhll     10      0       0      25        0.0%
BITBIGSFRhhhhh       D      0       0      20        0.0%
BITBIGSFRhhlhlh      B      0       0      24        0.0%
BITBIGSFRlhl         7      0       0      29        0.0%
BITBIGSFRhhlhh       6      0       0      23        0.0%
BITBIGSFRhl          5      0       0      27        0.0%
BITBIGSFRlhh         1      0       0      28        0.0%
BITBIGSFRhhhl        1      0       0      22        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       8      31        0.0%
DATA                 0      0       8       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Tue May 30 09:00:47 2023

                     u37 001C                       u47 002E                       u57 0038  
                     u67 004A                       u77 0054                       u87 0172  
             EnviaDato@a 0007                      l141 00C8            _InicializaLCD 00CA  
                    l953 0016                      l955 0028                      l963 005C  
                    l957 0048                      l959 0052                      _GIE 007F97  
                    _RB4 007C0C                      _RC6 007C16                      _PR2 000FCB  
                    _ISR 0008                      wreg 000FE8                     ?_ISR 0005  
                   _LATB 000F8A                     _LATD 000F8C                     _TMR0 000FD6  
                   _TMR2 000FCC                     _main 0078                     _duty 0001  
                   btemp 0009                     start 000E             ___param_bank 000000  
                  ??_ISR 0005           ?_InicializaLCD 0005                    ?_main 0005  
                  _T0CON 000FD5                    _T2CON 000FCA                    _LATE0 007C68  
                  _LATE1 007C69                    i2l194 0154                    i2l197 0156  
                  _RCSTA 000FAB                    _TRISB 000F93                    _TRISD 000F95  
                  _TXSTA 000FAC                    tablat 000FF5              _HabilitaLCD 016E  
                  ttemp5 000A                    ttemp6 000D                    ttemp7 0011  
                  status 000FD8                    wtemp8 000A         __end_of_BorraLCD 016E  
        __initialization 010C             __end_of_main 00CA                   ??_main 0008  
          __activetblptr 000002                   _CCPR1L 000FBE                   _OSCCON 000FD3  
                 _TMR0IE 007F95                   _TMR0IF 007F92                   _TMR0ON 007EAF  
                 _TMR2ON 007E52                   _TRISC2 007CA2                   _TRISE0 007CB0  
                 _TRISE1 007CB1                   _TRISC6 007CA6                   _TRISC7 007CA7  
             _RetardoLCD 0012          ??_InicializaLCD 0008                   isa$std 000001  
           __pdataCOMRAM 0008                   tblptrh 000FF7                   tblptrl 000FF6  
                 tblptru 000FF8               __accesstop 0060  __end_of__initialization 0126  
          ___rparam_used 000001           __pcstackCOMRAM 0005        __end_of_EnviaDato 0184  
              ?_BorraLCD 0005              ?_RetardoLCD 0005              RetardoLCD@a 0006  
                _CCP1CON 000FBD               ??_BorraLCD 0008             ?_HabilitaLCD 0005  
                __Hparam 0000                  __Lparam 0000                  __pcinit 010C  
                __ramtop 0800                  __ptext0 0078                  __ptext1 00CA  
                __ptext2 015A                  __ptext3 017C                  __ptext4 0012  
                __ptext5 016E           __pintcode_body 0134     end_of_initialization 0126  
          __Lmediumconst 0000                  int_func 0134            __pidataCOMRAM 0184  
  __end_of_InicializaLCD 010C                _EnviaDato 017C      start_initialization 010C  
            __end_of_ISR 015A             ??_RetardoLCD 0005               ?_EnviaDato 0005  
            __pbssCOMRAM 0001       __end_of_RetardoLCD 0078                __pintcode 0008  
            ??_EnviaDato 0007                 _BorraLCD 015A                 __Hrparam 0000  
               __Lrparam 0000                 _contador 0003                 _interfaz 0008  
               isa$xinst 000000                 int$flags 0009                 intlevel2 0000  
          ??_HabilitaLCD 0005      __end_of_HabilitaLCD 017C  
